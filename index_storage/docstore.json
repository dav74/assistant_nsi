{"docstore/data": {"1f19a001-b0bf-4c58-b468-4e31613b578f": {"__data__": {"id_": "1f19a001-b0bf-4c58-b468-4e31613b578f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6a5622ae-d74e-48c5-b24d-359d7215cd49", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "5720f412c81adaabb726ac033a342cbe935fe736de0e48f9f9798f91dc8ce5d5", "class_name": "RelatedNodeInfo"}}, "text": "BO - programmes de la sp\u00e9cialit\u00e9 Nunm\u00e9rique et Sciences Informatiques (NSI)\n\nSommaire :\n\n- NSI premi\u00e8re\n  - Rubrique transversale de l\u2019histoire de l\u2019informatique\n  - Repr\u00e9sentation des donn\u00e9es : types et valeurs de base\n  - Repr\u00e9sentation des donn\u00e9es : types construits\n  - Traitement de donn\u00e9es en tables\n  - Interactions entre l\u2019homme et la machine sur le Web\n  - Architectures mat\u00e9rielles et syst\u00e8mes d\u2019exploitation\n  - Langages et programmation\n  - Algorithmique\n- NSI terminale\n  - Rubrique transversale de l\u2019histoire de l\u2019informatique\n  - Structures de donn\u00e9es\n  - Bases de donn\u00e9es\n  - Architectures mat\u00e9rielles, syst\u00e8mes d\u2019exploitation et r\u00e9seaux\n  - Langages et programmation\n  - Algorithmique", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 703, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d43c7cab-31eb-424a-b8b7-0e9bfdf7e208": {"__data__": {"id_": "d43c7cab-31eb-424a-b8b7-0e9bfdf7e208", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d61a62b4-bad0-4748-9c74-ef92b95a0209", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "f81003d5e8e3540c28f12fda099ca1b45732c1e435c2466a584445302d0f1c1f", "class_name": "RelatedNodeInfo"}}, "text": "NSI programme de la classe de premi\u00e8re", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 40, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27656e70-8614-479d-a352-6fb637c2fd2c": {"__data__": {"id_": "27656e70-8614-479d-a352-6fb637c2fd2c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d678ff7-9f56-4b3c-82ce-8ea0214dcf7c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "eba51c1f08f43bb125800e8152d7331af418441d5d66cc748758c5cf1aafe3f8", "class_name": "RelatedNodeInfo"}}, "text": "Rubrique transversale de l\u2019histoire de l\u2019informatique\n\n- **\u00c9v\u00e9nements cl\u00e9s de l\u2019histoire de l\u2019informatique**\n  - Situer dans le temps les principaux \u00e9v\u00e9nements de l\u2019histoire de l\u2019informatique et leurs protagonistes.\n    > Ces rep\u00e8res historiques seront construits au fur et \u00e0 mesure de la pr\u00e9sentation des concepts et techniques. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 345, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a008288-abff-44d8-8743-b142216dc42a": {"__data__": {"id_": "2a008288-abff-44d8-8743-b142216dc42a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cbfafba3-0b20-4cdc-8735-a5196ab97487", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "2b5be115108cbe12a303d1e1bd5a3259d671791dfc0b6ae3937ee2b4ea8d7482", "class_name": "RelatedNodeInfo"}}, "text": "Repr\u00e9sentation des donn\u00e9es : types et valeurs de base\n\n- **\u00c9criture d\u2019un entier positif dans une base b\u2a7e2**\n  - Passer de la repr\u00e9sentation d\u2019une base dans une autre.\n    > Les bases 2, 10 et 16 sont privil\u00e9gi\u00e9es. [commentaire]\n- **Repr\u00e9sentation binaire d\u2019un entier relatif**\n  - \u00c9valuer le nombre de bits n\u00e9cessaires \u00e0 l\u2019\u00e9criture en base 2 d\u2019un entier, de la somme ou du produit de deux nombres entiers.\n    > Il s\u2019agit de d\u00e9crire les tailles courantes des entiers (8, 16, 32 ou 64 bits). [commentaire]\n    >\n    > Il est possible d\u2019\u00e9voquer la repr\u00e9sentation des entiers de taille arbitraire de Python. [commentaire]\n  - Utiliser le compl\u00e9ment \u00e0 2.\n- **Repr\u00e9sentation approximative des nombres r\u00e9els : notion de nombre flottant**\n  - Calculer sur quelques exemples la repr\u00e9sentation de nombres r\u00e9els : `0.1`, `0.25` ou $1/3$.\n    > `0.2 + 0.1` n\u2019est pas \u00e9gal \u00e0 `0.3`. [commentaire]\n    >\n    > Il faut \u00e9viter de tester l\u2019\u00e9galit\u00e9 de deux flottants. [commentaire]\n    >\n    > Aucune connaissance pr\u00e9cise de la norme IEEE-754 n\u2019est exigible. [commentaire]\n- **Valeurs bool\u00e9ennes : `0`, `1`.**\n- **Op\u00e9rateurs bool\u00e9ens : `and`, `or`, `not`.**\n  > Le ou exclusif (`xor`) est \u00e9voqu\u00e9. [commentaire]\n  >\n  > Quelques applications directes comme l\u2019addition binaire sont pr\u00e9sent\u00e9es. [commentaire]\n  >\n  > L\u2019attention des \u00e9l\u00e8ves est attir\u00e9e sur le caract\u00e8re s\u00e9quentiel de certains op\u00e9rateurs bool\u00e9ens. [commentaire]\n- **Expressions bool\u00e9ennes**\n  - Dresser la table d\u2019une expression bool\u00e9enne.\n- **Repr\u00e9sentation d\u2019un texte en machine.**\n- **Exemples des encodages ASCII, ISO-8859-1, Unicode**\n  - Identifier l\u2019int\u00e9r\u00eat des diff\u00e9rents syst\u00e8mes d\u2019encodage.\n    > Aucune connaissance pr\u00e9cise des normes d\u2019encodage n\u2019est exigible. [commentaire]\n  - Convertir un fichier texte dans diff\u00e9rents formats d\u2019encodage.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1799, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb97a55d-2b1a-4ddd-8020-18d20a19e3e6": {"__data__": {"id_": "fb97a55d-2b1a-4ddd-8020-18d20a19e3e6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97856ac2-2f9e-4d17-b18b-2972237a2f9a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "a3dbab048590c435112ae7c5be95394f7af7644a30c6df6a10b3e0a11f6fd138", "class_name": "RelatedNodeInfo"}}, "text": "Repr\u00e9sentation des donn\u00e9es : types construits\n\n- **p-uplets.**\n  - \u00c9crire une fonction renvoyant un p-uplet de valeurs.\n- **p-uplets nomm\u00e9s**\n  - \u00c9crire une fonction renvoyant un p-uplet de valeurs.\n- **Tableau index\u00e9, tableau donn\u00e9 en compr\u00e9hension**\n  > Seuls les tableaux dont les \u00e9l\u00e9ments sont du m\u00eame type sont pr\u00e9sent\u00e9s. [commentaire]\n  >\n  > L\u2019aspect dynamique des tableaux de Python n\u2019est pas \u00e9voqu\u00e9. [commentaire]\n  >\n  > Python identifie listes et tableaux. [commentaire]\n  >\n  > Il n\u2019est pas fait r\u00e9f\u00e9rence aux tableaux de la biblioth\u00e8que NumPy. [commentaire]\n  - Lire et modifier les \u00e9l\u00e9ments d\u2019un tableau gr\u00e2ce \u00e0 leurs index.\n    > Aucune connaissance des tranches (slices) n\u2019est exigible. [commentaire]\n  - Construire un tableau par compr\u00e9hension.\n  - Utiliser des tableaux de compr\u00e9hension tableaux pour repr\u00e9senter des matrices : notation `a[i][j]`.\n  - It\u00e9rer sur les \u00e9l\u00e9ments d\u2019un tableau.\n- **Dictionnaires par cl\u00e9s et valeurs**\n  - Construire une entr\u00e9e de dictionnaire.\n    > En Python, les p-uplets nomm\u00e9s sont impl\u00e9ment\u00e9s par des dictionnaires. [commentaire]\n  - It\u00e9rer sur les \u00e9l\u00e9ments d\u2019un dictionnaire.\n    > Il est possible de pr\u00e9senter les donn\u00e9es EXIF d\u2019une image sous la forme d\u2019un enregistrement. [commentaire]\n    >\n    > Utiliser les m\u00e9thodes `keys()`, `values()` et `items()`. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1326, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee5ac627-8300-44c3-ba2e-320479b4a1ed": {"__data__": {"id_": "ee5ac627-8300-44c3-ba2e-320479b4a1ed", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d078324-b8d2-425e-b7f3-6f54e3cd7d32", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "5b87aad9ee9f23321293d4cb8d523b9ae21a23f78f1d9adcc6d55ed64daa5b3c", "class_name": "RelatedNodeInfo"}}, "text": "Traitement de donn\u00e9es en tables\n\n- **Indexation de tables**\n  - Importer une table depuis un fichier texte tabul\u00e9 ou un fichier CSV.\n    > Est utilis\u00e9 un tableau doublement index\u00e9 ou un tableau de p-uplets qui partagent les m\u00eames descripteurs. [commentaire]\n- **Recherche dans une table**\n  - Rechercher les lignes d\u2019une table v\u00e9rifiant des crit\u00e8res exprim\u00e9s en logique propositionnelle.\n    > La recherche de doublons, les tests de coh\u00e9rence d\u2019une table sont pr\u00e9sent\u00e9s. [commentaire]\n- **Tri d\u2019une table**\n  - Trier une table suivant une colonne.\n    > Une fonction de tri int\u00e9gr\u00e9e au syst\u00e8me ou \u00e0 une biblioth\u00e8que peut \u00eatre utilis\u00e9e. [commentaire]\n- **Fusion de tables**\n  - Construire une nouvelle table en combinant les donn\u00e9es de deux tables.\n    > La notion de domaine de valeurs est mise en \u00e9vidence. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 823, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24d10af0-ba59-4c94-8fe9-a81c5b5c07f8": {"__data__": {"id_": "24d10af0-ba59-4c94-8fe9-a81c5b5c07f8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7b3652d-6439-4975-aed7-cd1ff4c84d5e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "a5345a9bde0e7e185a4dbe2274b625ef0202817f3b453c6e925066f516bbf2c1", "class_name": "RelatedNodeInfo"}}, "text": "Interactions entre l\u2019homme et la machine sur le Web\n\n- **Modalit\u00e9s de l\u2019interaction entre l\u2019homme et la machine**\n  - Identifier les diff\u00e9rents composants graphiques permettant d\u2019interagir avec une application Web.\n    > Il s\u2019agit d\u2019examiner le code HTML d\u2019une page comprenant des composants graphiques et de distinguer ce qui rel\u00e8ve de la description des composants graphiques en HTML de leur comportement (r\u00e9action aux \u00e9v\u00e9nements) programm\u00e9 par exemple en JavaScript. [commentaire]\n- **\u00c9v\u00e9nements**\n  - Identifier les \u00e9v\u00e9nements que les fonctions associ\u00e9es aux diff\u00e9rents composants graphiques sont capables de traiter.\n- **Interaction avec l\u2019utilisateur dans une page Web**\n  - Analyser et modifier les m\u00e9thodes ex\u00e9cut\u00e9es lors d\u2019un clic sur un bouton d\u2019une page Web.\n- **Interaction client-serveur.**\n  - Distinguer ce qui est ex\u00e9cut\u00e9 sur le client ou sur le serveur et dans quel ordre.\n- **Requ\u00eates HTTP, r\u00e9ponses du serveur**\n  > Il s\u2019agit de faire le lien avec ce qui a \u00e9t\u00e9 vu en classe de seconde et d\u2019expliquer comment on peut passer des param\u00e8tres \u00e0 un site gr\u00e2ce au protocole HTTP. [commentaire]\n  - Distinguer ce qui est m\u00e9moris\u00e9 dans le client et retransmis au serveur.\n  - Reconna\u00eetre quand et pourquoi la transmission est chiffr\u00e9e.\n- **Formulaire d\u2019une page Web**\n  - Analyser le fonctionnement d\u2019un formulaire simple.\n  - Distinguer les transmissions de param\u00e8tres par les requ\u00eates POST ou GET.\n    > Discuter les deux types de requ\u00eates selon le type des valeurs \u00e0 transmettre et/ou leur confidentialit\u00e9. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc668a24-3b36-4da8-9c95-2aedd5008baa": {"__data__": {"id_": "cc668a24-3b36-4da8-9c95-2aedd5008baa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9c716e8-7fec-4f37-9471-78bb6d3eb92a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "f6e3bd2bad21c25a9166ee0adaa57a9e9abb631d90586d7027e03a2b40099af0", "class_name": "RelatedNodeInfo"}}, "text": "Architectures mat\u00e9rielles et syst\u00e8mes d\u2019exploitation\n\n- **Mod\u00e8le d\u2019architecture s\u00e9quentielle (von Neumann)**\n  > La pr\u00e9sentation se limite aux concepts g\u00e9n\u00e9raux. [commentaire]\n  - Distinguer les r\u00f4les et les caract\u00e9ristiques des diff\u00e9rents constituants d\u2019une machine.\n    > On distingue les architectures monoprocesseur et les architectures multiprocesseur. [commentaire]\n    >\n    > Des activit\u00e9s d\u00e9branch\u00e9es sont propos\u00e9es. [commentaire]\n  - D\u00e9rouler l\u2019ex\u00e9cution d\u2019une s\u00e9quence d\u2019instructions simples du type langage machine.\n    > Les circuits combinatoires r\u00e9alisent des fonctions bool\u00e9ennes. [commentaire]\n- **Transmission de donn\u00e9es dans un r\u00e9seau**\n  - Mettre en \u00e9vidence l\u2019int\u00e9r\u00eat du d\u00e9coupage des donn\u00e9es en paquets et de leur encapsulation.\n- **Protocoles de communication**\n  - D\u00e9rouler le fonctionnement d\u2019un protocole simple de r\u00e9cup\u00e9ration de perte de paquets (bit altern\u00e9).\n    > Le protocole peut \u00eatre expliqu\u00e9 et simul\u00e9 en mode d\u00e9branch\u00e9. [commentaire]\n    >\n    > Le lien est fait avec ce qui a \u00e9t\u00e9 vu en classe de seconde sur le protocole TCP/IP. [commentaire]\n- **Architecture d\u2019un r\u00e9seau**\n  - Simuler ou mettre en \u0153uvre un r\u00e9seau.\n    > Le r\u00f4le des diff\u00e9rents constituants du r\u00e9seau local de l\u2019\u00e9tablissement est pr\u00e9sent\u00e9. [commentaire]\n- **Syst\u00e8mes d\u2019exploitation**\n  - Identifier les fonctions d\u2019un syst\u00e8me d\u2019exploitation.\n    > Les diff\u00e9rences entre syst\u00e8mes d\u2019exploitation libres et propri\u00e9taires sont \u00e9voqu\u00e9es. [commentaire]\n    >\n    > Il ne s\u2019agit pas d\u2019une \u00e9tude th\u00e9orique des syst\u00e8mes d\u2019exploitation. [commentaire]\n  - Utiliser les commandes de base en ligne de commande.\n    > Les \u00e9l\u00e8ves utilisent un syst\u00e8me d\u2019exploitation libre. [commentaire]\n  - G\u00e9rer les droits et permissions d\u2019acc\u00e8s aux fichiers.\n- **Interface Homme-Machine (IHM) et p\u00e9riph\u00e9riques d\u2019entr\u00e9e et de sortie [reformul\u00e9, ndr]**\n  - Identifier le r\u00f4le des capteurs et actionneurs.\n  - R\u00e9aliser par programmation une IHM r\u00e9pondant \u00e0 un cahier des charges donn\u00e9.\n    > Les activit\u00e9s peuvent \u00eatre d\u00e9velopp\u00e9es sur des objets connect\u00e9s, des syst\u00e8mes embarqu\u00e9s ou robots. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2078, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "930f84b6-8784-40c4-9181-7e7be14d74f7": {"__data__": {"id_": "930f84b6-8784-40c4-9181-7e7be14d74f7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b33c5ad-f697-4354-9f53-6327308a4450", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "14773e82ab4f06ccd256735ca06bf33b6809856ae2832804c6f39c4683da615e", "class_name": "RelatedNodeInfo"}}, "text": "Langages et programmation\n\n- **Constructions \u00e9l\u00e9mentaires**\n  - Mettre en \u00e9vidence un corpus de constructions \u00e9l\u00e9mentaires.\n    > S\u00e9quences, affectation, conditionnelles, boucles born\u00e9es, boucles non born\u00e9es, appels de fonction. [commentaire]\n- **Diversit\u00e9 et unit\u00e9 des langages de programmation**\n  - Rep\u00e9rer, dans un nouveau langage de programmation, les traits communs et les traits particuliers \u00e0 ce langage.\n    > Les mani\u00e8res dont un m\u00eame programme simple s\u2019\u00e9crit dans diff\u00e9rents langages sont compar\u00e9es. [commentaire]\n- **Sp\u00e9cification**\n  - Prototyper une fonction.\n  - D\u00e9crire les pr\u00e9conditions sur les arguments.\n  - D\u00e9crire des postconditions sur les r\u00e9sultats.\n  > Des assertions peuvent \u00eatre utilis\u00e9es pour garantir des pr\u00e9conditions ou des postconditions. [commentaire]\n- **Mise au point de programmes**\n  - Utiliser des jeux de tests.\n    > L\u2019importance de la qualit\u00e9 et du nombre des tests est mise en \u00e9vidence. [commentaire]\n    >\n    > Le succ\u00e8s d\u2019un jeu de tests ne garantit pas la correction d\u2019un programme. [commentaire]\n- **Utilisation de biblioth\u00e8ques**\n  - Utiliser la documentation d\u2019une biblioth\u00e8que.\n    > Aucune connaissance exhaustive d\u2019une biblioth\u00e8que particuli\u00e8re n\u2019est exigible. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1227, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9076ffe-d75d-49a0-bd9c-f24fd2e8cbeb": {"__data__": {"id_": "c9076ffe-d75d-49a0-bd9c-f24fd2e8cbeb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4cce7e55-e66e-4f2e-9727-8bd0aaa3e77b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "af4bb861879f7a29dfb52ee2523e69770133d2928be81860f271f0f5e7fecdde", "class_name": "RelatedNodeInfo"}}, "text": "Algorithmique\n\n- **Parcours s\u00e9quentiel d\u2019un tableau**\n  > On montre que le co\u00fbt est lin\u00e9aire. [commentaire]\n  - \u00c9crire un algorithme de recherche d\u2019une occurrence sur des valeurs de type quelconque.\n  - \u00c9crire un algorithme de recherche d\u2019un extremum, de calcul d\u2019une moyenne.\n- **Tris par insertion, par s\u00e9lection**\n  > La terminaison de ces algorithmes est \u00e0 justifier. [commentaire]\n  >\n  > On montre que leur co\u00fbt est quadratique dans le pire cas. [commentaire]\n  - \u00c9crire un algorithme de tri.\n  - D\u00e9crire un invariant de boucle qui prouve la correction des tris par insertion, par s\u00e9lection.\n- **Algorithme des k plus proches voisins**\n  - \u00c9crire un algorithme qui pr\u00e9dit la classe d\u2019un \u00e9l\u00e9ment en fonction de la classe majoritaire de ses k plus proches voisins.\n    > Il s\u2019agit d\u2019un exemple d\u2019algorithme d\u2019apprentissage. [commentaire]\n- **Recherche dichotomique dans un tableau tri\u00e9**\n  - Montrer la terminaison de la recherche dichotomique \u00e0 l\u2019aide d\u2019un variant de boucle.\n    > Des assertions peuvent \u00eatre utilis\u00e9es. [commentaire]\n    >\n    > La preuve de la correction peut \u00eatre pr\u00e9sent\u00e9e par le professeur. [commentaire]\n- **Algorithmes gloutons**\n  - R\u00e9soudre un probl\u00e8me gr\u00e2ce \u00e0 un algorithme glouton.\n    > Exemples : probl\u00e8mes du sac \u00e0 dos ou du rendu de monnaie. [commentaire]\n    >\n    > Les algorithmes gloutons constituent une m\u00e9thode algorithmique parmi d\u2019autres qui seront vues en terminale. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1428, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd943000-763f-4271-b157-8c391851b75e": {"__data__": {"id_": "dd943000-763f-4271-b157-8c391851b75e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70b47774-c06e-4417-8e63-8873c4f2ed6a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "4432a5ea343567af98a09a296e52b41b5cd1e559d3016ee5566d98b30118d9d2", "class_name": "RelatedNodeInfo"}}, "text": "NSI programme de la classe de terminale", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 41, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5435a3d2-edbc-4515-8f19-7cfc08494e4b": {"__data__": {"id_": "5435a3d2-edbc-4515-8f19-7cfc08494e4b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef404959-890e-483b-a61d-c81b9f8dd3e1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "1d84912e01d90478e8cfb4f58e8310ec157899d7ec1f4903d9a282ae9722624a", "class_name": "RelatedNodeInfo"}}, "text": "Rubrique transversale de l\u2019histoire de l\u2019informatique\n\n- **\u00c9v\u00e9nements cl\u00e9s de l\u2019histoire de l\u2019informatique.**\n  > Ces rep\u00e8res viennent compl\u00e9ter ceux qui ont \u00e9t\u00e9 introduits en premi\u00e8re. [commentaire]\n  >\n  > Ces rep\u00e8res historiques sont construits au fur et \u00e0 mesure de la pr\u00e9sentation des concepts et techniques. [commentaire]\n  - Situer dans le temps les principaux \u00e9v\u00e9nements de l\u2019histoire de l\u2019informatique et leurs protagonistes.\n  - Identifier l\u2019\u00e9volution des r\u00f4les relatifs des logiciels et des mat\u00e9riels.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b58fff8-2406-4319-a44b-5d4b9d2b9429": {"__data__": {"id_": "8b58fff8-2406-4319-a44b-5d4b9d2b9429", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f86c5557-7bdb-448e-9b31-47e1746ee5b6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "d5550748aed2c4257695ffd4b0ffe7842e09aa31173725b0244485511122ebf1", "class_name": "RelatedNodeInfo"}}, "text": "Structures de donn\u00e9es\n\n- **Structures de donn\u00e9es, interface et impl\u00e9mentation.**\n  > L\u2019abstraction des structures de donn\u00e9es est introduite apr\u00e8s plusieurs impl\u00e9mentations d\u2019une structure simple comme la file (avec un tableau ou avec deux piles). [commentaire]\n  - Sp\u00e9cifier une structure de donn\u00e9es par son interface.\n  - Distinguer interface et impl\u00e9mentation.\n  - \u00c9crire plusieurs impl\u00e9mentations d\u2019une m\u00eame structure de donn\u00e9es.\n- **Vocabulaire de la programmation objet : classes, attributs, m\u00e9thodes, objets.**\n  > On n\u2019aborde pas ici tous les aspects de la programmation objet comme le polymorphisme et l\u2019h\u00e9ritage. [commentaire]\n  - \u00c9crire la d\u00e9finition d\u2019une classe.\n  - Acc\u00e9der aux attributs et m\u00e9thodes d\u2019une classe.\n- **Listes, piles, files : structures lin\u00e9aires.**\n  > On distingue les modes FIFO (*first in first out*) et LIFO (*last in first out*) des piles et des files. [commentaire]\n  - Distinguer des structures par le jeu des m\u00e9thodes qui les caract\u00e9risent.\n  - Choisir une structure de donn\u00e9es adapt\u00e9e \u00e0 la situation \u00e0 mod\u00e9liser.\n  - Distinguer la recherche d\u2019une valeur dans une liste et dans un dictionnaire.\n- **Dictionnaires, index et cl\u00e9.**\n  - Distinguer des structures par le jeu des m\u00e9thodes qui les caract\u00e9risent.\n  - Choisir une structure de donn\u00e9es adapt\u00e9e \u00e0 la situation \u00e0 mod\u00e9liser.\n  - Distinguer la recherche d\u2019une valeur dans une liste et dans un dictionnaire.\n- **Arbres : structures hi\u00e9rarchiques.**\n  > On fait le lien avec la rubrique \u00ab algorithmique \u00bb. [commentaire]\n  - Identifier des situations n\u00e9cessitant une structure de donn\u00e9es arborescente.\n- **Arbres binaires : n\u0153uds, racines, feuilles, sous-arbres gauches, sous-arbres droits.**\n  - \u00c9valuer quelques mesures des arbres binaires (taille, encadrement de la hauteur, etc.).\n- **Graphes : structures relationnelles.**\n  - Mod\u00e9liser des situations sous forme de graphes.\n    > On s\u2019appuie sur des exemples comme le r\u00e9seau routier, le r\u00e9seau \u00e9lectrique, Internet, les r\u00e9seaux sociaux. [commentaire]\n- **Sommets, arcs, ar\u00eates, graphes orient\u00e9s ou non orient\u00e9s.**\n  - \u00c9crire les impl\u00e9mentations correspondantes d\u2019un graphe : matrice d\u2019adjacence, liste de successeurs/de pr\u00e9d\u00e9cesseurs. Passer d\u2019une repr\u00e9sentation \u00e0 une autre.\n    > Le choix de la repr\u00e9sentation d\u00e9pend du traitement qu\u2019on veut mettre en place : on fait le lien avec la rubrique \u00ab algorithmique \u00bb. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2373, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7594d104-12c8-4977-a939-eae1bdbd3d75": {"__data__": {"id_": "7594d104-12c8-4977-a939-eae1bdbd3d75", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac126a00-842a-4ad2-9de9-d9b6a04f3cac", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "f8862c36add9d0e29a31bad5d5ca5e53d86884262d9fee9ff0ce29f4ba671c36", "class_name": "RelatedNodeInfo"}}, "text": "Bases de donn\u00e9es\n\n- **Mod\u00e8le relationnel : relation, attribut, domaine, clef primaire, clef \u00e9trang\u00e8re, sch\u00e9ma relationnel.**\n  - Identifier les concepts d\u00e9finissant le mod\u00e8le relationnel.\n    > Ces concepts permettent d\u2019exprimer les contraintes d\u2019int\u00e9grit\u00e9 (domaine, relation et r\u00e9f\u00e9rence). [commentaire]\n- **Base de donn\u00e9es relationnelle.**\n  > On privil\u00e9gie la manipulation de donn\u00e9es nombreuses et r\u00e9alistes. [commentaire]\n  - Savoir distinguer la structure d\u2019une base de donn\u00e9es de son contenu.\n    > La structure est un ensemble de sch\u00e9mas relationnels qui respecte les contraintes du mod\u00e8le relationnel. [commentaire]\n  - Rep\u00e9rer des anomalies dans le sch\u00e9ma d\u2019une base de donn\u00e9es.\n    > Les anomalies peuvent \u00eatre des redondances de donn\u00e9es ou des anomalies d\u2019insertion, de suppression, de mise \u00e0 jour. [commentaire]\n- **Syst\u00e8me de gestion de bases de donn\u00e9es relationnelles.**\n  - Identifier les services rendus par un syst\u00e8me de gestion de bases de donn\u00e9es relationnelles : persistance des donn\u00e9es, gestion des acc\u00e8s concurrents, efficacit\u00e9 de traitement des requ\u00eates, s\u00e9curisation des acc\u00e8s.\n    > Il s\u2019agit de comprendre le r\u00f4le et les enjeux des diff\u00e9rents services sans en d\u00e9tailler le fonctionnement. [commentaire]\n- **Langage SQL : requ\u00eates d\u2019interrogation et de mise \u00e0 jour d\u2019une base de donn\u00e9es.**\n  - Identifier les composants d\u2019une requ\u00eate.\n  - Construire des requ\u00eates d\u2019interrogation \u00e0 l\u2019aide des clauses du langage SQL : `SELECT`, `FROM`, `WHERE`, `JOIN`.\n    > On peut utiliser `DISTINCT`, `ORDER BY` ou les fonctions d\u2019agr\u00e9gation sans utiliser les clauses `GROUP BY` et `HAVING`. [commentaire]\n  - Construire des requ\u00eates d\u2019insertion et de mise \u00e0 jour \u00e0 l\u2019aide de : `UPDATE`, `INSERT`, `DELETE`.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1720, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "45ea8e03-e7db-46ef-bd7e-0dfe3528012b": {"__data__": {"id_": "45ea8e03-e7db-46ef-bd7e-0dfe3528012b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68f2b5b6-b495-4e8f-9fd8-deee9e8a94c7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "4e2d86cfa510c86668d615eb5272db01437218d0394f5ec539151abe8ff51e01", "class_name": "RelatedNodeInfo"}}, "text": "Architectures mat\u00e9rielles, syst\u00e8mes d\u2019exploitation et r\u00e9seaux\n\n- **Composants int\u00e9gr\u00e9s d\u2019un syst\u00e8me sur puce.**\n  - Identifier les principaux composants sur un sch\u00e9ma de circuit et les avantages de leur int\u00e9gration en termes de vitesse et de consommation.\n    > Le circuit d\u2019un t\u00e9l\u00e9phone peut \u00eatre pris comme un exemple : microprocesseurs, m\u00e9moires locales, interfaces radio et filaires, gestion d\u2019\u00e9nergie, contr\u00f4leurs vid\u00e9o, acc\u00e9l\u00e9rateur graphique, r\u00e9seaux sur puce, etc. [commentaire]\n- **Gestion des processus et des ressources par un syst\u00e8me d\u2019exploitation.**\n  - D\u00e9crire la cr\u00e9ation d\u2019un processus, l\u2019ordonnancement de plusieurs processus par le syst\u00e8me.\n    > \u00c0 l\u2019aide d\u2019outils standard, il s\u2019agit d\u2019observer les processus actifs ou en attente sur une machine. [commentaire]\n  - Mettre en \u00e9vidence le risque de l\u2019interblocage (*deadlock*).\n    > Une pr\u00e9sentation d\u00e9branch\u00e9e de l\u2019interblocage peut \u00eatre propos\u00e9e. [commentaire]\n- **Protocoles de routage.**\n  - Identifier, suivant le protocole de routage utilis\u00e9, la route emprunt\u00e9e par un paquet.\n    > En mode d\u00e9branch\u00e9, les tables de routage \u00e9tant donn\u00e9es, on se r\u00e9f\u00e8re au nombre de sauts (protocole RIP) ou au co\u00fbt des routes (protocole OSPF). [commentaire]\n    >\n    > Le lien avec les algorithmes de recherche de chemin sur un graphe est mis en \u00e9vidence. [commentaire]\n- **S\u00e9curisation des communications.**\n  - D\u00e9crire les principes de chiffrement sym\u00e9trique (clef partag\u00e9e) et asym\u00e9trique (avec clef priv\u00e9e/clef publique).\n    > Les protocoles sym\u00e9triques et asym\u00e9triques peuvent \u00eatre illustr\u00e9s en mode d\u00e9branch\u00e9, \u00e9ventuellement avec description d\u2019un chiffrement particulier. [commentaire]\n  - D\u00e9crire l\u2019\u00e9change d\u2019une clef sym\u00e9trique en utilisant un protocole asym\u00e9trique pour s\u00e9curiser une communication HTTPS.\n    > La n\u00e9gociation de la m\u00e9thode chiffrement du protocole SSL (*Secure Sockets Layer*) n\u2019est pas abord\u00e9e. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1897, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04837022-9673-4939-8901-49aea933e587": {"__data__": {"id_": "04837022-9673-4939-8901-49aea933e587", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b81e6fa-7d3d-43b3-9176-a94f6f475bef", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "ef5097ca18d7ef28a734e5d3249baa61b202d281156af97cff8fdf14ae540bf5", "class_name": "RelatedNodeInfo"}}, "text": "Langages et programmation\n\n- **Notion de programme en tant que donn\u00e9e.**\n  - Comprendre que tout programme est aussi une donn\u00e9e.\n    > L\u2019utilisation d\u2019un interpr\u00e9teur ou d\u2019un compilateur, le t\u00e9l\u00e9chargement de logiciel, le fonctionnement des syst\u00e8mes d\u2019exploitation permettent de comprendre un programme comme donn\u00e9e d\u2019un autre programme. [commentaire]\n- **Calculabilit\u00e9, d\u00e9cidabilit\u00e9.**\n  - Comprendre que la calculabilit\u00e9 ne d\u00e9pend pas du langage de programmation utilis\u00e9.\n  - Montrer, sans formalisme th\u00e9orique, que le probl\u00e8me de l\u2019arr\u00eat est ind\u00e9cidable.\n- **R\u00e9cursivit\u00e9.**\n  - \u00c9crire un programme r\u00e9cursif.\n  - Analyser le fonctionnement d\u2019un programme r\u00e9cursif.\n    > Des exemples relevant de domaines vari\u00e9s sont \u00e0 privil\u00e9gier. [commentaire]\n- **Modularit\u00e9.**\n  - Utiliser des API (Application Programming Interface) ou des biblioth\u00e8ques [fusionn\u00e9, ndr] [et] exploiter leur documentation.\n  - Cr\u00e9er des modules simples et les documenter.\n- **Paradigmes de programmation.**\n  - Distinguer sur des exemples les paradigmes imp\u00e9ratif, fonctionnel et objet.\n  - Choisir le paradigme de programmation selon le champ d\u2019application d\u2019un programme.\n    > Avec un m\u00eame langage de programmation, on peut utiliser des paradigmes diff\u00e9rents. Dans un m\u00eame programme, on peut utiliser des paradigmes diff\u00e9rents. [commentaire]\n- **Mise au point des programmes.**\n  > On prolonge le travail entrepris en classe de premi\u00e8re sur l\u2019utilisation de la sp\u00e9cification, des assertions, de la documentation des programmes et de la construction de jeux de tests. [commentaire]\n- **Gestion des bugs.**\n  - Dans la pratique de la programmation, savoir r\u00e9pondre aux causes typiques de bugs : probl\u00e8mes li\u00e9s au typage, effets de bord non d\u00e9sir\u00e9s, d\u00e9bordements dans les tableaux, instruction conditionnelle non exhaustive, choix des in\u00e9galit\u00e9s, comparaisons et calculs entre flottants, mauvais nommage des variables, etc.\n    > Les \u00e9l\u00e8ves apprennent progressivement \u00e0 anticiper leurs erreurs. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1982, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "142e538e-59ff-4d5f-a246-3b81ba9699df": {"__data__": {"id_": "142e538e-59ff-4d5f-a246-3b81ba9699df", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3eac8147-1ac4-4529-9c98-cfa82881889a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}, "hash": "2c96fa2c010da5d741c71f2b805da70379e46d77b23e7083f7d5072e85e9c20b", "class_name": "RelatedNodeInfo"}}, "text": "Algorithmique\n\n- **Algorithmes sur les arbres binaires et sur les arbres binaires de recherche.**\n  > Une structure de donn\u00e9es r\u00e9cursive adapt\u00e9e est utilis\u00e9e. [commentaire]\n  >\n  > L\u2019exemple des arbres permet d\u2019illustrer la programmation par classe. [commentaire]\n  - Calculer la taille et la hauteur d\u2019un arbre.\n  - Parcourir un arbre de diff\u00e9rentes fa\u00e7ons (ordres infixe, pr\u00e9fixe ou suffixe ; ordre en largeur d\u2019abord).\n  - Rechercher une cl\u00e9 dans un arbre de recherche, ins\u00e9rer une cl\u00e9.\n    > La recherche dans un arbre de recherche \u00e9quilibr\u00e9 est de co\u00fbt logarithmique. [commentaire]\n- **Algorithmes sur les graphes.**\n  > L\u2019exemple des graphes permet d\u2019illustrer l\u2019utilisation des classes en programmation. [commentaire]\n  - Parcourir un graphe en profondeur d\u2019abord, en largeur d\u2019abord.\n  - Rep\u00e9rer la pr\u00e9sence d\u2019un cycle dans un graphe.\n  - Chercher un chemin dans un graphe.\n    > Le parcours d\u2019un labyrinthe et le routage dans Internet sont des exemples d\u2019algorithme sur les graphes. [commentaire]\n- **M\u00e9thode \u00ab diviser pour r\u00e9gner \u00bb.**\n  - \u00c9crire un algorithme utilisant la m\u00e9thode \u00ab diviser pour r\u00e9gner \u00bb.\n    > La rotation d\u2019une image bitmap d\u2019un quart de tour avec un co\u00fbt en m\u00e9moire constant est un bon exemple. [commentaire]\n    >\n    > L\u2019exemple du tri fusion permet \u00e9galement d\u2019exploiter la r\u00e9cursivit\u00e9 et d\u2019exhiber un algorithme de co\u00fbt en $n \\log n$ dans les pires des cas. [commentaire]\n- **Programmation dynamique.**\n  - Utiliser la programmation dynamique pour \u00e9crire un algorithme.\n    > Les exemples de l\u2019alignement de s\u00e9quences ou du rendu de monnaie peuvent \u00eatre pr\u00e9sent\u00e9s. [commentaire]\n    >\n    > La discussion sur le co\u00fbt en m\u00e9moire peut \u00eatre d\u00e9velopp\u00e9e. [commentaire]\n- **Recherche textuelle.**\n  - \u00c9tudier l\u2019algorithme de Boyer-Moore pour la recherche d\u2019un motif dans un texte.\n    > L\u2019int\u00e9r\u00eat du pr\u00e9traitement du motif est mis en avant. [commentaire]\n    >\n    > L\u2019\u00e9tude du co\u00fbt, difficile, ne peut \u00eatre exig\u00e9e. [commentaire]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34d21135-2844-486b-959c-3b892c9a5c0e": {"__data__": {"id_": "34d21135-2844-486b-959c-3b892c9a5c0e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be7e88f0-2533-4382-b81e-d248fcbd8914", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "72735ad755f004bb7ea3db04e69a70fa6b8ab7e69b0c5ab73e232d0c2259ae98", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 10.1\n\nFaites \"tourner \u00e0 la main\" l'algorithme \"x est-il pr\u00e9sent dans le tableau t ?\" (voir ci-dessous) avec t=[5,8,15,53] et x=12\n\n```\nVARIABLE\nt : tableau d'entiers\nx : nombre entier\ntr : bool\u00e9en (VRAI ou FAUX)\ni : nombre entier\nDEBUT\ntr \u2190 FAUX\ni \u2190 1\ntant que i<=longueur(t) et que tr==FAUX:\n  si t[i]==x:\n    tr \u2190 VRAI\n  fin si\n  i \u2190 i+1\nfin tant que\nrenvoyer la valeur de tr\nFIN\n```\n\nQuelle la complexit\u00e9 dans le pire des cas de cet algorithme ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 459, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e6199d8-ac48-4c91-9790-cd656050d7c4": {"__data__": {"id_": "5e6199d8-ac48-4c91-9790-cd656050d7c4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5f3600f-9482-4d92-b18d-aad7668e9274", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e51b5fcd489b5d320253c61727e4ea5bdd3ff9b8b74e5887ca7adfd2cef59534", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 10.2\n\n\u00c9crivez un algorithme permettant de trouver le plus grand entier pr\u00e9sent dans un tableau. Vous ferez \"tourner \u00e0 la main\" votre algorithme en utilisant le tableau t = [3,5,1,8,4,2]. Vous d\u00e9terminerez ensuite la complexit\u00e9 de votre algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 258, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce73a2f4-cf73-4003-b2a1-85368d0ebf48": {"__data__": {"id_": "ce73a2f4-cf73-4003-b2a1-85368d0ebf48", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed1f616d-0b41-4ab7-8ef5-42ef2e8e6ff0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5a93e2d1d3e770170d2ee909646c987ff06430377b3e720ef4b63cbcc358f399", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 10.3\n\n\u00c9crivez un algorithme permettant de calculer la moyenne de tous les entiers pr\u00e9sents dans un tableau. Vous ferez \"tourner \u00e0 la main\" votre algorithme en utilisant le tableau t = [3,5,1,8,4,2]. Vous d\u00e9terminerez ensuite la complexit\u00e9 de votre algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b58e2e66-88c3-4245-95ca-29cc8dc4aa6e": {"__data__": {"id_": "b58e2e66-88c3-4245-95ca-29cc8dc4aa6e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00e8f73e-01e4-4ad6-8bb3-3e4407669216", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "d2d602c03a8735df27313e6509a4b5e8f5fe84d92517dff8f76a0f9f47ed93b7", "class_name": "RelatedNodeInfo"}}, "text": "1) Qu'est-ce qu'un algorithme\n\nPour commencer, je vous conseille de visionner la vid\u00e9o de David Louapre (chaine YouTube \"Science \u00e9tonnante\"). Dans cette vid\u00e9o, David aborde quasiment toutes les notions qui seront vues ci-dessous (mais il va aussi plus loin...).\n\nhttps://www.youtube.com/watch?v=AgtOCNCejQ8\n\nLa notion d'algorithme est souvent associ\u00e9e \u00e0 l'informatique, pourtant le terme algorithme vient du nom du math\u00e9maticien perse du 9e si\u00e8cle Muhammad Ibn M\u016bs\u0101 al-Khuw\u0101rizm\u012b. La notion d'algorithme est donc tr\u00e8s ant\u00e9rieure \u00e0 la cr\u00e9ation du premier ordinateur.\n\nM\u016bs\u0101 al-Khuw\u0101rizm\u012b :\n\n!\n\nMais qu'est-ce qu'un algorithme ?\n\nVoici deux d\u00e9finitions trouv\u00e9es dans la litt\u00e9rature :\n\n- Proc\u00e9dure de calcul bien d\u00e9finie qui prend en entr\u00e9e une valeur ou un ensemble de valeur, et qui donne en sortie une valeur ou un ensemble de valeur.\n\n- Un algorithme est la sp\u00e9cification d'un sch\u00e9ma de calcul sous forme d'une suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un enchainement d\u00e9termin\u00e9.\n\nLe terme \"calcul\" revient dans les 2 d\u00e9finitions, un algorithme effectue donc des calculs (encore faudrait-il d\u00e9finir pr\u00e9cis\u00e9ment ce terme de \"calcul\", mais cela nous entra\u00eenerait trop loin).\n\nPour concevoir un algorithme, la 2e d\u00e9finition nous pr\u00e9cise qu'il est n\u00e9cessaire de d\u00e9finir \"une suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un enchainement d\u00e9termin\u00e9\". L'ordre dans lequel nous allons d\u00e9finir nos \"op\u00e9rations \u00e9l\u00e9mentaires\" va donc avoir son importance. Mais, qu'est-ce qu'une \"op\u00e9ration \u00e9l\u00e9mentaire\" ? Ici aussi, d\u00e9finir \"op\u00e9ration \u00e9l\u00e9mentaire\" n'est pas chose ais\u00e9e ! On peut tout de m\u00eame dire qu'une \"op\u00e9ration \u00e9l\u00e9mentaire\" est une action simple, qui doit \u00eatre facilement compr\u00e9hensible pour la personne charg\u00e9e d'effectuer cette action. L'action \"Peser 100 g de farine\" peut \u00eatre consid\u00e9r\u00e9e comme une \"op\u00e9ration \u00e9l\u00e9mentaire\", en effet, tout le monde est capable de comprendre ce que cela signifie et la r\u00e9alisation de cette op\u00e9ration ne pr\u00eate ni \u00e0 interpr\u00e9tation, ni \u00e0 confusion. En revanche \"Prendre de la farine, des oeufs, du sucre et du chocolat afin de faire un g\u00e2teau au chocolat\" n'est clairement pas une \"op\u00e9ration \u00e9l\u00e9mentaire\", car l'action d\u00e9crite ici manque de pr\u00e9cision, c'est une op\u00e9ration complexe (m\u00eame si dans la pratique il n'est pas tr\u00e8s difficile de faire un g\u00e2teau au chocolat, ce n'est pas \u00e9vident pour quelqu'un qui n'a pas l'habitude). La fronti\u00e8re entre \"op\u00e9ration \u00e9l\u00e9mentaire\" et \"op\u00e9ration complexe\" n'est pas toujours \u00e9vidente, en effet, l'op\u00e9ration \"Peser 100 g de farine\" pourrait \u00eatre encore plus pr\u00e9cise : \"mettre la balance \u00e0 z\u00e9ro (faire la tare), verser ensuite de la farine sur le plateau de la balance jusqu'\u00e0 ce que le nombre 100 soit affich\u00e9 sur l'\u00e9cran de la balance\"\n\n\u00c0 noter que \"proc\u00e9dure de calcul bien d\u00e9fini\" dans la premi\u00e8re d\u00e9finition est \u00e9quivalent \u00e0 \"suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un enchainement d\u00e9termin\u00e9\" dans la deuxi\u00e8me d\u00e9finition. Personnellement, je trouve la deuxi\u00e8me d\u00e9finition plus explicite.\n\nOn pourrait r\u00e9sumer ce qu'est un algorithme par le sch\u00e9ma suivant :\n\n!\n\nPrenons un exemple concret :\n\nNous allons \u00e9tudier cette ann\u00e9e, ainsi que l'ann\u00e9e prochaine, des algorithmes de tri pour les tableaux (un tableau ressemble beaucoup \u00e0 une liste en Python, m\u00eame si ce n'est pas exactement la m\u00eame chose). Nous avons en entr\u00e9e un tableau non tri\u00e9 et nous obtenons en sortie un tableau tri\u00e9 :\n\n!\n\nLa \"valeur de sortie\" n'est pas obligatoirement du m\u00eame type que la \"valeur d'entr\u00e9e\". Prenons l'exemple d'un algorithme qui prend en entr\u00e9e un tableau t d'entiers et un entier x, et qui \"r\u00e9pond\" par \"oui\" ou par \"non\" \u00e0 la question \"x est-il pr\u00e9sent dans le tableau t ?\". Dans ce cas, la \"valeur de sortie\" sera \"oui\" ou \"non\".\n\n!\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3712, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3964af5-10ee-4f53-bb3a-73344089aacf": {"__data__": {"id_": "e3964af5-10ee-4f53-bb3a-73344089aacf", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edde1d7-5529-4451-a756-eec80e70daba", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "4de35a6f867c9de477ae426a8d43c7d9269d4bfe4b673c32f9175e77871fa85e", "class_name": "RelatedNodeInfo"}}, "text": "2) un premier algorithme\n\nEssayons d'\u00e9crire l'algorithme d\u00e9crit ci-dessus :\n\nNous devons trouver la suite d'op\u00e9rations \u00e9l\u00e9mentaires qui permettra de r\u00e9pondre \u00e0 la question : \"x est-il pr\u00e9sent dans le tableau t ?\"\n\n```\nVARIABLE\nt : tableau d'entiers\nx : nombre entier\ntr : bool\u00e9en (VRAI ou FAUX)\ni : nombre entier\nDEBUT\ntr \u2190 FAUX\ni \u2190 1\ntant que i<=longueur(t) et que tr==FAUX:\n  si t[i]==x:\n    tr \u2190 VRAI\n  fin si\n  i \u2190 i+1\nfin tant que\nrenvoyer la valeur de tr\nFIN\n```\n\nRemarques :\n\n- Quand on \u00e9crit un algorithme, on utilise un langage dit \"langage naturel\" (\"tant que\", \"si\"...), ce langage naturel permet de passer facilement \u00e0 un langage de programmation (Python, Java...), on dit alors que l'on impl\u00e9mente l'algorithme.\n\n- Traditionnellement (sauf erreur de ma part, ce n'est pas une obligation), lorsque l'on \u00e9crit un algorithme le premier \u00e9l\u00e9ment d'un tableau a pour indice 1 (alors que dans la plupart des langages de programmation le premier \u00e9l\u00e9ment d'un tableau a pour indice 0). Il faut donc faire attention \u00e0 cela lorsque l'on veut impl\u00e9menter un algorithme.\n\n- Dans l'algorithme ci-dessus, on part du principe qu'il existe une fonction \"longueur\" qui prend en param\u00e8tre un tableau et qui renvoie le nombre d'\u00e9l\u00e9ments pr\u00e9sents dans ce tableau. Vous noterez que d\u00e9terminer le nombre d'\u00e9l\u00e9ments pr\u00e9sents dans un tableau n'est pas vraiment une \"op\u00e9ration \u00e9l\u00e9mentaire\", pourtant ici, on consid\u00e8re l'utilisation de \"longueur\" comme une op\u00e9ration \u00e9l\u00e9mentaire ! Il arrive relativement souvent que l'on s'autorise ce genre de libert\u00e9 quand on \u00e9crit un algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f2a152f-c93a-4d7a-94f0-78e179db2439": {"__data__": {"id_": "6f2a152f-c93a-4d7a-94f0-78e179db2439", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a8cba85-ab57-40a2-ab16-c1fbc2150162", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "802d7172f0eca945b869779a168e973a71d2494b640cf58a2cd05d8008e5b72c", "class_name": "RelatedNodeInfo"}}, "text": "3) \u00c9tudier un algorithme\n\nLa premi\u00e8re chose \u00e0 faire quand on \u00e9tudie un algorithme, c'est de le \"faire tourner \u00e0 la main\" : on \"ex\u00e9cute\" l'algorithme en utilisant uniquement une feuille et un crayon. Voil\u00e0 ce que cela pourrait donner avec l'algorithme que nous venons d'\u00e9crire :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60b6c3c7-36f6-4ed4-bdf0-4f8e673ad135": {"__data__": {"id_": "60b6c3c7-36f6-4ed4-bdf0-4f8e673ad135", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12bff89c-2281-4191-aceb-77463fe4b7d6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "db391d2d0dd1246136a283781ec2cdfb59a940267ab41a51dc8124fcfd81a6a6", "class_name": "RelatedNodeInfo"}}, "text": "4) complexit\u00e9 d'un algorithme\n\nLa notion de complexit\u00e9 d'un algorithme va rendre compte de l'efficacit\u00e9 de cet algorithme. Pour un m\u00eame probl\u00e8me, par exemple trier un tableau, il existe plusieurs algorithmes, certains algorithmes sont plus efficaces que d'autres (par exemple un algorithme A mettra moins de temps qu'un algorithme B pour r\u00e9soudre exactement le m\u00eame probl\u00e8me, sur la m\u00eame machine).\n\nIl existe 2 types de complexit\u00e9 : une complexit\u00e9 en temps et une complexit\u00e9 en m\u00e9moire. Nous nous int\u00e9resserons ici uniquement \u00e0 la complexit\u00e9 en temps. La complexit\u00e9 en temps est directement li\u00e9e au nombre d'op\u00e9rations \u00e9l\u00e9mentaires qui doivent \u00eatre ex\u00e9cut\u00e9es afin de r\u00e9soudre un probl\u00e8me donn\u00e9. L'\u00e9valuation de ce nombre d'op\u00e9rations \u00e9l\u00e9mentaires n'est pas chose facile, on rencontre souvent des cas litigieux. Prenons tout de suite un exemple avec notre algorithme \"x est-il pr\u00e9sent dans le tableau t ?\".\n\nIl y a 2 cas \u00e0 traiter :\n\n- L'entier recherch\u00e9 est bien pr\u00e9sent dans le tableau, il se trouve \u00e0 la position d'index j\n\n- L'entier recherch\u00e9 n'est pas pr\u00e9sent dans le tableau\nCommen\u00e7ons par le premier cas :\n\n```\nVARIABLE\nt : tableau d'entiers\nx : nombre entier\ntr : bool\u00e9en (VRAI ou FAUX)\ni : nombre entier\nDEBUT\n1 fois   tr \u2190 FAUX\n1 fois   i \u2190 1\nj+1 fois tant que i<=longueur(t) et que tr==FAUX:\nj fois      si t[i]==x:\n1 fois       tr \u2190 VRAI\n           fin si\nj fois     i \u2190 i+1\n        fin tant que\n1 fois  renvoyer la valeur de tr\nFIN\n```\n\nAu total nous avons : 1 + 1 + j + 1 + j + 1 + j + 1 = 3j + 5 op\u00e9rations \u00e9l\u00e9mentaires\n\nDans le cas o\u00f9 l'entier recherch\u00e9 ne se trouve pas dans le tableau (et que le nombre d'\u00e9l\u00e9ments dans le tableau est n) :\n\n```\nVARIABLE\nt : tableau d'entiers\nx : nombre entier\ntr : bool\u00e9en (VRAI ou FAUX)\ni : nombre entier\nDEBUT\n1 fois   tr \u2190 FAUX\n1 fois   i \u2190 1\nn+1 fois tant que i<=longueur(t) et que tr==FAUX:\nn fois      si t[i]==x:\n0 fois       tr \u2190 VRAI\n           fin si\nn fois     i \u2190 i+1\n        fin tant que\n1 fois  renvoyer la valeur de tr\nFIN\n```\n\nAu total nous avons : 1 + 1 + n + 1 + n + 0 + n + 1 = 3n + 4 op\u00e9rations \u00e9l\u00e9mentaires\n\nComme dans la plupart des cas n > j, on effectue plus d'op\u00e9rations \u00e9l\u00e9mentaires quand le nombre recherch\u00e9 n'est pas dans le tableau (sauf dans le cas pr\u00e9cis o\u00f9 l'entier recherch\u00e9 est en derni\u00e8re position, mais nous ne tiendrons pas compte de ce cas). On parle de \"complexit\u00e9 dans le pire des cas\" quand on s'int\u00e9resse uniquement au cas o\u00f9 le nombre d'op\u00e9rations \u00e9l\u00e9mentaires est le plus grand. Dans la suite nous nous int\u00e9resserons uniquement \u00e0 cette complexit\u00e9 dans le pire des cas (dans la suite \"complexit\u00e9\" = \"complexit\u00e9 en temps dans le pire des cas\"). Pour notre exemple, nous consid\u00e9rerons uniquement le cas o\u00f9 le nombre total d'op\u00e9rations \u00e9l\u00e9mentaires est de 3n + 4.\n\nNous venons de voir que la complexit\u00e9 d\u00e9pend de la taille du tableau, plus le tableau est grand et plus le nombre d'op\u00e9rations \u00e9l\u00e9mentaires \u00e0 effectuer est important. Pour effectuer des comparaisons entre plusieurs algorithmes, nous allons raisonner sur des tableaux de grande taille, car plus les tableaux sont grands et plus les diff\u00e9rences entre les algorithmes seront flagrantes. Pour comparer des algorithmes, nous allons donc uniquement nous int\u00e9resser \u00e0 ce que l'on appelle \"l'ordre de grandeur asymptotique\". La d\u00e9finition pr\u00e9cise de cet \"ordre de grandeur asymptotique\" est trop complexe pour \u00eatre abord\u00e9 ici. Vous devez juste savoir que cet \"ordre de grandeur asymptotique\" concerne les cas o\u00f9 l'on prend n tr\u00e8s tr\u00e8s grand. On note cet \"ordre de grandeur asymptotique\" avec un O majuscule. Pour le cas qui nous int\u00e9resse, nous aurons :\n\n3n+4 = O(n)\n\nLa relation ci-dessus signifie que \"3n+4 est domin\u00e9e asymptotiquement par n\", autrement dit \"si n est suffisamment grand, il existe une constante c qui permettra d'avoir c.n \u2a7e 3n+4\", vous n'avez pas tout compris ? Cela n'a pas vraiment d'importance, ce qu'il faut retenir c'est que nous utiliserons syst\u00e9matiquement cette notation O pour exprimer la complexit\u00e9 des algorithmes : au final on dira donc que la complexit\u00e9 de notre algorithme \"x est-il pr\u00e9sent dans le tableau t ?\" est O(n).\n\nComment obtient-on cette notation O \u00e0 partir du nombre d'op\u00e9rations \u00e9l\u00e9mentaires ?\n\nIci nous avons simplement supprim\u00e9 la constante (4) et le coefficient devant le n (c'est-\u00e0-dire 3), il reste donc uniquement n d'o\u00f9 le 3n+4 = O(n). Dans le cas o\u00f9 nous avons un polyn\u00f4me de degr\u00e9s quelconque, par exemple pour 6n2+3n+10, il suffit de :\n\n- supprimer la constante\n\n- garder uniquement le n qui poss\u00e8de l'exposant le plus grand\n\n- supprimer le coefficient devant le n\n\nOn aura donc 6n2+3n+10 = O(n2) : \"6n2+3n+10 est domin\u00e9e asymptotiquement par n2\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 4652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9becb5d8-8544-47c6-abbd-d857c3430f8c": {"__data__": {"id_": "9becb5d8-8544-47c6-abbd-d857c3430f8c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10r.md", "file_name": "c10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "df26e656-4261-4921-9b03-b4b35da59e14", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10r.md", "file_name": "c10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6a7f0345a670ba10c5dea215b11f1809dc487f2490d2c129f321284502613b31", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Un algorithme est la sp\u00e9cification d'un sch\u00e9ma de calcul sous forme d'une suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un encha\u00eenement d\u00e9termin\u00e9.\n\n- Quand on \u00e9crit un algorithme, on utilise un langage dit \"langage naturel\" (\"tant que\", \"si\"...), ce langage naturel permet de passer facilement \u00e0 un langage de\nprogrammation (Python, Java...), on dit alors que l'on impl\u00e9mente l'algorithme.\n\n- La notion de complexit\u00e9 d'un algorithme va rendre compte de l'efficacit\u00e9 de cet algorithme. Il existe 2 types de complexit\u00e9 : une complexit\u00e9 en temps et une\ncomplexit\u00e9 en m\u00e9moire. Nous nous int\u00e9resserons ici uniquement \u00e0 la complexit\u00e9 en temps. La complexit\u00e9 en temps est directement li\u00e9e au nombre d'op\u00e9rations\n\u00e9l\u00e9mentaires qui doivent \u00eatre ex\u00e9cut\u00e9es afin de r\u00e9soudre un probl\u00e8me donn\u00e9.\n\n- Nous nous int\u00e9resserons uniquement \u00e0 la complexit\u00e9 en temps \u201cdans le pire cas\u201d\n\n- Pour comparer des algorithmes, nous allons uniquement nous int\u00e9resser \u00e0 ce que l'on appelle \"l'ordre de grandeur asymptotique\" (notation O)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1035, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85675e5f-b0dd-4677-8f4b-4e3c9c7cbebd": {"__data__": {"id_": "85675e5f-b0dd-4677-8f4b-4e3c9c7cbebd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10r.md", "file_name": "c10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed6b02f7-ad77-420a-85f5-e35e1fc61203", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10r.md", "file_name": "c10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f44bca40a5f682cf31179a03bb17f015c075ca46da7b027259acebedcfc43ed8", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable d\u2019analyser le fonctionnement d\u2019un algorithme (faire tourner un algorithme \u201c\u00e0 la main\u201d)\n\n- vous devez \u00eatre capable de d\u00e9terminer la complexit\u00e9 en temps dans le pire des cas d\u2019un algorithme (exemples : O(n), O(n2), O(log2(n))...)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7091e703-e40c-456e-80a7-fc8cd2397a4b": {"__data__": {"id_": "7091e703-e40c-456e-80a7-fc8cd2397a4b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "449bfc83-f982-4acf-8fe4-5964f0eb5046", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c7aece4aef53364484aab6153d4de5eb613bacdb39d452c28031a05bb5102131", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.1\n\nLe sch\u00e9ma ci-dessous illustre le principe de fonctionnement du tri par insertion pour le tableau [27, 10, 12, 8, 11]\n\n!\n\nProduisez un sch\u00e9ma \u00e9quivalent pour le tableau [12, 8, 23, 10, 15]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b78032bb-7b2e-47f8-9311-5a4cfd76c17f": {"__data__": {"id_": "b78032bb-7b2e-47f8-9311-5a4cfd76c17f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c194e55-9711-4870-9545-0397557bd199", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "94312a7fff555b5acfc8c1dbfc2f5f28fbfbc20d5f7234f759d5f7a1bf189dfb", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.2\n\nLe sch\u00e9ma ci-dessous illustre le principe de fonctionnement du tri par s\u00e9lection pour le tableau [12, 8, 23, 10, 15]\n\n!\n\nProduisez un sch\u00e9ma \u00e9quivalent pour le tableau [15, 16, 11, 13, 12]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 205, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e482583e-661f-424c-b21a-cebcdaf62c30": {"__data__": {"id_": "e482583e-661f-424c-b21a-cebcdaf62c30", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "73a9f20a-3768-4769-a930-17b52a9e38d6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "8f15f275391fe1e158a0e5b7abf5b8718538fd466b7b8cc621fab88b2fec8f4b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.3\n\nSoit l'algorithme du tri par insertion :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nj : nombre entier\nk : nombre entier\nDEBUT\nj\u21902\ntant que j<=longueur(t):  \n  i\u2190j-1\n  k\u2190t[j]\n  tant que i>0 et que t[i]>k:\n    t[i+1]\u2190t[i]\n    i\u2190i-1\n  fin tant que\n  t[i+1]\u2190k\n  j\u2190j+1\nfin tant que\nFIN\n```\n\nAppliquez cet algorithme au tableau  t = [27, 10, 12, 8, 11] et v\u00e9rifiez que vous obtenez bien le tableau [8, 10, 11, 12, 27]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d945014-66cb-45d7-9ded-e4580cad61f7": {"__data__": {"id_": "9d945014-66cb-45d7-9ded-e4580cad61f7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "54c4f3f3-602f-432f-8d62-dea3aa18a7fb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "9635f329d7de520bd4ee6f572ba4ced759954ff536d9acd3d17f884b5502cb5b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.4\n\nSoit l'algorithme du tri par s\u00e9lection :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nmin : nombre entier\nj : nombre entier\nDEBUT\ni\u21901\ntant que i<longueur(t):  \n  j\u2190i+1\n  min\u2190i\n  tant que j<=longueur(t):  \n    si t[j]<t[min]:\n      min\u2190j\n    fin si\n    j\u2190j+1\n  fin tant que\n  si min\u2260i :\n    \u00e9changer t[i] et t[min]\n  fin si\n  i\u2190i+1\nfin tant que\nFIN\n```\n\nAppliquez cet algorithme au tableau  t = [27, 10, 12, 8, 11] et v\u00e9rifiez que vous obtenez bien le tableau [8, 10, 11, 12, 27]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b3f4012-203e-477a-9670-6a866189ab0f": {"__data__": {"id_": "4b3f4012-203e-477a-9670-6a866189ab0f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6033e73d-537d-4304-8a36-23b0674c7f08", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "7ca8e9fd0f82e95c46317214445599fdaa15d3c83d1863b0731fd044abfedb52", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.5\n\nProposez une impl\u00e9mentation en Python de l'algorithme de tri par insertion. Vous testerez votre programme \u00e0 l'aide du tableau t = [15, 16, 11, 13, 12]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98429152-e29f-4bf4-914c-29591028b4ba": {"__data__": {"id_": "98429152-e29f-4bf4-914c-29591028b4ba", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef3de27b-074e-4cb9-9898-7566a8661bde", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "8c8914972b51a9cb09a03547184864cde3c0ae6fb68685db475c61917a0bf3e8", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.6\n\nProposez une impl\u00e9mentation en Python de l'algorithme de tri par s\u00e9lection. Vous testerez votre programme \u00e0 l'aide du tableau t = [15, 16, 11, 13, 12]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da08b58c-0d9d-42e6-b337-97bbd12285bb": {"__data__": {"id_": "da08b58c-0d9d-42e6-b337-97bbd12285bb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27735650-443d-4fcc-84c4-aeb894b5daf8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "2c04ae5d70bb7b0f66320478c4362280c2ff2288d7b4ce5f24a366f1fdd3d2e6", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nLes algorithmes de tri des \u00e9l\u00e9ments d'un tableau ont une place \u00e0 part en algorithmique. En effet, ils sont souvent utilis\u00e9s pour mettre en \u00e9vidence certains concepts algorithmiques (concepts que l'on retrouve dans d'autres types d'algorithmes). Nous allons commencer par 2 algorithmes \"classiques\" : le tri par insertion et le tri par s\u00e9lection.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17ac0a5e-34c6-4680-bcdf-7a05b396251a": {"__data__": {"id_": "17ac0a5e-34c6-4680-bcdf-7a05b396251a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34e0ecdd-edb4-473b-97b5-374cca03aec0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "de07bef0ae1aba5a707294866165041eaa8de10666bb2f153f16d2bff059c9ff", "class_name": "RelatedNodeInfo"}}, "text": "2) Tri par insertion", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d0e0b99-91c6-4c29-897d-6cc33714e528": {"__data__": {"id_": "4d0e0b99-91c6-4c29-897d-6cc33714e528", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "93e70f45-9eb4-4cc7-9793-53156e023e9d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "e1fa6be5dff7b8166e72d0ad17264964cff5361c4b0210696d4b98e1d5b9d388", "class_name": "RelatedNodeInfo"}}, "text": "a)  algorithme du tri par insertion\n\nPour commencer, voici une vid\u00e9o qui explique le principe du tri par insertion :\n\nhttps://www.youtube.com/watch?v=bRPHvWgc6YM\n\nOn peut r\u00e9sumer le principe de fonctionnement de l'algorithme de tri par insertion avec le sch\u00e9ma suivant :\n\n!\n\nVoici l'algorithme du tri par insertion :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nj : nombre entier\nk : nombre entier\nDEBUT\ni\u21902\ntant que i<=longueur(t):  \n  j\u2190i-1\n  k\u2190t[i]\n  tant que j>0 et que t[j]>k: \n    t[j+1]\u2190t[j]\n    j\u2190j-1\n  fin tant que\n  t[j+1]\u2190k\n  i\u2190i+1\nfin tant que\nFIN\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1a53512-5102-4b65-b913-e367e364a430": {"__data__": {"id_": "c1a53512-5102-4b65-b913-e367e364a430", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f76151d-938f-4a81-88f4-828ad4d00466", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "1a054ecff30c05da7434fcad4c27cf744f2593db1145bed4efad28c009f88df3", "class_name": "RelatedNodeInfo"}}, "text": "b) complexit\u00e9 du tri par insertion\n\nEssayons maintenant de d\u00e9terminer la complexit\u00e9 de l'algorithme de tri par insertion :\n\nComme pr\u00e9c\u00e9demment nous nous int\u00e9resserons \u00e0 la complexit\u00e9 en temps dans le pire des cas. \u00c0 quoi correspond le pire des cas pour un algorithme de tri ? Tout simplement quand le tableau initial est \"tri\u00e9 \u00e0 l'envers\" (les entiers sont class\u00e9s du plus grand au plus petit), comme dans cet exemple : t = [5, 4, 3, 2, 1].\n\nPour d\u00e9terminer la complexit\u00e9 de l'algorithme de tri par insertion nous n'allons pas rechercher le nombre d'op\u00e9rations \u00e9l\u00e9mentaires, mais, pour souci de simplicit\u00e9, directement nous int\u00e9resser au \"nombre de d\u00e9calages effectu\u00e9s\" pour trier enti\u00e8rement un tableau. J'appelle \"d\u00e9calage\" ce qui est symbolis\u00e9 par une fl\u00e8che noire sur le sch\u00e9ma ci-dessous :\n\n!\n\nPour l'\u00e9tape ci-dessus nous avons 3 d\u00e9calages (d\u00e9calages du 10, du 12 et du 27). Nous ne tiendrons pas compte du \"placement\" du nombre en cours de traitement (8 dans notre exemple) symbolis\u00e9 par la fl\u00e8che en pointill\u00e9.\n\n\u00c9valuons le nombre de d\u00e9calages n\u00e9cessaires pour trier le tableau t = [5, 4, 3, 2, 1]\n\n\n!\n\nIl est, je l'esp\u00e8re, \u00e9vident pour vous que nous avons : 1 + 2 + 3 + 4 = 10 d\u00e9calages.\n\nDans le cas o\u00f9 nous avons un tableau \u00e0 trier qui contient n \u00e9l\u00e9ments, nous aurons : 1 + 2 + 3 +....+ n-3 + n-2 + n-1 d\u00e9calages (puisque pour 5 \u00e9l\u00e9ments nous avons 1 + 2 + 3 + 4 ). Si vous n'\u00eates pas convaincu, faites le test avec un tableau de 6 \u00e9l\u00e9ments, vous devriez trouver 1 + 2 + 3 + 4 + 5 = 15 d\u00e9calages.\n\nQue vaut cette somme S = 1 + 2 + 3 + .... + n-3 + n-2 + n-1 ?\n\n\u00c9crivons cette somme un peu diff\u00e9remment : S' = n-1 + n-2 + n-3 + .... + 3 + 2 + 1 (avec S = S' puisque l'addition est commutative)\n\nEn associant les termes de cette somme un par un nous obtenons : S + S' = n + n + n + .... + n + n + n (puisque 1+n-1=n, 2+n-2=n, 3+n-3=n,...., n-3+3=n, n-2+2=n et n-1+1=n)\n\nSoit, puisque S=S' : 2S = n + n + n + .... + n + n + n\n\nSi vous comptez bien nous avons n-1 fois n, ce que l'on peut \u00e9crire : 2S = n(n\u22121)\n\nsoit S = (n(n-1))/2 soit S = (n2-n)/2 soit encore S = (1/2)n2  -  (1/2)n\n\nComme nous l'avons vu pr\u00e9c\u00e9demment (1/2)n2  -  (1/2)n = O(n2 )\n\nL'algorithme de tri par insertion a donc une complexit\u00e9 en O(n2). On parle aussi de complexit\u00e9 quadratique.\n\nCe calcul est un peu complexe \u00e0 comprendre, rassurez-vous, vous ne serez jamais interrog\u00e9 sur cette d\u00e9monstration. Vous devez juste retenir que nous avons une boucle imbriqu\u00e9e dans une autre boucle et que donc la complexit\u00e9 de l'algorithme du tri par insertion est O(n2).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4807a75-26e6-4b65-8117-7433c1c0858c": {"__data__": {"id_": "b4807a75-26e6-4b65-8117-7433c1c0858c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a4120c1b-c63e-4467-9bce-eb785a5e3f6e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "37e249d1a24bfd8a5400e0b3bc08bb3a62deb935d91be76d296ad7b9f348fdf5", "class_name": "RelatedNodeInfo"}}, "text": "3) Tri par s\u00e9lection", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d670f387-68cb-442a-b66e-b427740cc81f": {"__data__": {"id_": "d670f387-68cb-442a-b66e-b427740cc81f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4365248c-a130-4cca-8dee-b9ddef79c556", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "d5851e0842a6dfe11d52221159e317c5a928faf58768a2490161992c9323ca61", "class_name": "RelatedNodeInfo"}}, "text": "a) algorithme du tri par s\u00e9lection\n\nComme pour le tri par insertion, commen\u00e7ons par le visionnage d'une petite vid\u00e9o :\n\nhttps://www.youtube.com/watch?v=8u3Yq-5DTN8\n\nOn peut r\u00e9sumer le principe de fonctionnement de l'algorithme de tri par s\u00e9lection avec le sch\u00e9ma suivant :\n\n\n!\n\nVoici l'algorithme du tri par s\u00e9lection :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nmin : nombre entier\nj : nombre entier\nDEBUT\ni\u21901\ntant que i<longueur(t):   //boucle 1\n  j\u2190i+1\n  min\u2190i\n  tant que j<=longueur(t):   //boucle 2\n    si t[j]<t[min]:\n      min\u2190j\n    fin si\n    j\u2190j+1\n  fin tant que\n  si min\u2260i :\n    \u00e9changer t[i] et t[min]\n  fin si\n  i\u2190i+1\nfin tant que\nFIN\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1d1ca66-5633-4b20-abc8-cc3ffd3bf52f": {"__data__": {"id_": "f1d1ca66-5633-4b20-abc8-cc3ffd3bf52f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1fa48e40-2fa0-47b4-8e38-7f3de70b59bc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "1952a13e4770f910154d91f4f8c5482c76dcb7ed9ea9fa2d46ff7913be50c415", "class_name": "RelatedNodeInfo"}}, "text": "b)  complexit\u00e9 du tri par s\u00e9lection\n\nEssayons maintenant de d\u00e9terminer la complexit\u00e9 de l'algorithme de tri par s\u00e9lection :\n\nPour \u00e9tablir la complexit\u00e9 de cet algorithme, comme pour l'algorithme de tri par insertion, nous n'allons pas directement nous int\u00e9resser au nombre d'op\u00e9rations \u00e9l\u00e9mentaires. Cette fois, nous allons comptabiliser les comparaisons entre 2 entiers.\n\nSi nous nous int\u00e9ressons \u00e0 l'\u00e9tape qui nous permet de passer de t = [12, 8, 23, 10, 15] \u00e0 t = [8, 12, 23, 10, 15] (i = 1) nous avons 4 comparaisons : 12 avec 8, puis 8 avec 23, puis 8 avec 10 et enfin 8 avec 15.\n\nSi nous nous int\u00e9ressons \u00e0 l'\u00e9tape qui nous permet de passer de t = [8, 12, 23, 10, 15] \u00e0 t = [8, 10, 23, 12, 15] (i = 2) nous avons 3 comparaisons : 12 avec 23, puis 12 avec 10, et enfin 10 avec 15.\n\nSi nous nous int\u00e9ressons \u00e0 l'\u00e9tape qui nous permet de passer de t = [8, 10, 23, 12, 15] \u00e0 t = [8, 10, 12, 23, 15] (i = 3) nous avons 2 comparaisons : 23 avec 12 et 12 avec 15\n\nSi nous nous int\u00e9ressons \u00e0 l'\u00e9tape qui nous permet de passer de t = [8, 10, 12, 23, 15] \u00e0 t = [8, 10, 12, 15, 23] (i = 4) nous avons 1 comparaison : 23 avec 15\n\nPour trier un tableau comportant 5 \u00e9l\u00e9ments nous avons : 4 + 3 + 2 + 1 = 10 comparaisons\n\nDans le cas o\u00f9 nous avons un tableau \u00e0 trier qui contient n \u00e9l\u00e9ments, nous aurons : n-1 + n-2 + n-3 +....+ 3 + 2 + 1 comparaisons. Si vous n'\u00eates pas convaincu, faites le test avec un tableau de 6 \u00e9l\u00e9ments, vous devriez trouver 5 + 4 + 3 + 2 +1 = 15 comparaisons.\n\nVous avez sans doute d\u00e9j\u00e0 remarqu\u00e9 que nous avons un r\u00e9sultat similaire au tri par insertion (sauf que nous nous int\u00e9ressons ici aux comparaisons alors que pour le tri par insertion nous nous int\u00e9ressons aux d\u00e9calages, mais cela ne change rien au probl\u00e8me)\n\nConclusion : nous allons trouver exactement le m\u00eame r\u00e9sultat que pour le tri par insertion : l'algorithme de tri par s\u00e9lection a une complexit\u00e9 en O(n2 ) (complexit\u00e9 quadratique).\n\nNous avons vu pr\u00e9c\u00e9demment des algorithmes de complexit\u00e9 lin\u00e9aire (O(n)) avec les algorithmes de recherche d'un entier dans un tableau, de recherche d'un extremum ou encore de calcul d'une moyenne. Nous avons vu ici que les algorithmes de tri par s\u00e9lection et de tri par insertion ont tous les deux une complexit\u00e9 quadratique (O(n2 )). Il est important de bien avoir conscience de l'impact de ces complexit\u00e9s sur l'utilisation des algorithmes : si vous doublez la taille du tableau, vous doublerez le temps d'ex\u00e9cution d'un algorithme de complexit\u00e9 lin\u00e9aire, en revanche vous quadruplerez le temps d'ex\u00e9cution d'un algorithme de complexit\u00e9 quadratique.\n\nSi votre ordinateur met T secondes pour trier un tableau de taille n, il mettra  4T secondes pour trier une tableau  de taille 2n.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdeeadab-65b2-4944-93aa-7f98405e39de": {"__data__": {"id_": "fdeeadab-65b2-4944-93aa-7f98405e39de", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11r.md", "file_name": "c11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6af1309-d5c7-415e-a82c-063d7da9f9c0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11r.md", "file_name": "c11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cc4f330872b2c67afd5f6201988cdf478b2565064a984c2f1ae54e7bfd8a1bd8", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- conna\u00eetre l\u2019algorithme du tri par insertion\n\n- conna\u00eetre l\u2019algorithme du tri par s\u00e9lection\n\n- savoir que l\u2019algorithme du tri par insertion et l\u2019algorithme du tri par s\u00e9lection ont tous deux une complexit\u00e9 en temps dans le pire des cas en O(n2) (quadratique)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96f4bd72-4a15-4b1c-a44a-36926e7bd7f6": {"__data__": {"id_": "96f4bd72-4a15-4b1c-a44a-36926e7bd7f6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11r.md", "file_name": "c11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "602b1e84-7183-4eb7-b9e5-43e713cca174", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11r.md", "file_name": "c11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "939a42730b5717d3ea7403a8b4e3b36b61dc35acfa2c82ad36464b16c159913c", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable d\u2019analyser et d\u2019expliquer (faire tourner \u201c\u00e0 la main\u201d) les algorithmes de tri par insertion et par s\u00e9lection sur un exemple donn\u00e9\n\n- vous devez \u00eatre capable d\u2019impl\u00e9menter en Python les algorithmes de tri par insertion et par s\u00e9lection", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 289, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "997266f6-d0ec-4ccc-a96c-ccaa936b672c": {"__data__": {"id_": "997266f6-d0ec-4ccc-a96c-ccaa936b672c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12a.md", "file_name": "c12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dac53864-f4a5-4de3-9f95-dcf4c32036da", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12a.md", "file_name": "c12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "98b765c5efe46aa883e85f5644ce551f146baf717dd6d55304242f51dfbb870a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 12.1\n\nOn rappelle l'algorithme du tri par s\u00e9lection :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nmin : nombre entier\nj : nombre entier\nDEBUT\ni\u21901\ntant que i<longueur(t):  //boucle 1\n  j\u2190i+1\n  min\u2190i\n  tant que j<=longueur(t):   //boucle 2\n    si t[j]<t[min]:\n      min\u2190j\n    fin si\n    j\u2190j+1\n  fin tant que\n  si min\u2260i :\n    \u00e9changer t[i] et t[min]\n  fin si\n  i\u2190i+1\nfin tant que\nFIN\n``` \n\nD\u00e9terminer un invariant de boucle pour la boucle *boucle 1* (voir code ci-dessus)\n\nD\u00e9montrez que l'algorithme de tri par s\u00e9lection est correct (qu'il trie les tableaux correctement).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 590, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e52da04b-4a88-4c16-8a36-4b52207d233f": {"__data__": {"id_": "e52da04b-4a88-4c16-8a36-4b52207d233f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12a.md", "file_name": "c12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "843e1693-4bfa-4bc2-baa2-a6110a29b189", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12a.md", "file_name": "c12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0e36269517f583a29ae32053ac43437bc54a10870ea9a3c72211ef89758393e5", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 12.2\n\nL'algorithme suivant permet de calculer la somme des N premiers entiers, o\u00f9 N est un nombre entier donn\u00e9 :\n\n```\ni =0\nsomme =0\nwhile i < N :\n  i = i + 1\n  somme = somme + i\n```\n\nD\u00e9terminez un invariant de boucle (on devra trouver  une propri\u00e9t\u00e9 qui concernera la variable *i* et une propri\u00e9t\u00e9 qui concernera la variable *somme*)\n\nEn utilisant l'invariant de boucle trouv\u00e9 ci-dessus, d\u00e9montrez la correction de cet algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46d0be56-d3d0-41b0-88e7-44abfb43876e": {"__data__": {"id_": "46d0be56-d3d0-41b0-88e7-44abfb43876e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12c.md", "file_name": "c12c.md", "file_size": 6535, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27c31d9e-8d21-46ae-b4c1-6f40477ef254", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12c.md", "file_name": "c12c.md", "file_size": 6535, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3da705d1aeb10d67e9102beec99e12778a9d6010c465bf38a6dc653e6299ad8a", "class_name": "RelatedNodeInfo"}}, "text": "A priori, les algorithmes de tri par insertion et de tri par s\u00e9lection \"fonctionnent\" correctement : ils trient bien le tableau donn\u00e9 en entr\u00e9e, on dit que ces algorithmes sont corrects. On parle aussi de la \"correction d'un algorithme\" pour dire qu'un algorithme produit bien le r\u00e9sultat attendu.\n\nMultiplier les exemples qui \"fonctionnent\" ne veut pas dire que l'algorithme donnera le \"bon r\u00e9sultat\" dans toutes les circonstances. C'est un peu comme en math\u00e9matiques, v\u00e9rifier qu'une propri\u00e9t\u00e9 est vraie sur un exemple n'a pas valeur de d\u00e9monstration. Il se pourrait tr\u00e8s bien que dans une situation donn\u00e9e notre algorithme ne donne pas le r\u00e9sultat attendu.\n\nIl existe un moyen de d\u00e9montrer (au sens math\u00e9matique du terme) la correction d'un algorithme. Si nous arrivons \u00e0 d\u00e9montrer la correction de l'algorithme de tri par insertion, nous pourrons alors affirmer que, quel que soit le tableau donn\u00e9 en entr\u00e9e, nous obtiendrons bien en sortie ce m\u00eame tableau, mais tri\u00e9. Pour d\u00e9montrer la correction de l'algorithme de tri par insertion, nous allons utiliser un \"invariant de boucle\"\n\nQu'est-ce qu'un invariant de boucle ?\n\nOn appelle invariant de boucle une propri\u00e9t\u00e9 qui est vraie avant et apr\u00e8s chaque it\u00e9ration.\n\nPrenons tout de suite un exemple avec le tri par insertion :\n\nVoici, pour m\u00e9moire, l'algorithme de tri par insertion :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nj : nombre entier\nk : nombre entier\nDEBUT\nj\u21902\ntant que j<=longueur(t):   //boucle 1\n  i\u2190j-1\n  k\u2190t[j]\n  tant que i>0 et que t[i]>k:   //boucle 2\n    t[i+1]\u2190t[i]\n    i\u2190i-1\n  fin tant que\n  t[i+1]\u2190k\n  j\u2190j+1\nfin tant que\nFIN\n```\n\nDivisons le tableau t en 2 parties :\n\n- Une partie qui contient les \u00e9l\u00e9ments d'index 1 \u00e0 j-1 (le j correspond \u00e0 la variable j dans l'algorithme ci-dessus). Nous noterons cette partie (ce tableau) t[1..j-1]\n\n- Une seconde partie qui contient le reste du tableau t (index j \u00e0 n si le tableau t comporte n \u00e9l\u00e9ment)\nNous allons travailler sur cet exemple : t = [27, 10, 12, 8, 11]\n\nAu d\u00e9but de la premi\u00e8re it\u00e9ration, nous avons j=2, donc t[1..j-1] = t[1..1] = [27] (le tableau t[1..j-1] contient un unique \u00e9l\u00e9ment, le tableau est donc tri\u00e9). \u00c0 la fin de la premi\u00e8re it\u00e9ration (apr\u00e8s le j = j+1), nous avons j=3, donc t[1..2]=[10,27], le tableau t[1..j-1] est donc bien tri\u00e9\n\nAu d\u00e9but de la deuxi\u00e8me it\u00e9ration de la \"boucle 1\", nous avons t = [10, 27, 12, 8, 11] et j=3, d'o\u00f9 t[1..j-1] = t[1..2] = [10, 27], le tableau t[1..j-1] est donc bien tri\u00e9 \u00c0 la fin de la deuxi\u00e8me it\u00e9ration, nous avons j=4, donc t[1..3]=[10,12,27], le tableau t[1..j-1] est donc bien tri\u00e9\n\nAu d\u00e9but de la troisi\u00e8me it\u00e9ration de la \"boucle 1\", nous avons t = [10, 12, 27, 8, 11] et j=4, d'o\u00f9 t[1..j-1] = t[1..3] = [10, 12, 27], le tableau t[1..j-1] est donc bien tri\u00e9 \u00c0 la fin de la troisi\u00e8me it\u00e9ration, nous avons j=5, donc t[1..4]=[8,10,12,27], le tableau t[1..j-1] est donc bien tri\u00e9\n\nAu d\u00e9but de la quatri\u00e8me it\u00e9ration de la \"boucle 1\", nous avons t = [8, 10, 12, 27, 11] et j=5, d'o\u00f9 t[1..j-1] = t[1..4] = [8, 10, 12, 27], le tableau t[1..j-1] est donc bien tri\u00e9 \u00c0 la fin de la troisi\u00e8me it\u00e9ration, nous avons j=6, donc t[1..5]=[8,10,11,12,27], le tableau t[1..j-1] est donc bien tri\u00e9\n\nQue peut-on dire du tableau t[1..j-1] au d\u00e9but et \u00e0 la fin de chaque it\u00e9ration ?\n\nR\u00e9ponse : t[1..j-1] est un tableau tri\u00e9 !\n\nNotre invariant de boucle pourrait donc \u00eatre : \"Le tableau t[1..j-1] est tri\u00e9\"\n\nTrouver ce qui pourrait \u00eatre un invariant de boucle est une chose, encore faut-il ensuite d\u00e9montrer qu'il est correct (une fois de plus l'\u00e9tude d'un cas particulier ne vaut pas d\u00e9monstration). La d\u00e9monstration doit se faire en 3 \u00e9tapes :\n\n- INITIALISATION : on doit montrer que l'invariant de boucle est vrai avant la premi\u00e8re it\u00e9ration de la boucle\n\n- CONSERVATION : on doit montrer que si l'invariant de boucle est vrai avant une it\u00e9ration de la boucle, il le reste avant l'it\u00e9ration suivante.\n\n- TERMINAISON : une fois la boucle termin\u00e9e, l'invariant fournit une propri\u00e9t\u00e9 utile qui aide \u00e0 montrer la correction de l'algorithme.\n\nRevenons au tri par insertion et \u00e0 notre invariant de boucle \"Le tableau t[1..j-1] est tri\u00e9\" :\n\n- INITIALISATION : avant la 1re it\u00e9ration de la boucle 1, le tableau t[1..j-1] contient un seul \u00e9l\u00e9ment (j=2). Un tableau contenant un seul \u00e9l\u00e9ment est forc\u00e9ment tri\u00e9 (trivial), notre invariant \"le tableau t[1..j-1] est tri\u00e9\" est donc vrai.\n\n- CONSERVATION : nous devons maintenant montrer que l'invariant est conserv\u00e9 au cours d'une it\u00e9ration : si l'invariant est vrai en d\u00e9but d'it\u00e9ration (d\u00e9but de la boucle 1), il reste vrai \u00e0 la fin de cette m\u00eame it\u00e9ration. Globalement, que fait la boucle 1 ? Elle permet de d\u00e9placer les \u00e9l\u00e9ments t[j-1], t[j-2], t[j-3], etc d'une position vers la droite jusqu'\u00e0 ce que l'on trouve la bonne position pour t[j]. Apr\u00e8s ces d\u00e9calages vers la droite effectu\u00e9s, on ins\u00e8re la valeur t[j] au bon endroit. Au cours d'une it\u00e9ration de la boucle 1, nous passons d'un tableau t[1..j] non tri\u00e9 (le tableau t[1..j-1] est tri\u00e9, mais l'\u00e9l\u00e9ment t[j] n'est pas encore \u00e0 la bonne place, donc t[1..j] n'est pas encore tri\u00e9), \u00e0 un tableau tri\u00e9 (d\u00e9caler vers la droite les \u00e9l\u00e9ments t[j-1], t[j-2], t[j-3], etc et placer t[j] \u00e0 la bonne position). En fin d'it\u00e9ration (juste avant le \"j\u2190j+1\") t[1..j] est tri\u00e9, juste apr\u00e8s le \"j\u2190j+1\" le tableau t[1..j] pr\u00e9c\u00e9demment \u00e9voqu\u00e9 devient donc le tableau t[1..j-1]. Conclusion : en toute fin d'it\u00e9ration (apr\u00e8s le \"j\u2190j+1\") le tableau t[1..j-1] est tri\u00e9. Au d\u00e9but d'une it\u00e9ration t[1..j-1] est tri\u00e9, \u00e0 la toute fin de cette m\u00eame it\u00e9ration (apr\u00e8s le \"j\u2190j+1\") le tableau t[1..j-1] est tri\u00e9, nous pouvons donc affirmer que si l'invariant \"le tableau t[1..j-1] est tri\u00e9\" est vrai avant une it\u00e9ration de la boucle 1, il le reste avant l'it\u00e9ration suivante.\n\n- TERMINAISON : Que se passe-t-il quand la boucle se termine ? La boucle 1 se termine quand j > longueur(t) (quand j > n pour un tableau comportant n \u00e9l\u00e9ment). Quand la boucle se termine, on doit avoir j = n + 1. Si on substitue n+1 par j dans l'invariant de boucle, on obtient le tableau t[1..n]. Quand la boucle se termine, l'affirmation \"le tableau t[1..j-1] est tri\u00e9\" devient \"le tableau t[1..n] est tri\u00e9\". Or, le tableau t[1..n] correspond au tableau qui est compos\u00e9 des n \u00e9l\u00e9ments. Le tableau d'origine est donc maintenant tri\u00e9.\n\nCette d\u00e9monstration nous permet d'affirmer que l'algorithme de tri par insertion est correct.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6351, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57de25e1-67a3-40d7-9881-0d290011cdeb": {"__data__": {"id_": "57de25e1-67a3-40d7-9881-0d290011cdeb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12r.md", "file_name": "c12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88040aa2-75c5-4ed6-943f-feaaaf651e1e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12r.md", "file_name": "c12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "294434fa45fee085ec0d90fbb027cb7651579311ca2ca68e2fcd630c9b1fbcb4", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n- on appelle \u201cinvariant de boucle\u201d une propri\u00e9t\u00e9 qui est vraie avant et apr\u00e8s chaque it\u00e9ration (boucle)\n\n- un invariant de boucle peut permettre de prouver la correction d\u2019un algorithme\n\n- il est n\u00e9cessaire de d\u00e9montrer que l\u2019on a bien un invariant de boucle, cette d\u00e9monstration doit se faire en 3 \u00e9tapes :\n\t- INITIALISATION : on doit montrer que l'invariant de boucle est vrai avant la premi\u00e8re it\u00e9ration de la boucle\n\n\t- CONSERVATION : on doit montrer que si l'invariant de boucle est vrai avant une it\u00e9ration de la boucle, il le reste avant l'it\u00e9ration suivante.\n\n\t- TERMINAISON : une fois la boucle termin\u00e9e, l'invariant fournit une propri\u00e9t\u00e9 utile qui aide \u00e0 montrer la correction de l'algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 726, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac86cf98-e925-464d-8c7f-6d96320689ed": {"__data__": {"id_": "ac86cf98-e925-464d-8c7f-6d96320689ed", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12r.md", "file_name": "c12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e45bfe72-dcae-434e-b406-cc5b441ea83b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12r.md", "file_name": "c12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2f959b5cd50bcfda2788893ef503685331568c7fb09abc84fed9b70573afcd59", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable de trouver un invariant de boucle dans un algorithme\n\n- vous devez \u00eatre capable de prouver que c\u2019est bien un invariant de boucle\n\n- d\u2019utiliser cet invariant de boucle pour d\u00e9montrer la correction d\u2019un algorithme\n(notamment les algorithmes de tri par insertion et de tri par s\u00e9lection)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f062fac9-05ca-446b-8bd8-c6c86b01a334": {"__data__": {"id_": "f062fac9-05ca-446b-8bd8-c6c86b01a334", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3a217cf-8cfd-4fb3-b979-daa824b231c1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ef922b062f9c0d1c6107835e9fd9d8b370a4ba6c224f61a2a176f2f755562a9d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 13.1\n\nCette vid\u00e9o va vous permettre de mieux comprendre le principe de fonctionnement d'un syst\u00e8me d'exploitation.\n\nOS\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 162, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0ab32c8-83c0-41b2-933e-4552fc3a0cb8": {"__data__": {"id_": "b0ab32c8-83c0-41b2-933e-4552fc3a0cb8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "09804031-41e9-4f0b-a324-490bcfc1a932", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "60279a4129ea7e1e6d53cf06aaad6b54b5a275a200588682db1cc0825fde231e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 13.2\n\nCette vid\u00e9o revient sur l'histoire des syst\u00e8mes d'exploitation et plus particuli\u00e8rement sur l'histoire d'UNIX\n\nUNIX\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21cd0318-038d-4a70-926b-db01f0449823": {"__data__": {"id_": "21cd0318-038d-4a70-926b-db01f0449823", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2769d44-f75d-474f-988b-771f690a213f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f8feb3494faf285cb6fa8c6de1ac130ddbf5bf2bf7d8d79f1842645deba047f9", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 13.3\n\nCette br\u00e8ve vid\u00e9o de 2011 revient sur l'histoire de Linux\n\nL'Histoire de Linux\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3119e9c-0779-458f-8c7f-0df58c329cb6": {"__data__": {"id_": "f3119e9c-0779-458f-8c7f-0df58c329cb6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e72f884-16f9-441b-b44a-c6572616a7f6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6dd290df27a8e00de9539ae4677aa71f4bf6c61419588e4fd74a9e5edb3c94f7", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 13.4\n\nCette vid\u00e9o \u00e9voque GNU/Linux en entrant plus dans les d\u00e9tails (la  vid\u00e9o d\u00e9passe largement ce qu'il faut retenir en NSI mais elle est tout de m\u00eame int\u00e9ressante pour votre \"culture informatique\").\n\nle syst\u00e8me d'exploitation GNU/Linux\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ff37844-5f9f-4b96-9cef-5f0b5e390252": {"__data__": {"id_": "5ff37844-5f9f-4b96-9cef-5f0b5e390252", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a364d327-8765-4bac-bac5-bb3e222684c7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "329367655dffe09ba98660a9bc09217fbdc412c45aaa9668aee0e4f54a48a3b2", "class_name": "RelatedNodeInfo"}}, "text": "1) Qu'est-ce qu'un syst\u00e8me d'exploitation\n\nUn syst\u00e8me d'exploitation (Operating System en anglais) est un ensemble de logiciels qui permettent de faire fonctionner d'autres logiciels en  exploitant les  ressources propos\u00e9es par un ordinateur (RAM, CPU, disques...). Les logiciels n'ont pas vraiment \u00e0  g\u00e9rer les ressources mat\u00e9rielles,  le syst\u00e8me d'exploitation s'en charge pour eux.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 386, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "025f8427-3452-4371-9f2d-5d6be906b823": {"__data__": {"id_": "025f8427-3452-4371-9f2d-5d6be906b823", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3dcc4e6b-e623-4531-b659-9552694a5a11", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "9d37d6f265bee152ebfc584c224d0222502afe9db113178edfcc9da3d0b26f11", "class_name": "RelatedNodeInfo"}}, "text": "2) De Multics \u00e0 UNIX\n\nLes tout premiers ordinateurs n'avaient pas vraiment de syst\u00e8me d'exploitation (les logiciels devaient g\u00e9rer la partie mat\u00e9riel). Il faut attendre 1965 pour voir arriver le premier syst\u00e8me d'exploitation multit\u00e2che (capable d'ex\u00e9cuter plusieurs programmes en \"m\u00eame temps\") et multi-utilisateur : Multics.\n\nLe syst\u00e8me d'exploitation UNIX voit le jour \u00e0 la toute fin des ann\u00e9es 60. Il a \u00e9t\u00e9 con\u00e7u par Ken Thompson et Dennis Ritchie des laboratoires Bell. Le syst\u00e8me d'exploitation Multics ne fonctionnait que sur des ordinateurs extr\u00eamement chers, l'id\u00e9e de Thompson et Ritchie \u00e9tait de concevoir un syst\u00e8me d'exploitation pour les ordinateurs un peu moins on\u00e9reux (mais on ne pouvait tout de m\u00eame pas parler \u00e0 cette \u00e9poque d'informatique \"grand public\", les ordinateurs \u00e9taient encore r\u00e9serv\u00e9s aux centres de recherche et aux grandes entreprises). Comme nous le verrons un peu plus loin, le syst\u00e8me UNIX est encore utilis\u00e9 aujourd'hui.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 958, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81862c10-39bb-4274-b45b-b1a17843d92e": {"__data__": {"id_": "81862c10-39bb-4274-b45b-b1a17843d92e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9957b0b9-07c9-4050-bad2-52f6dbefa29a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a34fb1ed699e4b114961055077d5436f66a453547da5b8c748102eb6d39f5844", "class_name": "RelatedNodeInfo"}}, "text": "3) syst\u00e8mes propri\u00e9taires vs syst\u00e8mes libres", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 46, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "45cefba3-913f-404b-9863-c2a3c37b23a4": {"__data__": {"id_": "45cefba3-913f-404b-9863-c2a3c37b23a4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b56fa3c-e975-4237-90f8-562aadfe0f13", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "9c4a17bf3449789baf9bf5c1cf8ee2f79743abc1b73bd2c54d5ac5b0c5cce94b", "class_name": "RelatedNodeInfo"}}, "text": "a) notion de logiciel libre\n\nLe syst\u00e8me UNIX est un syst\u00e8me dit \"propri\u00e9taire\" (certaines personnes disent \"privateur\"), c'est-\u00e0-dire un syst\u00e8me non libre. Mais plus g\u00e9n\u00e9ralement, qu'est-ce qu'un logiciel libre ?\n\nD'apr\u00e8s Wikip\u00e9dia : \"Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et l\u00e9galement, ceci afin de garantir certaines libert\u00e9s induites, dont le contr\u00f4le du programme par l'utilisateur et la possibilit\u00e9 de partage entre individus\". Le syst\u00e8me UNIX ne respecte pas ces droits (par exemple le code source d'UNIX n'est pas disponible, l'\u00e9tude d'UNIX est donc impossible), UNIX est donc un syst\u00e8me \"propri\u00e9taire\" (le contraire de \"libre\"). Attention qui dit logiciel libre ne veut pas forcement dire logiciel gratuit (m\u00eame si c'est souvent le cas), la confusion entre \"libre\" et \"gratuit\" vient de l'anglais puisque \"free\" veut \u00e0 la fois dire \"libre\", mais aussi gratuit.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 993, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "749d61ca-e768-42c6-a34c-9f04957adc16": {"__data__": {"id_": "749d61ca-e768-42c6-a34c-9f04957adc16", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47451d2e-9896-414a-b66d-75b38b4ae2ed", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "9dbc7d961b0677b5bf880b6a787b911339b2e7efe95717097f3326bc7b09433b", "class_name": "RelatedNodeInfo"}}, "text": "b) Linux\n\nEn 1991, un \u00e9tudiant finlandais, Linus Torvalds, d\u00e9cide de cr\u00e9er un clone libre d'UNIX en ne partant de rien (on dit \"from scratch\" en anglais) puisque le code source d'UNIX n'est pas public. Ce clone d'UNIX va s'appeler Linux (Linus+UNIX). Linux est aujourd'hui le syst\u00e8me d'exploitation le plus utilis\u00e9 au monde si on tient compte des serveurs et des smartphones (Android est d\u00e9riv\u00e9 d'un syst\u00e8me Linux)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 416, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51e2a1cd-2471-4919-b664-7e7e33b4baa7": {"__data__": {"id_": "51e2a1cd-2471-4919-b664-7e7e33b4baa7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "109ea251-d24c-42c2-9c25-f6d2d3adb554", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "03100f458747552ad086175bc86cac98fb03fdcdbfc315c9f03df6c85644d54b", "class_name": "RelatedNodeInfo"}}, "text": "4) Microsoft\n\nDifficile de parler des syst\u00e8mes d'exploitation sans parler de Microsoft !\n\nMicrosoft a \u00e9t\u00e9 cr\u00e9\u00e9e par Bill Gates et Paul Allen en 1975. Microsoft est surtout connue pour son syst\u00e8me d'exploitation Windows. Windows est un syst\u00e8me d'exploitation \"propri\u00e9taire\", la premi\u00e8re version de Windows date 1983, mais \u00e0 cette date Windows n'est qu'un ajout sur un autre syst\u00e8me d'exploitation nomm\u00e9 MS-DOS. Aujourd'hui Windows reste le syst\u00e8me d'exploitation le plus utilis\u00e9 au monde sur les ordinateurs grand public (ordinateurs personnels), il faut dire que l'achat de Windows est quasiment impos\u00e9 lorsque l'on ach\u00e8te un ordinateur dans le commerce, car oui, quand vous achetez un ordinateur neuf, une partie de la somme que vous versez termine dans les poches de Microsoft. Il est possible de se faire rembourser la licence Windows, mais cette op\u00e9ration est relativement complexe.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 888, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23b61737-9139-443e-967d-8a35e8b169bd": {"__data__": {"id_": "23b61737-9139-443e-967d-8a35e8b169bd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47d7ae3c-fef4-4ec9-bae3-09d27d9cbcef", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "83672c8698ed1e24c12225ced431610e307c22eb6a26a5f8fe95f5ee68c1eaf9", "class_name": "RelatedNodeInfo"}}, "text": "5) Apple\n\nEnfin pour terminer, quelques mots sur le syst\u00e8me d'exploitation des ordinateurs de marque Apple : tous les ordinateurs d'Apple sont livr\u00e9s avec le syst\u00e8me d'exploitation macOS. Ce syst\u00e8me macOS est un syst\u00e8me d'exploitation UNIX, c'est donc un syst\u00e8me d'exploitation propri\u00e9taire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21595bc9-f53d-4d86-89fa-83b499eb771c": {"__data__": {"id_": "21595bc9-f53d-4d86-89fa-83b499eb771c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13r.md", "file_name": "c13r.md", "file_size": 1262, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d4e4a12c-0dd6-4c8a-a40c-190deefddc76", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13r.md", "file_name": "c13r.md", "file_size": 1262, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a944b2825416e4c6d4ab87a83396d1552ffb685eefe52cb1b0628eab959115ad", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Un syst\u00e8me d\u2019exploitation (OS : Operating System) est un un ensemble de programme permettant de faire fonctionner les logiciels sur un ordinateur donn\u00e9. L\u2019OS r\u00e9partit les ressources d\u2019un ordinateur (CPU, RAM\u2026) entre les diff\u00e9rents logiciels qui tournent sur cet ordinateur.\n\n- Il existe des syst\u00e8mes d\u2019exploitation libres (GNU/Linux) et des syst\u00e8mes d\u2019exploitation propri\u00e9taires (Unix, Windows, macOS (qui est un d\u00e9riv\u00e9 d\u2019UNIX),\niOS...).\n\n- Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et\nl\u00e9galement, ceci afin de garantir certaines libert\u00e9s induites, dont le contr\u00f4le du programme par l'utilisateur et la possibilit\u00e9 de partage entre individus (d\u2019apr\u00e8s Wikip\u00e9dia)\n\n- En 1991, un \u00e9tudiant finlandais, Linus Torvalds, d\u00e9cide de cr\u00e9er un clone libre d'UNIX en ne partant de rien puisque le code source d'UNIX n'est pas public. Ce\nclone d'UNIX va s'appeler Linux (Linus+UNIX). Ce noyau d\u2019OS (le noyau assure uniquement les fonctions de base de l\u2019OS) sera compl\u00e9t\u00e9 par des logiciels libres issus du projet GNU (GNU\u2019s Not UNIX) fond\u00e9 par Richard Stallman, pour donner GNU/Linux.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1214, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "894b65a9-7ac0-4f80-b31a-fc90677d300b": {"__data__": {"id_": "894b65a9-7ac0-4f80-b31a-fc90677d300b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0cf88da9-14ab-487e-851a-77afba0aa572", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a82c299d7a3afa976983c4aea3fe1175d2a21046e8480f191eb6d1801a08c84c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 14.1\n\nEn utilisant l'arborescence ci-dessous, quelle est la commande \u00e0 saisir si le r\u00e9pertoire courant est le r\u00e9pertoire \"home\" et que vous \"voulez vous rendre\" dans le r\u00e9pertoire \"boulot\" (vous utiliserez d'abord un chemin absolu puis un chemin relatif). Il faudra recopier la liste des commandes saisies dans votre cahier d'activit\u00e9s\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 349, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aabf8be2-b833-4acc-833a-64d6b8c1a569": {"__data__": {"id_": "aabf8be2-b833-4acc-833a-64d6b8c1a569", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1097952d-7a0c-4547-8df5-f731245107cf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "6ca3e311bc216215615e2af4bc77d9e2883c7df70f40fedfce98639054c330a2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 14.2\n\nFaites les actions suivantes en utilisant des lignes de commande (en partant de votre r\u00e9pertoire de travail). Il faudra recopier la liste des commandes saisies dans votre cahier d'activit\u00e9s :\n\n- cr\u00e9ez un r\u00e9pertoire *doc*\n\n- placez-vous dans le r\u00e9pertoire *doc*\n\n- cr\u00e9ez un r\u00e9pertoire *texte*\n\n- cr\u00e9ez un r\u00e9pertoire *mesDoc*\n\n- placez-vous dans le r\u00e9pertoire *texte*\n\n- cr\u00e9ez un fichier *toto.txt*\n\n- placez-vous dans le  r\u00e9pertoire *doc*\n\n- copiez le fichier *toto.txt* dans le r\u00e9pertoire *mesDoc*\n\n- placez-vous dans le r\u00e9pertoire *mesDoc* et v\u00e9rifiez que le fichier *toto.txt* est bien pr\u00e9sent dans ce r\u00e9pertoire\n\n- placez-vous dans le r\u00e9pertoire *doc*  \n\n- effacez le fichier *toto.txt* du r\u00e9pertoire *texte*\n\n- d\u00e9placez le fichier *toto.txt* du r\u00e9pertoire *mesDoc* vers le r\u00e9pertoire *doc*\n\n- effacez le r\u00e9pertoire *mesDoc*\n\n- effacez le r\u00e9pertoire *texte*\n\n- effacez le fichier *toto.txt*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 910, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7325adce-1139-4ace-95fb-74336a29c151": {"__data__": {"id_": "7325adce-1139-4ace-95fb-74336a29c151", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "617485c7-aec4-4809-b48e-234d98d84cec", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "e552894409ce3ef0134d2f9ff40b77965685ed0c61f6a20199f3b5febb5054ae", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 14.3\n\nFaites les actions suivantes en utilisant des lignes de commande (en partant de votre r\u00e9pertoire de travail). Il faudra recopier la liste des commandes saisies dans votre cahier d'activit\u00e9s :\n\n- cr\u00e9ez un r\u00e9pertoire *doc*\n\n- placez-vous dans le r\u00e9pertoire *doc* et cr\u00e9ez un fichier *toto.txt*\n\n- listez les droits (r, w et x) pour les diff\u00e9rents utilisateurs (u, g et o) sur le fichier *toto.txt*\n\n- supprimez le droit en lecture pour les utilisateurs *g* sur le fichier *toto.txt*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "355048b7-8936-4d15-8b05-dcaa11d597ea": {"__data__": {"id_": "355048b7-8936-4d15-8b05-dcaa11d597ea", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bec16df9-4d2c-437e-9c0e-86e13c7b6e37", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "4144e5b9cf2ccc07d45142decda3dcf7efc384d9455da741c853139424f0785b", "class_name": "RelatedNodeInfo"}}, "text": "1) la ligne de commande\n\n\u00c0 la \"pr\u00e9histoire\" des syst\u00e8mes d'exploitation, ces derniers \u00e9taient d\u00e9pourvus d'interface graphique (syst\u00e8me de fen\u00eatres \"pilotables\" \u00e0 la souris), toutes les interactions \"syst\u00e8me d'exploitation - utilisateur\" se faisaient par l'interm\u00e9diaire de \"lignes de commandes\" (suites de caract\u00e8res, souvent \u00e9sot\u00e9riques, saisies par l'utilisateur). Aujourd'hui, m\u00eame si les interfaces graphiques modernes permettent d'effectuer la plupart des op\u00e9rations, il est important de connaitre quelques-unes de ces lignes de commandes.\n\nPour saisir des lignes de commandes, nous allons utiliser une console (aussi appel\u00e9 terminal m\u00eame si ce n'est pas exactement la m\u00eame chose).\n\n!\n\nNous avons ci-dessus la console de l'utilisateur \"david\" qui utilise un ordinateur qui se nomme \"PC-Bureau\" (\"david@PC-Bureau\").", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 821, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7eb443b7-e02b-4770-8f2f-d7bedc8094f8": {"__data__": {"id_": "7eb443b7-e02b-4770-8f2f-d7bedc8094f8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f036e09a-a890-442f-9d05-a0606d0e9152", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "34462cc5e110e128b5e589cdc7725eef8a22d9195549efd224aa5d3c6c3ed0d6", "class_name": "RelatedNodeInfo"}}, "text": "2) arborescence du syst\u00e8me de fichier", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 39, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c65bfbe8-9297-4f60-beae-1408d12b9a7d": {"__data__": {"id_": "c65bfbe8-9297-4f60-beae-1408d12b9a7d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1c020fa-8286-49e4-8327-e9381b6e1429", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "cdf446c114b42542d727267b41f0ce486fc22b120f10bf5ba6d2990d698674ea", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nPrincipalement nous allons, gr\u00e2ce \u00e0 la ligne de commande, travailler sur les fichiers et les r\u00e9pertoires. Dans les syst\u00e8mes de type \"UNIX\" (par exemple GNU/Linux ou macOS), nous avons un syst\u00e8me de fichier en arborescence :\n\n!\n\nDans le sch\u00e9ma ci-dessus on trouve des r\u00e9pertoires (noms entour\u00e9s d'un rectangle, exemple : \"home\") et des fichiers (uniquement des noms \"grub.cfg\"). \u00c0 noter : les extensions des noms de fichiers, par exemple le \"cfg\" de \"grub.cfg\", ne sont pas obligatoires dans les syst\u00e8mes de type \"UNIX\", par exemple, \"bash\" est bien un nom de fichier et il n'a pas d'extension.\n\nOn parle d'arborescence, car ce syst\u00e8me de fichier ressemble \u00e0 un arbre \u00e0 l'envers.\n\nComme vous pouvez le constater, la base de l'arbre s'appelle la racine de l'arborescence et se repr\u00e9sente par un \"/\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f25401a-aaae-41f9-ab9a-59c2694e2086": {"__data__": {"id_": "3f25401a-aaae-41f9-ab9a-59c2694e2086", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c47c26c-8b54-4b4b-8b77-5148ed8a3783", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "763dde5a516b3d0803a5be239ee5be137cdd5ac63845251945b350902cbbacd9", "class_name": "RelatedNodeInfo"}}, "text": "b) chemin absolu ou chemin relatif ?\n\nPour indiquer la position d'un fichier (ou d'un r\u00e9pertoire) dans l'arborescence, il existe 2 m\u00e9thodes : indiquer un chemin absolu ou indiquer un chemin relatif. Le chemin absolu doit indiquer \"le chemin\" depuis la racine. Par exemple le chemin absolu du fichier fiche.ods sera : /home/elsa/documents/fiche.ods\n\nRemarquez que nous d\u00e9marrons bien de la racine / (attention les symboles de s\u00e9paration sont aussi des /)\n\nIl est possible d'indiquer le chemin non pas depuis la racine, mais depuis un r\u00e9pertoire quelconque, nous parlerons alors de chemin relatif :\n\nLe chemin relatif permettant d'acc\u00e9der au fichier \"photo_1.jpg\" depuis le r\u00e9pertoire \"max\" est : \"images/photo_vac/photo_1.jpg\"\n\nRemarquez l\u2019absence du / au d\u00e9but du chemin (c'est cela qui nous permettra de distinguer un chemin relatif et un chemin absolu).\n\nImaginons maintenant que nous d\u00e9sirions indiquer le chemin relatif pour acc\u00e9der au fichier \"gdbd_3.jpg\" depuis le r\u00e9pertoire \"photos_vac\".\n\nComment faire ?\n\nIl faut \"remonter\" d'un \"niveau\" dans l'arborescence pour se retrouver dans le r\u00e9pertoire \"images\" et ainsi pouvoir repartir vers la bonne \"branche\". Pour ce faire il faut utiliser 2 points : ..\n\n\"../ski/gdbd_3.jpg\"\n\nIl est tout \u00e0 fait possible de remonter de plusieurs \"crans\" : \"../../\" depuis le r\u00e9pertoire \"photos_vac\" permet de \"remonter\" dans le r\u00e9pertoire \"max\"\n\nComme d\u00e9j\u00e0 \u00e9voqu\u00e9 plus haut, les syst\u00e8mes de type \"UNIX\" sont des syst\u00e8mes \"multi-utilisateurs\" : chaque utilisateur poss\u00e8de son propre compte. Chaque utilisateur poss\u00e8de un r\u00e9pertoire \u00e0 son nom, ces r\u00e9pertoires personnels se situent traditionnellement dans le r\u00e9pertoire \"home\". Dans l'arborescence ci-dessus, nous avons 2 utilisateurs : \"max\" et \"elsa\". Par d\u00e9faut, quand un utilisateur ouvre une console, il se trouve dans son r\u00e9pertoire personnel. Dans l'image de la console ci-dessus, nous avons un *david@PC-Bureau ~ $* (au passage, on appelle cela \"l'invite de commande\"), le \"~\" (caract\u00e8re \"tilde\") signifie que l'on se trouve actuellement dans le r\u00e9pertoire personnel de l'utilisateur courant, autrement dit dans le r\u00e9pertoire de chemin absolu \"/home/david\" (puisque l'utilisateur courant est \"david\"). Le r\u00e9pertoire \"o\u00f9 l'on se trouve actuellement\" est appel\u00e9 \"r\u00e9pertoire courant\". L'invite de commande vous indique \u00e0 tout moment le r\u00e9pertoire courant : *david@PC-Bureau ~/Documents $* vous indique que vous \u00eates dans le r\u00e9pertoire \"Documents\" qui se trouve dans le r\u00e9pertoire \"david\" qui se trouve dans le r\u00e9pertoire \"home\" (chemin absolu : \"/home/david/Documents\")\n\nAttention : les syst\u00e8mes de type \"UNIX\" sont \"sensibles \u00e0 la casse\" (il faut diff\u00e9rencier les caract\u00e8res majuscules et les caract\u00e8res minuscules) : le r\u00e9pertoire \"Documents\" et le r\u00e9pertoire \"documents\" sont 2 r\u00e9pertoires diff\u00e9rents.\n\nIl est important de savoir que si le double point (\"../\") permet de remonter d'un cran dans l'arborescence, le simple point \"./\" repr\u00e9sente le r\u00e9pertoire courant. Si vous vous trouvez dans le r\u00e9pertoire \"home\" un \"./document\" repr\u00e9sente le r\u00e9pertoire \"document\" qui se trouve dans le r\u00e9pertoire \"home\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "449c5e4b-cd2c-451d-b6e8-2917cbc1e50f": {"__data__": {"id_": "449c5e4b-cd2c-451d-b6e8-2917cbc1e50f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1bb73b1a-cda6-455a-ad8a-2f578010801a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "855acfacac6c9626feb9724e78a134c3dd999854863a9f2334973956d836a6d0", "class_name": "RelatedNodeInfo"}}, "text": "3) les commandes pour manipuler les fichiers et les r\u00e9pertoires", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4926296a-f866-4f19-b62f-9fb369f82554": {"__data__": {"id_": "4926296a-f866-4f19-b62f-9fb369f82554", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d0c2095-e15b-4d8d-b67e-9896c5cb9aa0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "6ab1b905e59d02d56486df8cdca5c5f9db92715deed886a09857924baca1367f", "class_name": "RelatedNodeInfo"}}, "text": "a) la commande cd\n\nLa commande *cd* permet de changer le r\u00e9pertoire courant (cd => change directory). Il suffit d'indiquer le chemin (relatif ou absolu) qui permet d'atteindre le nouveau r\u00e9pertoire.\n\nPar exemple (en utilisant l'arborescence ci-dessous) :\n\n!\n\n- si le r\u00e9pertoire courant est le r\u00e9pertoire \"elsa\" et que vous \"voulez vous rendre\" dans le r\u00e9pertoire \"documents\", il faudra saisir la commande : *cd documents* (relatif) ou *cd /home/elsa/documents* (absolu)\n\n- si le r\u00e9pertoire courant est le r\u00e9pertoire *photos_vac* et que vous \"voulez vous rendre\" dans le r\u00e9pertoire *ski*, il faudra saisir la commande : *cd ../ski* (relatif) ou *cd /home/max/images/ski* (absolu)\n\n- si le r\u00e9pertoire courant est le r\u00e9pertoire *boulot* et que vous \"voulez vous rendre\" dans le r\u00e9pertoire *documents*, il faudra saisir la commande : *cd ..* (relatif) ou *cd /home/elsa/documents* (absolu)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 887, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0828bb43-d615-4bd4-8eeb-ab7522179810": {"__data__": {"id_": "0828bb43-d615-4bd4-8eeb-ab7522179810", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1750c214-104e-4e49-a173-004a91b8bb51", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "508f77c409b9ca33e44c62c2697118441cbf664d8385ce9f0693cfbfda479d5b", "class_name": "RelatedNodeInfo"}}, "text": "b) la commande ls\n\nLa commande *ls* permet de lister le contenu du r\u00e9pertoire courant.\n\n!\n\nDans l'exemple ci-dessus, depuis le r\u00e9pertoire personnel de l'utilisateur *david*, nous passons dans le r\u00e9pertoire *nsi* \u00e0 l'aide d'un *cd nsi*, puis nous affichons le contenu de ce r\u00e9pertoire *nsi* \u00e0 l'aide de la commande *ls*. Nous trouvons dans le r\u00e9pertoire *nsi* : 2 fichiers (*fiche1.odt* et *photo.jpg*) et un r\u00e9pertoire (*test*).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 430, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b75b2d1-201b-4b79-9425-837c876a9195": {"__data__": {"id_": "4b75b2d1-201b-4b79-9425-837c876a9195", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97756da4-76db-4204-9cc5-71c902c89778", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "cdb3e6cc6873a8694d375582ac249d08acb44a3a851e62ce390190750c3af7b2", "class_name": "RelatedNodeInfo"}}, "text": "c) la commande pwd\n\nLa commande pwd permet de connaitre le r\u00e9pertoire courant (permet d'afficher le chemin d'acc\u00e8s vers le r\u00e9pertoire courant depuis la racine)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3fbec9f1-6d8e-4999-8ec3-d104faabf16d": {"__data__": {"id_": "3fbec9f1-6d8e-4999-8ec3-d104faabf16d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee9365ba-696d-4275-a6d8-0ce50dcf6b0d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "353865fbc2754c0bd1004d2bb4238eb0dfdcd71446f4ac0b987aa138a4a00e6b", "class_name": "RelatedNodeInfo"}}, "text": "d) La commande mkdir\n\nLa commande *mkdir* permet de cr\u00e9er un r\u00e9pertoire dans le r\u00e9pertoire courant. La commande est de la forme *mkdir nom_du_r\u00e9pertoire*\n\n!\n\nRemarque : il est pr\u00e9f\u00e9rable de ne pas utiliser de caract\u00e8res accentu\u00e9s dans les noms de r\u00e9pertoire (ou de fichier). Il en est de m\u00eame pour les espaces (\u00e0 remplacer par des caract\u00e8res tirets bas \"_\")", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b5a14889-1737-4ce6-949f-f12d24177ddc": {"__data__": {"id_": "b5a14889-1737-4ce6-949f-f12d24177ddc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "553050df-d315-4936-b791-e4c41ade6f70", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "665f0f44c7371f03776c9d8a36b29ae35d3639858ae7da0f0e1a41ac85b6eede", "class_name": "RelatedNodeInfo"}}, "text": "e) La commande rm\n\nLa commande *rm* permet de supprimer un fichier ou un r\u00e9pertoire. La commande est de la forme *rm nom_du_r\u00e9pertoire_ou_nom_du_fichier*\n\n!\n\nLa plupart des commandes UNIX peuvent \u00eatre utilis\u00e9es avec une ou des options. Par exemple, pour supprimer un r\u00e9pertoire non vide, il est n\u00e9cessaire d'utiliser la commande *rm* avec l'option *-r* : *rm -r nom_du_r\u00e9pertoire*\n\n!\n\nEn fait l'option -r permet de supprimer un r\u00e9pertoire et ses sous r\u00e9pertoire.\n\n**ATTENTION** : cette commande est relativement \"dangereuse\", il faut donc la manipuler prudemment. Par exemple la commande *rm ** efface tous les fichiers du r\u00e9pertoire courant (le * signifie tous les fichiers et tous les r\u00e9pertoires). Pour effacer tous les fichiers et tous les r\u00e9pertoires pr\u00e9sents dans le r\u00e9pertoire courant il faut donc utiliser *rm -r **", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 825, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "624e68eb-7573-430c-ac06-5962416f5ac6": {"__data__": {"id_": "624e68eb-7573-430c-ac06-5962416f5ac6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4492473-0b26-4ed6-b032-3b5817a6675b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "bd4c8e62a025dc7be2728b8578e714052c86de07f8d4f90e49253eabffdc95f4", "class_name": "RelatedNodeInfo"}}, "text": "f) La commande touch\n\nLa commande *touch* permet de cr\u00e9er un fichier vide. La commande est de la forme *touch nom_du_fichier_\u00e0_cr\u00e9er*\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0294889e-4d0c-4f4f-abfc-d8227ac113df": {"__data__": {"id_": "0294889e-4d0c-4f4f-abfc-d8227ac113df", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "291530e8-6dc9-4a99-8f7a-bf24ee4ebaeb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c348bd0a91a658c7d568041a18a142551b69a8c3f6c755530ac35ce978a0787a", "class_name": "RelatedNodeInfo"}}, "text": "g) La commande cat\n\nLa commande *cat* permet d'afficher dans la console le contenu d'un fichier.\n\nSoit un fichier *toto.txt*. Si \u00e0 l'aide d'un \u00e9diteur de texte vous avez saisi *coucou* dans le fichier *toto.txt*, la commande *cat toto.txt* affichera *coucou* dans la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9549c964-88be-4cc1-8145-0bc33620a7d8": {"__data__": {"id_": "9549c964-88be-4cc1-8145-0bc33620a7d8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7205e833-bd83-4fe0-892b-a4787a7fc470", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ca596d8af4dac5793e3a1a1cd1e2d9bc42ab98f487fa3aa447ef0962ccdef72b", "class_name": "RelatedNodeInfo"}}, "text": "h) La commande cp\n\nLa commande *cp* permet de copier un fichier. La commande est de la forme *cp /r\u00e9pertoire_source/nom_fichier_\u00e0_copier /r\u00e9pertoire_destination/nom_fichier*\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a38390f7-e6f8-4866-b771-344787180c5f": {"__data__": {"id_": "a38390f7-e6f8-4866-b771-344787180c5f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c53eb518-f5eb-4b81-8552-ab282292d856", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "80bc9a91ea366c6a1ba6683e88526b17e035d046d050d3db7bab0a0e9686de83", "class_name": "RelatedNodeInfo"}}, "text": "i) La commande mv\n\nLa commande *mv* (move) permet de d\u00e9placer un fichier dans un dossier. Par exemple un *mv toto.txt titi* d\u00e9placera le fichier *toto.txt* dans le r\u00e9pertoire *titi* (attention on parle bien de d\u00e9placement pas de copie).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 238, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97972804-eb13-44ce-8982-68e1f7de1064": {"__data__": {"id_": "97972804-eb13-44ce-8982-68e1f7de1064", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcbeb604-6071-433e-8295-c20906b8dfc0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a37f6563ea2c287954e1b99b1039b2c1caef4013bab115b5c2d64a9018a0dddf", "class_name": "RelatedNodeInfo"}}, "text": "j) La commande man\n\nLa commande *man* permet d'obtenir la documentation d'une autre commande. Par exemple, *man ls* vous donnera la documentation de la commande *ls*.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a125b47d-60fa-45f5-9eda-55ea8cb6e80e": {"__data__": {"id_": "a125b47d-60fa-45f5-9eda-55ea8cb6e80e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87c85179-8032-41af-a1c6-4b8f57c92e9a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "48bdff50d3e3d67d5f2c5195134cef91af4422b2272a4253a60a66ae84fb7aa4", "class_name": "RelatedNodeInfo"}}, "text": "4) Gestion des utilisateurs et des groupes\n\nLes syst\u00e8mes de type \"UNIX\" sont des syst\u00e8mes multi-utilisateurs, plusieurs utilisateurs peuvent donc partager un m\u00eame ordinateur, chaque utilisateur poss\u00e9dant un environnement de travail qui lui est propre.\n\nChaque utilisateur poss\u00e8de certains droits lui permettant d'effectuer certaines op\u00e9rations et pas d'autres. Le syst\u00e8me d'exploitation permet de g\u00e9rer ces droits tr\u00e8s finement. Un utilisateur un peu particulier est autoris\u00e9 \u00e0 modifier tous les droits : ce \"super utilisateur\" est appel\u00e9 \"administrateur\" ou \"root\". L'administrateur pourra donc attribuer ou retirer des droits aux autres utilisateurs. Au lieu de g\u00e9rer les utilisateurs un par un, il est possible de cr\u00e9er des groupes d'utilisateurs. L'administrateur attribue des droits \u00e0 un groupe au lieu d'attribuer des droits particuliers \u00e0 chaque utilisateur.\n\nComme nous venons de le voir, chaque utilisateur poss\u00e8de des droits qui lui ont \u00e9t\u00e9 octroy\u00e9s par le \"super utilisateur\". Nous nous int\u00e9resserons ici uniquement aux droits li\u00e9s aux fichiers, mais vous devez savoir qu'il existe d'autres droits li\u00e9s aux autres \u00e9l\u00e9ments du syst\u00e8me d'exploitation ((imprimante, installation de logiciels...).\n\nLes fichiers et les r\u00e9pertoires poss\u00e8dent 3 types de droits :\n\n- les droits en lecture (symbolis\u00e9s par la lettre r) : est-il possible de lire le contenu de ce fichier\n\n- les droits en \u00e9criture (symbolis\u00e9s par la lettre w) : est-il possible de modifier le contenu de ce fichier\n\n- les droits en ex\u00e9cution (symbolis\u00e9s par la lettre x) : est-il possible d'ex\u00e9cuter le contenu de ce fichier (quand le fichier du code ex\u00e9cutable)\n\nIl existe 3 types d'utilisateurs pour un fichier ou un r\u00e9pertoire :\n\n- le propri\u00e9taire du fichier (par d\u00e9faut c'est la personne qui a cr\u00e9\u00e9 le fichier), il est symbolis\u00e9 par la lettre u\n\n- un fichier est associ\u00e9 \u00e0 un groupe, tous les utilisateurs appartenant \u00e0 ce groupe poss\u00e8dent des droits particuliers sur ce fichier. Le groupe est symbolis\u00e9 par la lettre g\n\n- tous les autres utilisateurs (ceux qui ne sont pas le propri\u00e9taire du fichier et qui n'appartiennent pas au groupe associ\u00e9 au fichier). Ces utilisateurs sont symbolis\u00e9s la lettre \"o\"\n\nIl est possible d'utiliser la commande *ls* avec l'option *-l* afin d'avoir des informations suppl\u00e9mentaires.\n\n!\n\nPrenons la premi\u00e8re ligne :\n\n```\n-rw-r--r-- 1 david david 0 avril 13 19:58 fic.txt\n```\n\nLisons cette ligne de gauche \u00e0 droite :\n\n- le premier symbole \"-\" signifie que l'on a affaire \u00e0 un fichier, dans le cas d'un r\u00e9pertoire, nous aurions un \"d\" (voir la 2e ligne)\n\n- les 3 symboles suivants \"rw-\"donnent les droits du propri\u00e9taire du fichier : lecture autoris\u00e9e (r), \u00e9criture autoris\u00e9e (w), ex\u00e9cution interdite (- \u00e0 la place de x)\n\n- les 3 symboles suivants \"r--\"donnent les droits du groupe li\u00e9 au fichier : lecture autoris\u00e9e (r), \u00e9criture interdite (- \u00e0 la place de w), ex\u00e9cution interdite (- \u00e0 la place de x)\n\n- les 3 symboles suivants \"r--\"donnent les droits des autres utilisateurs : lecture autoris\u00e9e (r), \u00e9criture interdite (- \u00e0 la place de w), ex\u00e9cution interdite (- \u00e0 la place de x)\n\n- le caract\u00e8re suivant \"1\" donne le nombre de liens (nous n'\u00e9tudierons pas cette notion ici)\n\n- le premier \"david\" repr\u00e9sente le nom du propri\u00e9taire du fichier\n\n- le second \"david\" repr\u00e9sente le nom du groupe li\u00e9 au fichier\n\n- le \"0\" repr\u00e9sente la taille du fichier en octet (ici notre fichier est vide)\n\n- \"avril 13 19:58\" donne la date et l'heure de la derni\u00e8re modification du fichier\n\n- \"fic.txt\" est le nom du fichier\n\nPrenons la deuxi\u00e8me ligne :\n\n```\ndrwxr-xr-x 2 david david 4096 avril 13 20:05 info\n```\n\nLisons cette ligne de gauche \u00e0 droite :\n\n- le premier symbole \"d\" signifie que l'on a un r\u00e9pertoire\n\n- les 3 symboles suivants \"rwx\"donnent les droits du propri\u00e9taire du r\u00e9pertoire : lecture du contenu du r\u00e9pertoire autoris\u00e9e (r), modification du contenu du r\u00e9pertoire autoris\u00e9e (w), il est possible de parcourir le r\u00e9pertoire (voir le contenu du r\u00e9pertoire) (x)\n\n- les 3 symboles suivants \"r-x\"donnent les droits du groupe li\u00e9 au r\u00e9pertoire : modification du contenu du r\u00e9pertoire interdite (- \u00e0 la place de w)\n\n- les 3 symboles suivants \"r-x\"donnent les droits des autres utilisateurs : modification du contenu du r\u00e9pertoire interdite (- \u00e0 la place de w)\n\n- le caract\u00e8re suivant \"2\" donne le nombre de liens (nous n'\u00e9tudierons pas cette notion ici)\n\n- le premier \"david\" repr\u00e9sente le nom du propri\u00e9taire du r\u00e9pertoire\n\n- le second \"david\" repr\u00e9sente le nom du groupe li\u00e9 au r\u00e9pertoire\n\n- le \"4096\" repr\u00e9sente la taille du r\u00e9pertoire en octets\n\n- \"avril 13 20:05\" donne la date et l'heure de la derni\u00e8re modification du contenu du r\u00e9pertoire\n\n- \"info\" est le nom du r\u00e9pertoire\n\nIl est important de ne pas perdre de vu que l'utilisateur *root* a la possibilit\u00e9 de modifier les droits de tous les utilisateurs.\n\nLe propri\u00e9taire d'un fichier peut modifier les permissions d'un fichier ou d'un r\u00e9pertoire \u00e0 l'aide de la commande *chmod*. Pour utiliser cette commande, il est n\u00e9cessaire de connaitre certains symboles :\n\n- les symboles li\u00e9s aux utilisateurs : \"u\" correspond au propri\u00e9taire, \"g\" correspond au groupe li\u00e9 au fichier (ou au r\u00e9pertoire), \"o\" correspond aux autres utilisateurs et \"a\" correspond \u00e0 \"tout le monde\" (permet de modifier \"u\", \"g\" et \"o\" en m\u00eame temps)\n\n- les symboles li\u00e9s \u00e0 l'ajout ou la suppression des permissions : \"+\" on ajoute une permission, \"-\" on supprime une permission, \"=\" les permissions sont r\u00e9initialis\u00e9es (permissions par d\u00e9faut)\n\n- les symboles li\u00e9s aux permissions : \"r\" : lecture, \"w\" : \u00e9criture, \"x\" : ex\u00e9cution.\n\nLa commande *chmod* \u00e0 cette forme :\n\n```\nchmod [u g o a] [+ - =] [r w x] nom_du_fichier\n```\n\npar exemple\n\n```\nchmod o+w toto.txt\n```\n\nattribuera la permission \"\u00e9criture\" pour le fichier \"toto.txt\" \"aux autres utilisateurs\"\n\nIl est possible de combiner les symboles :\n\n```\nchmod g-wx toto.txt\n```\n\nLa commande *chmod* ci-dessus permet de supprimer la permission \"\u00e9criture\" et la permission \"ex\u00e9cution\" pour le fichier *toto.txt* \"au groupe li\u00e9 au fichier\"\n\nUne fois de plus, \"root\" a tous les droits sur l'ensemble des fichiers et des r\u00e9pertoires, il peut donc utiliser la commande *chmod* sur tous les r\u00e9pertoires et tous les fichiers.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 6192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "155cf083-d77a-4e40-adea-f08398966d30": {"__data__": {"id_": "155cf083-d77a-4e40-adea-f08398966d30", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14r.md", "file_name": "c14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "93c54499-62a1-44b1-84ce-75c604d72dac", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14r.md", "file_name": "c14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8a534cad4b56bfbea24bf1a3865b397f13db928046fba9be6c05a43e22d2f419", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Linux (plus g\u00e9n\u00e9ralement les syst\u00e8mes de type Unix) propose un syst\u00e8me de fichier en arborescence.\n\n- Pour indiquer la position d'un fichier (ou d'un r\u00e9pertoire) dans l'arborescence, il existe\n2 m\u00e9thodes : indiquer un chemin absolu ou indiquer un chemin relatif (vous devez \u00eatre capable de donner un chemin relatif et un chemin absolu pour un fichier donn\u00e9 dans une arborescence donn\u00e9e)\n\n- Voici une liste de commandes Unix (donc utilisable sous Linux et macOS) que vous devez conna\u00eetre :\n\n\t- cd permet de changer le r\u00e9pertoire courant\n\n\t- ls permet de lister le contenu du r\u00e9pertoire courant\n\n\t- pwd permet de connaitre le r\u00e9pertoire courant\n\n\t- mkdir permet de cr\u00e9er un r\u00e9pertoire dans le r\u00e9pertoire courant\n\n\t- rm permet de supprimer un fichier ou un r\u00e9pertoire\n\n\t- touch permet de cr\u00e9er un fichier vide\n\n\t- cat permet d'afficher dans la console le contenu d'un fichier\n\n\t- cp permet de copier un fichier\n\n\t- mv permet de d\u00e9placer un fichier\n\n\t- man permet d'obtenir la documentation d'une autre commande\n\n- Les syst\u00e8mes de type \"UNIX\" sont des syst\u00e8mes multi-utilisateurs, plusieurs utilisateurs peuvent donc partager un m\u00eame ordinateur, chaque utilisateur poss\u00e9dant un environnement de travail qui lui est propre. Chaque utilisateur poss\u00e8de certains\ndroits lui permettant d'effectuer certaines op\u00e9rations et pas d'autres.\n\n- Un utilisateur un peu particulier est autoris\u00e9 \u00e0 modifier tous les droits : ce \"super utilisateur\" est appel\u00e9 \"administrateur\" ou \"root\". L'administrateur pourra donc attribuer ou retirer des droits aux autres utilisateurs.\n\n- Au lieu de g\u00e9rer les utilisateurs un par un, il est possible de cr\u00e9er des groupes d'utilisateurs. L'administrateur attribue des droits \u00e0 un groupe au lieu d'attribuer des droits particuliers \u00e0 chaque utilisateur.\n\n- Les fichiers et les r\u00e9pertoires poss\u00e8dent 3 types de droits :\n\n\t- les droits en lecture (symbolis\u00e9s par la lettre r) : est-il possible de lire le contenu de ce fichier ?\n\n\t- les droits en \u00e9criture (symbolis\u00e9s par la lettre w) : est-il possible de modifier le contenu de ce fichier ?\n\n\t- les droits en ex\u00e9cution (symbolis\u00e9s par la lettre x) : est-il possible d'ex\u00e9cuter le contenu de ce fichier (quand le fichier du code ex\u00e9cutable) ?\n\n- Il existe 3 types d'utilisateurs pour un fichier ou un r\u00e9pertoire :\n\n\t- le propri\u00e9taire du fichier (par d\u00e9faut c'est la personne qui a cr\u00e9\u00e9 le fichier), il est symbolis\u00e9 par la lettre u\n\n\t- un fichier est associ\u00e9 \u00e0 un groupe, tous les utilisateurs appartenant \u00e0 ce groupe poss\u00e8dent des droits particuliers sur ce fichier. Le groupe est\nsymbolis\u00e9 par la lettre g\n\n\t- tous les autres utilisateurs (ceux qui ne sont pas le propri\u00e9taire du fichier et qui n'appartiennent pas au groupe associ\u00e9 au fichier). Ces utilisateurs sont symbolis\u00e9s la lettre \"o\"\n\n- Le propri\u00e9taire d'un fichier (ou root) peut modifier les permissions d'un fichier ou d'un r\u00e9pertoire \u00e0 l'aide de la commande chmod", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2918, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9b47b93-1202-48d8-9c55-df2fa79fbdad": {"__data__": {"id_": "d9b47b93-1202-48d8-9c55-df2fa79fbdad", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14r.md", "file_name": "c14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ca4e96ba-c36e-4b62-97a2-b719958d84e7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14r.md", "file_name": "c14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4d5b3cb2fd9e8ff6f7706361be6e9be6936b70775a9c2defd8b23e8a63f5e647", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nVous devez \u00eatre capable d\u2019utiliser toutes les commandes list\u00e9es ci-dessus (y compris chmod)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf711582-d4df-43a7-a896-a620b2ec1f43": {"__data__": {"id_": "cf711582-d4df-43a7-a896-a620b2ec1f43", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9644c6ff-8fd1-4e1a-bcb1-de9def566b54", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e8b166774afcc654370bc6f852b6013c8b9b48ad133c5a247cfc1cf0ae4ecde5", "class_name": "RelatedNodeInfo"}}, "text": "Activit\u00e9 15.1\n\nNous allons \u00e9crire quelques programmes en langage C, mais afin de faciliter cette premi\u00e8re approche, nous n'allons pas directement manipuler un compilateur, nous allons utiliser un \"service en ligne qui s'occupe de tout\" (compilation puis ex\u00e9cution du code machine) : Online C compiler, Online C IDE\n\nTestez le programme C suivant :\n\n```c\n#include \n\nint main(void) {\n\tprintf(\"Hello C\\n\");\n\treturn 0;\n}\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 422, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "095a2dc6-8e97-4c39-aa81-3e9a6de07f9f": {"__data__": {"id_": "095a2dc6-8e97-4c39-aa81-3e9a6de07f9f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "56e1dbf3-6855-47b3-9cba-4d3d76a0192e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3b2b71d2482e3b2fd22bee454993be0e0a94124f4afec7db6f91a98fc3b41042", "class_name": "RelatedNodeInfo"}}, "text": "Activit\u00e9 15.2\n\n\u00c9crivez en C une fonction *estMajeur* qui prend en param\u00e8tre un *age* et qui renvoie 1 si *age* est sup\u00e9rieure ou \u00e9gal \u00e0 18 et 0 dans le cas contraire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "511432c2-f64e-4e24-a36f-685fe05ecf63": {"__data__": {"id_": "511432c2-f64e-4e24-a36f-685fe05ecf63", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd194c5a-5a2d-4c69-8715-458de16bc5ae", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c30b1a4c9854fedcd0a23212a9abdd736703d0ca41197c0a575800ad84ed29ea", "class_name": "RelatedNodeInfo"}}, "text": "Activit\u00e9 15.3\n\nVous \u00eates g\u00e9rant d'un magasin et vous d\u00e9sirez \u00e9crire un programme C qui calculera automatiquement le montant de la facture des clients. Tout client qui ach\u00e8te au moins 5 fois le m\u00eame article se voit octroyer une remise de 5 % (uniquement sur le montant de l'achat de cet article). Afin de simplifier le probl\u00e8me, on consid\u00e8re qu'un client n'ach\u00e8te qu'un seul type d'article. \u00c9crivez une fonction *facture* qui prend en param\u00e8tre le prix unitaire de l'article et le nombre d'articles achet\u00e9s. Cette fonction doit renvoyer le montant de la facture.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 563, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93a5a1e2-a970-4ead-b3e5-35cbb0bd3d02": {"__data__": {"id_": "93a5a1e2-a970-4ead-b3e5-35cbb0bd3d02", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8c955ea-ef68-4674-abe4-cd2be86f3fbf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4db33bd2daf585044653101bf61f472aea63ae4c452a82262cc16e8d0fc2e796", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 15.4\n\nLa fonction *distance* prend en param\u00e8tres 2 points et renvoie la distance entre ces 2 points :\n\n```python\nfrom math import sqrt\n\ndef distance(point1, point2):\n    return sqrt((point1[0]-point2[0])**2 + (point1[1]-point2[1])**2)\n```\n\nProposez une s\u00e9rie de tests unitaires pour la fonction *distance* (on utilisera des assertions)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 346, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4b29faf-0701-4e52-a764-412397533a70": {"__data__": {"id_": "d4b29faf-0701-4e52-a764-412397533a70", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57d78170-c1c4-490d-977c-97c2a2931e9f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0749edcc6cc4d205075707058cf45195ec10f051d8ae8e2b3d92b698c35d7420", "class_name": "RelatedNodeInfo"}}, "text": "1) Il n'y a pas que Python dans la vie !", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 42, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1bc8f3d-e902-41be-bca8-10d1d61b0756": {"__data__": {"id_": "e1bc8f3d-e902-41be-bca8-10d1d61b0756", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a83d90d-f264-43a5-9453-b22359d49cc4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "65f5d0ca663985bbc326df857a5fda8ce02d95d025bd2cfd29623a5a93161c82", "class_name": "RelatedNodeInfo"}}, "text": "a) Pr\u00e9sentation du langage C\n\n\nJusqu'\u00e0 pr\u00e9sent, nous avons surtout utilis\u00e9 le langage de programmation Python. Il existe beaucoup d'autres langages de programmation : Java, C++, Ruby, PHP, JavaScript... Tous ces langages sont diff\u00e9rents, mais ils ont aussi des points communs, on peut m\u00eame dire qu'ils ont plus de points communs que de diff\u00e9rences. Afin d'entrer un peu dans les d\u00e9tails, nous allons nous int\u00e9resser \u00e0 un langage qui tient une place \u00e0 part dans l'histoire de l'informatique, le langage C. Le but n'est pas de faire de vous des \"programmeurs C\", mais de vous montrer que m\u00eame si le langage Python et le langage C ont des diff\u00e9rences, ils ont aussi de nombreux points communs.\n\nLe langage C a \u00e9t\u00e9 cr\u00e9\u00e9 par Dennis Ritchie (1941-2011) et Ken Thompson (1943- ) en 1972 (oui, les m\u00eames Ritchie et Thompson qu'UNIX). Le langage C est une \u00e9volution du langage B (langage B a \u00e9t\u00e9 cr\u00e9\u00e9 par Ken Thompson \u00e0 la fin des ann\u00e9es 60). Le langage C est encore tr\u00e8s utilis\u00e9 aujourd'hui (dans le top 10 des langages de programmation les plus utilis\u00e9s), par exemple, le noyau du syst\u00e8me d'exploitation Linux est \u00e9crit en C. Tout informaticien qui se respecte doit avoir, un jour ou l'autre (au moins pendant ses \u00e9tudes), \u00e9crit des programmes en C.\n\nKen Thompson et Dennis Ritchie :\n\n!\n\n\nLe C est un langage compil\u00e9, c'est-\u00e0-dire qu'un programme appel\u00e9 \"compilateur\" transforme le code source (le code \u00e9crit par le programmeur) en langage machine. Cette op\u00e9ration, appel\u00e9e \"compilation\", doit \u00eatre effectu\u00e9e \u00e0 chaque fois que le programmeur modifie le code source, cette phase de compilation peut prendre des dizaines de minutes pour de tr\u00e8s gros programmes. Il existe une autre m\u00e9thode pour passer du code source au langage machine : l'interpr\u00e9tation. En simplifiant \u00e0 l'extr\u00eame, l'interpr\u00e9teur assure une traduction \"\u00e0 la vol\u00e9e\" des instructions. (une ligne est traduite en langage machine puis imm\u00e9diatement ex\u00e9cut\u00e9e), alors que dans le cas de la compilation l'ensemble du code source est transform\u00e9 en langage machine avant le d\u00e9but de l'ex\u00e9cution du programme. Les langages compil\u00e9s (comme le langage C) sont r\u00e9put\u00e9s plus rapides \u00e0 l'ex\u00e9cution que les langages interpr\u00e9t\u00e9s. Il existe une troisi\u00e8me voie qui a le vent en poupe : le code source est compil\u00e9 en pseudocode (appel\u00e9 bytecode) qui n'est pas encore du langage machine, mais s'en rapproche par rapport au code source de d\u00e9part. Ce bytecode est ensuite interpr\u00e9t\u00e9 (l'interpr\u00e9tation est beaucoup plus rapide que pour des langages 100% interpr\u00e9t\u00e9s). Python utilise cette technique.\n\nVoici un programme (tr\u00e8s simple) \u00e9crit en C :\n\n```c\n#include \n\nint main(void) {\n\tprintf(\"Hello World\\n\");\n\treturn 0;\n}\n```\n\nLa premi\u00e8re ligne du programme :\n\n```c\n#include \n```\n\nn'est pas une instruction \u00e0 proprement parl\u00e9, c'est une \"directives de pr\u00e9processeur\", cette ligne est lue au d\u00e9but de la phase de compilation. Nous aurons l'occasion de revenir sur cette ligne plus tard, pour le moment, vous devez juste savoir que cette ligne est obligatoire si vous voulez utiliser \"printf\" (voir quelques lignes plus loin).\n\nLe programme commence r\u00e9ellement avec la ligne :\n\n```c\nint main(void) {\n```\n\nNous avons ici une fonction (\u00e9quivalent \u00e0 un \"def main():\" en Python), comme vous l'avez sans doute d\u00e9j\u00e0 compris, tout le code compris entre l'accolade ouvrante \"{\" et l'accolade fermante \"}\" constitue la fonction nomm\u00e9e \"main\". Voici donc une premi\u00e8re diff\u00e9rence avec Python, le code constituant une fonction n'est pas d\u00e9fini gr\u00e2ce \u00e0 une indentation, mais gr\u00e2ce \u00e0 des accolades (vous remarquerez que l'on utilise tout de m\u00eame une indentation, mais cette derni\u00e8re n'est pas obligatoire en C mais seulement fortement conseill\u00e9e afin de rendre le code plus lisible).\n\nLe \"int\" situ\u00e9 avant le nom de la fonction (\"main\" dans cet exemple), signifie que la fonction doit renvoyer un entier. Le \"void\" situ\u00e9 entre parenth\u00e8ses signifie que notre fonction ne prend aucun param\u00e8tre. Nous aurons l'occasion de revenir sur ce \"int\" et ce \"void\" un peu plus loin.\n\nLa ligne :\n\n```c\nprintf(\"Hello World\\n\");\n```\n\npermet d'afficher le message \"Hello World\" dans la console (le \"\\n\" permet de passer \u00e0 la ligne suivante).\n\nLe\n\n```c\nreturn 0;\n```\n\npermet de renvoyer l'entier 0. Pourquoi renvoie-t-on 0 ? Tout simplement pour signifier que la fonction \"main\" a bien \u00e9t\u00e9 ex\u00e9cut\u00e9e jusqu'au bout. Si cette fonction renvoie autre chose que 0 cela signifiera qu'il y a eu un probl\u00e8me lors de l'ex\u00e9cution de cette derni\u00e8re.\n\nVous avez d\u00fb remarquer que la plupart des lignes se terminent par un point-virgule. Ce point virgule indique au compilateur que la ligne est termin\u00e9e, il est obligatoire.\n\nSi on omet un point virgule comme ici :\n\n```c\n#include \n\nint main(void) {\n\tprintf(\"Hello World\\n\")\n\treturn 0;\n}\n```\n\nOn aura une erreur durant la phase de compilation :\n\n```\nexit status 1\nmain.c:4:24: error: expected ';' after expression\nprintf(\"Hello World\\n\")\n                       ^\n                       ;\n1 error generated.\n```\n\nLa premi\u00e8re ligne (\"exit status 1\") vous indique que la fonction \"main\" n'a pas renvoy\u00e9e l'entier 0 : il y a donc eu un probl\u00e8me lors de la compilation.\n\nLe message d'erreur qui suit est tr\u00e8s explicite puisqu'il indique clairement qu'il manque un point-virgule \u00e0 la fin de la ligne *printf(\"Hello World\\n\")*\n\nLe programme Python permettant d'obtenir le m\u00eame r\u00e9sultat que le programme ci-dessus est tr\u00e8s simple puisqu'il est constitu\u00e9 d'une seule ligne :\n\n```c\nprint(\"Hello World\")\n```\n\nEn C, c'est un petit plus complexe, car la fonction \"main\" est obligatoire. En effet, au moment de l'ex\u00e9cution du programme, le syst\u00e8me recherche la fonction \"main\" afin d'ex\u00e9cuter les instructions qui se trouvent \"\u00e0 l'int\u00e9rieur\" de cette fonction (le nom \"main\" est obligatoire).\n\nIl est bien s\u00fbr possible d'utiliser des variables en C :\n\n```c\n#include \n\nint main(void) {\n\tint i;\n\ti=15;\n\tprintf(\"La valeur de i est %d\\n\",i);\n\treturn 0;\n}\n```\n\nVoici le programme \u00e9quivalent en Python :\n\n```python\ni=15\nprint(f\"La valeur de i est {i}\")\n```\n\nDans le programme en C, on s'attardera particuli\u00e8rement sur la ligne :\n\n```c\nint i;\n```\n\nCette ligne permet de d\u00e9clarer la variable *i* et de pr\u00e9ciser que cette variable \"i\" \"contiendra\" un nombre de type entier (cette variable sera de type entier). En C, cette d\u00e9claration est obligatoire, afin de, au moment de la compilation, r\u00e9server la place n\u00e9cessaire en m\u00e9moire pour la valeur de la variable *i*. Dans notre cas, le compilateur r\u00e9servera pour *i*, une certaine quantit\u00e9 de m\u00e9moire (la quantit\u00e9 de m\u00e9moire n\u00e9cessaire pour \"accueillir\" un entier).\n\nIl existe d'autres types de variables en C : \"long\", \"float\", \"char\"... mais, encore une fois, notre but n'\u00e9tant pas d'apprendre \u00e0 programmer en C, nous en resterons l\u00e0.\n\nEn Python les variables ont aussi un type, mais le typage est dit dynamique : une variable peut changer de type au cours de l'ex\u00e9cution d'un programme, il n'est donc pas n\u00e9cessaire de d\u00e9clarer le type d'une variable en Python (le syst\u00e8me s'occupe de d\u00e9finir le type d'une variable par lui-m\u00eame).\n\nInt\u00e9ressons-nous maintenant aux boucles en C :\n\n```c\n#include \n\nint main(void) {\n\tint i;\n\ti=0;\n\twhile (i<10){\n\t    printf(\"La valeur de i est %d\\n\",i);\n\t    i=i+1;\n\t}\n\treturn 0;\n}\n```\n\nvoici le programme \u00e9quivalent en Python :\n\n```python\ni=0\nwhile i<10:\n    print(f\"La valeur de i est {i}\")\n    i=i+1\n```\n\nComme vous pouvez le constater, les 2 programmes diff\u00e8rent peu, on retrouve les accolades qui d\u00e9finissent le d\u00e9but et la fin de la boucle.\n\nLes conditions en C :\n\n```c\n#include \n\nint main(void) {\n\tint i;\n\ti=19;\n\tif (i<18){\n\t    printf(\"Vous \u00eates mineur\");\n\t}\n\telse {\n\t    printf(\"Vous \u00eates majeur\");\n\t}\n\treturn 0;\n}\n```\n\nEncore quelques diff\u00e9rences avec le m\u00eame programme en Python, mais rien de tr\u00e8s complexe.\n\nNous avons d\u00e9j\u00e0 eu l'occasion de parler des fonctions en C avec la fonction \"main\", il est bien \u00e9videmment possible d'\u00e9crire d'autres fonctions en C :\n\nvoici un programme Python qui utilise une fonction :\n\n```python\ndef somme(x,y):\n    s=x+y\n    return s\na=5\nb=4\nres=somme(a,b)\nprint(f\"La somme de {a} et de {b} vaut {res}\")\n```\n\net voici l'\u00e9quivalent en C :\n\n```c\n#include \n\nint somme(int x, int y){\n\tint s;\n\ts=x+y;\n\treturn s;\n}\n\nint main(void) {\n\tint res;\n\tint a;\n\tint b;\n\ta=5;\n\tb=4;\n\tres=somme(a,b);\n\tprintf(\"La somme de %d et de %d vaut %d\\n\",a,b,res);\n\treturn 0;\n}\n```\n\nNous constatons comme pour la fonction \"main\" qu'il est n\u00e9cessaire d'indiquer le type de la valeur renvoy\u00e9e par la fonction (ici \"int\" car notre fonction \"somme\" renvoie bien un entier). \u00c0 la diff\u00e9rence de notre fonction \"main\", la fonction \"somme\" prend deux param\u00e8tres : x et y (tous les deux de type entier). Il est n\u00e9cessaire d'indiquer le type des param\u00e8tres, ici \"int\" pour x et y. Si vous omettez le type d'un param\u00e8tre, vous aurez le droit \u00e0 une erreur au moment de la compilation.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 8780, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad296553-f91f-4278-b5ce-801f637dcafa": {"__data__": {"id_": "ad296553-f91f-4278-b5ce-801f637dcafa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7388c529-e104-464d-bab4-cbbb41a71081", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "27c4e69f816ad54e9fbd6e991f890b926eee48e6eee96f24b0132c00931e5bd9", "class_name": "RelatedNodeInfo"}}, "text": "b) Prototype d'une fonction\n\nVous avez sans doute remarqu\u00e9 que la fonction \"somme\" du programme ci-dessus se trouve dans le code avant la fonction \"main\", si vous placez la fonction \"somme\" apr\u00e8s la fonction \"main\" cela ne fonctionnera pas, car le compilateur ne \"comprendra\" pas la ligne \"res=somme(a,b);\", en effet \u00e0 ce stade le compilateur n'aura pas encore \"rencontr\u00e9\" une fonction d\u00e9nomm\u00e9e \"somme\". Cependant, il est tout de m\u00eame possible de placer la fonction \"somme\" apr\u00e8s la fonction \"main\" \u00e0 condition de fournir au compilateur le prototype de la fonction \"somme\". Le prototype d'une fonction permet \"d'annoncer\" au compilateur qu'une fonction X renvoyant une valeur d'un certain type et qui poss\u00e8de un (ou des) param\u00e8tre(s) d'un certain type va \u00eatre d\u00e9finie \"un peu plus loin\" dans le programme.\n\nN.B : certains compilateurs C ne renvoient pas d'erreur dans la situation d\u00e9crite ci-dessus, juste un avertissement (\"warning\")\n\nPour \u00e9viter les erreurs (et les \"warning\"), il faut \u00e9crire :\n\n```c\n#include \n\nint somme(int x, int y);\n\nint main(void) {\n\tint res;\n\tint a;\n\tint b;\n\ta=5;\n\tb=4;\n\tres=somme(a,b);\n\tprintf(\"La somme de %d et de %d vaut %d\\n\",a,b,res);\n\treturn 0;\n}\nint somme(int x, int y){\n\tint s;\n\ts=x+y;\n\treturn s;\n}\n```\n\nLa ligne\n\n```c\nint somme(int x, int y);\n```\n\ncorrespond au prototype de la fonction \"somme\". \u00c0 noter qu'il est aussi possible d'omettre les noms des param\u00e8tres au niveau du prototype et d'uniquement indiquer le type des arguments : \"int somme(int, int);\"\n\nL'utilisation des prototypes est une \"bonne pratique\" de programmation, il est donc tr\u00e8s vivement recommand\u00e9 d'utiliser les prototypes en C.\n\nQuand les programmes C comportent de nombreuses fonctions, il est judicieux de placer les prototypes des fonctions dans un fichier \u00e0 part. Ces fichiers portent l'extension \"h\" (exemple : \"stdio.h\"), ils sont appel\u00e9s \"header\" (\"en t\u00eate\" en fran\u00e7ais). Le \"#include \" indique au compilateur qu'il doit inclure dans le fichier courant les prototypes se trouvant dans le fichier \"stdio.h\". Dans nos exemples, nous utilisons la fonction syst\u00e8me \"printf\", le fichier \"stdio.h\" contient le prototype de cette fonction \"printf\", d'o\u00f9 le \"#include \" pr\u00e9sent dans tous les exemples.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2209, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5df1b0b9-99c8-49c7-ae62-6b790accf847": {"__data__": {"id_": "5df1b0b9-99c8-49c7-ae62-6b790accf847", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e38e8e51-64e9-4299-9ce5-cd1caf7e1640", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bba79a8ec58b5b31892ff90c1005220f47603b2099fc111f905ba44eb1f34cd0", "class_name": "RelatedNodeInfo"}}, "text": "2) d\u00e9bogage d'un programme", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 28, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "727c6b32-f33a-4d08-8bb1-f41cb2d548f0": {"__data__": {"id_": "727c6b32-f33a-4d08-8bb1-f41cb2d548f0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "81be80d5-998f-41d9-ab6a-ee3fab82376d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "42a2ce73ab2d8e20b10cad557a7c25ba1865cad2afdc6b1271e21e4c2c2724ed", "class_name": "RelatedNodeInfo"}}, "text": "a) Python trop \"laxiste\" ?\n\nOn pourrait penser que toutes les contraintes impos\u00e9es par le C par rapport au Python (indiquer le type des variables, le type des param\u00e8tres d'une fonction, le type de la valeur renvoy\u00e9e par une fonction) est un handicape pour le programmeur. En fait, pas du tout, car ces exigences obligent le programmeur \u00e0 une plus grande rigueur et permettent de d\u00e9tecter beaucoup plus facilement certaines erreurs. Certains programmeurs n'aiment pas programmer en Python parce qu'ils le trouvent trop \"laxiste\" avec le type des variables.\n\nPrenons un exemple avec la  fonction Python suivante :\n\n```python\ndef somme(x,y):\n  s=x+y\n  return s\n```\n\nSi on utilise cette fonction avec les arguments 2 et 5, aucun probl\u00e8me la fonction renvoie bien 7.\n\nEn revanche, si on ex\u00e9cute cette fonction avec les arguments \"2\" et \"5\" (chaines  de caract\u00e8re \u00e0 la  place des entiers), la fonction renvoie la cha\u00eene de caract\u00e8res \"25\", ce qui est logique (le signe + est aussi le signe de concat\u00e9nation), mais cela peut poser d'\u00e9normes probl\u00e8mes dans un programme : le concepteur du programme a \"pens\u00e9\" la fonction \"somme\" comme une fonction qui renvoie la somme de 2 nombres et pas comme une fonction qui renvoie la concat\u00e9nation de 2 cha\u00eenes de caract\u00e8res. Le gros probl\u00e8me est que Python ne renvoie aucun avertissement, aucune erreur. Le programmeur n'aura aucun moyen de savoir que sa fonction \"somme\" a \u00e9t\u00e9 \"mal\" utilis\u00e9e et qu'elle ne renvoie pas du tout le r\u00e9sultat attendu.\n\nSi maintenant nous \u00e9crivons le m\u00eame programme en C :\n\n```c\n#include \n\nint somme(int x, int y);\n\nint main(void) {\n  int res;\n  res=somme(2,5);\n  printf(\"La somme vaut %d\\n\",res);\n  return 0;\n}\nint somme(int x, int y){\n  int s;\n  s=x+y;\n  return s;\n}\n```\n\nCe programme fonctionne parfaitement\n\nSi maintenant nous \u00e9crivons  : \n\n```c\n#include \n\nint somme(int x, int y);\n\nint main(void) {\n  int res;\n  res=somme(\"2\",\"5\");\n  printf(\"La somme vaut %d\\n\",res);\n  return 0;\n}\nint somme(int x, int y){\n  int s;\n  s=x+y;\n  return s;\n}\n```\n\nLe programme \"fonctionne\", on obtient d'ailleurs un r\u00e9sultat totalement inattendu : *La somme vaut 8391658*.\n\nMais le plus important n'est pas l\u00e0, le compilateur nous informe aussi de certains probl\u00e8mes :\n\n!\n\nSans trop entrer dans les d\u00e9tails, le compilateur nous informe qu'il attend des entiers pour les param\u00e8tres de la fonction \"somme\" et que nous lui fournissons des caract\u00e8res.\n\nLe programmeur est donc averti du probl\u00e8me, il pourra donc prendre les mesures qui s'imposent pour le r\u00e9soudre.\n\n\u00c9videmment le compilateur a pu informer le programmeur du probl\u00e8me parce que le prototype de la fonction pr\u00e9cise que les param\u00e8tres attendus sont des entiers. Ce qui, au d\u00e9part, aurait pu paraitre comme une contrainte inutile peut rendre de grand service au programmeur au cours du d\u00e9bogage du programme, alors qu'en Python, l'erreur pourrait passer inaper\u00e7ue.\n\nIl existe un moyen en Python d'\u00e9viter ce genre de probl\u00e8me : l'utilisation des assertions.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2962, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f70d7963-5dec-44a6-a4e6-6e00bf780324": {"__data__": {"id_": "f70d7963-5dec-44a6-a4e6-6e00bf780324", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "abdef5d3-428e-4fea-9fd7-4cdc545d6279", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "82e41419ce5ae0117adb512dac4db81df20db31ea4bcd63c3c495d3e802bd56d", "class_name": "RelatedNodeInfo"}}, "text": "b) les assertions en Python\n\nConsid\u00e9rons la fonction suivante :\n\n```python\ndef somme(x,y):\n  assert isinstance(x,int) \n  assert isinstance(y,int) \n  s=x+y\n  return s\n```\n\nSi nous testons cette fonction avec les 2 appels suivants :\n\n- *somme(2,5)*\n\n- *somme(\"2\",\"5\")*\n\nNous pouvons constater que dans le premier cas, tout se passe normalement :\n\n!\n\nDans le second cas (*somme(\"2\",\"5\")*), nous obtenons le r\u00e9sultat suivant :\n\n!\n\n*isinstance* permet de v\u00e9rifier le type d'une variable, dans l'exemple ci-dessus *isinstance(x,int)* renvoie True si x est de type entier (int) et False si x n'est pas de type entier. Si ce qui se trouve juste apr\u00e8s le mot-cl\u00e9 *assert* est False, le syst\u00e8me l\u00e8ve une exception et le programme s'arr\u00eate. En r\u00e9sum\u00e9, le *assert isinstance(x,int)* permet de lever une exception si la variable x n'est pas de type entier.\n\nCes assertions permettent de pallier, au moins en partie, aux insuffisances de Python en termes de typage des param\u00e8tres d'une fonction (donner le type des param\u00e8tres d'une fonction).\n\nL'exemple donn\u00e9 ici est volontairement tr\u00e8s simple (voire m\u00eame simpliste), mais ce genre de probl\u00e8mes peut se poser dans des programmes extr\u00eamement complexes, ou parfois, il peut se passer des choses inexplicables, tr\u00e8s difficiles \u00e0 comprendre, durant l'ex\u00e9cution. Alors que les erreurs qui entrainent ces comportements erratiques auraient \u00e9t\u00e9 facilement identifi\u00e9es si une exception avait \u00e9t\u00e9 lev\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34811b98-a69b-4cbb-beb5-186349c293fc": {"__data__": {"id_": "34811b98-a69b-4cbb-beb5-186349c293fc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37aed677-e086-4271-904b-a606a0dcb7aa", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5d50a9e6837612360a152ca92f9912197ce62908f04abc4d93a5aa86667981d4", "class_name": "RelatedNodeInfo"}}, "text": "c) Tester ses programmes en Python\n\nLes assertions vues ci-dessus  vont aussi nous permettre de tester nos fonctions. Par tester, j'entends : \"v\u00e9rifier que la fonction renvoie bien la valeur attendue\".\n\nPrenons tout de suite un exemple avec notre fonction *somme* :\n\n```python\ndef somme(x,y):\n  s=x+y\n  return s\n```\n\nNous pouvons mettre en place des tests pour cette fonction (on parle de \"tests unitaires\") \u00e0 l'aide d'assertions :\n\n```python\ndef somme(x,y):\n  s=x+y\n  return s\n  \nassert somme(5,2)==7\nassert somme(0,0)==0\nassert somme(5,-2)==3\nassert somme(-5,2)==-3\nassert somme(-5,-2)==-7\n```\n\nNous avons mis en place 5 tests :\n\n- nous allons tester que *somme(5,2)* renvoie bien 7\n\n- nous allons tester que *somme(0,0)* renvoie bien 0\n\n- nous allons tester que *somme(5,-2)* renvoie bien 3\n\n- nous allons tester que *somme(-5,2)* renvoie bien -3\n\n- nous allons tester que *somme(-5,-2)* renvoie bien -7\n\nIl ne faut pas perdre de vue que *assert* prend  en param\u00e8tre une expression qui renvoie donc True ou False. Si l'expression renvoie False, une exception est lev\u00e9e et le d\u00e9veloppeur sait alors que sa fonction n'a pas pass\u00e9 au moins un des tests, il y a donc un probl\u00e8me.\n\nIl est possible de personnaliser le message d'erreur que l'on souhaite afficher en cas d'\u00e9chec au test :\n\n```python\nassert somme(5,2)==7, \"erreur de calcul\"\n``` \n\nIl est \u00e9videmment impossible de tester tous les cas possibles, il est donc n\u00e9cessaire de choisir judicieusement les tests \u00e0 effectuer (le choix des tests est souvent une partie d\u00e9licate du d\u00e9veloppement d'une fonction)\n\nAttention, les tests unitaires n'apportent pas la preuve qu'une fonction est correcte (il se peut tr\u00e8s bien que le d\u00e9veloppeur ait \"oubli\u00e9\" un cas critique), pour obtenir une v\u00e9ritable preuve de correction (au sens math\u00e9matique du terme), il  faut utiliser des outils bien plus \u00e9labor\u00e9s.\n\nLa mise en place de tests unitaires est une \u00e9tape fondamentale dans le d\u00e9veloppement d'un logiciel, il est tr\u00e8s important de ne surtout pas la n\u00e9gliger.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a094a8a5-4672-494e-bf7d-efd7ab21efb1": {"__data__": {"id_": "a094a8a5-4672-494e-bf7d-efd7ab21efb1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15r.md", "file_name": "c15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1c94b78-69d1-40ad-96e0-6ec94387783c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15r.md", "file_name": "c15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8c69d0ac39364a651628b759ba0e3e7cc9323431b74e57a5efd7d0f351c36f99", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Python est tr\u00e8s loin d\u2019\u00eatre le seul langage de programmation, voici une liste non exhaustive des langages de programmation : Java, C, C++, JavaScript, PHP, Go, Rust, OCaml\u2026\n\n- Il existe quelques diff\u00e9rences entre ces diff\u00e9rents langages de programmation, mais il existe aussi beaucoup de points communs\n\n- Donner le prototype d\u2019une fonction consiste \u00e0 donner le type des param\u00e8tres de la fonction (entier, cha\u00eene de caract\u00e8res\u2026) et le type de la valeur renvoy\u00e9e par cette\nfonction (exemple de prototype d\u2019une fonction en C : int somme(int x, int y); => la fonction somme prendra 2 entiers en param\u00e8tres (x et y) et devra renvoyer un entier)\n\n- Dans certains langages (par exemple Python) il n\u2019est pas n\u00e9cessaire de pr\u00e9ciser le type des param\u00e8tres pass\u00e9s \u00e0 une fonction et le type de la valeur renvoy\u00e9e par une fonction. Dans d\u2019autres langages (par exemple C ou Java) c\u2019est une obligation.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 914, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f66ce18f-1d99-467e-9fee-afd218a1e3f2": {"__data__": {"id_": "f66ce18f-1d99-467e-9fee-afd218a1e3f2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15r.md", "file_name": "c15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "77e07e37-b2cd-4732-a886-fc772570a67d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15r.md", "file_name": "c15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "78349db46d2b36ecfef810acc7f153e097610b2771770a3237bd0238baec31b6", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nVous devez savoir utiliser les assertions (*assert*) en Python afin de pouvoir effectuer des tests unitaires simples.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a18ee8b5-0db4-4f13-9bef-57088f4885f6": {"__data__": {"id_": "a18ee8b5-0db4-4f13-9bef-57088f4885f6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ed3fe8a-c38f-4813-be80-e9d2cba5806b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "2bf04bab54ca03cac98ba0e98e0285b2edeaf3b0786cb23ca8444a0c4f11bee1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.1\n\nCompl\u00e9tez le sch\u00e9ma ci-dessous avec les termes suivants : \n\nordinateur 1, ordinateur 2, switch, ordinateur 3\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dba651ce-a492-45bb-9ea2-f05663fd69e6": {"__data__": {"id_": "dba651ce-a492-45bb-9ea2-f05663fd69e6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0add5296-1b8d-4130-bc12-d133ba5cd9b1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "1e909cccb8957b2c98602e9eaa3fbbbea45e332bb33964f7340f95cde8059ccc", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.2\n\nD\u00e9terminez les adresses r\u00e9seaux \u00e0 partir des adresses IP suivantes :\n\n- 147.12.1.24/16\n- 192.168.2.45/24\n- 5.23.65.87/8\n- 25.8.254.253/20", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 154, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "125f1fea-ecd2-4160-b42c-562ee80aef29": {"__data__": {"id_": "125f1fea-ecd2-4160-b42c-562ee80aef29", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95b6364a-d7a5-4909-aea2-c2ab0a38cfa4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "ec2e10781f322a71b6b9b5d361f3075bf17391fb35f258a776b18dbe79759b36", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.3\n\nD\u00e9terminez les adresses de broadcast \u00e0 partir des adresses IP suivantes :\n\n- 147.12.1.24/16\n- 192.168.2.45/24\n- 5.23.65.87/8\n- 25.8.254.253/20", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31ce3b09-ba42-43f8-9580-afa01eb096ec": {"__data__": {"id_": "31ce3b09-ba42-43f8-9580-afa01eb096ec", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1ffdbc0f-60d6-4471-81b9-778583edce0a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "b6a47af83fafa42cf1c5f98e96a50f3767f094937f94bed2d37286015cda84d4", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.4\n\nSoit 2 machines A et B connect\u00e9es \u00e0 un switch, dites dans quels cas ces 2 machines pourront communiquer ensemble :\n\n- adresse IP de A : 172.23.4.7/16 ; adresse IP de B : 172.23.5.8/16\n\n- adresse IP de A : 24.2.8.127/8 ; adresse IP de B : 24.23.5.52/8\n\n- adresse IP de A : 193.28.7.2/24 ; adresse IP de B : 193.28.8.3/24", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 336, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0b7fd74-f42a-48d4-b82b-657c6077a807": {"__data__": {"id_": "a0b7fd74-f42a-48d4-b82b-657c6077a807", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd11aa56-6894-4ac8-850c-cd4e07f5e7f4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "5b4b7c9a6f0ca819550d8b8c419ee596ad6188abed90bf32080c894f9cbad68a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.5\n\nCombien de machines peut-on trouver au maximum :\n\n- dans un r\u00e9seau d'adresse r\u00e9seau 192.168.2.0/24 ?\n\n- dans un r\u00e9seau d'adresse r\u00e9seau 176.24.0.0/16 ?\n\n- dans un r\u00e9seau d'adresse r\u00e9seau 10.0.0.0/8 ?\n\n- dans un r\u00e9seau d'adresse r\u00e9seau 2.28.5.244/30 ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 267, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56e6523d-95d6-4875-9c8b-3ce27c41ae11": {"__data__": {"id_": "56e6523d-95d6-4875-9c8b-3ce27c41ae11", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3869f7f-773b-4ed1-af20-745541a65cf3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "6903b5e8a1fc7ae14d1f9e55b88b471e05db8c789474c7a929a667ff8d9eec7f", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nIl est possible de faire communiquer deux ordinateurs en les reliant par un simple c\u00e2ble. On dit alors que ces deux ordinateurs sont en r\u00e9seau.\n\n2 ordinateurs en r\u00e9seau :\n\n!\n\nDans la plupart des cas, le c\u00e2ble reliant les 2 ordinateurs est un c\u00e2ble Ethernet. Ce type de c\u00e2ble poss\u00e8de \u00e0 ses 2 extr\u00e9mit\u00e9s des prises RJ45 (il existe d'autres types de c\u00e2bles qui permettent de mettre 2 ordinateurs en r\u00e9seau, mais l'utilisation de c\u00e2bles Ethernet est tellement majoritaire que nous ne nous int\u00e9resserons pas aux autres types de c\u00e2bles).\n\nc\u00e2ble Ethernet avec prises RJ45 :\n\n!\n\nUn ordinateur reli\u00e9 \u00e0 un r\u00e9seau doit poss\u00e9der une carte r\u00e9seau, on identifie cette carte r\u00e9seau de type Ethernet gr\u00e2ce \u00e0 la prise RJ45 femelle situ\u00e9e souvent \u00e0 l'arri\u00e8re de l'ordinateur.\n\ncarte r\u00e9seau de type Ethernet :\n\n!\n\nRelier 2 ordinateurs peut avoir un int\u00e9r\u00eat, mais dans la plupart des cas, un r\u00e9seau sera constitu\u00e9 d'un plus grand nombre d'ordinateurs. Dans ce cas, il est n\u00e9cessaire d'utiliser un commutateur r\u00e9seau, souvent appel\u00e9 switch (m\u00eame en fran\u00e7ais). Un switch est constitu\u00e9 de plusieurs prises RJ45.\n\nplusieurs switchs :\n\n!\n\nComme nous le montre la photo ci-dessus, il existe des switchs de diff\u00e9rentes tailles, certains switchs poss\u00e8dent 8 prises RJ45 alors que d'autres peuvent en poss\u00e9der 24.\n\nChaque ordinateur doit \u00eatre reli\u00e9 au switch par l'interm\u00e9diaire d'un c\u00e2ble Ethernet.\n\nr\u00e9seau de 4 ordinateurs :\n\n!\n\nDans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C et D sont en r\u00e9seau, chaque ordinateur peut communiquer avec les 3 autres.\n\nLes switchs ayant un nombre de prises RJ45 limit\u00e9, il peut \u00eatre n\u00e9cessaire d'utiliser plusieurs switchs dans un m\u00eame r\u00e9seau.\n\nr\u00e9seau de 5 ordinateurs :\n\n!\n\nDans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C, D et E sont en r\u00e9seau. A, B et C sont reli\u00e9s \u00e0 un switch, D et E sont reli\u00e9s \u00e0 un autre switch. Les 2 switchs \u00e9tant reli\u00e9s ensemble.\n\nDepuis le d\u00e9but nous avons uniquement parl\u00e9 de r\u00e9seaux filaires (les diff\u00e9rents composants du r\u00e9seau sont reli\u00e9s par des c\u00e2bles), il est aussi possible de mettre plusieurs machines en r\u00e9seau gr\u00e2ce \u00e0 des technologies sans fil (utilisation des ondes radio pour transmettre l'information entre les diff\u00e9rents composants du r\u00e9seau), par exemple, le wifi (il existe d'autres technologies sans fil que le wifi, mais elles ne seront abord\u00e9es ici). Chaque ordinateur appartenant au r\u00e9seau sans fil devra poss\u00e9der une carte r\u00e9seau wifi (aujourd'hui tous les ordinateurs portables vendus sont par d\u00e9faut \u00e9quip\u00e9s d'une telle carte). Il sera n\u00e9cessaire d'utiliser un concentrateur wifi (\u00e9quivalent du switch en filaire) si l'on d\u00e9sire mettre en r\u00e9seau plus de deux ordinateurs.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2673, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ef741f4-336c-477f-83bb-b294d5626b4b": {"__data__": {"id_": "7ef741f4-336c-477f-83bb-b294d5626b4b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1cd9866-45f9-4c4e-a0fd-407335233087", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "25aa219e5998931914e7eaf0b5223861e5a4b0f052e8f14c89321aeeda18c8ae", "class_name": "RelatedNodeInfo"}}, "text": "2) les adresses IP", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 20, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d3429a0-48ce-4c80-8216-75cd6b35cc49": {"__data__": {"id_": "1d3429a0-48ce-4c80-8216-75cd6b35cc49", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "50bfe027-7fde-4256-8a8f-6530b79d1c23", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "ff9b4e8750293dadd58618dd407a87bab2ec4438450b3efd6129982b427980fe", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nMaintenant que nos ordinateurs sont reli\u00e9s par l'interm\u00e9diaire d'un switch (ou d'un concentrateur wifi), imaginons que l'ordinateur A \"souhaite\" entrer en communication avec l'ordinateur C. Quand vous d\u00e9sirez communiquer avec quelqu'un par voie postale, il est n\u00e9cessaire d'\u00e9crire l'adresse de cette personne sur une enveloppe, \u00e0 chaque habitation correspond donc une adresse postale. Et bien, c'est un peu la m\u00eame chose pour les ordinateurs en r\u00e9seau, chaque machine poss\u00e8de une adresse. Pendant tr\u00e8s longtemps, diff\u00e9rentes technologies de r\u00e9seau, et donc diff\u00e9rents types d'adresse, ont coexist\u00e9. Aujourd'hui, on trouve presque exclusivement qu'un seul type d'adresse : les adresses IP.\n\nLes adresses IP sont de la forme : \"a.b.c.d\", avec a, b, c et d compris entre 0 et 255 (a, b, c et d sont cod\u00e9s sur 1 octet). Voici un exemple d'adresse IP : 192.168.0.1\n\nUne partie de l\u2019adresse IP permet d\u2019identifier le r\u00e9seau auquel appartient la machine et l\u2019autre partie de l\u2019adresse IP permet d\u2019identifier la machine sur ce r\u00e9seau.\n\nExemple : Soit un ordinateur A ayant pour adresse IP 192.168.2.1 Dans cette adresse IP \"192.168.2\" permet d\u2019identifier le r\u00e9seau (on dit que la machine A appartient au r\u00e9seau ayant pour adresse r\u00e9seau 192.168.2.0, pour trouver l'adresse r\u00e9seau, il suffit de remplacer la partie \"machine\" de cette adresse IP par un ou des 0) et \"1\" permet d\u2019identifier la machine sur le r\u00e9seau.\n\nToutes les machines appartenant au m\u00eame r\u00e9seau devront poss\u00e9der la m\u00eame adresse r\u00e9seau (sinon elles ne pourront pas communiquer, m\u00eame si elles sont bien physiquement reli\u00e9es).\n\nPrenons 2 exemples, soit 2 machines A et B en r\u00e9seau :\n\n- la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP 192.168.2.8. Les 3 premiers octets sont bien identiques (\"192.168.2\"), A et B ont donc la m\u00eame adresse r\u00e9seau \"192.168.2.0\". Ces 2 machines pourront donc communiquer\n\n- la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP 192.168.3.8. Les 3 premiers octets ne sont pas identiques (\"192.168.2\" pour A et \"192.168.3\" pour B), A et B n'ont pas la m\u00eame adresse r\u00e9seau (\"192.168.2.0\" pour A et \"192.168.3.0\" pour B). Ces 2 machines ne pourront donc pas communiquer\n\n**Attention**, les adresses IP (a.b.c.d) n\u2019ont forc\u00e9ment pas les parties a, b et c consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et la partie d consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau. Entrons un peu dans les d\u00e9tails", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2450, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98f55fcc-1bfa-496a-a9b9-b7dedc23b745": {"__data__": {"id_": "98f55fcc-1bfa-496a-a9b9-b7dedc23b745", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac243e8d-15fc-4511-a866-40afac1af97b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "01b62e8556801f6a9981a71b67347a14f8de2f19435dcebf0103fa39be6fbbbe", "class_name": "RelatedNodeInfo"}}, "text": "b) les masques de sous-r\u00e9seaux", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 32, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcdd889b-0de0-4bc8-97da-10b3289e1ae7": {"__data__": {"id_": "dcdd889b-0de0-4bc8-97da-10b3289e1ae7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6c646c1-2ef4-494d-a3f6-6b8d727e871c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "f32acb0d3dd39ee567ef28c3690b51c77acfabfb9f2cfe156d340bf833364fe8", "class_name": "RelatedNodeInfo"}}, "text": "i) Principes\n\n\u00c0 chaque adresse IP on associe un masque de sous-r\u00e9seau. Un masque de sous-r\u00e9seau est, comme les adresses IP, compos\u00e9 de 4 nombres a.b.c.d. Comme pour les adresses IP, chaque nombre est compris entre 0 et 255 (chaque nombre est cod\u00e9 sur un octet). Voici un exemple de masque de sous-r\u00e9seau : 255.255.255.0. Pour obtenir une adresse r\u00e9seau \u00e0 partir de l'adresse IP d'une machine, il est n\u00e9cessaire de connaitre le masque de sous-r\u00e9seau associ\u00e9 \u00e0 cette adresse IP.\n\nPour aller plus loin, il va \u00eatre n\u00e9cessaire de travailler sur les repr\u00e9sentations binaires des adresses IP et des masques de sous-r\u00e9seau, prenons tout de suite un exemple :\n\nsoit l'adresse IP suivante : 192.168.2.1 et le masque de sous-r\u00e9seau suivant : 255.255.255.0. Ce qui nous donne en binaire 11000000.10101000.00000010.00000001 pour l'adresse IP et 11111111.11111111.11111111.00000000 pour le masque de sous-r\u00e9seaux (si n\u00e9cessaire, n'h\u00e9sitez pas \u00e0 consulter le chapitre consacr\u00e9 \u00e0 la conversion base 10 - base 2).\n\nPour d\u00e9terminer l'adresse r\u00e9seau correspondant \u00e0 l'adresse IP 192.168.2.1, il suffit de faire un \"et logique bit \u00e0 bit\" entre l'adresse IP (en binaire) et le masque de sous-r\u00e9seau (en binaire) : pour chaque bit, si le bit de l'adresse IP est 1 et si le bit du masque de sous-r\u00e9seau est 1 alors le bit correspondant de l'adresse r\u00e9seau sera 1. Dans tous les autres cas, le bit du r\u00e9sultat sera \u00e0 0 :\n\n!\n\nComme vous pouvez le constater, une adresse IP 11000000.10101000.00000010.00000001 associ\u00e9e \u00e0 une masque de sous-r\u00e9seau 11111111.11111111.11111111.00000000 donne une adresse r\u00e9seau 11000000.10101000.00000010.00000000. Ce qui traduit en base 10 donne : une adresse IP 192.168.2.1 associ\u00e9e \u00e0 un masque de sous-r\u00e9seau 255.255.255.0 donne une adresse r\u00e9seau 192.168.2.0 (exactement le r\u00e9sultat d\u00e9j\u00e0 obtenu ci-dessus dans le 2a).\n\nEnvisageons un autre cas : adresse IP 172.16.28.44 avec un masque de sous-r\u00e9seau 255.255.0.0. Ce qui nous donne en binaire : adresse IP 10101100.00010000.00011100.00101100 avec un masque de sous-r\u00e9seau 11111111.11111111.000000000.00000000. En appliquant un \"et logique bit \u00e0 bit\", nous obtenons l'adresse r\u00e9seau suivante : 10101100.00010000.00000000.00000000, soit en base 10 : 172.16.0.0\n\nUn dernier cas : adresse IP 10.5.23.247 avec un masque de sous-r\u00e9seau 255.0.0.0. Ce qui nous donne en binaire : adresse IP 00001010.00000101.00010111.11110111 avec un masque de sous-r\u00e9seau 11111111.00000000.00000000.00000000. En appliquant un \"et logique bit \u00e0 bit\", nous obtenons l'adresse r\u00e9seau suivante : 00001010.00000000.00000000.00000000, soit en base 10 : 10.0.0.0\n\nNous pouvons r\u00e9sumer les 3 exemples ci-dessus comme suit :\n\n- quand le masque de sous-r\u00e9seau est 255.255.255.0 pour une adresse IP a.b.c.d, les parties a, b et c sont consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et la partie d est consacr\u00e9e \u00e0 l\u2019identification des machines sur le r\u00e9seau (l'adresse r\u00e9seau sera a.b.c.0)\n- quand le masque de sous-r\u00e9seau est 255.255.0.0 pour une adresse IP a.b.c.d, les parties a, b sont consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et les parties c et d sont consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau (l'adresse r\u00e9seau sera a.b.0.0)\n- quand le masque de sous-r\u00e9seau est 255.0.0.0 pour une adresse IP a.b.c.d, la partie a est consacr\u00e9e \u00e0 l\u2019identification du r\u00e9seau et les parties b, c et d sont consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau (l'adresse r\u00e9seau sera a.0.0.0)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd969051-2c68-423e-b3b8-fc29bdf85d7b": {"__data__": {"id_": "dd969051-2c68-423e-b3b8-fc29bdf85d7b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63316569-3b76-4665-8494-4551c6f1922a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "8dac3b9561e9358f585f60b83b68e83577233e2100033a19ce5eeebbb6ef5d40", "class_name": "RelatedNodeInfo"}}, "text": "ii) Notation CIDR\n\nIl peut \u00eatre parfois un peu long d'\u00e9crire les masques de sous-r\u00e9seau sous forme de 4 octets (m\u00eame en base 10). La notation CIDR (Classless Inter-Domain Routing) permet de raccourcir cette notation :\n\n- au lieu d'\u00e9crire adresse IP 192.168.2.1 associ\u00e9e \u00e0 un masque de sous-r\u00e9seau 255.255.255.0, on pourra directement \u00e9crire adresse IP 192.168.2.1/24\n- au lieu d'\u00e9crire adresse IP 172.16.28.44 associ\u00e9e \u00e0 un masque de sous-r\u00e9seau 255.255.0.0, on pourra directement \u00e9crire adresse IP 172.16.28.44/16\n- au lieu d'\u00e9crire adresse IP 10.5.23.247 associ\u00e9e \u00e0 un masque de sous-r\u00e9seau 255.0.0.0, on pourra directement \u00e9crire adresse IP 10.5.23.247/8\n\nComme vous l'avez sans doute d\u00e9j\u00e0 remarqu\u00e9, le nombre situ\u00e9 apr\u00e8s le / correspond au nombre de bits \u00e0 1 dans le masque de sous-r\u00e9seau :\n\n- pour le masque de sous-r\u00e9seau 255.255.255.0 qui correspond \u00e0 11111111.11111111.11111111.00000000 en binaire, on a 24 bits \u00e0 1, d'o\u00f9 le /24\n- pour le masque de sous-r\u00e9seau 255.255.0.0 qui correspond \u00e0 11111111.11111111.00000000.00000000 en binaire, on a 16 bits \u00e0 1, d'o\u00f9 le /16\n- pour le masque de sous-r\u00e9seau 255.0.0.0 qui correspond \u00e0 11111111.00000000.00000000.00000000 en binaire, on a 8 bits \u00e0 1, d'o\u00f9 le /8", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1212, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44e9e93b-1b7d-404d-9c7f-dbc24b7e4768": {"__data__": {"id_": "44e9e93b-1b7d-404d-9c7f-dbc24b7e4768", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f29901d-aa5d-450a-a182-f72f538052c1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "d245ab09c3eab0ce7b90dd5d353b4739083697577a876be50ad922e5d90bc7a6", "class_name": "RelatedNodeInfo"}}, "text": "iii) Des cas plus complexes\n\nDans la plupart des cas, vous rencontrerez des cas \"simples\" avec des /8, /16 ou /24, mais vous devez aussi savoir que dans certaines situations il est possible de rencontrer des cas plus complexes.\n\nIl est, par exemple, possible de voir des /18 ! Comment faire dans ce cas ?\n\nImaginons l'adresse IP 172.24.82.47/18 quelle est l'adresse r\u00e9seau ?\n\nNous devons obligatoirement travailler en binaire :\n\n- adresse IP 172.24.82.47 en binaire : 10101100.00011000.01010010.00101111\n- masque de sous-r\u00e9seau /18 : 11111111.11111111.11000000.00000000 (on a bien 18 bits \u00e0 1) ce qui donne en base 10 : 255.255.192.0\n\nLe \"et logique bit \u00e0 bit\" donne : \n\n!\n\nD'o\u00f9 une adresse r\u00e9seau : 10101100.00011000.01000000.00000000 soit en base 10 : 172.24.64.0\n\nDans le cas d'un masque sous r\u00e9seau 255.255.192.0 (/18), les 18 bits les plus \u00e0 gauche permettront d'identifier le r\u00e9seau, le reste (32-18 = 14 bits) permettra d'identifier la machine. Ici, impossible de raisonner sur les octets (comme en /8, /16 ou /24), pas le choix, il faut raisonner sur les bits.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1070, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "641a5d59-b9e1-455c-8b6c-fe60d43eba5a": {"__data__": {"id_": "641a5d59-b9e1-455c-8b6c-fe60d43eba5a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db181862-db39-4ed7-99ac-d7466f434869", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "c962df7671aab1b5b532cc589961cbb51cbf7bb9c0bb4f01d0afb807c78759c8", "class_name": "RelatedNodeInfo"}}, "text": "c) L'adresse de broadcast\n\nIl existe une adresse IP un peu particuli\u00e8re dans un r\u00e9seau puisque cette adresse IP permet de contacter toutes les machines du r\u00e9seau en m\u00eame temps : c'est l'adresse de broadcast.\n\nObtenir une adresse de broadcast est relativement simple : il suffit de mettre tous les bits de la partie machine \u00e0 1.\n\nCommen\u00e7ons par des exemples simples :\n\n- 192.168.22.33/24 ; la partie machine correspond au dernier octet (puisque 32-24 = 8 bits = 1 octet), pour obtenir l'adresse de broadcast, il suffit donc de mettre tous les bits du dernier octet \u00e0 1 : 192.168.22.255\n- 172.43.28.12/16 ; la partie machine correspond aux 2 derniers octets (puisque 32-16 = 16 bits = 2 octets), pour obtenir l'adresse de broadcast, il suffit donc de mettre tous les bits des deux derniers octets \u00e0 1 : 172.43.255.255\n- 19.68.221.23/8 ; la partie machine correspond aux derniers octets (puisque 32-8 = 24 bits = 3 octets), pour obtenir l'adresse de broadcast, il suffit donc de mettre tous les bits des trois derniers octets \u00e0 1 : 19.255.255.255\n\n\u00c9videmment, la situation se complique un peu avec un masque de sous-r\u00e9seau un peu plus exotique :\n\nPrenons un exemple avec le masque 255.255.255.240 qui donne en binaire 11111111.11111111.11111111.11110000, soit un /28 (28 bits \u00e0 1) et l'adresse IP 195.32.12.22/28. Quelle est dans ce cas l'adresse de broadcast (et pendant que nous y sommes, nous rechercherons aussi l'adresse r\u00e9seau) ?\n\nL'adresse IP donne en binaire : 11000011.00100000.00001100.00010110, dans cette adresse, seuls les 4 bits les plus \u00e0 droite sont consacr\u00e9s \u00e0 la partie machine de l'adresse IP. \n\nPour avoir l'adresse de broadcast, il faut mettre \u00e0 1 les 4 bits les plus \u00e0 droite : 11000011.00100000.00001100.0001**1111**, soit en d\u00e9cimal : 195.32.12.31. L'adresse de broadcast est donc de 195.32.12.31\n\nPour avoir l'adresse r\u00e9seau, il faut mettre \u00e0 0 les 4 bits les plus \u00e0 droite : 11000011.00100000.00001100.0001**0000**, soit en d\u00e9cimal : 195.32.12.16. L'adresse de r\u00e9seau est donc de 195.32.12.16\n\nConclusion : Si une machine M1 d'adresse IP 195.32.12.22/28 appartient \u00e0 un r\u00e9seau R1, le r\u00e9seau R1 a une adresse r\u00e9seau 195.32.12.16 et une adresse de broadcast 195.32.12.31", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2193, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f25189e-2fb3-44ff-b846-0e5686b1f026": {"__data__": {"id_": "3f25189e-2fb3-44ff-b846-0e5686b1f026", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5ff7607-df24-4852-8852-d3afc86a8a3b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "e80188564537c5adaa9d835415a753006e1cfd748c57b3b17e5c61ec7ecec997", "class_name": "RelatedNodeInfo"}}, "text": "3) Nombre de machines adressables dans un r\u00e9seau\n\nSelon le masque de sous-r\u00e9seau, le nombre de machines qui peuvent appartenir \u00e0 un r\u00e9seau varie grandement :\n\nAvec un masque 255.255.255.0, nous avons \u00e0 notre disposition un octet pour la partie machine. Avec un octet, il est possible de coder 256 valeurs (28 = 256). Mais, il ne faut pas oublier que l'adresse r\u00e9seau (tous les bits de la partie machine \u00e0 0) ne peut pas \u00eatre utilis\u00e9e par une machine. De la m\u00eame fa\u00e7on, l'adresse de broadcast (tous les bits de la partie machine \u00e0 1) ne peut pas non plus \u00eatre utilis\u00e9 par une machine. En conclusion, dans le cas o\u00f9 nous utilisons un masque 255.255.255.0 nous pouvons adresser 256 - 2 = 254 machines\n\nAvec un masque de 255.255.0.0, nous avons 2 octets (16 bits) \u00e0 consacrer \u00e0 la partie machine. Avec 2 octets, il est possible de coder 216 = 65536 valeurs. Nous devons ensuite enlever l'adresse r\u00e9seau et l'adresse de broadcast, d'o\u00f9 65536 - 2 = 65534 machines\n\nAvec un masque de 255.0.0.0, nous avons 3 octets (24 bits) \u00e0 consacrer \u00e0 la partie machine. Avec 3 octets, il est possible de coder 224 = 16777216 valeurs. Nous devons ensuite enlever l'adresse r\u00e9seau et l'adresse de broadcast, d'o\u00f9 16777216 - 2 = 16777214 machines\n\nUn dernier exemple avec un masque de sous-r\u00e9seau un peu \"exotique\" : reprenons notre exemple avec le masque 255.255.255.240. En convertissant ce masque en binaire (11111111.11111111.11111111.11110000), nous pouvons constater qu'il y a uniquement 4 bits r\u00e9serv\u00e9s \u00e0 la machine. Avec 4 bits, il est possible de coder 24 = 16 valeurs. Il nous faut ensuite retrancher l'adresse r\u00e9seau (195.32.12.16) et l'adresse de broadcast (195.32.12.31), d'o\u00f9 16 - 2 = 14 machines. Comme dans ce cas il n'y a pas trop d'adresses possibles, nous pouvons toutes les \u00e9num\u00e9rer : 195.32.12.17, 195.32.12.18, 195.32.12.19, 195.32.12.20, 195.32.12.21, 195.32.12.22, 195.32.12.23, 195.32.12.24, 195.32.12.25, 195.32.12.26, 195.32.12.27, 195.32.12.28, 195.32.12.29, 195.32.12.30, comme vous pouvez le constater, nous avons bien 14 adresses IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2044, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69399ecb-c271-4888-ad54-ce34d9e2430f": {"__data__": {"id_": "69399ecb-c271-4888-ad54-ce34d9e2430f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60cd5f08-107d-4329-81cf-d51342a07f69", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "9c4868f7d8b9a430629e54b6015500d5b0d0c15f1b3c27f85393c6ffd3b01af2", "class_name": "RelatedNodeInfo"}}, "text": "4) Les adresses IPv6\n\nLes adresses IP que nous avons \u00e9tudi\u00e9es ci-dessus sont appel\u00e9es *adresse IPv4* (adresse IP version 4). Une nouvelle norme est en train de remplacer progressivement les adresses IPv4 : les adresses IPv6 (adresse IP version 6). Nous n'\u00e9tudierons pas cette nouvelle norme ici, mais voici tout de m\u00eame un exemple d'adresse IPv6 : *2001:0db8:0000:85a3:0000:0000:ac1f:8001*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 391, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2061dee-dfb3-4eb9-b52a-9854acf1014e": {"__data__": {"id_": "e2061dee-dfb3-4eb9-b52a-9854acf1014e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16r.md", "file_name": "c16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64bea22d-3e50-420d-86d8-9dcf653eb23d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16r.md", "file_name": "c16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "8ccad71e3a9b81cd14ac1c3804c923dfc17d32563c6ec8a7e23af64de36696cc", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Des ordinateurs sont dits \u201cen r\u00e9seaux\u201d quand ils sont capables de communiquer entre eux soit par l'interm\u00e9diaire d\u2019un c\u00e2ble (ex : c\u00e2ble Ethernet avec prises RJ45) ou d\u2019une connexion radio (ex : Wifi)\n\n- Pour relier plus de 2 ordinateurs, il est n\u00e9cessaire d\u2019utiliser un switch\n\n- Pour identifier un ordinateur sur un r\u00e9seau, on utilise une adresse IP. Les adresses IP sont de la forme : \"a.b.c.d\", avec a, b, c et d compris entre 0 et 255 (a, b, c et d sont cod\u00e9s sur 1 octet).\n\n- Une partie de l\u2019adresse IP permet d\u2019identifier le r\u00e9seau auquel appartient la machine et l\u2019autre partie de l\u2019adresse IP permet d\u2019identifier la machine sur ce r\u00e9seau (exemple : soit l\u2019adresse IP d\u2019un ordinateur : 192.168.3.1/24, 192.168.3 correspond \u00e0 la partie\nr\u00e9seau de l\u2019adresse IP et 1 correspond \u00e0 la partie machine de l\u2019adresse IP)\n\n- l'adresse r\u00e9seau peut \u00eatre obtenu en mettant toute la partie machine d'une adresse IP \u00e9crite en binaire \u00e0 0 \n\n- Toutes les machines appartenant au m\u00eame r\u00e9seau devront poss\u00e9der la m\u00eame adresse r\u00e9seau (sinon elles ne pourront pas communiquer, m\u00eame si elles\nsont bien physiquement reli\u00e9es).\n\n- l'adresse de broadcast est une adresse IP qui permet de contacter toutes les machines d'un r\u00e9seau en m\u00eame temps. Pour obtenir l'adresse de broadcast, il suffit de mettre toute la partie machine de l'adresse IP \u00e9crite en binaire \u00e0 1\n\n- Pour d\u00e9terminer l'adresse r\u00e9seau et l'adresse de broadcast d'un r\u00e9seau il est n\u00e9cessaire de connaitre le masque de sous-r\u00e9seau (exemple : 255.255.255.0). Il est aussi possible d'\u00e9crire le masque de sous-r\u00e9seau en utilisant la notation CIDR (/8, /16, /32, ...)\n\n\t- si la notation CIDR est 8 (exemple : 192.168.2.1/8), cela signifie que pour une adresse a.b.c.d/8, la partie a est consacr\u00e9e \u00e0 l'adresse r\u00e9seau, le reste (b, c,\nd) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.0.0.0 et une adresse de broadcast de la forme a.255.255.255\n\n\t- si la notation CIDR est 16 (exemple : 192.168.2.1/16), cela signifie que pour une adresse a.b.c.d/16, les parties a et b sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le\nreste (c, d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.0.0 et une adresse de broadcast de la forme a.b.255.255\n\n\t- si la notation CIDR est 24 (exemple : 192.168.2.1/24), cela signifie que pour une adresse a.b.c.d/24, les parties a, b et c sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le reste (d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.c.0 et une adresse de broadcast de la forme a.b.c.255\n\n\t- si la notation CIDR est diff\u00e9rente de /8, /16 ou /24, le cas est plus complexe \u00e0 traiter (voir le cours)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2725, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd13b1aa-1977-4d23-b5c2-5c68ddab716a": {"__data__": {"id_": "fd13b1aa-1977-4d23-b5c2-5c68ddab716a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16r.md", "file_name": "c16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "73d9f7fd-a86d-481c-858e-d4dc08cbeb3a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16r.md", "file_name": "c16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "3eef16aa7e85b86bc77e767c1052ea3d635fd4cb3d82b9f88b58b5add2631b4c", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable d'attribuer des adresses IP \u00e0 des ordinateurs\n- vous devez \u00eatre capable, connaissant l'adresse IP d'une machine et le masque de sous-r\u00e9seau, de trouver l'adresse r\u00e9seau (dans des cas simples comme par exemple /16, mais aussi dans des cas plus complexes, par exemple /28)\n- vous devez \u00eatre capable, connaissant l'adresse IP d'une machine et le masque de sous-r\u00e9seau, de trouver l'adresse de broadcast (dans des cas simples comme par exemple /16, mais aussi dans des cas plus complexes, par exemple /28)\n- vous devez \u00eatre capable, connaissant l'adresse IP d'une machine et le masque de sous-r\u00e9seau, de d\u00e9terminer le nombre de machines qui peut composer le r\u00e9seau (dans des cas simples comme par exemple /16, mais aussi dans des cas plus complexes, par exemple /28)\n- vous devez \u00eatre capable de trouver un masque de sous-r\u00e9seau correspondant \u00e0 une notation CIDR et vis versa.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee8dc55e-e6d0-4e98-a3d6-1514bb0e67bd": {"__data__": {"id_": "ee8dc55e-e6d0-4e98-a3d6-1514bb0e67bd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17a.md", "file_name": "c17a.md", "file_size": 321, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e49c6c0b-77cd-4be3-a717-4ec881a0db35", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17a.md", "file_name": "c17a.md", "file_size": 321, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3d034f6929e4208c5184d37d3da745fa356b1a0339daaf987b07bdc670703720", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 17.1\n\n1) Expliquez en quelques lignes  ce  qu'est un protocole.\n\n2) Expliquez en quelques lignes le principe d'encapsulation des donn\u00e9es\n\n3) Expliquez en quelques lignes le principe des accus\u00e9s de r\u00e9ception au  niveau du protocole TCP  \n\n4) Expliquez en quelques lignes la notion de paquets de donn\u00e9es", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 312, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39d0399f-da88-490f-bb9d-cf411d5a5ad4": {"__data__": {"id_": "39d0399f-da88-490f-bb9d-cf411d5a5ad4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e37905a3-bbe4-4503-b523-9ac5ba2d9792", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "294cabf7458934ae30b8677b8831ca1b1e87565eae563421ce5c298b2717848a", "class_name": "RelatedNodeInfo"}}, "text": "1) Notion de protocole\n\nPour communiquer ensemble, 2 ordinateurs en r\u00e9seau doivent utiliser des r\u00e8gles communes, l'ensemble de ces r\u00e8gles qui permettent \u00e0 2 ordinateurs de communiquer ensemble s'appelle un protocole.\n\nIl existe de nombreux protocoles r\u00e9seau, nous allons en \u00e9tudier 2 : le protocole TCP et le protocole IP. Ces 2 protocoles sont tellement li\u00e9s l'un \u00e0 l'autre que l'on parle souvent du protocole TCP/IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7ed48c4-3d8e-43d2-a566-878d1d82bb85": {"__data__": {"id_": "a7ed48c4-3d8e-43d2-a566-878d1d82bb85", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7297be4a-900b-49d1-aa95-bfe5665d9488", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "2dc1fa6d896df26043d01aab965e4cdaac7cb1212b6e114c1fc215cb02e05264", "class_name": "RelatedNodeInfo"}}, "text": "2) Un peu d'histoire\n\nAvant d'entrer dans le vif du sujet, un peu d'histoire :\n\nLa DARPA (Defense Advanced Research Projects Agency) voit le jour en 1958, cette agence gouvernementale am\u00e9ricaine a pour but de veiller \u00e0 la constante supr\u00e9matie des \u00c9tats unis en mati\u00e8re technologique et scientifique. En 1962 la DARPA soutient le projet du professeur Licklider qui a pour but de mettre en r\u00e9seau les ordinateurs des universit\u00e9s am\u00e9ricaines afin que ces derni\u00e8res puissent \u00e9changer des informations plus rapidement (m\u00eame \u00e0 des milliers de kilom\u00e8tres de distance). En 1968, ARPAnet, 1er r\u00e9seau informatique \u00e0 grande \u00e9chelle de l'histoire voit le jour. Le 29 octobre 1969, le 1er message (le mot \"login\") est envoy\u00e9 depuis l'universit\u00e9 de Californie \u00e0 Los Angeles vers l'universit\u00e9 de Stanford via le r\u00e9seau ARPAnet (les 2 universit\u00e9s sont environ distantes de 500 Km). C'est un demi-succ\u00e8s, puisque seules les lettres \"l\" et \"o\" arriveront \u00e0 bon port. En 1972, 23 ordinateurs sont connect\u00e9s \u00e0 ARPAnet (on trouve m\u00eame des ordinateurs en dehors des \u00c9tats unis). En parall\u00e8le au projet ARPAnet, d'autres r\u00e9seaux voient le jour, probl\u00e8me, ils utilisent des protocoles de communication h\u00e9t\u00e9roclite (UUCP, NCP ou encore X.25) et 2 ordinateurs appartenant \u00e0 2 r\u00e9seaux diff\u00e9rents sont incapables de communiquer entre eux puisqu'ils n'utilisent les m\u00eames protocoles. En 1974 Vint Cerf et Bob Khan vont mettre au point le protocole TCP qui sera tr\u00e8s rapidement coupl\u00e9 au protocole IP pour donner TCP/IP. TCP/IP, gr\u00e2ce \u00e0 sa simplicit\u00e9, va tr\u00e8s rapidement s'imposer comme un standard : les diff\u00e9rents r\u00e9seaux (ARPAnet et les autres) vont adopter TCP/IP. Cette adoption va permettre d'interconnecter tous ces r\u00e9seaux (2 machines appartenant \u00e0 2 r\u00e9seaux diff\u00e9rents vont pouvoir communiquer gr\u00e2ce \u00e0 cette interconnexion). Internet \u00e9tait n\u00e9 (le terme Internet vient de \"internetting\" qui signifie \"Connexion entre plusieurs r\u00e9seaux\"). TCP/IP est donc au coeur d'Internet, voil\u00e0 pourquoi aujourd'hui, la plupart des machines utilisent TCP/IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2024, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2a4d039-35ac-460b-a02f-e2c52a7e8311": {"__data__": {"id_": "d2a4d039-35ac-460b-a02f-e2c52a7e8311", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03c7634f-b13a-4dfe-9584-19d7bc330c95", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "685c1b0e85ff4ebce8929a4853b00b961048fb00d6a476e8756f36eb0453f403", "class_name": "RelatedNodeInfo"}}, "text": "3) Les protocoles TCP et IP", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 29, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24d93c13-5bee-4c8e-b08f-77f0af1f741e": {"__data__": {"id_": "24d93c13-5bee-4c8e-b08f-77f0af1f741e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "974e4510-bfb4-4ea9-93c6-8a614669e5ea", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "8fb3f0c415bfb056c411b2281ba27402eb002423f087607457f3d48f8b45ea10", "class_name": "RelatedNodeInfo"}}, "text": "a) notion d'encapsulation\n\nApr\u00e8s ce petit rappel historique, essayons de comprendre le principe de base des protocoles TCP (Transmission Control Protocol) et IP (Internet Protocol)\n\nQuand un ordinateur A \"d\u00e9sire\" envoyer des donn\u00e9es \u00e0 un ordinateur B, l'ordinateur A \"utilise\" le protocole TCP pour mettre en forme les donn\u00e9es \u00e0 envoyer.\n\nEnsuite le protocole IP prend le relai et utilise les donn\u00e9es mises en forme par le protocole TCP afin de cr\u00e9er des paquets des donn\u00e9es. Apr\u00e8s quelques autres op\u00e9rations qui ne seront pas \u00e9voqu\u00e9es ici, les paquets de donn\u00e9es pourront commencer leur voyage sur le r\u00e9seau jusqu'\u00e0 l'ordinateur B. Il est important de bien comprendre que le protocole IP \"encapsule\" les donn\u00e9es issues du protocole TCP afin de constituer des paquets de donn\u00e9es.\n\n!\n\nUne fois arriv\u00e9es \u00e0 destination (ordinateur B), les donn\u00e9es sont \"d\u00e9sencapsul\u00e9es\" : on r\u00e9cup\u00e8re les donn\u00e9es TCP contenues dans les paquets afin de pouvoir les utiliser.\n\n\n!\n\nLe protocole IP s'occupe uniquement de faire arriver \u00e0 destination les paquets en utilisant l'adresse IP de l'ordinateur de destination. Les adresses IP de l'ordinateur de d\u00e9part (ordinateur A) et de l'ordinateur destination (ordinateur B) sont ajout\u00e9es aux paquets de donn\u00e9es.\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1240, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef55a823-859c-4c70-9fd9-0c8feae2c323": {"__data__": {"id_": "ef55a823-859c-4c70-9fd9-0c8feae2c323", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c21095d-98a2-43b4-92dd-aad65e99a689", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "2954504fba0fa0d7f70b743223e9dde419bd1dc48f6716ce5b287290ff38d90f", "class_name": "RelatedNodeInfo"}}, "text": "b) accus\u00e9 de r\u00e9ception\n\nLe protocole TCP permet de s'assurer qu'un paquet est bien arriv\u00e9 \u00e0 destination. En effet quand l'ordinateur B re\u00e7oit un paquet de donn\u00e9es en provenance de l'ordinateur A, l'ordinateur B envoie un accus\u00e9 de r\u00e9ception \u00e0 l'ordinateur A (un peu dans le genre \"OK, j'ai bien re\u00e7u le paquet\"). Si l'ordinateur A ne re\u00e7oit pas cet accus\u00e9 de r\u00e9ception en provenance de B, apr\u00e8s un temps pr\u00e9d\u00e9fini, l'ordinateur A renverra le paquet de donn\u00e9es vers l'ordinateur B.\n\nNous pouvons donc r\u00e9sumer le processus d'envoi d'un paquet de donn\u00e9es comme suit :\n\n!\n\n\u00c0 noter qu'il existe aussi le protocole UDP qui ressemble beaucoup au protocole TCP. La grande diff\u00e9rence entre UDP et TCP est que le protocole UDP ne g\u00e8re pas les accus\u00e9s de r\u00e9ception. Les \u00e9changes de donn\u00e9es avec UDP sont donc moins fiables qu'avec TCP (un paquet \"perdu\" est d\u00e9finitivement \"perdu\" et ne sera pas renvoy\u00e9) mais beaucoup plus rapides (puisqu' il n'y a pas d'accus\u00e9 de r\u00e9ception \u00e0 transmettre). UDP est donc tr\u00e8s souvent utilis\u00e9 pour les \u00e9changes de donn\u00e9es qui doivent \u00eatre rapides, mais o\u00f9 la perte d'un paquet de donn\u00e9es de temps en temps n'est pas un gros probl\u00e8me (par exemple le streaming vid\u00e9o).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1190, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "340ab151-0b8b-499d-b782-fd62e3b84816": {"__data__": {"id_": "340ab151-0b8b-499d-b782-fd62e3b84816", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "212e1ac9-db25-433d-b0cf-301048c40f46", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "430be5ba28923f4d8c726e5b2a490529eb3243e0626fe5e3245a22f035026dba", "class_name": "RelatedNodeInfo"}}, "text": "c) notion de paquet\n\nIl est tr\u00e8s important de bien comprendre que TCP/IP repose sur la notion de paquets de donn\u00e9es. Si par exemple on d\u00e9sire envoyer un fichier (son, photo, vid\u00e9o ou texte, peu importe, dans tous les cas on envoie une succession de bits) en utilisant TCP/IP, les donn\u00e9es qui constituent ce fichier ne seront pas envoy\u00e9es d'un seul tenant, ces donn\u00e9es vont \u00eatre \"d\u00e9coup\u00e9es\" en plusieurs morceaux et chaque morceau sera envoy\u00e9 dans un paquet diff\u00e9rent. Une fois tous les paquets arriv\u00e9s \u00e0 destination, le fichier d'origine pourra \u00eatre reconstitu\u00e9. Pour aller d'un ordinateur A \u00e0 un ordinateur B, les diff\u00e9rents paquets contenant les donn\u00e9es qui constituent notre fichier, ne passeront pas forcement par la m\u00eame route (cette notion de route sera abord\u00e9e plus tard), ils pourront emprunter des chemins tr\u00e8s diff\u00e9rents : en exag\u00e9rant \u00e0 peine, pour faire le trajet Paris-Los Angeles, certains paquets pourront passer par l'atlantique alors que d'autres passeront par le pacifique. Si un des paquets n'arrive pas \u00e0 destination, le fichier ne pourra pas \u00eatre reconstitu\u00e9, le paquet \"perdu\" devra \u00eatre renvoy\u00e9 par l'\u00e9metteur (voir le syst\u00e8me d'accus\u00e9 de r\u00e9ception d\u00e9crit ci-dessus).\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67530245-52f5-4bdc-b6ef-43e0119e4809": {"__data__": {"id_": "67530245-52f5-4bdc-b6ef-43e0119e4809", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17r.md", "file_name": "c17r.md", "file_size": 1859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4dcd1141-e605-4ee1-a460-94978babb1a1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17r.md", "file_name": "c17r.md", "file_size": 1859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "34c14ce2bd23c7fb7a35f787217a5bb7a8e6a3f452d9fc739a2f129988e26b17", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Au d\u00e9but des ann\u00e9es 70, le projet ARPAnet (\u201canc\u00eatre d\u2019Internet\u201d) avait pour but de relier plusieurs r\u00e9seaux informatiques entre eux.\n\n- les protocoles TCP et IP s\u2019imposent comme des standards au niveau du projet ARPAnet\n\n- Pour transf\u00e9rer des donn\u00e9es entre 2 ordinateurs, le protocole TCP encapsule ces donn\u00e9es. Les donn\u00e9es issues de l\u2019encapsulation de TCP sont elles-m\u00eames encapsul\u00e9es par le protocole IP. On obtient alors un paquet IP qui pourra \u00eatre\ntransmis sur le r\u00e9seau. Une fois arriv\u00e9es \u00e0 destination, les donn\u00e9es seront d\u00e9sencapsul\u00e9es.\n\n- Le protocole IP s'occupe uniquement de faire arriver \u00e0 destination les paquets en utilisant l'adresse IP de l'ordinateur de destination. Les adresses IP de l'ordinateur de d\u00e9part (ordinateur A) et de l'ordinateur destination (ordinateur B) sont ajout\u00e9es aux paquets de\ndonn\u00e9es.\n\n- Le protocole TCP permet de s'assurer qu'un paquet est bien arriv\u00e9 \u00e0 destination gr\u00e2ce \u00e0 un syst\u00e8me d\u2019accus\u00e9 de r\u00e9ception. Si l'ordinateur A ne re\u00e7oit pas cet accus\u00e9 de r\u00e9ception en provenance de B, apr\u00e8s un temps pr\u00e9d\u00e9fini, l'ordinateur A renverra le paquet de donn\u00e9es vers l'ordinateur B.\n\n- Le protocole UDP ressemble beaucoup au protocole TCP (IP peut encapsuler UDP \u00e0 la place de TCP), seule diff\u00e9rence notable : le protocole UDP ne propose pas de syst\u00e8me d\u2019accus\u00e9 de r\u00e9ception.\n\n- TCP/IP repose sur la notion de paquets de donn\u00e9es : un fichier n\u2019est pas envoy\u00e9 en une seule fois, les donn\u00e9es (bits) sont \u201cd\u00e9coup\u00e9es\u201d en petits paquets. Ces paquets de donn\u00e9es n\u2019empruntant pas forc\u00e9ment tous le m\u00eame \u201cchemin\u201d sur le r\u00e9seau, l\u2019ordinateur devra les remettre dans l\u2019ordre avant de pouvoir reconstituer le fichier d\u2019origine. Si un paquet se perd, le fichier ne pourra pas \u00eatre\nreconstitu\u00e9, il devra donc \u00eatre renvoy\u00e9", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a849ea8-f07f-496c-bbb7-f019d4d65747": {"__data__": {"id_": "0a849ea8-f07f-496c-bbb7-f019d4d65747", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18a.md", "file_name": "c18a.md", "file_size": 193, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4ed38a1f-62e6-4ec0-8539-3c51552713cf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18a.md", "file_name": "c18a.md", "file_size": 193, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "e22c79fc64d0b699922a8be05a96519b05fd6a7b974dcff2da4a9ecea999033d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 18.1\n\ncompl\u00e9tez le sch\u00e9ma  ci-dessous avec les termes  suivants :\n\nHTTP, APPLICATION, INTERNET, FTP, TCP, ACC\u00c8S R\u00c9SEAU, UDP, WIFI, TRANSPORT, IP, ETHERNET\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a25d138c-76cd-44c2-b948-344bb3161f19": {"__data__": {"id_": "a25d138c-76cd-44c2-b948-344bb3161f19", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ceaa4f17-8948-4dd3-ae1d-a276e481a07a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "31d7ce7bce7bfddf5de695d378377349f38aecedf6e7f571da678183087c6654", "class_name": "RelatedNodeInfo"}}, "text": "1) Trame Ethernet\n\nNous avons eu l'occasion de voir avec les protocoles TCP et IP le processus d'encapsulation des donn\u00e9es : \"IP encapsule TCP\". Les paquets IP ne peuvent pas transiter sur un r\u00e9seau tel quel, ils vont eux aussi \u00eatre encapsul\u00e9s avant de pouvoir \"voyager\" sur le r\u00e9seau. L'encapsulation des paquets IP produit ce que l'on appelle une trame. Il n'est pas question d'\u00e9tudier en d\u00e9tail ce qu'est une trame, vous devez juste savoir qu'il existe de nombreux types de trames : ATM, token ring, PPP, Ethernet, Wifi... Nous allons uniquement \u00e9voquer les 2 derni\u00e8res : la trame Ethernet et la trame Wifi.\n\nSi vous utilisez un r\u00e9seau filaire avec des c\u00e2bles Ethernet (avec des prises RJ45), la trame sera de type Ethernet (ce qui est le cas pour le r\u00e9seau du lyc\u00e9e). Si vous utilisez un r\u00e9seau sans fil Wifi, la trame sera de type Wifi. En faite, la trame Wifi ressemble beaucoup \u00e0 la trame Ethernet, on peut m\u00eame dire que la trame Wifi est la variante sans-fil de la trame Ethernet, afin de simplifier les choses, dans la suite, nous \u00e9voquerons uniquement la trame Ethernet en ayant \u00e0 l'esprit que ce qui est dit sur la trame Ethernet et aussi valable pour la trame Wifi.\n\nNous avons vu que le paquet IP contient les adresses IP de l'\u00e9metteur et du r\u00e9cepteur :\n\n!\n\nLe paquet IP \u00e9tant encapsul\u00e9 par la trame Ethernet, les adresses IP ne sont plus directement disponibles (il faut d\u00e9sencapsuler le paquet IP pour pouvoir lire ces adresses IP), nous allons donc trouver un autre type d'adresse qui permet d'identifier l'\u00e9metteur et le r\u00e9cepteur : l'adresse MAC (Media Access Control) aussi appel\u00e9e adresse physique.\n\n!\n\nUne adresse MAC est cod\u00e9e sur 6 octets. on \u00e9crit traditionnellement les adresses MAC en hexad\u00e9cimal, chaque octet \u00e9tant s\u00e9par\u00e9s par 2 points (exemple d'adresse MAC : 00:E0:4C:68:02:11)\n\nL'adresse MAC est li\u00e9e au mat\u00e9riel, chaque carte r\u00e9seau (Ethernet ou Wifi) poss\u00e8de sa propre adresse MAC, il n'existe pas dans le monde, 2 cartes r\u00e9seau (Ethernet ou Wifi) qui poss\u00e8dent la m\u00eame adresse MAC. Les 3 premiers octets d'une adresse MAC (\"00:E0:4C\" dans l'exemple ci-dessus) d\u00e9signent le constructeur du mat\u00e9riel, par exemple, \"00:E0:4C\" d\u00e9signe le constructeur \"realtek semiconductor corp\".\n\nAu moment de l'encapsulation d'un paquet IP, l'ordinateur \"\u00e9metteur\" va utiliser un protocole nomm\u00e9 ARP (Address Resolution Protocol) qui va permettre de d\u00e9terminer l'adresse MAC de l'ordinateur \"destination\", en effectuant une requ\u00eate \"broadcast\" (requ\u00eate destin\u00e9e \u00e0 tous les ordinateurs du r\u00e9seau) du type : \"j'aimerais connaitre l'adresse MAC de l'ordinateur ayant pour IP XXX.XXX.XXX.XXX\". Une fois qu'il a obtenu une r\u00e9ponse \u00e0 cette requ\u00eate ARP, l'ordinateur \"\u00e9metteur\" encapsule le paquet IP dans une trame Ethernet et envoie cette trame sur le r\u00e9seau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f025f8b9-23aa-46c1-9265-53c4a593e462": {"__data__": {"id_": "f025f8b9-23aa-46c1-9265-53c4a593e462", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fe637f62-1799-40a6-a0d0-a433cc652869", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "88a307008f2161a889329ebf86dc768b725215a79ca8992acc507e21896d3d76", "class_name": "RelatedNodeInfo"}}, "text": "2) La couche application\n\nNous avons vu que le protocole TCP permet de mettre en forme les donn\u00e9es \u00e0 envoyer :\n\n!\n\nQuelle est la nature de ces donn\u00e9es mises en forme par TCP ?\n\nEn faite, TCP effectue lui aussi une encapsulation, les donn\u00e9es encapsul\u00e9es par TCP peuvent \u00eatre de plusieurs natures :\n\nNous allons tr\u00e8s prochainement \u00e9tudier le protocole HTTP. Les requ\u00eates et les r\u00e9ponses HTTP sont encapsul\u00e9s par TCP, au bout du compte et en r\u00e9sum\u00e9, nous avons donc :\n\n!\n\nTCP encapsule aussi d'autres types de requ\u00eates (et r\u00e9ponses), par exemple FTP (File Transfer Protocol) qui permet d'envoyer sur un r\u00e9seau des fichiers (texte, son, image...), SMTP (Simple Mail Transfer Protocol) qui permet d'envoyer des emails, DNS (Domain Name Server) qui permet d'avoir la correspondance entre une adresse IP et une URL,...\n\nIl est donc aussi possible d'avoir :\n\n!\n\nOn dit que tous ces protocoles (HTTP, FTP, SMTP, DNS,...) appartiennent \u00e0 la couche \"Application\" du mod\u00e8le TCP/IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 971, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd587f43-e4f6-44e5-8b39-d17f5e047167": {"__data__": {"id_": "dd587f43-e4f6-44e5-8b39-d17f5e047167", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5533b6a-8a4b-44ca-9805-ace99f29d4f7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "2f8a5af5edfb68fe716dd5620a21868ef5c38dd8e922cf1413dd2bd120e4683a", "class_name": "RelatedNodeInfo"}}, "text": "3) Le mod\u00e8le des couches TCP/IP\n\nEn effet, \u00e0 chaque phase d'encapsulation on associe ce que l'on appelle une couche :\n\n- comme nous l'avons vu les protocoles HTTP, FTP, SMTP, DNS,... sont associ\u00e9s \u00e0 la couche \"Application\"\n\n- les protocoles TCP et UDP sont associ\u00e9s \u00e0 la couche \"Transport\"\n\n- le protocole IP est associ\u00e9 \u00e0 la couche \"Internet\"\n\n- les trames Ethernet (ou Wifi) sont associ\u00e9es \u00e0 la couche \"Acc\u00e8s r\u00e9seau\"\n\nOn pr\u00e9sente souvent ces diff\u00e9rentes couchent sur ce type de sch\u00e9ma :\n\n\n!\n\nLa couche du \"dessous\" encapsule la couche situ\u00e9e \"au dessus\"\n\nOn nomme ce syst\u00e8me de couche \"mod\u00e8le de couches TCP/IP\" (car ce mod\u00e8le repose principalement sur TCP et IP)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "309badbd-b786-435b-a554-ea35a0445f1f": {"__data__": {"id_": "309badbd-b786-435b-a554-ea35a0445f1f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f8cfb095-26e5-456f-bac8-70c3ec1eeedf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "bb6fe4a20451ae101b8e89e9f6893d0ba3a377838331ebde9ddfa8110d669b40", "class_name": "RelatedNodeInfo"}}, "text": "4) Le mod\u00e8le des couches OSI\n\nIl existe un autre mod\u00e8le de couche, le mod\u00e8le OSI (Open Systems Interconnection), ce syst\u00e8me est ant\u00e9rieur au mod\u00e8le TCP/IP puisqu'il date des ann\u00e9es 1970. Ce mod\u00e8le est principalement th\u00e9orique et \u00e0 permis de poser les bases des communications r\u00e9seau. Ce mod\u00e8le est compos\u00e9 de 7 couches (alors que le mod\u00e8le TCP/IP est compos\u00e9 de 4 couches).\n\n!\n\nIl existe des liens entre le mod\u00e8le OSI et le mod\u00e8le TCP/IP (par exemple on retrouve le protocole IP dans la couche 3 du mod\u00e8le OSI et TCP dans la couche 4), mais parfois comparer les 2 mod\u00e8les peut \u00eatre d\u00e9licat.\n\nCe mod\u00e8le est donn\u00e9 ici \u00e0 titre d'information (pour le cas o\u00f9 vous le rencontriez pendant vos recherches sur Internet), mais le principal est de retenir ce qui a \u00e9t\u00e9 vu sur le mod\u00e8le TCP/IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 784, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "010c88cd-61da-4343-ab9b-98fd4253ded4": {"__data__": {"id_": "010c88cd-61da-4343-ab9b-98fd4253ded4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18r.md", "file_name": "c18r.md", "file_size": 784, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "983ab04b-67e8-4a36-946d-4ea77a69a0f1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18r.md", "file_name": "c18r.md", "file_size": 784, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "e5e0122d171a38c8517953d76e0cf9c63943946a37f2f0d680b4c7171e937cd1", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nLes communications r\u00e9seau sont bas\u00e9es sur des syst\u00e8mes de couches.\nLe mod\u00e8le des couches TCP/IP :\n\n!\n\nDans ce mod\u00e8le un protocole de la couche application est encapsul\u00e9 par un des protocoles de la couche transport qui est lui-m\u00eame encapsul\u00e9 par le protocole de la couche internet qui est lui-m\u00eame encapsul\u00e9 par un des protocoles de la couche acc\u00e8s r\u00e9seau.\n\nPar exemple, si une personne consulte une page web depuis un ordinateur reli\u00e9 au r\u00e9seau par l\u2019interm\u00e9diaire d\u2019un c\u00e2ble Ethernet, on aura :\n\n!\n\nSi une personne consulte une page web depuis un ordinateur reli\u00e9 au r\u00e9seau par le wifi, le  sch\u00e9ma restera identique \u00e0 une exception pr\u00e8s : la Trame Ethernet sera remplac\u00e9e par une  trame wifi.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 717, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9aad4da4-9bfa-46c3-bdfc-91c4f0bf3ad0": {"__data__": {"id_": "9aad4da4-9bfa-46c3-bdfc-91c4f0bf3ad0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4d7d2b8-9b98-4034-a73f-c170823c42c7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "848d6bc9833273d8fcce913c0262c9b69c664b56ccbb22f840f60645defdbabb", "class_name": "RelatedNodeInfo"}}, "text": "Apr\u00e8s la th\u00e9orie, passons maintenant \u00e0 la pratique. Il est un peu difficile de mettre en place un r\u00e9seau pour effectuer quelques tests. \u00c0 la place, nous allons utiliser un simulateur de r\u00e9seau. Il existe diff\u00e9rents types de simulateurs : du plus simple au plus \"professionnel\". Nous allons utiliser un simulateur relativement simple \u00e0 prendre en main, mais suffisamment performant : Filius\n\nAvant de visionner une petite vid\u00e9o qui devrait vous aider \u00e0 prendre en main Filius, quelques petites indications\n\nNous allons utiliser deux commandes dans la vid\u00e9o :\n\n- *ipconfig* qui permet de connaitre la configuration r\u00e9seau de la machine (adresse IP, adresse MAC...) sur laquelle est ex\u00e9cut\u00e9e cette commande (\"ipconfig\" est une v\u00e9ritable commande sous Windows de Microsoft, sous les syst\u00e8mes de type Unix (Linux ou macOS par exemple), la commande \u00e9quivalente est \"ifconfig\")\n\n- *ping* qui permet d'envoyer des paquets de donn\u00e9es d'une machine A vers une machine B. Si la commande est ex\u00e9cut\u00e9e sur la machine A, le *ping* devra \u00eatre suivi par l'adresse IP de la machine B (par exemple, si l'adresse IP de B est \"192.168.0.2\", on aura *ping 192.168.0.2*)\n\nAutre chose \u00e0 retenir, vous allez peut-\u00eatre apercevoir dans cette vid\u00e9o un \"netmask\" (masque de r\u00e9seau en fran\u00e7ais), vous devez juste savoir que :\n\n- pour une adresse du type a.b.c.d/8, on a un netmask qui est \"255.0.0.0\"\n\n- pour une adresse du type a.b.c.d/16, on a un netmask qui est \"255.255.0.0\"\n\n- pour une adresse du type a.b.c.d/24, on a un netmask qui est \"255.255.255.0\"", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1529, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72307c78-e8bd-48a2-a763-8cf63f5f8a69": {"__data__": {"id_": "72307c78-e8bd-48a2-a763-8cf63f5f8a69", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08f96ec4-fb60-481d-a092-ad7f2c318769", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f5354c605be1aff12a2fbec828e2dfdfc523a373533be7108a62af35bd18716e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 19.1\n\nVous pouvez maintenant visionner la vid\u00e9o :\n\nhttps://www.youtube.com/watch?v=nzuRSOwdF5I", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 105, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a57fe735-1341-4b71-87fe-8a3ccda462c4": {"__data__": {"id_": "a57fe735-1341-4b71-87fe-8a3ccda462c4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43e3f5ee-b6d1-4815-85e6-dfea6d8d3fb6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8724b12540b1b6c547c36b1873f57b31210f9a3ab1c776ebb2dfafd9e7347946", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 19.2\n\nEn utilisant Filius, cr\u00e9ez un r\u00e9seau de 4 machines (M1, M2, M3 et M4). L'adresse IP de la machine M1 est *192.168.1.1/24*, choisissez les adresses IP des machines M2, M3 et M4.\n\nEffectuez un *ipconfig* sur la machine *M1* afin de v\u00e9rifier son adresse IP et de d\u00e9terminer son adresse MAC (adresse physique)\n\nEffectuez un *ping* de la machine M2 vers la machine M4.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 380, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cb578be-fcfd-47a4-8d14-566b168c936d": {"__data__": {"id_": "3cb578be-fcfd-47a4-8d14-566b168c936d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d88ac874-a14c-49ab-8ad1-4ae556169cb2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "d58d3b8f56fff3c82a88283170fdecbf8465e8788c4dc5ca874072b8e425414f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.1\n\nPour \u00e9crire nos programmes en Python, nous utiliserons le logiciel Spyder.\n\nUne fois Spyder lanc\u00e9 (attention de bien choisir Spyder3 ou sup\u00e9rieur et surtout pas Spyder2.7), vous devriez obtenir quelque chose qui ressemble \u00e0 cela :\n\n!\n\nSpyder se divise en plusieurs fen\u00eatres, deux fen\u00eatres vont principalement nous int\u00e9resser : la fen\u00eatre \"\u00e9diteur\" et la fen\u00eatre \"console\".\n\nDans la fen\u00eatre \"\u00e9diteur\", saisissez le programme suivante :\n\n```\nprint(\"hello world !\")\n```\n\nCliquez sur le \"triangle vert\" afin d'ex\u00e9cuter le programme qui vient d'\u00eatre saisi.\n\n!\n\nSpyder va vous demander d'enregistrer le programme, enregistrez-le dans un dossier qui vous servira de dossier de travail\n\nVous devez voir le message \"hello world !\" appara\u00eetre dans la console\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ff8b60e-9d79-4fd3-873a-a0f9f42040d8": {"__data__": {"id_": "9ff8b60e-9d79-4fd3-873a-a0f9f42040d8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27dae3a0-8bd1-4ed4-afe7-89ccc2ee3bd8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "4110d93f8b5bb94561c6f728eee9c66c5ab1d16a27586f66d2d30d5fe34aad95", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.2\n\nDans la partie \"\u00e9diteur\" de Spyder, saisissez le code suivant :\n\n```\npoint_de_vie = 15\n```\n\n!\n\nApr\u00e8s avoir ex\u00e9cut\u00e9 le programme en cliquant sur le triangle vert, il est possible de connaitre la valeur de la variable *point_de_vie*  en tapant le nom de la variable dans la \"console\" de Spyder.\n\nTapez *point_de_vie* dans la partie console\n\n!\n\nApr\u00e8s avoir appuy\u00e9 sur la touche \"Entr\u00e9e\", vous devriez voir la valeur associ\u00e9e au nom point_de_vie s'afficher dans la console.\n\n!\n\nN.B. : Dans la suite la proc\u00e9dure sera toujours la m\u00eame :\n\n- Vous utiliserez la partie \"\u00e9diteur\" pour saisir votre programme\n- vous utiliserez la partie \"console\" pour afficher la valeur d'une variable", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eefd07a9-e331-41ed-873d-dab50ab38e84": {"__data__": {"id_": "eefd07a9-e331-41ed-873d-dab50ab38e84", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ecaff489-ed15-4e3c-a4ee-c62df85b0115", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "da66b64eb6199742d7942f2cdcdbdde370e2beeeb91244eb43dda13861aa123f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.3\n\nSi vous n'avez pas la possibilit\u00e9 d'utiliser Spyder (ou tout autres \u00e9diteurs), vous pouvez utiliser l'outil en ligne basthon \u00e0 l'adresse https://basthon.fr/\n\nVoici la page d\u2019accueil de basthon :\n\n!\n\nUne fois sur cette page d'accueil, cliquez sur *Console*, vous devriez alors avoir ceci :\n\n!\n\nVous allez retrouvez ce que nous avons d\u00e9j\u00e0 vu avec Spyder : \u00e0 gauche vous avez l'\u00e9diteur et \u00e0 droite la console.\n\nDans la partie \"\u00e9diteur\" de Basthon, saisissez le code suivant :\n\n```\npoint_de_vie = 15\n```\nCliquez ensuite sur le bouton *Ex\u00e9cuter*\n\nVous pouvez ici aussi utiliser la console pour conna\u00eetre la valeur d'une variable :\n\nTapez *point_de_vie* dans la partie console de Basthon et appuyez sur \"Entr\u00e9e\"\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 724, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c90276f-3741-4195-bf91-7a0009dbec0c": {"__data__": {"id_": "4c90276f-3741-4195-bf91-7a0009dbec0c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99d0dad8-8b01-43bb-a5ac-16a95ba5e308", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "45385ea325ca730fbb3ad216939782da5150f12843513aded461902eb9906d60", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.4\n\nTestez le programme suivant :\n\n```python\na = 5.2\nb = 12\n```\n\napr\u00e8s  avoir ex\u00e9cut\u00e9 ce programme, tapez type(a) puis type(b) dans la console.\n\nV\u00e9rifiez que le type de la variable *a* est float et le type de la variable *b* est *int*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 246, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a17a7264-e379-4658-9498-5087a9eacfc0": {"__data__": {"id_": "a17a7264-e379-4658-9498-5087a9eacfc0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d7150cd-1ef1-4770-a987-ff33577db69b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "f1b0d0ebc00ea4356adc10a8e61f2abf8bdaa88cd3e0d6e5f513a8c337e2bbc0", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.5\n\nQuelles sont les valeurs des variables suivantes : d, e, f, g, h et i apr\u00e8s l'ex\u00e9cution du programme ci-dessous\n\n```python\nimport math\na = 5\nb = 16\nc = 3.14 / 2\nd = b / a\ne = b // a\nf = b % a\ng = math.pow(a,2)\nh = math.sqrt(b)\ni = math.sin(c)\n```\nV\u00e9rifiez vos r\u00e9ponses \u00e0 l'aide de la console", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a59f9eb-4b78-4a1c-9f8f-408a1ad8b731": {"__data__": {"id_": "9a59f9eb-4b78-4a1c-9f8f-408a1ad8b731", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2cc697d2-4711-402d-957a-10d5d790034f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "74f4d8f69c383662a02d65afdb689b239e6c918c0f99829711acac8b178f8dd7", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.6\n\nSoit le programme suivant :\n\n\n```python\na = \"Hello\"\nb = \"World\"\nmon_expression = a + b\n```\nV\u00e9rifiez \u00e0 l'aide de la console que la variable *mon_expression* a bien pour valeur *HelloWorld*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 203, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c1ae7ba-16e6-418e-b327-c561ff572241": {"__data__": {"id_": "6c1ae7ba-16e6-418e-b327-c561ff572241", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de3cc56c-4e5a-481e-908f-1cf5db7ca40f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "3b2414d06c6f425adae11a327d7fa7065f7f6c53aa69f59573a7b5ab24f08b23", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.7\n\nSoit le programme suivant :\n\n\n```python\nmon_nombre = 5\nres = f\"Nombre de personnes : {mon_nombre}\"\n```\nV\u00e9rifiez \u00e0 l'aide de la console que la variable *res* a bien pour valeur la cha\u00eene de  caract\u00e8res *Nombre de personnes : 5*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 242, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d2d8400-5795-4ee9-a4d5-a43b42c44466": {"__data__": {"id_": "1d2d8400-5795-4ee9-a4d5-a43b42c44466", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "61e899e9-fcb7-4eb5-a5e8-8b488c3b48aa", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "8bc749c26a07d2f0a225f308d44b56217e4020ee7c8951e42a3242029dbc20a2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.8\n\nSoit la fonction suivante :\n\n```python\ndef ma_fonction(x):\n\ty = 3 * x + 2\n\treturn y \n```\nIl est possible d'utiliser la console pour \u00e9valuer une fonction pour une valeur de param\u00e8tre donn\u00e9e.\n\nApr\u00e8s avoir ex\u00e9cut\u00e9 le programme ci-dessus, tapez dans la console *ma_fonction(4)*. Vous devriez obtenir ceci :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e475a362-0834-42e7-853b-35a859bf42aa": {"__data__": {"id_": "e475a362-0834-42e7-853b-35a859bf42aa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dc42eeec-07f0-4260-9648-92022f23b934", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "2775de0c4e095ddf1b5a5db10cf6e4ef47d60f131791c64e93830da7dcc75223", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.9\n\nSoit la fonction suivante :\n\n```python\ndef ma_fonction(x,b):\n\ty = 4 * x + b\n\treturn y \n```\n\nQuelle est la valeur renvoy\u00e9e par cette fonction si on prend x = 3 et b = 3 ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 234, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7887028a-0b94-4255-8d82-398865b03cbb": {"__data__": {"id_": "7887028a-0b94-4255-8d82-398865b03cbb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d6f6dc4-9239-49ee-a327-4620e107c5a4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "b059e315d0661303e0b6cd658e4c8b6bc434b0eaae3bc2d5667d8d436b23b93b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.10\n\nSoit la fonction suivante :\n\n```python\ndef annonce(num, prov, dest):\n\tif dest != \"0\":\n\t\tmsg = f\"le train n\u00b0 {num} en provenance de {prov} et \u00e0 destination de {dest}, entre en gare.\"\n\telse:\n\t\tmsg = f\"le train n\u00b0 {num} en provenance de {prov} entre en gare. Ce train est terminus Triffouillis-les-Oies.\"\n\treturn msg\n\nmon_msg = annonce(4242, \"Paris\", \"0\")\n```\n\nQuelle est la valeur de la variable  *mon_msg* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "441169cd-79a8-4747-a8f1-d3ccbe7c3983": {"__data__": {"id_": "441169cd-79a8-4747-a8f1-d3ccbe7c3983", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ef4263d-1325-4048-a905-62a64a3d7ab9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "71420ac9d44b653e8c818b4cec320ff17cf51df5d8150e3f5757180cbeaa3a6a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.11\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a,b):\n\tif a  2 :\n\t\treturn 42\n\telse :\n\t\treturn 24\n\nval = ma_fct(6, 3)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da145994-5479-4a14-97f8-9e967dc3cdb2": {"__data__": {"id_": "da145994-5479-4a14-97f8-9e967dc3cdb2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f54a417-197d-4080-8e1e-f4172db9d94e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "e7f7ca9e6a28285f40fe99f758f412e03a5ad6f7579843eb62ec1eaaac24ca48", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.12\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a,b):\n\tif a  2 :\n\t\treturn 42\n\telse :\n\t\treturn 24\n\nval = ma_fct(6, 3)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98a7f29b-5f96-41f1-872f-2d9488b5badc": {"__data__": {"id_": "98a7f29b-5f96-41f1-872f-2d9488b5badc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2744d87a-830b-4a99-92be-da71acacb27f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "cb21784196043b7be3089aff50783c5ca72124ef3217a976a3005ec4ea2dfbba", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.13\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a,b):\n\tif a < 2 or b < 2 :\n\t\treturn 42\n\telse :\n\t\treturn 24\n\nval = ma_fct(6, 3)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a154d8e1-63f1-4c65-b257-ca5369581e6a": {"__data__": {"id_": "a154d8e1-63f1-4c65-b257-ca5369581e6a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de584ebc-9a47-432d-8088-0891090c9326", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "1f9e54f7a030e909b8c1afc536c849815c9a50950402547dd1a8bf35f5501221", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.14\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a):\n\tb = 0\n\twhile a > 2:\n\t\tb = b + 1\n\t\ta = a - 2\n\treturn b\n\t\t\nval = ma_fct(6)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0a54561-1c4e-4598-a9cc-6c2b50ea7793": {"__data__": {"id_": "c0a54561-1c4e-4598-a9cc-6c2b50ea7793", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb0fb027-0140-46aa-b131-9bdda9900a4c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "8033d2095db66d8854870eb5f547e9c93e6c1d1acfd763fdfb760d884afb70b6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.15\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a):\n\tb = 3\n\twhile a > 0:\n\t\tb = b + a\n\t\ta = a - 2\n\treturn b\n\t\t\nval = ma_fct(6)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b480466-f5c9-4c6b-83e1-e3e76b10a1f5": {"__data__": {"id_": "3b480466-f5c9-4c6b-83e1-e3e76b10a1f5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6aab538-4312-48cd-87f0-4ecd9a6ead88", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "dfd179242041ef393fa29509726377ee078430c6cbcc1811a13e14795156d0bd", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.16\n\nOn d\u00e9sire programmer une fonction qui prend en param\u00e8tre  le rayon d'un cercle et renvoie son aire :\n\n```python\nimport math\n\ndef aire_cercle(...):\n\taire = math.pi*r**2\n\treturn ...\n```\n\nCompl\u00e9tez la fonction *aire_cercle* ci-dessus (remplacez les ...), puis \u00e9crivez la documentation de cette fonction sous forme de docstring.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fe03dd9-261d-46f1-a74c-bcc245eb9e69": {"__data__": {"id_": "1fe03dd9-261d-46f1-a74c-bcc245eb9e69", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "488aa055-3487-4e1d-a7e7-0869b5781714", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "9e04bf508bfb1e50d749380ca809bde4009ee1bb5ee02ee2b4e0e968fcfcdb1c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.17\n\nOn d\u00e9sire programmer une fonction qui prend en param\u00e8tre un nombre et qui renvoie la cha\u00eene de caract\u00e8res \"pair\" si le nombre est pair et \"impair\" dans le cas contraire \n\n```python\nimport math\n\ndef pair_impair(n):\n\tif ... % 2 == 0:\n\t\treturn ...\n\telse :\n\t\treturn \"impair\"\n```\n\nCompl\u00e9tez la fonction *pair_impair* ci-dessus (remplacez les ...), puis \u00e9crivez la documentation de cette fonction sous forme de docstring.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69f0241a-6d54-4135-a345-fc495d89235e": {"__data__": {"id_": "69f0241a-6d54-4135-a345-fc495d89235e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5d10a689-3e5c-4979-829a-1683965e4874", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "1477fe25d20f3d2bded75dcab78376968cc9bf81e6ebc3e809ec838260966afa", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.18\n\nOn d\u00e9sire \u00e9crire une fonction *rebours* qui permet d'afficher un compte \u00e0 rebours \u00e0 l'\u00e9cran. Cette fonction prend en param\u00e8tre la valeur de d\u00e9part.\n\nExemple  : si on  tape dans la console *rebours(5)*, on doit obtenir :\n\n```\n5\n4\n3\n2\n1\n0\n```\n \nCompl\u00e9tez la fonction *rebours* suivante :\n\n```python\ndef rebours(n):\n\twhile ...:\n\t\tprint(n)\n\t\t...\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 362, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50dcf67c-e110-4de1-b0f8-0e266fc077a1": {"__data__": {"id_": "50dcf67c-e110-4de1-b0f8-0e266fc077a1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f47cb18d-6619-42bf-a272-fbf30b7fae2e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "2ea5e035322adfc67777313f2a2691b15640715e1554f1db339c652a8b00eff1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.19\n\nVous \u00eates g\u00e9rant d'un magasin et vous d\u00e9sirez \u00e9crire un programme Python qui calculera automatiquement le montant de la facture des clients.\n\nTout client qui ach\u00e8te au moins 5 fois le m\u00eame article se voit octroyer une remise de 5 % (uniquement sur le montant de l'achat de cet article). \n\nAfin de simplifier le probl\u00e8me, on consid\u00e8re qu'un client n'ach\u00e8te qu'un seul type d'article.\n\n\u00c9crivez une fonction *facture* qui prend en param\u00e8tre le prix unitaire de l'article et le nombre d'articles achet\u00e9s. Cette fonction doit renvoyer le montant de la facture.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c6a8010-2b5c-4504-a504-4e8035030e30": {"__data__": {"id_": "0c6a8010-2b5c-4504-a504-4e8035030e30", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7a6e0fa-4f38-4872-bee5-7ea7dc5bfad5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "f4c9d5e386cc10599708c62308b9baae0a4bdad99c4b687776bfcac74566e20a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.20\n\nVous allez cr\u00e9er \"un g\u00e9n\u00e9rateur automatique de punition\" :\n\n\u00c9crivez une fonction *punition* qui prendra 2 param\u00e8tres : une cha\u00eene de caract\u00e8re et un nombre entier\n\nPar exemple :\n\nSi on passe comme param\u00e8tres \u00e0 notre fonction : \"Je ne dois pas discuter en classe\" et 3\n\nLa fonction devra permettre d'afficher :\n\nJe ne dois pas discuter en classe\n\nJe ne dois pas discuter en classe\n\nJe ne dois pas discuter en classe", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 431, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbb39311-9340-4697-bf79-0bbfc54c819d": {"__data__": {"id_": "dbb39311-9340-4697-bf79-0bbfc54c819d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a689760-a3e3-4751-a089-b60c342b53d8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "71211fe111333dae7213955610701d8593d26768bde8a5a0de9dcb781fe9e4a7", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.21\n\n\u00c9crivez une fonction *multi* permettant d'afficher une table de multiplication. Cette fonction devra prendre en param\u00e8tre la table d\u00e9sir\u00e9e.\n\nPar exemple si l'on passe le param\u00e8tre 3 \u00e0 la fonction, la fonction devra permettre d'afficher :\n\n```\n1 x 3 = 3\n\n2 x 3 = 6\n\n...\n\n...\n\n10 x 3 = 30\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b904ab90-84bf-4a97-8d40-e6017b8a269c": {"__data__": {"id_": "b904ab90-84bf-4a97-8d40-e6017b8a269c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9954fb5-57e1-4429-abbf-926d5b0a1581", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "f968c853438568c4e87119b6a06f0e4718db030603707cfc620fcd8739788359", "class_name": "RelatedNodeInfo"}}, "text": "1) Programmer un ordinateur, c'est quoi ?\n\nProgrammer un ordinateur, c'est quoi ?\nProgrammer, c'est cr\u00e9er des programmes (suite d'instructions donn\u00e9es \u00e0 l'ordinateur) ! Un ordinateur sans programme ne sait rien faire. Il existe diff\u00e9rents langages qui permettent de programmer un ordinateur, mais le seul directement utilisable par le processeur est le langage machine (suite de 1 et de 0). Aujourd'hui (presque) plus personne ne programme en langage machine (trop compliqu\u00e9).\n\nLes informaticiens utilisent des instructions (mots souvent en anglais) en lieu et place de la suite de 0 et de 1. Ces instructions, une fois \u00e9crites par le programmeur, sont \"traduites\" en langage machine. Un programme sp\u00e9cialis\u00e9 assure cette traduction. Ce syst\u00e8me de traduction s'appellera interpr\u00e9teur ou bien compilateur, suivant la m\u00e9thode utilis\u00e9e pour effectuer la traduction.\n\nIl existe 2 grandes familles de langages de programmation :\n\n- Les langages de bas niveau sont tr\u00e8s complexes \u00e0 utiliser, car tr\u00e8s \u00e9loign\u00e9s du langage naturel, on dit que ce sont des langages \u00ab proches de la machine \u00bb, en contrepartie ils permettent de faire des programmes tr\u00e8s rapides \u00e0 l'ex\u00e9cution. L'assembleur est le langage de bas niveau. Certains \"morceaux\" de programmes sont \u00e9crits en assembleur encore aujourd'hui.\n\n- Les langages de haut niveau sont eux plus \"faciles\" \u00e0 utiliser, car plus proches du langage naturel (exemple : si a=3 alors b=c). Exemples de langages de haut niveau : C, C++ , Java, Python...\n\nEn NSI, notre langage de pr\u00e9dilection sera Python.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4937198d-9ed4-4cc0-97ad-077eedacefab": {"__data__": {"id_": "4937198d-9ed4-4cc0-97ad-077eedacefab", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ab673d5-4f0d-4d95-8f00-ec2f69e6b4f1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "9128d094cf85ec3048ac63050a2d8c54f57d3a9eeadffdbf9f1a0011987886d5", "class_name": "RelatedNodeInfo"}}, "text": "2) Notion de variable\n\nD\u00e9finition du mot ordinateur d'apr\u00e8s \"Le Petit Larousse\" :\n\n\"Machine automatique de traitement de l'information, ob\u00e9issant \u00e0 des programmes form\u00e9s par des suites d'op\u00e9rations arithm\u00e9tiques et logiques.\"\n\nQui dit \"traitement de l'information\", dit donc donn\u00e9es \u00e0 manipuler. Un programme \"passe\" donc son temps \u00e0 traiter des donn\u00e9es. Pour pouvoir traiter ces donn\u00e9es, l'ordinateur doit les ranger dans sa m\u00e9moire (RAM - Random Access Memory). La RAM se compose de cases dans lesquelles nous allons ranger ces donn\u00e9es (une donn\u00e9e dans une case). Chaque case a une adresse (ce qui permet au processeur de savoir o\u00f9 sont rang\u00e9es les donn\u00e9es).\n\nAlors, qu'est-ce qu'une variable ?\n\nEh bien, c'est une petite information (une donn\u00e9e) temporaire que l'on stocke dans une case de la RAM. On dit qu'elle est \"variable\", car c'est une valeur qui peut changer pendant le d\u00e9roulement du programme.\n\nUne variable est constitu\u00e9e de 2 choses :\n\n- une valeur pr\u00e9sente en m\u00e9moire (par exemple le nombre entier 5)\n\n- un nom\n\nOn dira donc qu'une variable est l'association d'un nom et d'une valeur\n\n```python\ni = 12\n```\nGr\u00e2ce \u00e0 cette ligne, nous avons d\u00e9fini une variable qui porte le nom i. Ce nom i est associ\u00e9 \u00e0 la valeur 12.\n\nIl est aussi possible d'associer un nom \u00e0 un nombre \u00e0 virgule  :\n\n```python\ni = 5.2\n```\nJ'attire votre  attention que nous utilisons un point \u00e0 la place d'une virgule (convention anglo-saxonne).\n\nUn nom peut donc \u00eatre associ\u00e9 \u00e0 plusieurs types d'entit\u00e9s (pour l'instant nous n'en avons vu que deux, mais nous en verrons d'autres plus loin) : les nombres entiers (\"integer\" en anglais, abr\u00e9g\u00e9 en \"int\") et les nombres \u00e0 virgule (\"float\" en anglais). Il est possible de connaitre le type de l'entit\u00e9 \u00e0 l'aide de l'instruction \"type\".\n\n```python\na = 5\nb = 5.4\n```\nun *type(a)* donnera comme r\u00e9sultat *int* alors qu'un *type(b)* donnera *float*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5fae3ae-8786-41c7-a120-01466abdddd9": {"__data__": {"id_": "d5fae3ae-8786-41c7-a120-01466abdddd9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdd76871-255c-4da2-8be6-fd9ad384ac08", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "d1324a70a72e164f9f4a69a272ca3972c76e22a0f0a1fc8b55a6d3c596b33104", "class_name": "RelatedNodeInfo"}}, "text": "3) un peu de calculs\n\nUn ordinateur est bien \u00e9videmment capable d'effectuer des op\u00e9rations math\u00e9matiques (arithm\u00e9tiques).\n\nLes signes utilis\u00e9s sont classiques : +, - , * (multiplication), / (division), // (division euclidienne) ou encore % (modulo : reste d'une division euclidienne).\n\nIl est tout \u00e0 fait possible d'effectuer des op\u00e9rations directement avec des nombres, mais il est aussi possible d'utiliser des variables.\n\n```python\na = 5\nb = 16\nc = 3.14 / 2\nd = b / a\ne = b // a\nf = b % a\ng = a + b\nh = a\n```\n\nConsid\u00e9rons maintenant le programme suivant :\n\n```python\na = 11\na = a + 1\n```\nD'apr\u00e8s  vous, quelle est la valeur de la variable *a* apr\u00e8s l'ex\u00e9cution du programme ci-dessus ?\n\nLa r\u00e9ponse est 12.\n\nD\u00e9taillons ce qui se passe dans ce programme :\n\nNous cr\u00e9ons une variable : le nom a est associ\u00e9 \u00e0 l'entier 11. La suite est un peu plus complexe, mais tr\u00e8s importante \u00e0 comprendre. Il va falloir lire la ligne a = a + 1 de droite \u00e0 gauche, d\u00e9cortiquons cette ligne :\n\n- a + 1 : nous prenons la valeur actuelle associ\u00e9e au nom a (c'est-\u00e0-dire 11) et nous ajoutons 1 \u00e0 11, \u00e0 droite de l'\u00e9galit\u00e9 nous avons donc maintenant la valeur 12\n- nous associons la valeur qui vient d'\u00eatre calcul\u00e9e au nom a\n\nDonc la valeur de a est bien 12\n\nCe raisonnement peut \u00eatre g\u00e9n\u00e9ralis\u00e9 pour \u00e9viter des erreurs parfois difficiles \u00e0 corriger : dans une \u00e9galit\u00e9, commencer toujours par \u00e9valuer l'expression se trouvant \u00e0 droite du signe \u00e9gal.\n\nL'op\u00e9ration \n```python\na = a + 1\n```\nse nomme une incr\u00e9mentation.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f8b68945-e0f7-4b64-805a-093d57434b6a": {"__data__": {"id_": "f8b68945-e0f7-4b64-805a-093d57434b6a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a70e06f-f672-4459-b54f-7cbb1f07e74d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "61d0d20590c9e594f7d905ee4144440d2c3343c145ce3830fa2bae9d643b6ee3", "class_name": "RelatedNodeInfo"}}, "text": "4)  cha\u00eenes de caract\u00e8res", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 27, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab3bcd9d-fbdc-4e9c-9cc6-d9ef60b19ce5": {"__data__": {"id_": "ab3bcd9d-fbdc-4e9c-9cc6-d9ef60b19ce5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "668ce929-808a-4a41-9018-40cbda109732", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "3aa3aee0d8b221ee9776f19a8ad0143c53725e3eea3d6ba2b68eddc5d9d5d807", "class_name": "RelatedNodeInfo"}}, "text": "a) notion de cha\u00eene de caract\u00e8res\n\n\nOn peut aussi associer des noms \u00e0 des suites de caract\u00e8res que l'on appelle \"cha\u00eene de caract\u00e8res\".\n\n```python\nma_chaine = \"Bonjour le monde !\"\n```\n\nLe contenu de la variable *ma_chaine* est de type *string* et donc un *type(ma_chaine)* donnera un *str* (abr\u00e9viation de string en Python)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 325, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "324f2baa-f815-4501-a020-2e1e49afa0ea": {"__data__": {"id_": "324f2baa-f815-4501-a020-2e1e49afa0ea", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "acd00401-7781-4ade-8aab-b522831a8b56", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "730746b10e9671b7a6ba7a671cc233d459f58460e9887e3455c01cd309e1bc09", "class_name": "RelatedNodeInfo"}}, "text": "b)  le signe + et les cha\u00eenes de caract\u00e8res\n\nL'utilisation du signe + ne se limite pas \u00e0 l'addition. Il est aussi utilis\u00e9 pour la concat\u00e9nation.\n\nD'apr\u00e8s Wikip\u00e9dia :\n\n\u00ab Le terme concat\u00e9nation (substantif f\u00e9minin), du latin cum (\u00abavec\u00bb) et catena(\u00abcha\u00eene, liaison\u00bb), d\u00e9signe l'action de mettre bout \u00e0 bout au moins deux cha\u00eenes. \u00bb\n\nSi on consid\u00e8re le programme suivant :\n\n```python\na = \"Hello\"\nb = \"World\"\nmon_expression = a + b\n```\napr\u00e8s l'ex\u00e9cution de ce programme, la variable *mon_expression* aura pour valeur  *HelloWorld*\n\nIl est aussi possible de concat\u00e9ner une cha\u00eene de caract\u00e8res et une ou plusieurs variables :\n\n```python\nma_chaine_1 = \"Bonjour \"\nma_chaine_2 = \"le \"\nres = ma_chaine_1 + ma_chaine_2 + \"monde!\"\n```\nApr\u00e8s l'ex\u00e9cution de ce programme, la variable  *res*  aura pour valeur *Bonjour le  monde!*\n\nLes 2 noms ma_chaine_1 et ma_chaine_2 sont associ\u00e9s \u00e0 2 cha\u00eenes de caract\u00e8res, nous avons donc bien ici une concat\u00e9nation.\n\nQue se passe-t-il si nous avons ce cas de figure :\n\n```python\na = \"Nombre de pommes : \"\nb = 4 \nc = a + b\n```\na est de type *str* alors que b est de type *int*. Le signe plus repr\u00e9sente une addition ou une concat\u00e9nation ? Ni l'un, ni l'autre, puisque Python vous renverra une erreur : il ne peut pas concat\u00e9ner un entier et une cha\u00eene de caract\u00e8re.\n\nLa solution : transformer le nombre 4 en caract\u00e8re 4 \u00e0 l'aide du mot cl\u00e9 *str*:\n\n```python\na = \"Nombre de pommes : \"\nb = 4 \nc = a + str(b)\n```\nnous avons maintenant une concat\u00e9nation, car *str(4)* est de type string.\n\nAutre solution pour faire cohabiter des variables de type *int* ou *float* avec des variables de type *str* : les *fstring* (attention les *fstring* sont uniquement disponible \u00e0 partir de Python 3.5)\n\nIl est possible d'\u00e9crire :\n\n```python\na = \"Nombre de pommes :\"\nb = 4 \nc = f\"{a} {b}\"\n```\napr\u00e8s l'ex\u00e9cution du programme ci-dessus, la variable *c* aura pour valeur \"Nombre de pommes : 4\"\n\nDans la cha\u00eene de caract\u00e8re, *{a}* sera remplac\u00e9 par la valeur de la variable *a*, c'est \u00e0 dire *Nombre de pommes :*. M\u00eame chose avec *{b}* qui sera remplac\u00e9 par la valeur de b, c'est \u00e0 dire 4.\n\nautre exemple d'utilisation des fstring :\n\n```python\nnum_train = 4232\ndest = \"Paris\" \nc = f\"Le train n\u00b0{num_train} \u00e0 destination de {dest} entre en gare\" \n```\n\napr\u00e8s l'ex\u00e9cution du programme ci-dessus, la variable *c* aura pour valeur \"Le train n\u00b04232 \u00e0 destination de Paris entre en gare\"\n\nNotez la pr\u00e9sence du \"f\" juste avant le guillemet et des accolades qui encadrent le nom de la variable. Il est n\u00e9cessaire d'ajouter ce \"f\" pour avoir une fstring.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62f0bb1d-a719-407c-973d-76de9b69c920": {"__data__": {"id_": "62f0bb1d-a719-407c-973d-76de9b69c920", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d0054dde-962d-4504-928b-7302bbbc16bf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "589b646a5b50680f69664f2a247692a8d2277d82491ae82e6286fb059d9f771d", "class_name": "RelatedNodeInfo"}}, "text": "5) les  fonctions", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 19, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d69ba55-5cb9-48ee-bc23-f441e4a88ce2": {"__data__": {"id_": "1d69ba55-5cb9-48ee-bc23-f441e4a88ce2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7e486aab-be09-4ba0-b73f-ee840e454b37", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "00a77e5ad57cd685a0866338bd0a8d620d948173677267e01bcbf9c077f22258", "class_name": "RelatedNodeInfo"}}, "text": "a) notion de fonction\n\nLes fonctions permettent de d\u00e9composer un programme complexe en une s\u00e9rie de sous-programmes plus simples. De plus, les fonctions sont r\u00e9utilisables : si nous disposons d'une fonction capable de calculer une racine carr\u00e9e, par exemple, nous pouvons l'utiliser un peu partout dans notre programme sans avoir \u00e0 la r\u00e9\u00e9crire \u00e0 chaque fois (on parle de factorisation du code)\n\nLa notion de fonction en informatique est comparable \u00e0 la notion de fonction en math\u00e9matiques.\n\n!\n\nSi nous avons y = 3x+2, pour une valeur donn\u00e9e de x, nous aurons une valeur de y.\n\nExemple : x=4 donc y= 14 (y = 3.4+2=14, attention ici le point correspond au signe \"multipli\u00e9\").\n\nLa fonction en informatique est bas\u00e9e sur la m\u00eame id\u00e9e :\n\n!\n\nVoici la syntaxe employ\u00e9e en Python pour d\u00e9finir une fonction :\n\n```\ndef nom_de_la_fonction(parametre):\n\tinstruction_1\n\tinstruction_2\n\treturn y\nsuite programme\n```\n\nLa fonction renvoie la valeur associ\u00e9e \u00e0 y.\n\nATTENTION : Notez bien la pr\u00e9sence du d\u00e9calage entre la premi\u00e8re ligne et les lignes suivantes. Ce d\u00e9calage est appel\u00e9 indentation, l'indentation permet de d\u00e9finir un bloc de code. Dans l'exemple ci-dessus, l'indentation nous permet de savoir que \"instruction_1\", \"instruction_2\" et \"return y\" constituent un bloc de code, ce bloc correspond au contenu de la fonction. \"suite programme\" ne fait pas partie de la fonction, car il n'est pas indent\u00e9. Pour indenter du code, il y a 2 solutions : mettre 4 espaces ou utiliser une tabulation. En Python il est conseill\u00e9 d'utiliser les 4 espaces, mais ce n'est pas une obligation. Une chose est s\u00fbre, une fois que vous avez choisi une m\u00e9thode, n'en chang\u00e9 surtout pas au cours d'un m\u00eame programme !\n\nCodons notre exemple (y=3x+2) en cr\u00e9ant une fonction ma_fonction :\n\n```python\ndef ma_fonction(x):\n\ty = 3 * x + 2\n\treturn y\n```\nPour \"utiliser\" la fonction ma_fonction, il suffit d'\u00e9crire : ma_fonction (4) (dans ce cas pr\u00e9cis, notre fonction renverra le nombre 14 : x sera \u00e9gale \u00e0 4 dans la fonction on aura donc le calcul 3 . 4 + 2 = 12  + 2 = 14)\n\n\nSi on consid\u00e8re cet exemple  :\n\n```python\ndef ma_fonction(x):\n\ty = 3 * x + 2\n\treturn y\nsolution = ma_fonction(4)\n```\n\nApr\u00e8s l'ex\u00e9cution de ce programme, la valeur de la variable *solution* sera 14. En effet, au moment de l'ex\u00e9cution de notre programme le code *ma_fonction(4)* sera syst\u00e9matiquement remplac\u00e9 par la valeur renvoy\u00e9e par la fonction. Dans notre exemple le *ma_fonction(4)* sera remplac\u00e9 par le nombre 14, d'o\u00f9 la  valeur 14 pour la variable *solution*.\n\nIl est possible de passer plusieurs param\u00e8tres \u00e0 une fonction :\n\n```python\ndef ma_fonction(x, b):\n\ty = 2 * x + b\n\treturn y\nsolution = ma_fonction(4, 3)\n```\nDans  ce cas,  dans  la fonction, le param\u00e8tre *x* sera \u00e9gal \u00e0 4 et le param\u00e8tre *b* \u00e0 3 (attention \u00e0 l'ordre des param\u00e8tres). On a aura donc la variable *solution* qui aura pour valeur  11 (2.4 + 3 = 11) apr\u00e8s l'ex\u00e9cution de ce programme.\n\nLes param\u00e8tres peuvent \u00eatre des cha\u00eenes de caract\u00e8res (ainsi que la valeur retourn\u00e9e)\n\n```python\ndef dit_bonjour(nom, age):\n\tphrase = f\"Bonjour {nom}, vous avez {age} ans.\"\n\treturn phrase\np = dit_bonjour(\"toto\", 16) \n```\nApr\u00e8s l'ex\u00e9cution de ce programme, la variable p aura  pour valeur la cha\u00eene de caract\u00e8res \"Bonjour toto, vous avez 16 ans\"\n\n**Attention** : remarquez bien les guillemets autour du param\u00e8tre \"toto\" (c'est une cha\u00eene de caract\u00e8res)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "974f9fd3-f1bf-4174-9ecc-54ffa2d73809": {"__data__": {"id_": "974f9fd3-f1bf-4174-9ecc-54ffa2d73809", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4343fd10-09cc-462f-b2a9-a73b15546b41", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "5d1adc8f503a7487a2e783fb44515a936b4d40a7c2e4d321a80632393d5bf7e5", "class_name": "RelatedNodeInfo"}}, "text": "b) les fonctions natives de python\n\nPython propose des fonction pr\u00eates \u00e0 \u00eatre utilis\u00e9es par le programmeur : les fonctions natives (built-in function en anglais). Nous avons d\u00e9j\u00e0 eu l'occasion d'en voir deux avec *type* (qui renvoie le type d'une variable) et *str* qui renvoie la cha\u00eene de caract\u00e8re obtenue \u00e0 partir d'un nombre (*str(4)* renvoie le caract\u00e8re 4). Il existe beaucoup d'autres fonctions natives Python (il en existe plus de 50). Dans l'imm\u00e9diat, nous allons en \u00e9tudier deux autres :\n\n- la fonction *len* prend en param\u00e8tre une cha\u00eene de caract\u00e8res et renvoie le nombre de caract\u00e8res pr\u00e9sents dans cette cha\u00eene de caract\u00e8res (par exemple *len(\"azerty\")* renvoie 6)\n\n- la fonction *print* permet d'afficher \u00e0 l'\u00e9cran la valeur qui lui est pass\u00e9e en param\u00e8tre.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e898ebd9-7ecc-4fa7-9f87-c5c1a85e1d52": {"__data__": {"id_": "e898ebd9-7ecc-4fa7-9f87-c5c1a85e1d52", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6620ff71-ec7a-4163-a83a-952c9ece79e8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "3a175e5eaea759e5622a1e87875694820a3d90e0905c3c8926afaa226face2f3", "class_name": "RelatedNodeInfo"}}, "text": "c) les modules en Python\n\nIl est possible d'utiliser d'autres fonctions \"pr\u00eates \u00e0 l'emploi\" en important des modules. Un module est un fichier contenant des fonctions qui pourront \u00eatre utilis\u00e9es dans d'autres programmes. Le module *math* est un module tr\u00e8s important puisqu'il comporte toutes les fonctions math\u00e9matiques classiques : cosinus, sinus, exposant, racine carr\u00e9e...\n\nPour utiliser les fonctions pr\u00e9sentes dans un module, il est n\u00e9cessaire d'importer le module dans notre programme. Par exemple, pour pouvoir utiliser les fonctions du module *math* il faudra \u00e9crire :\n\n```python\nimport math\n```\nau d\u00e9but de son programme.\n\nPour utiliser une fonction d'un module import\u00e9, il faudra pr\u00e9ciser le nom du module qui propose cette fonction. Par exemple, pour d\u00e9terminer le sinus de 3.14, il faudra \u00e9crire :\n```python\nmath.sin(3.14)\n```    \nVoici une s\u00e9rie de calculs qui fait appel \u00e0 des fonctions issues du module maths :\n\n```python\nimport math\n\na = 5\nb = 16\nc = 3.14\npuis = math.pow(a,3)\nracine = math.sqrt(b)\ns = math.sin(c)\n```\nApr\u00e8s l'ex\u00e9cution de ce programme :\n\n- la variable *puis* aura pour valeur 53 = 125\n- la variable *racine* aura pour valeur 4 (racine carr\u00e9e de 16)\n- la variable *s* aura pour valeur 0.05 (le sinus de 3.14 est 0.05)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1253, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "038b493a-e2e9-462d-b4ba-b006d99ad790": {"__data__": {"id_": "038b493a-e2e9-462d-b4ba-b006d99ad790", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47b1c884-3400-4a75-a5af-eb0cf3a3ac52", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "ef283ba8696ade417ac4ce2a1f50f5285595cd29397c2ff00f3f94b9490cf699", "class_name": "RelatedNodeInfo"}}, "text": "d) les fonctions et le mot cl\u00e9 return\n\nIl est possible d'\u00e9crire une fonction sans utiliser le mot cl\u00e9 *return*, cette pratique est souvent consid\u00e9r\u00e9e comme une \"mauvaise pratique\", mais Python ne renverra pas d'erreur si vous le faites. Le code suivant est tout \u00e0 fait correct :\n\n```python\ndef ma_fonction(i):\n\td = 5\n\tz = i + d\n```\n\nPour information, m\u00eame en l'absence de *return*, une fonction Python renvoie quand m\u00eame \"quelque chose\", puisqu'elle renvoie *None* qui veut dire rien...\nDans le cas ci-dessus nous aurons donc :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b288d748-8130-44aa-bd83-eeb1165ac8f7": {"__data__": {"id_": "b288d748-8130-44aa-bd83-eeb1165ac8f7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f44ebe39-9cd9-47b7-9ef6-983f891afad6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "34475050b1724195af2773d021e04e09f7b70b0209f605a8ddc529dee6fc8fac", "class_name": "RelatedNodeInfo"}}, "text": "7) Variables locales et variables globales", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 44, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2463ee44-cb6e-4cce-8e13-a47f718aa5a0": {"__data__": {"id_": "2463ee44-cb6e-4cce-8e13-a47f718aa5a0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb8c1c8d-f3d2-4e4f-8a5d-f203220203d6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "6859efc605d41ddd36496129bc26ca8850cc9715f50be9703b3d00f00643ad46", "class_name": "RelatedNodeInfo"}}, "text": "a) variables et fonctions\n\nConsid\u00e9rons le programme suivant:\n\n```python\ndef ma_fonc():\n\ti = 5\nma_fonc()\nprint (i)\n```\nNous commen\u00e7ons par d\u00e9finir une fonction *ma_fonc* qui ne prend aucun param\u00e8tre et qui ne renvoie aucune valeur (absence du mot cl\u00e9 *return*). Cette fonction attribue juste la valeur 5 a la variable ayant pour nom *i*.\n\nA la 3e ligne du programme, nous ex\u00e9cutons la fonction *ma_fonc*. \n\nRappelons que la fonction *print* permet d'afficher \u00e0 l'\u00e9cran la valeur qui lui est pass\u00e9e en param\u00e8tre. La 4e ligne de ce programme permet donc d'afficher la valeur de la variable *i* \u00e0 l'\u00e9cran.\n\nOn pourrait penser que ce programme va donc afficher 5 ! Pas du tout, nous avons le droit \u00e0 l'erreur suivante :\n\n```\nNameError: name 'i' is not defined\n```\n\nLe message d'erreur est suffisamment parlant, inutile de s'attarder dessus : la variable i n'est pas d\u00e9finie. A noter que cette erreur est d\u00e9clench\u00e9e par la 4e ligne (le *print*).\n\nPourquoi cette erreur, la variable i est bien d\u00e9finie dans la fonction *ma_fonc* et la fonction *ma_fonc* est bien ex\u00e9cut\u00e9e, o\u00f9 est donc le probl\u00e8me ?\n\nEn fait, la variable i est une variable dite locale : elle a \u00e9t\u00e9 d\u00e9finie dans une fonction et elle \"restera\" dans cette fonction. Une fois que l'ex\u00e9cution de la fonction sera termin\u00e9e, la variable i sera \"d\u00e9truite\" (supprim\u00e9e de la m\u00e9moire). Elle n'est donc pas accessible depuis \"l'ext\u00e9rieur\" de la fonction (ce qui explique le message d'erreur que nous obtenons, car le *print* est en dehors la fonction *ma_fonc*, la variable *i* n'est donc plus accessible).\n\n\u00c9tudions maintenant un cas un peu plus complexe :\n\n```python\ni = 3\ndef ma_fonc():\n\ti = 5\nma_fonc()\nprint (i)  \n```\nOn pourrait s'attendre \u00e0 voir s'afficher la valeur 5 \u00e0 l'\u00e9cran. Pas du tout, nous ne rencontrons pas d'erreur cette fois, mais c'est la valeur 3 qui s'affiche \u00e0 l'\u00e9cran.\n\nEn fait dans cet exemple nous avons 2 variables i diff\u00e9rentes : la variable i \"globale\" (celle qui a \u00e9t\u00e9 d\u00e9finie en dehors de toute fonction) et la variable i \"locale\" (celle qui a \u00e9t\u00e9 d\u00e9finie dans la fonction). Ces 2 variables portent le m\u00eame nom, mais sont diff\u00e9rentes (elles correspondent \u00e0 des cases m\u00e9moire diff\u00e9rentes). Au moment de l'ex\u00e9cution du *print* \u00e0 la 5e ligne seule la variable globale existe encore (celle d\u00e9finie \u00e0 la premi\u00e8re ligne du programme), d'o\u00f9 l'affichage du 3.\n\nUne variable globale peut \u00eatre \"utilis\u00e9e\" \u00e0 l'int\u00e9rieur d'une fonction :\n\n```python\ni = 3\ndef ma_fonc():\n\tprint (i)\nma_fonc()\n```\nAttention, le *print* se situe dans la fonction (la ligne du *print* est bien indent\u00e9e)\n\nCe programme permet d'afficher la valeur 3 \u00e0 l'\u00e9cran.\n\nQuand on cherche \u00e0 utiliser une variable dans une fonction, le syst\u00e8me va d'abord chercher si cette variable se \"trouve\" dans l'espace local de la fonction, puis, s'il ne la trouve pas dans cet espace local, le syst\u00e8me va aller rechercher la variable dans l'espace global. Pour le *print(i)* situ\u00e9 dans la fonction le syst\u00e8me ne trouve pas de variable i dans l'espace local de la fonction *ma_fonc*, il passe donc \u00e0 l'espace global et trouve la variable i (nous avons donc 3 qui s'affiche). \n\nIl est important de bien comprendre que dans la programme ci-dessous le syst\u00e8me trouve une variable i dans l'espace local de la fonction, la \"recherche\" de la variable i se serait arr\u00eat\u00e9e l\u00e0 :\n\n```python\ni = 3\ndef ma_fonc():\n\ti = 5\n\tprint (i)\nma_fonc()\n```\net ce programme affiche la valeur 5 \u00e0 l'\u00e9cran. *i* a \u00e9t\u00e9 trouv\u00e9e dans l'espace local de la fonction *ma_fonc*, la recherche ne va donc pas plus loin (inutile de remonter jusqu'\u00e0 l'espace global)\n\nEn revanche le programme ci-dessous g\u00e9n\u00e8re une erreur : \"UnboundLocalError: local variable 'i' referenced before assignment\"\n\n```python\ni = 3\ndef ma_fonc():\n\ti = i + 1\nma_fonc()\nprint(i)\n```\n\nIl n'est \u00e0 priori pas possible de modifier une variable globale (ici la variable *i*) dans une fonction.\n\nPour pouvoir modifier une variable globale dans une fonction, il faut utiliser le mot cl\u00e9 *global* :\n\n```python\ni = 3\ndef ma_fonc():\n\tglobal i\n\ti = i + 1\nma_fonc()\nprint(i)\n```\nIci, aucune erreur la valeur 4 est bien affich\u00e9e \u00e0 l'\u00e9cran.\n\nJe ne vais pas m'\u00e9tendre sur l'utilisation du mot cl\u00e9 *global* car comme  nous allons le voir maintenant, c'est une (tr\u00e8s) mauvaise pratique, car cette utilisation peut entra\u00eener des \"effets de bord\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 4290, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3039769b-7aaa-4027-a08d-9813bc1d6a0d": {"__data__": {"id_": "3039769b-7aaa-4027-a08d-9813bc1d6a0d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2195ee9e-83f6-4e5c-be4c-04088a756822", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "a7c74b66590064157eb20086e1a119c01040f91280337626b3128575e8dc4c4e", "class_name": "RelatedNodeInfo"}}, "text": "b) les effets de bord\n\nOn parle d'effet de bord quand une fonction modifie l'\u00e9tat d'une variable globale. Dans notre exemple ci-dessus, la fonction *ma_fonc* modifie bien la valeur de *i* : avant l'ex\u00e9cution de *ma_fonc*, *i* a la valeur 3, apr\u00e8s l'ex\u00e9cution de la fonction *ma_fonc*, *i* est associ\u00e9 \u00e0 la valeur 4. Nous avons donc bien un effet de bord.\n\nLes effets de bord c'est \"mal\" ! Mais pourquoi est-ce \"mal\" ?\n\nLes effets de bords provoquent parfois des comportements non d\u00e9sir\u00e9s par le programmeur (\u00e9videmment dans des programmes tr\u00e8s complexes, pas dans des cas simplistes comme celui que nous venons de voir). Ils rendent aussi parfois les programmes difficilement lisibles (difficilement compr\u00e9hensibles). \u00c0 cause des effets de bord, on risque de se retrouver avec des variables qui auront des valeurs qui n'\u00e9taient pas pr\u00e9vues par le programmeur. On dit aussi qu'\u00e0 un instant donn\u00e9, l'\u00e9tat futur des variables est difficilement pr\u00e9visible \u00e0 cause des effets de bord. En r\u00e9sum\u00e9, on \u00e9vitera autant que possible l'utilisation du \"global\".\n\nUn paradigme de programmation se propose d'\u00e9viter au maximum les effets de bords : la programmation fonctionnelle. Nous \u00e9tudierons ce paradigme de programmation en terminale.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb50b032-681b-4346-b511-b5b143b55ff6": {"__data__": {"id_": "eb50b032-681b-4346-b511-b5b143b55ff6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "116783a5-5cb5-4bd9-96d2-cff32f4fe96d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "47b3cf2b1c3cede049b0dc327d1500d72fcc72c7c177507923ef9dd3ed6e2fed", "class_name": "RelatedNodeInfo"}}, "text": "8) les expressions et les bool\u00e9ens", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 36, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29bb055a-f051-4fb3-bffc-3f195273c064": {"__data__": {"id_": "29bb055a-f051-4fb3-bffc-3f195273c064", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a707d493-9ad4-47f8-8c8b-9b324506b59b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "1d2b934139bf888441c84958c984b1730b2f224c19e95548ca1e435c2da4ee22", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nSi quelqu'un vous dit que \"4 est \u00e9gal \u00e0 5\", vous lui r\u00e9pondez quoi ? \"c'est faux\". Si maintenant la m\u00eame personne vous dit que \"7 est \u00e9gal \u00e0 7\", vous lui r\u00e9pondrez bien \u00e9videmment que \"c'est vrai\".\n\nEn Python, ces deux \"affirmations\" (\"4 est \u00e9gal \u00e0 5\" et \"7 est \u00e9gal \u00e0 7\") s'\u00e9criront *4 == 5* et *7 == 7* (notez bien le double signe \u00e9gal). \n\n*4 == 5* est appel\u00e9 une expression, une expression est soit vraie (*True* comme *7 == 7*), soit fausse (*False* comme *4 == 5*).\n\nPour l'instant nous avons vu deux grands types de donn\u00e9es : les nombres (entier ou flottant) et les cha\u00eenes de caract\u00e8res, il existe un troisi\u00e8me type tout aussi important que les deux premiers : les bool\u00e9ens. Un bool\u00e9en est un type de donn\u00e9es qui ne peut prendre que deux valeurs : vrai (*True*) ou faux (*False*). Une expression est soit *True*, soit *False*.\n\nATTENTION : notez le double \u00e9gal \"==\" qui permet de distinguer une expression et une affectation (association d'une valeur \u00e0 un nom (variable)). Le fait de confondre le \"simple \u00e9gal\" et le \"double \u00e9gal\" est une erreur classique qu'il faut \u00e9viter.\n\nIl est possible d'utiliser des variables dans une expression, par exemple avec :\n\n```python\na = 5\nb = 7\n```\non aura *a == b* qui sera *False*\n\nA la place de l'op\u00e9rateur \"==\" il est possible d'utiliser l'op\u00e9rateur \"!=\" qui signifie \"diff\u00e9rent de\".\n\nPar exemple *7 != 7* est *False* alors que *5 != 4* est *True*.\n\nNotez aussi l'existence des op\u00e9rateurs :\n\n- \"strictement inf\u00e9rieur \u00e0\" <\n- \"strictement sup\u00e9rieur \u00e0\" >\n- \"inf\u00e9rieur ou \u00e9gal \u00e0\" <=\n- \"sup\u00e9rieur ou \u00e9gal \u00e0\" >=\n\npar exemple *5  5* est *False*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1602, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4bd5cf00-6a46-45a5-ad4a-45baf71bdb0c": {"__data__": {"id_": "4bd5cf00-6a46-45a5-ad4a-45baf71bdb0c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cf7f319-12bd-4989-b6a3-ecb0949e2940", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "cdebcd9c12a5cdf13159f727c2dd4d9ef60bad1c364360efc064f6651eb3f074", "class_name": "RelatedNodeInfo"}}, "text": "b) le \"or\", le \"and\" et le \"not\"\n\nIl est aussi de combiner plusieurs expressions gr\u00e2ce aux op\u00e9rateurs logiques *or* et *and*. Une combinaison d'expression est aussi une  expression (une combinaison d'expression est donc aussi soit *True* soit *False*)\n\nPar exemple si nous avons 2 expressions *exp1* et *exp2* il est possible de les combiner \u00e0 l'aide de l'op\u00e9rateur logique *or* : *exp1 or exp2* est *False* uniquement si *exp1* et *exp2* sont *False*, elle est *True* dans tous les autres cas.\n\nLes r\u00e9sultats peuvent \u00eatre regroup\u00e9s dans ce que l'on appelle une table de v\u00e9rit\u00e9 :\n\ntable de v\u00e9rit\u00e9 pour le *or*\n\n| exp1 | exp2  | exp1  or  exp2 |\n| --- | --- | --- |\n| True  | True | True |\n| True  | False | True |\n| False  | True | True |\n| False  | False | False |\n\n\ntable de v\u00e9rit\u00e9 pour le *and*\n\n| exp1 | exp2  | exp1  and  exp2 |\n| --- | --- | --- |\n| True  | True | True |\n| True  | False | False |\n| False  | True | False |\n| False  | False | False |\n\n\nOn trouve aussi le *not* comme op\u00e9rateur logique avec la table de v\u00e9rit\u00e9 suivante :\n\n| exp | not (exp) |\n| --- | --- |\n| True | False |\n| False | True |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db2799af-c9d2-498a-8d46-48532e811bdc": {"__data__": {"id_": "db2799af-c9d2-498a-8d46-48532e811bdc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6edcd2c-d264-4153-942a-d639631a44b6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "a76781085add1f905ae76c6b2b132f3f142a22605e52b99694e85843f7465b10", "class_name": "RelatedNodeInfo"}}, "text": "9) les conditions\n\nNous allons maintenant \u00e9tudier une structure fondamentale en programmation le \" si ...... alors.......sinon........\".\n\nL'id\u00e9e de base est la suivante :\n\n```\nsi expression:\n\tsuite_instruction1\nsinon:\n\tsuite_instruction2\n```\nSi \"expression\" est True alors \"suite_instruction1\" est ex\u00e9cut\u00e9 et \"suite_instruction2\" est ignor\u00e9.\n\nSinon (sous-entendu que \"expression\" est False) \"suite_instruction2\" est ex\u00e9cut\u00e9 et \"suite_instruction1\" est ignor\u00e9.\n\nNotez l'indentation \"suite_instruction1\" et de \"suite_instruction2\"\n\nSi on consid\u00e8re le programme suivant :\n\n```python\na = 4\nb = 7\nif a < b:\n\tprint(\"Je suis toto.\");\n\tprint(\"Je n'aime pas titi.\")\nelse:\n\tprint(\"Je suis titi.\")\n\tprint(\"Je n'aime pas toto.\")\nprint(\"En revanche, j'aime le Python.\")\n```\nnous avons *a < b* qui est True, nous allons donc ex\u00e9cuter les  2 lignes \n\n```python\nprint(\"Je suis toto.\");\nprint(\"Je n'aime pas titi.\")\n```\nles lignes \n\n```python\nprint(\"Je suis titi.\")\nprint(\"Je n'aime pas toto.\")\n```\nseront ignor\u00e9es.\n\nEn revanche la ligne \n```python\nprint(\"En revanche, j'aime le Python.\")\n```\nsera syst\u00e9matiquement ex\u00e9cut\u00e9e.\n\nL'ex\u00e9cution de ce programme permettra d'afficher \u00e0 l'\u00e9cran :\n\n```\nJe suis toto.\nJe n'aime pas titi.\nEn revanche, j'aime le Python.\n```\n\nSi maintenant on consid\u00e8re ce programme :\n\n```python\na = 8\nb = 7\nif a < b:\n\tprint(\"Je suis toto.\");\n\tprint(\"Je n'aime pas titi.\")\nelse:\n\tprint(\"Je suis titi.\")\n\tprint(\"Je n'aime pas toto.\")\nprint(\"En revanche, j'aime le Python.\")\n```\nL'ex\u00e9cution de ce programme entra\u00eenera l'affichage suivant  :\n```\nJe suis titi.\nJe n'aime pas toto.\nEn revanche, j'aime le Python.\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5445de9-325d-4d10-a64a-9bcda9d0cd2d": {"__data__": {"id_": "c5445de9-325d-4d10-a64a-9bcda9d0cd2d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5571003f-d1d2-40c6-be76-a41e15e9124f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "7a8cb4dfad6ce055db6d696ee003aa3f97cf3439609e546727055ea92aec2e35", "class_name": "RelatedNodeInfo"}}, "text": "10) la boucle *while*\n\nLa notion de boucle est fondamentale en informatique. Une boucle permet d'ex\u00e9cuter plusieurs fois des instructions qui ne sont pr\u00e9sentes qu'une seule fois dans le code.\n\nLa structure de la boucle while est la suivante :\n\n```\nwhile expression:\n\tinstruction1\n\tinstruction2\nsuite programme\n```\nTant que *expression* sera True, on ex\u00e9cutera encore et encore *instruction1* et *instruction2*. Apr\u00e8s chaque ex\u00e9cution de *instruction1* et *instruction2* (on dit souvent \"apr\u00e8s chaque tour de boucle\"), *expression* sera de nouveau \u00e9valu\u00e9e (pour savoir si elle est toujours *True* ou si elle est devenue *False*)\n\nQuand *expression* deviendra *False* on passera directement \u00e0 *suite programme* (sans entrer de nouveau dans la boucle),  la  boucle sera termin\u00e9e.\n\nQue se passe-t-il si *expression* ne devient jamais *False*  ?  On entre alors dans  une boucle \"infinie\" : c'est une erreur classique en programmation (aucun programme \"bien fait\" ne tombe dans une boucle infinie, s'il y a une boucle infinie, c'est qu'il y a forcement une erreur dans votre programme).\n\nConsid\u00e9rons le programme suivant :\n\n```python\ni = 0\nwhile i < 3  :\n\tprint(i)\n\ti = i + 1\nprint(\"FIN\")\n```\nVoici comment analyser ce programme :\n\nAu d\u00e9but de l'ex\u00e9cution de ce programme nous avons la variable i qui a pour valeur 0. \n\nNous arrivons ensuite au niveau du while :  l'expression i < 3  est True, on \"entre\" donc dans la boucle : on  affiche la valeur de i : 0 et on incr\u00e9mente  i de 1 (i a maintenant pour valeur 1)\n\nNous passons au  2e tour de boucle : l'expression i < 3  est True, on \"entre\" donc dans la boucle : on affiche la valeur de i : 1 et on incr\u00e9mente  i de 1 (i a maintenant pour valeur 2).\n\nNous passons au  3e tour de boucle : l'expression i < 3  est True, on \"entre\" donc dans la boucle : on affiche la valeur de i :  2 et on incr\u00e9mente  i de 1 (i a maintenant pour valeur 3).\n\nNous passons au  4e tour de boucle : l'expression i < 3  est False (3 n'est pas strictement inf\u00e9rieur \u00e0 3), on n'entre pas dans la  boucle et on passe \u00e0 l'instruction qui suit imm\u00e9diatement la boucle : on ex\u00e9cute *print(\"FIN\")* et le programme s'arr\u00eate (il n'y a plus d'instruction apr\u00e8s)\n\nApr\u00e8s l'ex\u00e9cution de ce programme, nous aurons \u00e0 l'\u00e9cran :\n\n```\n0\n1\n2\nFIN\n```\n\nIl est tr\u00e8s important que vous soyez capable d'effectuer l'analyse d'un programme comme nous venons de la faire ci-dessus, cela vous permettra d'\u00e9viter beaucoup d'erreurs", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2428, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65588dbe-99e6-4d7e-a2f3-91a6b8005bf9": {"__data__": {"id_": "65588dbe-99e6-4d7e-a2f3-91a6b8005bf9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19bc2006-e9eb-490c-a456-8da3a233b442", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "2a065e4bb7707d0fd271c85f53782391b294e521aae3af2abbcce7efc5e4b3d9", "class_name": "RelatedNodeInfo"}}, "text": "11) commentaires et documentation", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 35, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f1dd914-0404-4c82-b8ed-4749428830b8": {"__data__": {"id_": "7f1dd914-0404-4c82-b8ed-4749428830b8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "926671f6-ac12-47d7-be0c-f47fda757874", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "f65ea171171dff0144453fb91eccc48b3eac592819b27ca635474ec4739d26e2", "class_name": "RelatedNodeInfo"}}, "text": "a) Les commentaires\n\nAfin de rendre votre programme plus clair, il est n\u00e9cessaire, d\u00e8s que votre code d\u00e9passe une dizaine de lignes, d'introduire des commentaires. Bien s\u00fbr, cela peut permettre \u00e0 une personne qui n'a pas \u00e9crit le programme de comprendre ce que vous avez voulu faire, mais cela peut aussi vous permettre, quelques mois apr\u00e8s avoir termin\u00e9 d'\u00e9crire votre code, de vous \"rafra\u00eechir la m\u00e9moire\".\n\nEn Python, toute ligne commen\u00e7ant par le caract\u00e8re di\u00e8se (#) sera consid\u00e9r\u00e9e comme un commentaire par le syst\u00e8me interpr\u00e9teur/compilateur.\n\nVoici un exemple de programme comment\u00e9 :\n\n```python\ndef multiplication(a,b):\n\tres = 0\n\t# on boucle a fois\n\twhile a>0:\n\t\t#on ajoute b \u00e0 res\n\t\tres = res + b\n\t\t#on d\u00e9cr\u00e9mente a\n\t\ta = a - 1\n\treturn res\n# La variable x est \u00e9gale \u00e0 la valeur renvoy\u00e9e par la fonction multiplication pour a = 5 et b = 3\nx = multiplication(5,3)\n# on affiche la valeur de x\nprint(x)\n```\n\nAttention, dans l'exemple ci-dessus j'ai volontairement alourdi le programme avec des commentaires inutiles vu la simplicit\u00e9 de ce dernier.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1053, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f30a5b7b-3c79-4539-8dc8-652400b0714b": {"__data__": {"id_": "f30a5b7b-3c79-4539-8dc8-652400b0714b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "361cf11e-c878-4cf6-97b9-2745a0718f08", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "f1c2891c6b6aed8009c59c0612c8be5cca415ad84114488304ce7793da3f95df", "class_name": "RelatedNodeInfo"}}, "text": "b) La documentation d'une fonction\n\nToujours dans l'id\u00e9e de rendre vos programmes plus clairs, il est important de proposer une documentation pour vos fonctions.\nCette documentation doit donner des informations sur le comportement de votre fonction, plus pr\u00e9cis\u00e9ment, votre documentation doit :\n\n- d\u00e9crire votre fonction\n- donner le type des param\u00e8tres de votre fonction\n- donner le type de la valeur renvoy\u00e9e par votre fonction\n\n\nLa documentation doit se trouver au tout d\u00e9but de votre fonction, elle commence par 3 guillemets \"\"\" et se termine aussi par 3 guillemets. Il est possible d'utiliser plusieurs lignes. Voici un exemple avec la fonction multiplication :\n\n```python\ndef multiplication(a,b):\n\t\"\"\"Cette fonction multiplie 2 nombres a et b sans utiliser l'op\u00e9rateur *\n\t- les param\u00e8tres sont a et b, tous les 2 de type number (int ou float)\n\t- la valeur renvoy\u00e9e par la fonction est aussi de type number (int ou float)\n\t\"\"\"\n\tres = 0\n\twhile a>0:\n\t\tres = res + b\n\t\ta = a - 1\n\treturn res\n```\nOn utilise le terme de docstring pour d\u00e9signer cette fa\u00e7on de rediger la documentation d'une fonction (on r\u00e9dige la documentation sous forme de docstring).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1153, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "acee3dc3-fe15-47b3-96d0-a6f9727f2e25": {"__data__": {"id_": "acee3dc3-fe15-47b3-96d0-a6f9727f2e25", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5042df36-0bb6-40e1-af37-68f5d7f30cf3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b31bba3a561766c69c5270bb0d33e34fb469057e3151d464282e2c1010f89d5d", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "562ad8c7-e484-48bb-9f59-aa18008db7a0": {"__data__": {"id_": "562ad8c7-e484-48bb-9f59-aa18008db7a0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "83e5e892-eacd-4a6e-8e03-ff1ddc99fb6c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2a281ba14947d46edc8e7f72fbb7029c988ea9413f2d86458f96fabf5c9afe9a", "class_name": "RelatedNodeInfo"}}, "text": "Notion de variable\n\n- on associe une valeur pr\u00e9sente en m\u00e9moire \u00e0 un nom. C\u2019est cette association \u201cvaleur - nom\u201d que l\u2019on appelle variable.\n\n- Plusieurs types de valeurs peuvent \u00eatre associ\u00e9 \u00e0 un nom : les entiers (int), les\nnombres \u00e0 virgule (float), les cha\u00eenes de caract\u00e8res (string), les bool\u00e9ens (bool)...", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 312, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8c6eb3d-a272-47f1-b771-a9e5bed93987": {"__data__": {"id_": "c8c6eb3d-a272-47f1-b771-a9e5bed93987", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3b445937-e17a-4b82-9292-7ad1e406b0b0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e83e6366f00ddec124faaedc794d722708c517ffcfc8ebfd756e020258d223f3", "class_name": "RelatedNodeInfo"}}, "text": "Op\u00e9rations arithm\u00e9tiques\n\nIl est possible d\u2019effectuer des op\u00e9rations arithm\u00e9tiques : + addition ; - soustraction ; *\nmultiplication ; % modulo (reste de la division euclidienne)... Ces op\u00e9rations peuvent \u00eatre\ndirectement effectu\u00e9es sur des valeurs (int ou float) ou sur des variables.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90b1e3c6-6d27-4225-8f4e-508549a6e70d": {"__data__": {"id_": "90b1e3c6-6d27-4225-8f4e-508549a6e70d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "580229bf-4f29-43bb-a674-bd69576d59cb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "eddfaec852335cd70c67622f6e58cad5231cb86813f5cfa7918de2f5c3b66646", "class_name": "RelatedNodeInfo"}}, "text": "Concat\u00e9nation des cha\u00eenes de caract\u00e8res\n\nLe signe + est aussi utilis\u00e9 pour effectuer une concat\u00e9nation (mettre bout \u00e0 bout au moins\ndeux cha\u00eenes de caract\u00e8res)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3135961-0b61-44c4-bd34-0804f4be101a": {"__data__": {"id_": "a3135961-0b61-44c4-bd34-0804f4be101a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1fb69de7-54f6-462d-b89e-fb70ed6c8d8e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "dc286b8bbca24aa6a3064a631a3aaa53f91004125516006626dce0e5801e23cd", "class_name": "RelatedNodeInfo"}}, "text": "Les fonctions\n\nLes fonctions permettent de d\u00e9composer un programme complexe en une s\u00e9rie de\nsous-programmes plus simples. Les fonctions sont r\u00e9utilisables et \u00e9vitent de se \u201cr\u00e9p\u00e9ter\u201d dans un programme", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 201, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79c6d2ec-b1ac-4b7e-822d-93ba7153636c": {"__data__": {"id_": "79c6d2ec-b1ac-4b7e-822d-93ba7153636c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "acf05f67-61dd-49b4-8450-f0eca4c1058a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e9c03740f5bcf7acec9447f916b3863a553a7f58d88ca3f2d1fa4bc7c19a2780", "class_name": "RelatedNodeInfo"}}, "text": "Les conditions\n\n```\nif expression :\n\tsuite_instruction1\nelse :\n\tsuite_instruction2\n```\n\nSi \"expression\" est True alors \"suite_instruction1\" est ex\u00e9cut\u00e9 et\"suite_instruction2\" est\nignor\u00e9. Sinon (sous-entendu que \"expression\" est False) \"suite_instruction2\" est ex\u00e9cut\u00e9 et\n\"suite_instruction1\" est ignor\u00e9.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 305, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bbf2e89-204b-44a6-b66d-0c8f040c0225": {"__data__": {"id_": "5bbf2e89-204b-44a6-b66d-0c8f040c0225", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "130a9c53-9619-4c38-9433-2a90d0de7708", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0fef05bed3440835479b58bf599838ab33d7c529123748b84b00255a043d3b94", "class_name": "RelatedNodeInfo"}}, "text": "La boucle while\n\nUne boucle permet d'ex\u00e9cuter plusieurs fois des instructions qui ne sont pr\u00e9sentes qu'une\nseule fois dans le code.\n\nLa structure de la boucle while est la suivante :\n\n```\nwhile expression:\n\tinstruction1\n\tinstruction2\nsuite programme\n```\n\nTant que l'expression s'\u00e9value \u00e0 \"True\", les instructions \u00e0 l'int\u00e9rieur du bloc (partie indent\u00e9e) seront ex\u00e9cut\u00e9es.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae897e90-017d-4c3b-8515-95fc1b5197d2": {"__data__": {"id_": "ae897e90-017d-4c3b-8515-95fc1b5197d2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69dda942-7d64-4239-9131-b8187003f4c4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "33b73e70cfb2cb78c3d5824daac6f6fd618f7ac42e8c4f0add61214fe4c525a2", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- savoir cr\u00e9er et utiliser des variables\n\n- savoir effectuer des op\u00e9rations arithm\u00e9tiques\n\n- savoir effectuer une concat\u00e9nation\n\n- savoir \u00e9crire et utiliser des fonctions avec et sans param\u00e8tre ; avec et sans valeur de\nretour (mot cl\u00e9 \u201creturn\u201d)\n\n- savoir \u00e9crire et lire une condition (if / else)\n\n- savoir \u00e9crire et lire une boucle while", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "168ae92a-43e0-41a1-8339-39b8dcd1a23a": {"__data__": {"id_": "168ae92a-43e0-41a1-8339-39b8dcd1a23a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20a.md", "file_name": "c20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3c9e89d-6945-4b1c-b46a-01f7fb781d4f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20a.md", "file_name": "c20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7fa29f7fa61d4696c3d9e35b213f614ce4307c1621fec5a761d635faeb22547a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 20.1\n\nExpliquez en quelques lignes le principe du protocole du bit altern\u00e9", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdb7bc39-76f9-4435-bfee-24998b4f411d": {"__data__": {"id_": "fdb7bc39-76f9-4435-bfee-24998b4f411d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20a.md", "file_name": "c20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "645d4922-107f-4308-8b52-55e2254f39bb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20a.md", "file_name": "c20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c50c4a3080862aa0499bc0ae6b6c5202a33916660c5d1590b42762e6783ffee6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 20.2\n\nD\u00e9terminer une ou plusieurs situations o\u00f9 le protocole du bit altern\u00e9 est inefficace.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d460ca9a-51ce-4474-b484-dbe00f24df8e": {"__data__": {"id_": "d460ca9a-51ce-4474-b484-dbe00f24df8e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3c5b6292-e20e-4f62-adf5-7bc0ab94faaa", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "e473572bd508c6af4b0659086dc8a780d90e58e72ec40adc98f54232e574e77c", "class_name": "RelatedNodeInfo"}}, "text": "1) Principe\n\nNous avons vu que le protocole TCP propose un m\u00e9canisme d'accus\u00e9 de r\u00e9ception afin de s'assurer qu'un paquet est bien arriv\u00e9 \u00e0 destination. On parle plus g\u00e9n\u00e9ralement de processus d'acquittement. Ces processus d'acquittement permettent de d\u00e9tecter les pertes de paquets au sein d'un r\u00e9seau, l'id\u00e9e \u00e9tant qu'en cas de perte, l'\u00e9metteur du paquet renvoie le paquet perdu au destinataire. Nous allons ici \u00e9tudier un protocole simple de r\u00e9cup\u00e9ration de perte de paquet : le protocole de bit altern\u00e9.\n\nLe protocole de bit altern\u00e9 est impl\u00e9ment\u00e9 au niveau de la couche de \"liaison de donn\u00e9es\" du mod\u00e8le OSI (couche n\u00b02), il ne concerne donc pas les paquets, mais les trames (on parle de paquets uniquement \u00e0 partir de la couche \"R\u00e9seau\" (couche 3) du mod\u00e8le OSI). Le principe de ce protocole est simple, consid\u00e9rons 2 ordinateurs en r\u00e9seau : un ordinateur A qui sera l'\u00e9metteur des trames et un ordinateur B qui sera le destinataire des trames. Au moment d'\u00e9mettre une trame, A va ajouter \u00e0 cette trame un bit (1 ou 0) appel\u00e9 drapeau (flag en anglais). B va envoyer un accus\u00e9 de r\u00e9ception (acknowledge en anglais souvent not\u00e9 ACK) \u00e0 destination de A d\u00e8s qu'il a re\u00e7u une trame en provenance de A. \u00c0 cet accus\u00e9 de r\u00e9ception on associe aussi un bit drapeau (1 ou 0).\n\nLa r\u00e8gle est relativement simple : la premi\u00e8re trame envoy\u00e9e par A aura pour drapeau 0, d\u00e8s cette trame re\u00e7ue par B, ce dernier va envoyer un accus\u00e9 de r\u00e9ception avec le drapeau 1 (ce 1 signifie \"la prochaine trame que A va m'envoyer devra avoir son drapeau \u00e0 1\"). D\u00e8s que A re\u00e7oit l'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1, il envoie la 2e trame avec un drapeau \u00e0 1, et ainsi de suite...\n\n!\n\nLe syst\u00e8me de drapeau est compl\u00e9t\u00e9 avec un syst\u00e8me d'horloge c\u00f4t\u00e9 \u00e9metteur. Un \"chronom\u00e8tre\" est d\u00e9clench\u00e9 \u00e0 chaque envoi de trame, si au bout d'un certain temps, l'\u00e9metteur n'a pas re\u00e7u un acquittement correct (avec le bon drapeau), la trame pr\u00e9c\u00e9demment envoy\u00e9e par l'\u00e9metteur est consid\u00e9r\u00e9e comme perdue et est de nouveau envoy\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2001, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e0d07d73-29ff-4dd9-80b2-fd5aaf1f73d1": {"__data__": {"id_": "e0d07d73-29ff-4dd9-80b2-fd5aaf1f73d1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37157804-fc56-43ae-ae1d-bfbb289348a1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "8b59249db041820e37c737804d5fb83317b2d3d54f6a3b3a67973bbf84701f04", "class_name": "RelatedNodeInfo"}}, "text": "2) perte de donn\u00e9es", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 21, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68164e8e-015a-4f11-8a5a-b68a4da0091b": {"__data__": {"id_": "68164e8e-015a-4f11-8a5a-b68a4da0091b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ab62c8d-49ca-424d-b814-bbc3378dc575", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "fd342b6f469ee6229bd99cb88310d242e9d6823d70c284aeae9804b0e66fe1a7", "class_name": "RelatedNodeInfo"}}, "text": "a) perte de la trame\n\n!\n\nAu bout d'un certain temps (\"TIME OUT\") A n'a pas re\u00e7u d'accus\u00e9 de r\u00e9ception, la trame est consid\u00e9r\u00e9e comme perdue, elle est donc renvoy\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7b973e2-d0a2-4755-bda0-2e14be17ec3a": {"__data__": {"id_": "c7b973e2-d0a2-4755-bda0-2e14be17ec3a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f2fdfe57-4637-4278-b059-6e5e4f56aa8e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b3c7f690ab5da66a50e1dff63e9738c21dc217249e185e61c73aa0031a0575a4", "class_name": "RelatedNodeInfo"}}, "text": "b) perte de l'accus\u00e9 de r\u00e9ception\n\n!\n\nA ne re\u00e7oit pas d'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1, il renvoie donc la trame 1 avec le drapeau 0. B re\u00e7oit donc cette trame avec un drapeau \u00e0 0 alors qu'il attend une trame avec un drapeau \u00e0 1 (puisqu'il a envoy\u00e9 un accus\u00e9 de r\u00e9ception avec un drapeau 1), il \"en d\u00e9duit\" que l'accus\u00e9 de r\u00e9ception pr\u00e9c\u00e9dent n'est pas arriv\u00e9 \u00e0 destination : il ne tient pas compte de la trame re\u00e7ue et renvoie l'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1. Ensuite, le processus peut se poursuivre normalement.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2821c120-03c2-4865-8e13-299eae9b27c4": {"__data__": {"id_": "2821c120-03c2-4865-8e13-299eae9b27c4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38e25a15-a7db-4153-91f6-755b97544155", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "cb61fade742032fe199725ed9b0c8f7a23f92746ad49a0c1687c89a591535e7b", "class_name": "RelatedNodeInfo"}}, "text": "3) un protocole obsol\u00e8te\n\nDans certaines situations, le protocole de bit altern\u00e9 ne permet pas de r\u00e9cup\u00e9rer les trames perdues, c'est pour cela que ce protocole est aujourd'hui remplac\u00e9 par des protocoles plus efficaces, mais aussi plus complexes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 249, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8cffb380-8fe1-4dfb-a8c9-1b70d0406c8e": {"__data__": {"id_": "8cffb380-8fe1-4dfb-a8c9-1b70d0406c8e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20r.md", "file_name": "c20r.md", "file_size": 296, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60e90f29-7843-4147-a63e-92565f38a1ca", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20r.md", "file_name": "c20r.md", "file_size": 296, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c0849d6b13ad15d5e3c7994308eb8d4a2fb0514026d5d124eed59ee075d8bcb7", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nLe protocole du bit altern\u00e9 permet de s\u2019assurer qu\u2019une trame r\u00e9seau (donn\u00e9es) est bien arriv\u00e9e \u00e0 son destinataire (syst\u00e8me d\u2019accus\u00e9 de r\u00e9ception). Ce protocole est impl\u00e9ment\u00e9 au niveau de la couche de \"liaison de donn\u00e9es\" du mod\u00e8le OSI (couche n\u00b02).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d44158d-1b53-467f-b0ca-ab427aea5ed7": {"__data__": {"id_": "2d44158d-1b53-467f-b0ca-ab427aea5ed7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a4ccc4f-351f-4add-941b-ffd21416f045", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "78c61a4b05d43c49f8b384b024f4035e3b4fb8fa011b3eb61f5de3bcb14cf966", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 21.1\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o :\n\nhttps://www.youtube.com/watch?v=dW9Wi_ksoWI", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 95, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9aa2f123-10e4-49ce-8a24-629a49712e1c": {"__data__": {"id_": "9aa2f123-10e4-49ce-8a24-629a49712e1c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "35b5b5b1-d9d3-42dd-85fb-03c1405813d1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6bd2e3f3edfc45dada318c4fcb313f4363dbd4025066aaf4502407c1198d212d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 21.2\n\n1) Faites une courte biographie de Tim Berners-Lee\n\n2) Faites une courte biographie Robert Cailliau", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 116, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "353fdbff-74f6-4912-bceb-50680b172845": {"__data__": {"id_": "353fdbff-74f6-4912-bceb-50680b172845", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26f7f149-ebe2-4b9e-8b37-6456bc241098", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a5170d2a873f4e273f2dc796f2a789a3196cd1ce9aea87c868c258d8dd9658aa", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 21.3\n\nSur quelles bases techniques repose le Web ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a469d83-2abb-417e-922f-83865b1e841d": {"__data__": {"id_": "5a469d83-2abb-417e-922f-83865b1e841d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "180662cd-586f-4433-8f8b-701597a03986", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5f1e9bcc77216847bffbc6a5d0669d018eec4624cb4f634aabb11eb42aa54039", "class_name": "RelatedNodeInfo"}}, "text": "1) historique\n\nLe \"World Wide Web\", plus commun\u00e9ment appel\u00e9 \"Web\" a \u00e9t\u00e9 d\u00e9velopp\u00e9 au CERN (Conseil Europ\u00e9en pour la Recherche Nucl\u00e9aire) par le Britannique Sir Timothy John Berners-Lee et le Belge Robert Cailliau au d\u00e9but des ann\u00e9es 90. \u00c0 cette \u00e9poque les principaux centres de recherche mondiaux \u00e9taient d\u00e9j\u00e0 connect\u00e9s les uns aux autres, mais pour faciliter les \u00e9changes d'information Tim Berners-Lee met au point le syst\u00e8me hypertexte. Le syst\u00e8me hypertexte permet, \u00e0 partir d'un document, de consulter d'autres documents en cliquant sur des mots cl\u00e9s. Ces mots \"cliquables\" sont appel\u00e9s hyperliens et sont souvent soulign\u00e9s et en bleu. Ces hyperliens sont plut\u00f4t connus aujourd'hui sous le simple terme de \"liens\".\n\n!\n\nCette premi\u00e8re page web est toujours consultable \u00e0 l'adresse suivante : http://info.cern.ch/hypertext/WWW/TheProject.html\n\nTim Berners-Lee d\u00e9veloppe le premier navigateur web (logiciel permettant de lire des pages contenant des hypertextes), il l'appelle simplement \"WorldWideWeb\". Il faudra attendre 1993 et l'arriv\u00e9e du navigateur web \"NCSA Mosaic\" pour que le web commence \u00e0 devenir populaire en dehors du petit monde de la recherche.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1162, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14277149-1f6e-44d8-a191-9e487ad3b5e8": {"__data__": {"id_": "14277149-1f6e-44d8-a191-9e487ad3b5e8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "53d101ec-8d06-4471-b4a8-bf3518b5e408", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "fa9570cb801dcbc565f7c5789aa10c6c597eaca1f57987f2d2b9f2a651a991c9", "class_name": "RelatedNodeInfo"}}, "text": "2) principes de base\n\nTechniquement le web se base sur trois choses : le protocole HTTP (HyperText Transfert Protocol), les URL (Uniform Resource Locator) et le langage de description HTML (HyperText Markup Language). Nous aurons, tr\u00e8s prochainement l'occasion de revenir sur ces trois \u00e9l\u00e9ments.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3acb30d-1620-4b60-969e-a0344d20461e": {"__data__": {"id_": "d3acb30d-1620-4b60-969e-a0344d20461e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e55ed64-a12e-41f4-a877-24a72f408e40", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "41d482ea36c9288222ca353089b6a56e7418174e2568f918983ab913ad0dda8f", "class_name": "RelatedNodeInfo"}}, "text": "3) confusion Web - Internet\n\nUne chose tr\u00e8s importante \u00e0 bien avoir \u00e0 l'esprit : beaucoup de personnes confondent \"web\" et \"internet\". M\u00eame si le \"web\" \"s'appuie\" sur internet, les deux choses n'ont rien \u00e0 voir puisqu'\"internet\" est un \"r\u00e9seau de r\u00e9seaux\" s'appuyant sur le protocole IP alors que, comme nous venons de le voir, le web est la combinaison de trois technologies : HTTP, URL et HTML. D'ailleurs on trouve autre chose que le \"web\" sur internet, par exemple, les emails avec le protocole SMTP (Simple Mail Transfert Protocol) et les transferts de fichiers avec le protocole FTP (File Transfert Protocol).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 617, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "478f1dfc-676f-45ff-880f-bd8ece0b5749": {"__data__": {"id_": "478f1dfc-676f-45ff-880f-bd8ece0b5749", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21r.md", "file_name": "c21r.md", "file_size": 645, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6da38436-e4c5-49b9-8281-b1b54d280f63", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21r.md", "file_name": "c21r.md", "file_size": 645, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f5bae2597a296b3305c78e13b85ebeb1dd8f398c73f7a56bbe3c2af47a8cdbe7", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- le \"World Wide Web\", plus commun\u00e9ment appel\u00e9 \"Web\" a \u00e9t\u00e9 d\u00e9velopp\u00e9 au d\u00e9but des ann\u00e9es 90\n\n- le web se base sur trois choses : le protocole HTTP (HyperText Transfert Protocol), les URL (Uniform Resource Locator) et le langage de description HTML (HyperText\nMarkup Language).\n\n- il ne faut pas confondre Internet et le Web : Internet est un \"r\u00e9seau de r\u00e9seaux\" s'appuyant sur le protocole IP alors que le web est la combinaison de trois technologies : HTTP, URL et HTML. Le Web \u201cutilise\u201d Internet (sans Internet le Web n\u2019aurait sans doute jamais vu le jour, alors qu\u2019Internet existait avant le Web)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b34842b8-bd59-4ce8-bdb2-821ad1eb3187": {"__data__": {"id_": "b34842b8-bd59-4ce8-bdb2-821ad1eb3187", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22a.md", "file_name": "c22a.md", "file_size": 271, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e320b2ea-20a0-465c-8f04-76ce3fb7d661", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22a.md", "file_name": "c22a.md", "file_size": 271, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "5ef6ecbc00bbba5a8bff6da54eb783641c6029ad4d60cb0446c8bedeaca9cf6b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 22.1\n\nSoit la structure en arborescence suivante:\n\n!\n\n1) Donnez le chemin relatif permettant d'atteindre le fichier \"fichier5.svg\" depuis le dossier \"dossier4\".\n\n2) Donnez le chemin absolu permettant d'atteindre le fichier \"fichier6.html\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "457229bc-778e-4ccf-95e4-3b21c1c893d3": {"__data__": {"id_": "457229bc-778e-4ccf-95e4-3b21c1c893d3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2a1bc35-c564-44dd-b54a-60158f710ff5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a41acbd29829aa3b8cb9449c86d487df7e2d0ec4d68680457e0fece52f4569b2", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nDans la barre d'adresse de votre navigateur web vous trouverez, quand vous visitez un site, des choses du genre : \"https://pixees.fr/informatiquelycee/prem/c22c.html\". Nous aurons l'occasion de reparler du \"https\" et du \"pixees.fr\" plus tard. La partie \"/informatiquelycee/prem/c22c.html\" s'appelle une URL.\n\nUne URL (Uniform Resource Locator) permet d'identifier une ressource (par exemple un fichier) sur un r\u00e9seau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 436, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c04472d7-dca9-466a-aece-32962858a20c": {"__data__": {"id_": "c04472d7-dca9-466a-aece-32962858a20c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4d3f691e-1e21-4f01-a909-e77bdb2b6240", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "993ae3051c2f44de2f77e4d2165aa55ef57520b5e5e6d737cdb045ffa8e22899", "class_name": "RelatedNodeInfo"}}, "text": "2) arborescence\n\nL'URL indique \u00ab l'endroit \u00bb o\u00f9 se trouve une ressource sur un ordinateur. Un fichier peut se trouver dans un dossier qui peut lui-m\u00eame se trouver dans un autre dossier... On parle d'une structure en arborescence, car elle ressemble \u00e0 un arbre \u00e0 l'envers :\n\n!\n\nComme vous pouvez le constater, la base de l'arbre s'appelle la racine de l'arborescence et se repr\u00e9sente par un /\n\nAutre repr\u00e9sentation un peu plus \"jolie\" :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8d29b57-0d6f-4cee-a0cd-41428c3402e5": {"__data__": {"id_": "b8d29b57-0d6f-4cee-a0cd-41428c3402e5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3b3936c0-fe8c-4fb5-8fa4-84849a146193", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "83abbfd6289a8c71bece3613ce9daaf080e3b5a113f9f79342043483665a1575", "class_name": "RelatedNodeInfo"}}, "text": "3) Chemin absolu et chemin relatif\n\nPour indiquer la position d'un fichier (ou d'un dossier) dans l'arborescence, il existe 2 m\u00e9thodes : indiquer un chemin absolu ou indiquer un chemin relatif. Le chemin absolu doit indiquer \u00ab le chemin \u00bb depuis la racine. Par exemple l'URL du fichier fichier3.jpg sera (voir l'arborescence ci-dessus): \n\n/dossier2/dossier3/fichier3.jpg \n\nRemarquez que nous d\u00e9marrons bien de la racine / (attention les symboles de s\u00e9paration sont aussi des /)\n\nImaginons maintenant que le fichier fichier1.css fasse appel au fichier fichier3.jpg (comme un fichier HTML peut faire appel \u00e0 un fichier CSS). Il est possible d'indiquer le chemin non pas depuis la racine, mais depuis le dossier (dossier2) qui accueille le fichier1.css, nous parlerons alors de chemin relatif :\n\ndossier3/fichier3.jpg\n\nRemarquez l\u2019absence du / au d\u00e9but du chemin (c'est cela qui nous permettra de distinguer un chemin relatif et un chemin absolu).\n\nImaginons maintenant que nous d\u00e9sirions indiquer le chemin relatif du fichier fichier5.svg depuis l'int\u00e9rieur du dossier dossier4.\n\nComment faire ?\n\nIl faut \"remonter\" d'un \"niveau\" dans l'arborescence pour se retrouver dans le dossier dossier2 et ainsi pouvoir repartir vers la bonne \"branche\" (vers le dossier3). Pour ce faire il faut utiliser 2 points : ..\n\n../dossier3/fichier5.svg\n\nIl est tout \u00e0 fait possible de remonter de plusieurs \"crans\" : ../../ depuis le dossier dossier4 permet de \"retourner\" \u00e0 la racine.\n\nRemarque : la fa\u00e7on d'\u00e9crire les chemins (avec des slash (/) comme s\u00e9parateurs) est propre aux syst\u00e8mes dits \u00ab UNIX \u00bb, par exemple GNU/Linux ou encore Mac OS. Sous Windows, ce n'est pas le slash qui est utilis\u00e9, mais l'antislash (\\). Pour ce qui nous concerne ici, les chemins r\u00e9seau (et donc le web), pas de probl\u00e8me, c'est le slash qui est utilis\u00e9.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1818, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18ed91c5-0619-4dcd-8661-f83914839797": {"__data__": {"id_": "18ed91c5-0619-4dcd-8661-f83914839797", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22r.md", "file_name": "c22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4d81fecb-1fd5-4c2b-a297-fc561c2598c2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22r.md", "file_name": "c22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "065d1e562ab009b143688f3995668232048f4020a3f5d6b3028cc8baf7bb2eed", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- une URL (Uniform Resource Locator) permet d'identifier une ressource (par exemple un fichier) sur un r\u00e9seau.\n- pour indiquer la position d'un fichier (ou d'un dossier) dans une arborescence, il existe 2 m\u00e9thodes : indiquer un chemin absolu ou indiquer un chemin relatif.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd19f305-fd3d-4238-ab69-c872b59515b0": {"__data__": {"id_": "dd19f305-fd3d-4238-ab69-c872b59515b0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22r.md", "file_name": "c22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47d9209f-8c95-4be4-bb06-3376616f67ac", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22r.md", "file_name": "c22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "88c00f6cc6b4970f4c5c3e3e2f476be07f0aa93be99db88588f2deb2b71a91cf", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n\u00catre capable de donner le chemin permettant d\u2019atteindre un fichier (chemin absolu et chemin relatif) pour une arborescence donn\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 160, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "810980ec-5aa7-40fc-bd7a-426be96b8b52": {"__data__": {"id_": "810980ec-5aa7-40fc-bd7a-426be96b8b52", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23a.md", "file_name": "c23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4abbcaa-74c9-42eb-a458-0f7690fae938", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23a.md", "file_name": "c23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "de5de03f2d4c6a11f9359636c33a2e01410901edd3f3b9595473c1b21e2c8a9f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 23.1\n\n- cr\u00e9ez un r\u00e9pertoire nomm\u00e9 *site_web*  dans votre r\u00e9pertoire de travail\n \n- cr\u00e9ez un fichier *index.html* dans le r\u00e9pertoire *site_web*\n\n- cr\u00e9ez un fichier *style.css* dans le r\u00e9pertoire *site_web*\n\n- cr\u00e9ez  un r\u00e9pertoire *image* dans le r\u00e9pertoire *site_web*\n\n- copiez-collez l'image que vous t\u00e9l\u00e9chargerez ici dans le r\u00e9pertoire *image* que vous venez de cr\u00e9ez\n\n- copiez-collez le code HTML suivant dans le fichier *index.html*\n\n```html\n\n\n\n\n    \n    \n    Informatique lyc\u00e9e\n\n\n\n    \n        \n            SNT\n            NSI PREMI\u00c8RE\n            NSI TERMINALE\n        \n    \n    \n        INFORMATIQUE LYC\u00c9E\n        \n        SNT - NSI\n    \n\n\n\n```\n\n- copiez-collez le code CSS suivant dans le fichier *style.css*\n\n```css\n@font-face {\n    font-family: \"cormorant\";\n    src: url(\"url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond&display=swap');\");\n}\n* {\n    margin: 0;\n    padding: 0;\n    font-family: Helvetica, Georgia, sans-serif;\n}\n\n/*************************************header****************************************/\nheader {\n    background-color: rgb(42, 42, 42, 0.4);\n    position: fixed;\n    width: 100%;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n\nheader h2 {\n    color: white;\n    margin-right: 40px;\n}\n\n\nheader nav {\n    margin-left: 40px;\n    width: 30%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\nheader nav a {\n    list-style: none;\n    text-decoration: none;\n    color: white;\n\n}\n\n/*************************************content****************************************/\n\n.content {\n    height: 100vh;\n    background: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url(\"image/bg.jpg\") center;\n}\n\n.content h1 {\n    color: white;\n    text-align: center;\n    padding-top: 250px;\n    margin-bottom: 90px;\n    letter-spacing: 1.4rem;\n    font-size: 6rem;\n    font-family: 'cormorant';\n    font-weight: 100;\n}\n\n.content h2 {\n    color: white;\n    text-align: center;\n    letter-spacing: 2rem;\n    font-size: 4rem;\n    font-family: 'cormorant';\n    margin-top: 100px;\n    font-weight: 100;\n}\n\n.content hr {\n    margin: 0 auto;\n    width: 20%;\n}\n```\n\nCliquez sur le fichier *index.html* afin de pouvoir visualiser le r\u00e9sultat dans votre navigateur Web\n\nIl n'est pas question de comprendre l'ensemble du code ci-dessus, mais vous pouvez apporter des modifications \u00e0 ce code (HTML et/ou CSS) afin de visualiser les effets de ces modifications. Vous pouvez aussi carr\u00e9ment supprimer le fichier CSS et visualiser les effets de cette suppression.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2583, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fa54e83-16cb-4423-a18a-e9e0a0b83b53": {"__data__": {"id_": "5fa54e83-16cb-4423-a18a-e9e0a0b83b53", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23a.md", "file_name": "c23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b88db01-dfff-4858-9256-58238854a602", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23a.md", "file_name": "c23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f5b1dccf6f2ed4ab953ce4ba8d25bbd818ff75034d703bc8fd83b8000e981d31", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 23.2\n\n\u00c9laborez une page HTML en utilisant les balises obligatoirement les balises suivantes :\n\n- h1\n- h2\n- p\n- img\n- a\n- form\n- label\n- input\n- button\n\nIl faudra styliser votre page avec du CSS", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7934a28-ff59-4db1-a18b-a035e8a5610d": {"__data__": {"id_": "c7934a28-ff59-4db1-a18b-a035e8a5610d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd91ebae-1b65-4a78-a68d-7e8dfadea34c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "193803e4e3c947bd69c32983b6bc62dd615cc88f7a74f54cd3e984d5b0cc47d8", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous allons nous int\u00e9resser \u00e0 un acteur fondamental du d\u00e9veloppement web, le couple HTML+CSS (Hyper Text Markup Langage et Cascading Style Sheets).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cee0b913-e028-479f-addc-28c579ce5856": {"__data__": {"id_": "cee0b913-e028-479f-addc-28c579ce5856", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ab027658-9bc7-4f4d-837b-7c928790ad0e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "0197b1de2d6ada3405701e176057e7e8d73221c440319094fad47acac55d7e05", "class_name": "RelatedNodeInfo"}}, "text": "2) le HTML\n\nL\u2019Hypertext Markup Language, g\u00e9n\u00e9ralement abr\u00e9g\u00e9 HTML, est le format de donn\u00e9es con\u00e7u pour repr\u00e9senter les pages web. C\u2019est un langage de balisage permettant d\u2019\u00e9crire de l\u2019hypertexte, d\u2019o\u00f9 son nom. HTML permet \u00e9galement de structurer s\u00e9mantiquement et de mettre en forme le contenu des pages, d\u2019inclure des ressources multim\u00e9dias, dont des images, des formulaires de saisie, et des programmes informatiques. Il permet de cr\u00e9er des documents interop\u00e9rables avec des \u00e9quipements tr\u00e8s vari\u00e9s de mani\u00e8re conforme aux exigences de l\u2019accessibilit\u00e9 du web. Il est souvent utilis\u00e9 conjointement avec des langages de programmation (JavaScript) et des formats de pr\u00e9sentation (feuilles de style en cascade).\n\nPour l'instant, nous allons retenir deux \u00e9l\u00e9ments de cette d\u00e9finition \u00abcon\u00e7u pour repr\u00e9senter les pages web\u00bb et \u00abun langage de balisage\u00bb.\n\nGr\u00e2ce au HTML vous allez pouvoir, dans votre navigateur (Firefox, Chrome, Opera,....), afficher du texte, afficher des images, proposer des hyperliens (liens vers d'autres pages web), afficher des formulaires et m\u00eame maintenant afficher des vid\u00e9os (gr\u00e2ce \u00e0 la derni\u00e8re version du HTML, l'HTML5).\n\nHTML n'est pas un langage de programmation (comme le Python par exemple), ici, pas question de conditions, de boucles....c'est un langage de description.\n\nVoici un exemple de code HTML :\n\n```html\nHello World! Ceci est un titre\nCeci est un paragraphe. Avez-vous bien compris ?\n```\n\nComme d\u00e9j\u00e0 \u00e9voqu\u00e9 ci-dessus, en HTML tout est une histoire de balise que l'on ouvre et que l'on ferme. Une balise ouvrante est de la forme ``````, les balises fermantes sont de la forme ``````.\n\nEn observant attentivement le code, vous devriez forc\u00e9ment remarquer que toute balise ouverte doit \u00eatre referm\u00e9e \u00e0 un moment ou un autre. La balise ouvrante et la balise fermante peuvent \u00eatre sur la m\u00eame ligne ou pas, cela n'a aucune esp\u00e8ce d'importance, la seule question \u00e0 se poser ici est : ai-je bien referm\u00e9 toutes les balises que j'ai ouvertes ?\n\nEnfin pour terminer avec les g\u00e9n\u00e9ralit\u00e9s sur les balises, il est important de savoir qu'une structure du type :\n\n```\n\n\n\n\n```\n\nest interdite, la balise2 a \u00e9t\u00e9 ouverte apr\u00e8s la balise1, elle devra donc \u00eatre referm\u00e9e avant la balise1.\n\nEn revanche, l'encha\u00eenement suivant est correct :\n\n```\n\n\n\n\n```\n\nNotez que dans notre exemple nous respectons bien cette r\u00e8gle \u00ab d'imbrication \u00bb des balises avec la balise `````` et la balise ``````.\n\nIl est important de comprendre que chaque balise a une signification qu'il faut bien respecter (on parle de la s\u00e9mantique des balises). Par exemple le texte situ\u00e9 entre la balise ouvrante et fermante `````` est obligatoirement un titre important (il existe des balises ``````, ``````......qui sont aussi des titres, mais des titres moins importants (sous-titre)). La balise `````` permet de d\u00e9finir des paragraphes, enfin, la balise `````` permet de mettre en \u00e9vidence un \u00e9l\u00e9ment important.\n\nVous devez aussi savoir qu'il existe des balises qui sont \u00e0 la fois ouvrantes et fermantes (``````) : un exemple, la balise permettant de sauter une ligne, la balise `````` (balise qu'il faut d'ailleurs \u00e9viter d'utiliser par diff\u00e9rentes raisons que nous n'aborderons pas ici).\n\nIl est possible d'ajouter des \u00e9l\u00e9ments \u00e0 une balise ouvrante, on parle d'attribut. Une balise peut contenir plusieurs attributs :\n\n```\n\n```\n\nIl existe beaucoup d'attributs diff\u00e9rents, nous allons nous contenter de 2 exemples avec l'attribut id (id pour identifiant) et class. Nous verrons l\u2019int\u00e9r\u00eat de ces attributs prochainement\n\ncode HTML avec une balise `````` poss\u00e9dant un attribut id :\n\n```html\nCeci est un titre\nCeci est un sous titre\nCeci est un paragraphe. Avez-vous bien compris ?\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3674, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b8a75d2-0f2a-4ea6-ac3c-6b7065051eb7": {"__data__": {"id_": "7b8a75d2-0f2a-4ea6-ac3c-6b7065051eb7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "14c9f2c4-59c5-44d4-98be-aa55c9751292", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "3ba220edb1e5c829ae5c88d3361ca2e20774eb82bfb3d900224dfca437656532", "class_name": "RelatedNodeInfo"}}, "text": "3) le CSS\n\nLe HTML n'a pas \u00e9t\u00e9 con\u00e7u pour g\u00e9rer la mise en page (c'est possible, mais c'est une mauvaise pratique). Le HTML s'occupe uniquement du contenu et de la s\u00e9mantique, pour tout ce qui concerne la mise en page et l'aspect \"d\u00e9coratif\" (on parle du \u00ab style \u00bb de la page), on utilisera le CSS (Cascading Style Sheets).\n\nVoici un exemple de code CSS :\n\n```css\nh1\n{\n\ttext-align: center;\n\tbackground-color: red;\n}\nh2\n{\n\tfont-family: Verdana;\n\tfont-style: italic;\n\tcolor: green;\n}\n```\n\nDans l'exemple ci-dessus, les propri\u00e9t\u00e9s *text-align* (permet de choisir l'alignement d'un texte) et *background-color* (permet de modifier la couleur de fond) seront appliqu\u00e9es au contenu de toutes les balises de type h1 (avec respectivement les valeurs *center* et *red* : les textes contenus dans les balises *h1* seront centr\u00e9s et la couleur de fond sera rouge).\n\nLe contenu des balises *h2* sera \u00e9crit avec la police de caract\u00e8re *Verdana*, en italique et en vert.\n\nSi on d\u00e9sire cibler seulement certaines balises et pas les autres, il est possible d'utiliser les attributs *id* et *class*:\n\nvoici du code HTML :\n\n```html\nCeci est un titre\nBonjour\nVous allez bien ?\n```\n\net le code CSS correspondant :\n\n```css\n#para_1\n{\n\tfont-style: italic;\n\tcolor: green;\n}\n```\n\nIci seul le second paragraphe (*Vous allez bien ?*) sera concern\u00e9 par le CSS ci-dessus. Le premier paragraphe (*Bonjour*) et le titre *h1* ne seront pas concern\u00e9s\n\nIl est donc possible de cibler un paragraphe et pas un autre en utilisant l'id du paragraphe (en CSS l'id se traduisant par le signe #).\n\nIl est aussi possible d'utiliser l'attribut class \u00e0 la place de l'id. Dans le CSS on utilisera le point . \u00e0 la place du #.\n\nLa diff\u00e9rence entre \"id\" et \"class\" n'est pas tr\u00e8s importante.\n\nL'attribut \"class\" permet de donner le m\u00eame nom \u00e0 plusieurs reprises dans une m\u00eame page, ce qui n'est pas possible avec l'attribut *id*\n\nSi nous avions eu un 3e paragraphe, nous aurions pu avoir : ```Voici un 3e paragraphe```, mais nous n'aurions pas pu avoir : ``` Voici un 3e paragraphe ```, car le nom para_1 a d\u00e9j\u00e0 \u00e9t\u00e9 utilis\u00e9 pour le 1er paragraphe.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61df2aa3-2a27-482f-90dc-57ebbe25fb2b": {"__data__": {"id_": "61df2aa3-2a27-482f-90dc-57ebbe25fb2b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "73bb6197-9c8d-47f1-a31a-8cdf7c2bdf0c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "18a43f1c424cf63a703e3271e3f5c03271dae8cbc161aa4b33cd8a1a37976535", "class_name": "RelatedNodeInfo"}}, "text": "4) quelques balises \u00e0 conna\u00eetre", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 33, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c77d2aa1-a80a-44e9-9f2b-61a007e7bc23": {"__data__": {"id_": "c77d2aa1-a80a-44e9-9f2b-61a007e7bc23", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3278cdb6-b55f-4e74-ba79-0b5bac83641d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "8aedd17b68c6490b8722ae89d2cb57bdae5ef6f92efbdd853d01f4e5df008b93", "class_name": "RelatedNodeInfo"}}, "text": "a) la balise *a*\n\nLa balise *a* permet de cr\u00e9er des liens hypertextes, ce sont ces liens hypertextes qui vous permettent de \"voyager\" entre les pages d'un site ou entre les sites. Les liens hypertextes sont par d\u00e9faut soulign\u00e9s et de couleur bleue (modifiable gr\u00e2ce au CSS). La balise a poss\u00e8de un attribut *href* qui a pour valeur le chemin du fichier que l'on cherche \u00e0 atteindre ou l'adresse du site cible : \n\n```html\nCliquez ici pour vous rendre sur le site pixees\n```\n\nEntre la balise ouvrante et fermante, on trouve le texte qui s'affichera \u00e0 l'\u00e9cran (c'est ce texte qui est soulign\u00e9 et de couleur bleue).La balise peut sans probl\u00e8me se trouver en plein milieu d'un paragraphe.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 685, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "639f1c2b-46cb-4d2d-87c8-46cd38b98e49": {"__data__": {"id_": "639f1c2b-46cb-4d2d-87c8-46cd38b98e49", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e59462b4-48eb-49e2-9e9c-1769969eb222", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "e5ed1a4c2abf2194dc296a56a2379e2de828a4a937f8fc1ab8f89fe40d47e28f", "class_name": "RelatedNodeInfo"}}, "text": "b) la balise *image*\n\nComme vous devez d\u00e9j\u00e0 vous en douter, la balise image sert \u00e0 ins\u00e9rer des...images :\n\n```html\n\n```\n\nla balise img est \u00e0 la fois ouvrante et fermante comme la balise br. Elle poss\u00e8de 2 attributs :\n\nsrc qui doit \u00eatre \u00e9gal au nom du fichier image (ou au chemin si le fichier image se trouve dans un autre dossier).\nalt qui doit \u00eatre \u00e9gal \u00e0 une description de votre image (cet attribut est utilis\u00e9 notamment par les syst\u00e8mes de description des pages web utilis\u00e9es par les non-voyants), il faut donc syst\u00e9matiquement renseigner cet attribut.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ba96875-ce38-4602-a922-ef81399efecf": {"__data__": {"id_": "9ba96875-ce38-4602-a922-ef81399efecf", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "656b5ac6-b0bb-4abf-acd6-6b23b159527f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "7064b0bc2b468b88a4a2c219d6f1e9a419ad26be760ccdcae84106333ceaf61c", "class_name": "RelatedNodeInfo"}}, "text": "c) les balises form, label, input et button\n\nLes formulaires sont des \u00e9l\u00e9ments importants des sites internet, ils permettent \u00e0 l'utilisateur de transmettre des informations. Un formulaire devra \u00eatre d\u00e9limit\u00e9 par une balise form (m\u00eame si ce n'est pas une obligation) :\n\n```\n\n....\n\n```\n\nIl existe diff\u00e9rentes balises permettant de construire un formulaire, notamment la balise *input*. Cette balise poss\u00e8de un attribut type qui lui permet de jouer des r\u00f4les tr\u00e8s diff\u00e9rents.\n\nLes balises *button* et *label* nous seront aussi d'une grande utilit\u00e9  :\n\n```html\n\n\tvoici un champ de texte : \n\tCliquez ici !\n\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 607, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "108a1d20-0022-43e6-bfb9-3836ac1dd01c": {"__data__": {"id_": "108a1d20-0022-43e6-bfb9-3836ac1dd01c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fc924c44-3a7d-4de2-a939-d9399cd8201f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "f4a5c80d54849f2a99376e8b8e80d6bd789da1839869872b666dae60679ee072", "class_name": "RelatedNodeInfo"}}, "text": "d) les balises *div* et *span*\n\nCes 2 balises sont tr\u00e8s utilis\u00e9es (surtout la balise div). Pourtant, il faudrait, autant que possible, les \u00e9viter, pourquoi ?\n\nParce qu'elles n'ont aucune signification particuli\u00e8re, ce sont des balises dites \u201cg\u00e9n\u00e9riques\u201d.\n\n\u00c0 quoi servent-elles alors ?\n\n\u00c0 organiser la page, \u00e0 regrouper plusieurs balises dans une m\u00eame entit\u00e9 :\n\n```html\n\n\t Mon en-t\u00eate \n\tHello, comment \u00e7a va ?\n\n\n\tmon bas de page\n\tAu  revoir !\n\n```\n\nPourquoi 2 balises g\u00e9n\u00e9riques ?\n\nParce que div est une balise de type \u201cblock\u201d et que span est une balise de type \u201cinline\u201d !", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 573, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1316b434-65e6-43f4-858c-03f79088ac36": {"__data__": {"id_": "1316b434-65e6-43f4-858c-03f79088ac36", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "408738cf-5961-4a35-8b16-dcaa0fd7573e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "b71f1b78ad670af28b3ee83df494b50e8a0c8c668b950cb1365c23b485afd142", "class_name": "RelatedNodeInfo"}}, "text": "5) les balises de type *block* et les balises de type *inline*\n\nSans trop entrer dans les d\u00e9tails, il faut bien comprendre que l'ordre des balises dans le code HTML a une grande importance. Les balises sont affich\u00e9es les unes apr\u00e8s les autres, on parle du flux normal de la page.\n\nC'est ici qu'entrent en jeu les balises de type \"block\" et les balises de type \"inline\".\n\nLes contenus des balises de type \"block\" (p, div,h1,...) se placent sur la page web les uns en dessous des autres.\nLes contenus des balises de type \"inline\" (strong, img, span, a) se placent sur la page web les uns \u00e0 c\u00f4t\u00e9 des autres.\nCela revient \u00e0 dire qu'une balise de type \u201cblock\u201d prend toute la largeur de la page alors qu'une balise de type \u201cinline\u201d prend juste la largeur qui lui est n\u00e9cessaire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 774, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "255b5480-4863-416a-8d39-c71bea4d53f9": {"__data__": {"id_": "255b5480-4863-416a-8d39-c71bea4d53f9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1bf88250-ed8e-4388-a07c-ebb14a2c63f8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "c1cc0c83fd3e1e452666f122a8ca4579fa9712faae92998d88a8a5cfad7bcc89", "class_name": "RelatedNodeInfo"}}, "text": "6) \u00e9crire une page HTML\n\nPour \u00e9criture une page HTML compl\u00e8te, il est n\u00e9cessaire de rajouter quelques balises :\n\n```html\n\n\n\t\n\t\t\n\t\tVoici mon site\n\t\t\n\t\n\t\n\t\t\n\t\n\n```\n\nNous n'allons pas nous attarder sur ce squelette de page HTML, mais voici ce que vous devez savoir :\n\n- la premi\u00e8re ligne (``````) permet d'indiquer au navigateur que nous utiliserons du HTML\n\n- la balise *html* est obligatoire, l'attribut lang=\"fr\" permet d'indiquer au navigateur que nous utiliserons le fran\u00e7ais pour \u00e9crire notre page.\n\n- la balise *head* d\u00e9limite ce que l'on appelle l'en-t\u00eate. L'en-t\u00eate contient, dans notre exemple, 3 balises : \n\t- la balise *meta* poss\u00e8de l'attribut *charset=\"utf-8* qui permet de d\u00e9finir l'encodage des caract\u00e8res (ici utf-8)\n\t\n\t- la balise *title* qui d\u00e9finit le titre de la page (attention ce titre ne s'affiche pas dans le navigateur, ne pas confondre avec la balise *h1*, on retrouve le contenu  de cette balise au niveau des  onglets du navigateur)\n\t\n\t- la balise *link va permettre de relier votre HTML et votre CSS. Votre CSS se trouvera dans un fichier ind\u00e9pendant (ici *style.css*), l'attribut *href* correspond au chemin (relatif ou absolu) vers ce fichier\n\n- toutes les balises qui composeront votre page (p, h1, img...) devront se trouver entre la balise *body* ouvrante et la balise *body* fermante.\n\nPour cr\u00e9er une nouvelle page, il suffira de copier-coller ce squelette de page HTML dans un nouveau fichier et de le compl\u00e9ter avec votre code HTML (entre les balises *body*)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "551ac993-fa69-4460-8691-4c3091e80dcb": {"__data__": {"id_": "551ac993-fa69-4460-8691-4c3091e80dcb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23r.md", "file_name": "c23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e715fe5-7fd0-4004-913e-f446ba52739e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23r.md", "file_name": "c23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6fddb610327112670c1d9521b341693e79803990089c0527c78eb96de4389835", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Le HTML (HyperText Markup Language) est un langage de balisage con\u00e7u pour repr\u00e9senter des pages web.\n\n- Dans une page HTML on trouve uniquement des balises ouvrantes (exemple ``````) et fermantes (exemple ``````) ou des balises \u00e0 la fois ouvrantes et fermantes (exemple ``````)\n\n- Les navigateurs web (Firefox, Chrome...) sont des logiciels capables d\u2019interpr\u00e9ter du HTML et d\u2019afficher la page web correspondante.\n\n- Chaque balise a une signification qu'il faut bien respecter (on parle de la s\u00e9mantique des balises).\n\n- Le HTML n'a pas \u00e9t\u00e9 con\u00e7u pour g\u00e9rer la mise en page. Le HTML s'occupe uniquement du contenu et de la s\u00e9mantique, pour tout ce qui concerne la mise en page et l'aspect \u201cd\u00e9coratif\u201d (on parle du \u201cstyle\u201d de la page), on utilisera un autre langage, le CSS (Cascading Style Sheets).\n\n- il est possible d\u2019ajouter des attributs dans les balises", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 884, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2bcb0018-d454-40ed-9fe8-1408f5f929a0": {"__data__": {"id_": "2bcb0018-d454-40ed-9fe8-1408f5f929a0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23r.md", "file_name": "c23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "822a0e41-4f50-4dce-8227-ec9bd66bc24c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23r.md", "file_name": "c23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "04e4cb9d67c7ec7e0ffdaedc73458294a6066462ba3ccf6d9d9777ba6763b5e7", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- Vous devez savoir utiliser un certain nombre de balises : la balise \u201cparagraphe\u201d `````` , les balises titre ``````, ``````,..., la balise lien ``````, la balise image ``````, la balise formulaire ``````, la balise ``````, la balise `````` et les balises g\u00e9n\u00e9riques `````` et ``````\n\n- Vous devez \u00e0 partir d\u2019un code HTML et d\u2019un code CSS (associ\u00e9 au code HTML) \u00eatre capable de \u201cdeviner\u201d l\u2019aspect d\u2019une page web (couleur d\u2019un texte, police de caract\u00e8re,\u2026)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4df665cb-40e6-40fd-a96b-220a4b033f66": {"__data__": {"id_": "4df665cb-40e6-40fd-a96b-220a4b033f66", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04b967fd-6171-48b3-8e9e-0b1226225845", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bb636a0a9ea4439d37b83c26866e93d74a1ecf03c3a98abf8f3c2c294b20c73b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 24.1\n\n- dans votre r\u00e9pertoire de travail, cr\u00e9ez un fichier *index.html*, un fichier *style.css* et un fichier *script.js*\n\n- copiez-collez le code suivant dans le fichier *index.html* qui vient d'\u00eatre cr\u00e9\u00e9\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\tLe trio : HTML, CSS et JavaScript\n\t\tVoici une page web qui ne fait pas grand-chose\n\t\tRouge\n\t\tVert\n\t\n\t\n\n``` \n\n- copiez-collez le code suivant dans le fichier *style.css* qui vient d'\u00eatre cr\u00e9\u00e9\n\n```css\nh1{\n\ttext-align: center;\n}\n.rouge {\n\tcolor:red;\n\tfont-size:20px;\n}\n.vert {\n\tcolor:green;\n\tfont-size:30px;\n}\n``` \n\n- copiez-collez le code suivant dans le fichier *script.js* qui vient d'\u00eatre cr\u00e9\u00e9\n\n```js\nfunction foncRouge() {\n\tlet balp= document.querySelector(\"#monPara\")\n\tbalp.classList.remove(\"vert\");\n\tbalp.classList.add(\"rouge\");\n}\nfunction foncVert() {\n\tlet balp= document.querySelector(\"#monPara\")\n\tbalp.classList.remove(\"rouge\");\n\tbalp.classList.add(\"vert\");\n}\n``` \n\nApr\u00e8s avoir test\u00e9 l'exemple ci-dessus en cliquant sur fichier *index.html*, apportez les modifications n\u00e9cessaires pour que les  boutons *rouge* et *vert* permettent de modifier la couleur du  titre *h1*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3008d5d-0066-4c9d-b97c-323e6e172242": {"__data__": {"id_": "b3008d5d-0066-4c9d-b97c-323e6e172242", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1409a894-acb4-4e3d-b3f6-426a121e084b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2cbeaafad5e163f6ff6dc26696ed235cbfc7c07c411a182127769b60d5cf1bac", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 24.2\n\nCr\u00e9ez la page web suivante :\n\n!\n\nsi l'utilisateur clique sur le bouton *Changer*, le texte *COUCOU !* devient rouge, si on appuie de nouveau sur le bouton *Changer*, le bouton redevient noir (si on appuie de nouveau sur le bouton, COUCOU ! redevient rouge...)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "501d0c63-8678-423d-8c3b-c65a0221422c": {"__data__": {"id_": "501d0c63-8678-423d-8c3b-c65a0221422c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e721be0a-8938-41d7-863f-c2ce53055df1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "75e6f904a5613e3bb06da2007e8489e7d55f3344731921fab456037664603698", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 24.3\n\nSoit la page HTML suivante :\n\nindex.html\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\t\n\t\n\t\n\n```\n\nstyle.css\n\n```css\ndiv {\n\twidth : 200px;\n\theight : 100px;\n\tbackground-color : black;\t\n}\n```\n\nModifiez le code ci-dessus pour que le survole de la *div* avec le curseur de la souris modifie la couleur de fond de la div (*background-color*)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eef024e4-ccd9-4d08-9caf-95c6cb151fee": {"__data__": {"id_": "eef024e4-ccd9-4d08-9caf-95c6cb151fee", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59992cb1-3f92-455a-a9bb-9359151e1df5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3e183a73ec0021dc2ed6ebdf223ee1d5179cfa97f255ed7efff84d28be79fb5e", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous avons d\u00e9j\u00e0 pu nous familiariser avec le couple HTML-CSS, en fait, le couple est plut\u00f4t un trio, car aujourd'hui un d\u00e9veloppeur web ne peut pas faire l'impasse sur le JavaScript .\n\nNotre but ici n'est pas d'apprendre un nouveau langage de programmation, mais juste d'\u00e9tudier quelques exemples d'utilisation du JavaScript, notamment dans le cas des interactions entre un utilisateur et une page web.\n\nAvant d'entrer dans le vif du sujet, un petit rappel historique : JavaScript a \u00e9t\u00e9 cr\u00e9\u00e9 en dix jours par Brendan Eich en 1995. Malgr\u00e9 son nom, JavaScript n'a rien \u00e0 voir avec le langage Java, m\u00eame si Brendan Eich affirme s'\u00eatre inspir\u00e9 de nombreux langage, dont Java, pour mettre au point JavaScript. Apr\u00e8s des d\u00e9buts chaotiques, il est, comme d\u00e9j\u00e0 dit plus haut, devenu incontournable dans le d\u00e9veloppement web.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5130cb7-5a2c-4d8f-9447-c03ebf572b07": {"__data__": {"id_": "f5130cb7-5a2c-4d8f-9447-c03ebf572b07", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7d02df3-ad74-4b78-a60a-3104888be595", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b3f79e6f2da4e1793e2497d2a66fe36162cba45cc568f116d1e6647d03c9aa0f", "class_name": "RelatedNodeInfo"}}, "text": "2) int\u00e9grer le JavaScript\n\nPour \u00eatre ex\u00e9cut\u00e9, le JavaScript doit \u00eatre int\u00e9gr\u00e9 \u00e0 la page HTML. Il existe diff\u00e9rentes m\u00e9thodes pour int\u00e9grer le JavaScript, nous allons en \u00e9tudier une : le code JavaScript est \u00e9crit dans un fichier avec l'extension .js (par exemple script.js). Il faut ensuite ajouter une ligne dans le code HTML afin de lier ce dernier au fichier *script.js* :\n\n```html\n\n```\n\nl'attribut *src* de la balise *script* doit \u00eatre \u00e9gal au chemin vers le fichier qui contient le JavaScript.\n\nVoici un exemple de fichier HTML associ\u00e9 avec un fichier *script.js* :\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\t...\n\t\n\t\n\n```\n\nComme vous pouvez le constater ci-dessus la balise *script* est plac\u00e9e apr\u00e8s la balise *body* fermante (il est aussi possible de placer la balise *script* dans la partie *head*, mais ce choix peut entra\u00eener certains probl\u00e8mes si on ne prend pas certaines pr\u00e9cautions, on pr\u00e9f\u00e9rera donc placer la balise *script* apr\u00e8s le *body*).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 950, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1d038b0-6e47-4bd3-951e-e433bce2658e": {"__data__": {"id_": "c1d038b0-6e47-4bd3-951e-e433bce2658e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa539f69-a0c1-4d87-8bd8-60ff27d97fa4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "9999f7b8d2438d475b7c9e56ef9b6b5d3c8c29eb5c384d24875dc7f64c1cee01", "class_name": "RelatedNodeInfo"}}, "text": "3) le JavaScript pour r\u00e9pondre \u00e0 des \u00e9v\u00e9nements", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0653539-b9ee-4ee9-be87-63ecf10b25d8": {"__data__": {"id_": "b0653539-b9ee-4ee9-be87-63ecf10b25d8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "101d21d0-aef4-4830-8eff-d57dc6adbc48", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "99f00420a369244c4c3425a9b5e381d4cb56bebb68cb81f038750d04bf5ec273", "class_name": "RelatedNodeInfo"}}, "text": "a) notion d'\u00e9v\u00e9nements\n\nIl est possible d'associer des \u00e9v\u00e9nements aux diff\u00e9rentes balises HTML, ces \u00e9v\u00e9nements sont tr\u00e8s souvent des actions r\u00e9alis\u00e9es pour l'utilisateur de la page :\n\n- l'\u00e9v\u00e9nement *onclik* correspond \u00e0 un clic de souris (bouton gauche) sur un \u00e9l\u00e9ment HTML donn\u00e9\n- l'\u00e9v\u00e9nement *onmouseover* correspond au survol d'un \u00e9l\u00e9ment HTML par le curseur de la souris\n\nIl existe beaucoup d'autres \u00e9v\u00e9nements, dans le cadre de ce cours nous utiliserons uniquement les deux cit\u00e9s ci-dessus.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a9ee3fa-52c7-4940-80b0-a76f28ce5e08": {"__data__": {"id_": "8a9ee3fa-52c7-4940-80b0-a76f28ce5e08", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f16f4403-f6a1-43db-85f3-0baef188f588", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "30fc4ed83fded1d10b27dfc779f3907933bc5e414e65abdab93fed87749059fd", "class_name": "RelatedNodeInfo"}}, "text": "b) r\u00e9ponse \u00e0 un \u00e9v\u00e9nement\n\nUn clic de souris vient d'\u00eatre effectu\u00e9 sur un \u00e9l\u00e9ment HTML, que va-t-il se passer ?\n\nDans la plupart des cas rien...si le d\u00e9veloppeur n'a pas pr\u00e9vu de g\u00e9rer cet \u00e9v\u00e9nement, il ne se passera rien.\n\nComment g\u00e9rer un \u00e9v\u00e9nement ?\n\nIl suffit d'ajouter un attribut \u00e0 la balise HTML concern\u00e9e, prenons un exemple :\n\n```html \nCliquer ici\n```\n\nNous avons ici une balise *button* qui poss\u00e8de un attribut *onclick*. Cet attribut *onclick* est \u00e9gal \u00e0 *maFonction()*. *maFonction* est une fonction d\u00e9fini dans le fichier JavaScript qui est associ\u00e9 \u00e0 la page HTML (par exemple le fichier *script.js*). En cas de clic sur le bouton d\u00e9fini ci-dessus, la fonction JavaScript *maFonction* sera ex\u00e9cut\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 714, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a837da05-ab05-4766-966e-01a56dbf94be": {"__data__": {"id_": "a837da05-ab05-4766-966e-01a56dbf94be", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ad296c6a-4c20-463a-b9d3-1a562157c072", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "fe215bc0e3eb2f16bc7aad62bf0df39b08e50a397001e0848fc5fe86a994ce3e", "class_name": "RelatedNodeInfo"}}, "text": "c) les fonctions en JavaScript\n\nComment \u00e9crire une fonction en JavaScript ?\n\nIl suffit d'utiliser le mot cl\u00e9 *function* suivi du nom de la fonction :\n\n```js\nfunction Mafonction(){\n\t.....\n}\n```\nLes limites de la fonction sont d\u00e9finies par l'accolade ouvrante et l'accolade fermante.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca7c8f71-d54f-4233-afb1-4a26b48b4f2b": {"__data__": {"id_": "ca7c8f71-d54f-4233-afb1-4a26b48b4f2b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1aaf8a50-879c-438c-802c-85afc1ffc962", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ed02f4ef2f2957f0f4749fd7dfcdc91b66365bba193cfcb327374f3a36dbd956", "class_name": "RelatedNodeInfo"}}, "text": "4) Modifier un \u00e9l\u00e9ment HTML avec le JavaScript\n\nEn cas de clic sur le bouton d\u00e9fini ci-dessus, la fonction JavaScript *maFonction* sera ex\u00e9cut\u00e9e, mais qu'est-il possible de faire avec le JavaScript ?\n\nAujourd'hui, presque tout : il est possible de coder des applications extr\u00eamement complexes en JavaScript. Nous allons rester modestes, nous allons uniquement modifier un \u00e9l\u00e9ment HTML.\n\nPour modifier un \u00e9l\u00e9ment HTML il est tout d'abord n\u00e9cessaire de le s\u00e9lectionner : c'est le r\u00f4le des *querySelector*.\n\nConsid\u00e9rons le code HTML suivant :\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\tLe trio : HTML, CSS et JavaScript\n\t\tVoici une page web qui ne fait pas grand chose\n\t\tCliquer ici\n\t\n\t\n\n```\n\net le code JavaScript suivant (fichier *script.js*) :\n\n```js\nfunction maFonction() {\n\tlet maBalise = document.querySelector(\"#monPara\");\n}\n```\n\nLe mot cl\u00e9 *let* permet de d\u00e9finir une variable, dans l'exemple ci-dessus, la variable a pour nom *maBalise* (on aurait \u00e9videmment pu choisir un autre nom). Cette variable *maBalise* va nous permettre de manipuler l'\u00e9l\u00e9ment HTML qui a pour *id* *monPara* (c'est-\u00e0-dire la balise *p* pr\u00e9sente dans le code HTML ci-dessus).\n\nMaintenant que nous avons \"acc\u00e8s\" \u00e0 une balise HTML depuis le code JavaScript, il est possible de modifier le contenu de cette balise ou encore le style associ\u00e9 \u00e0 cette balise comme bon nous semble :\n\n```js\nfunction maFonction() {\n\tlet maBalise = document.querySelector(\"#monPara\");\n\tmaBalise.innerHTML=\"coucou\"\n}\n``` \n\ndans le cas ci-dessus nous remplacerons le texte pr\u00e9sent dans la balise *p* (\"Voici une page web qui ne fait pas grand chose\") par \"coucou\".\n\nAutre exemple :\n\n```js\nfunction maFonction() {\n\tlet maBalise = document.querySelector(\"#monPara\");\n\tmaBalise.style.color=\"red\";\n}\n``` \ndans le cas ci-dessus, le texte du paragraphe sera \u00e9crit en rouge.\n\nIl est aussi possible de modifier les classes CSS associ\u00e9es \u00e0 une balise HTML, prenons un exemple :\n\nsoit le code HTML :\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\tLe trio : HTML, CSS et JavaScript\n\t\tVoici une page web qui ne fait pas grand-chose\n\t\tRouge\n\t\n\t\n\n```\n\nsoit le code CSS (fichier \"style.css\") :\n\n```css\nh1{\n\ttext-align: center;\n}\n.rou {\n\tcolor: red;\n}\n```\n\nsoit le code JavaScript (fichier \"script.js\") :\n\n```js\nfunction foncRouge() {\n\tlet maBalise = document.querySelector(\"#monPara\");\n\tmaBalise.classList.add(\"rou\");\n}\n```\n\nR\u00e9sumons ce qui peut se passer avec la page HTML ci-dessus :\n\n- un utilisateur clique sur le bouton *Rouge*, comme un \u00e9v\u00e9nement *onclick* est associ\u00e9 \u00e0 ce bouton, la fonction JavaScript *foncRouge* est donc ex\u00e9cut\u00e9e\n\n- la variable *maBalise* correspond \u00e0 la balise *p* du code HTML (*let maBalise = document.querySelector(\"#monPara\");*)\n\n- on associe ensuite cette balise *p* \u00e0 la classe CSS *rouge* : le texte contenu dans la balise *p* devient donc rouge (*maBalise.classList.add(\"rou\");*)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2836, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b06a923c-e90b-403e-9089-38f373915c5c": {"__data__": {"id_": "b06a923c-e90b-403e-9089-38f373915c5c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24r.md", "file_name": "c24r.md", "file_size": 681, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f52ac9f2-41af-4046-baaf-f867e5c275ee", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24r.md", "file_name": "c24r.md", "file_size": 681, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "07b488f6207578da83fb6aed7689efd0341783ad7c603a459e9f753e265a5061", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nEn fait, le d\u00e9veloppement de page web se base sur 3 langages :\n\n- HTML\n\n- CSS\n\n- JavaScript\n\nSeul JavaScript est un v\u00e9ritable langage de programmation (utilisation des conditions, des\nboucles, des variables\u2026). JavaScript permet, entre autres, de g\u00e9rer les \u00e9v\u00e9nements (clic sur\nles boutons\u2026) au niveau d\u2019une page web. Par exemple :\n ```html\n Rouge\\\n ```\n est une balise HTML qui affichera un bouton sur la page. En cas de clic sur ce bouton, la fonction JavaScript foncRouge() sera ex\u00e9cut\u00e9e. Cette fonction JavaScript pourra, par exemple, permettre de modifier le contenu ou le style d'une balise HTML.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 625, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03bc10d7-aaaa-4103-8683-1973f5b46697": {"__data__": {"id_": "03bc10d7-aaaa-4103-8683-1973f5b46697", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25a.md", "file_name": "c25a.md", "file_size": 96, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c5ee0cc6-fd62-4f11-8173-bddf58ef3426", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25a.md", "file_name": "c25a.md", "file_size": 96, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f06b0a8d0a61652c6d043a9b067f2bb619e988fd27462a378a353d0c12073c80", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 25.1\n\nExpliquez en quelques lignes la notion de client et la notion de serveur.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 90, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d05b220-2621-4d0a-b0e1-d4ed97308e16": {"__data__": {"id_": "6d05b220-2621-4d0a-b0e1-d4ed97308e16", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25c.md", "file_name": "c25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "54ac9695-4089-40cf-a354-425e6d4fd7cb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25c.md", "file_name": "c25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f85eff57c088bf6c71d11ad288779985f87d3aa7fcbbc00bdcd4ca16c0cd2396", "class_name": "RelatedNodeInfo"}}, "text": "1) Notion de client-serveur\n\nDeux ordinateurs en r\u00e9seau peuvent s'\u00e9changer des donn\u00e9es. Dans la plupart des cas ces \u00e9changes ne sont pas \"sym\u00e9triques\" : en effet un ordinateur A va souvent se contenter de demander des ressources (fichiers contenant du texte, photos, vid\u00e9os, sons...) \u00e0 un ordinateur B. L'ordinateur B va lui se contenter de fournir des ressources \u00e0 tous les ordinateurs qui lui en feront la demande. On dira alors que l'ordinateur A (celui qui demande des ressources) est un client alors que l'ordinateur B (celui qui fournit les ressources) sera qualifi\u00e9 de serveur.\n\nEn tapant \u00abhttp://www.google.fr\u00bb, votre machine va chercher \u00e0 entrer en communication avec le serveur portant le nom \u00abwww.google.fr\u00bb (en fait c'est plus compliqu\u00e9, pour les puristes nous diront donc que la communication va \u00eatre \u00e9tablie avec le serveur www du domaine google.fr, mais bon, pour la suite nous pourrons nous contenter de l'explication \u00ab simplifi\u00e9e \u00bb).\n\nUne fois la liaison \u00e9tablie, le client et le serveur vont \u00e9changer des informations en dialoguant :\n\nclient : bonjour www.google.fr (ou bonjour www se trouvant dans le domaine google.fr), pourrais-tu m'envoyer le fichier index.html\n\nserveur : OK client, voici le fichier index.html\n\nclient : je constate que des images, du code css sont utilis\u00e9s, peux-tu me les envoyer\n\nserveur : OK, les voici\n\n\u00c9videmment ce dialogue est tr\u00e8s imag\u00e9, mais il porte tout de m\u00eame une part de \u00ab v\u00e9rit\u00e9 \u00bb.\n\nSur internet, ce mod\u00e8le client/serveur domine assez largement, m\u00eame s'il existe des cas o\u00f9 un ordinateur pourra jouer tour \u00e0 tour le r\u00f4le de client et le r\u00f4le de serveur, tr\u00e8s souvent, des ordinateurs (les clients) passeront leur temps \u00e0 demander des ressources \u00e0 d'autres ordinateurs (les serveurs) . Par exemple, comme expliqu\u00e9 dans l'exemple ci-dessus on retrouve cet \u00e9change client/serveur \u00e0 chaque fois que l'on visite une page web. Il y a de fortes chances pour que votre ordinateur personnel joue quasi exclusivement le r\u00f4le de client (sauf si vous \u00eates un adepte du \"peer to peer\").\n\nN'importe quel type d'ordinateur peut jouer le r\u00f4le de serveur, mais dans le monde professionnel les serveurs sont des machines sp\u00e9cialis\u00e9es con\u00e7ues pour fonctionner 24h sur 24h. Ils peuvent aussi avoir une grosse capacit\u00e9 de stockage afin de stocker un grand nombre de ressources (vid\u00e9os, sons,...).\n\n!\n\nAfin d'assurer une continuit\u00e9 de service, dans les soci\u00e9t\u00e9s, plusieurs serveurs assurent exactement le m\u00eame r\u00f4le (on parle de redondance). Vous vous doutez bien que Google ne poss\u00e8de pas qu'un seul serveur, en effet, en moyenne, chaque seconde, c'est environ 65000 clients qui se connectent aux serveurs du moteur de recherche de Google. Aucun serveur, m\u00eame extr\u00eamement performant, ne serait capable de r\u00e9pondre \u00e0 toutes ces requ\u00eates. Google, Amazon ou encore Facebook poss\u00e8dent un tr\u00e8s grand nombre de serveurs afin de pouvoir satisfaire les demandes des utilisateurs en permanence. Ces entreprises poss\u00e8dent d'immenses salles contenant chacune des centaines ou des milliers de serveurs (ces serveurs sont rang\u00e9s dans des armoires appel\u00e9es \"baie serveur\").\n\n!\n\nSouvent les serveurs sont sp\u00e9cialis\u00e9s dans certaines t\u00e2ches, par exemple, les serveurs qui envoient aux clients des pages au format HTML sont appel\u00e9s \"serveur web\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3264, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1be09337-f9c5-49d0-9d41-a281bc7c85e0": {"__data__": {"id_": "1be09337-f9c5-49d0-9d41-a281bc7c85e0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25c.md", "file_name": "c25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5337e53a-d956-4122-ab8a-6f67de22ca59", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25c.md", "file_name": "c25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5f683792e388c6912f6f05039b8ffa0ef325db5b0fb16e4b27626b56688e9f44", "class_name": "RelatedNodeInfo"}}, "text": "2) du Web statique au  Web dynamique\n\nIl y a quelques ann\u00e9es, le web \u00e9tait dit \u00ab statique \u00bb : le concepteur de site web \u00e9crivait son code HTML et ce code \u00e9tait simplement envoy\u00e9 par le serveur web au client. Les personnes qui consultaient le site avaient toutes le droit \u00e0 la m\u00eame page, le web \u00e9tait purement \u00ab consultatif \u00bb.\n\nLes choses ont ensuite \u00e9volu\u00e9 : les serveurs sont aujourd'hui capables de g\u00e9n\u00e9rer eux-m\u00eames du code HTML. Les r\u00e9sultats qui s'afficheront \u00e0 l'\u00e9cran d\u00e9pendront donc des demandes effectu\u00e9es par l'utilisateur du site : le web est devenu dynamique.\n\nDiff\u00e9rents langages de programmation peuvent \u00eatre utilis\u00e9s \u00ab c\u00f4t\u00e9 serveur \u00bb afin de permettre au serveur de g\u00e9n\u00e9rer lui-m\u00eame le code HTML \u00e0 envoyer. Le plus utilis\u00e9 encore aujourd'hui se nomme PHP. D'autres langages sont utilisables c\u00f4t\u00e9 serveur (pour permettre la g\u00e9n\u00e9ration dynamique de code HTML) : Java, Python...\n\nVoici un exemple tr\u00e8s simple de code en PHP :\n\n```php\n<?php\n$heure = date(\"H:i\");\necho 'Bienvenue sur mon site\n      Il est '.$heure.'';\n?>\n```\n\nSans entrer dans les d\u00e9tails, si un client se connecte \u00e0 un serveur web qui ex\u00e9cute ce code \u00e0 18h23, le serveur enverra au client le code HTML ci-dessous :\n\n```html\nBienvenue sur mon site\nIl est 18h23\n```\n\nEn revanche si un client se connecte \u00e0 ce m\u00eame serveur \u00e0 9h12, le serveur enverra au client le code HTML ci-dessous :\n\n```html\nBienvenue sur mon site\nIl est 9h12\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06849f6e-dd61-4234-817a-eddb289befe9": {"__data__": {"id_": "06849f6e-dd61-4234-817a-eddb289befe9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25r.md", "file_name": "c25r.md", "file_size": 995, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3344a29-c951-4329-99c3-099c0ed63cc2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25r.md", "file_name": "c25r.md", "file_size": 995, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ed8a0bf6a810ad1585ad697f5a4b9abc7b866885ebc8504ffcaa1c3d4e7ae356", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Dans la plupart des \u00e9changes au niveau d\u2019un r\u00e9seau (Internet par exemple), les ordinateurs qui communiquent ne jouent pas le m\u00eame r\u00f4le. Un des ordinateurs est un client tandis que l\u2019autre est un serveur. Un client va demander des ressources \u00e0\nun serveur alors qu\u2019un serveur va passer son temps \u00e0 fournir des ressources \u00e0 une multitude de clients.\n\n- N'importe quel type d'ordinateur peut jouer le r\u00f4le de serveur, mais dans le monde professionnel les serveurs sont des machines sp\u00e9cialis\u00e9es con\u00e7ues pour fonctionner 24h sur 24h (il faut \u00eatre capable de fournir des ressources \u00e0 un client 24h/24h)\n\n- Afin de pr\u00e9venir un \u201cembouteillage\u201d (trop de clients qui se connecteraient en m\u00eame temps), un m\u00eame service est souvent assur\u00e9 par plusieurs serveurs qui vont jouer exactement le m\u00eame r\u00f4le, on parle alors de redondance des serveurs.\n\n- La redondance permet aussi d\u2019assurer la continuit\u00e9 du service en cas de panne d\u2019un des serveurs.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 957, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e5e6ce2-5323-4608-8fac-f943abb39dfd": {"__data__": {"id_": "6e5e6ce2-5323-4608-8fac-f943abb39dfd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26a.md", "file_name": "c26a.md", "file_size": 103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8df7639-5bfc-4172-bf64-4153bb873e36", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26a.md", "file_name": "c26a.md", "file_size": 103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c9e461a5d639ae17b8cd4511b0f9dab5389ca82b9be0c7ab1766720a178b7743", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 26.1\n\n1) Expliquez la notion de requ\u00eate HTTP\n\n2) Expliquez la notion de r\u00e9ponse HTTP", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 95, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae2a6e13-e236-4962-bb5a-8dee45f42e2e": {"__data__": {"id_": "ae2a6e13-e236-4962-bb5a-8dee45f42e2e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f33e2a3-21ff-4385-afbf-97941c9fdd0a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "d66e569d2763eff3513bb0ba3cc0e42b7f890612ba8d4dde8a33841b3ccfcba1", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nRevenons sur l'adresse qui s'affiche dans la barre d'adresse d'un navigateur web et plus pr\u00e9cis\u00e9ment sur le d\u00e9but de cette adresse c'est-\u00e0-dire le \"http\"\n\nSelon les cas cette adresse commencera par http ou https (nous verrons ce deuxi\u00e8me cas \u00e0 la fin de cette activit\u00e9).\n\nLe protocole (un protocole est ensemble de r\u00e8gles qui permettent \u00e0 2 ordinateurs de communiquer ensemble) HTTP (HyperText Transfert Protocol) va permettre au client d'effectuer des requ\u00eates \u00e0 destination d'un serveur web. En retour, le serveur web va envoyer une r\u00e9ponse.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17a7cea4-5d4f-476c-b4bb-97227fb04f32": {"__data__": {"id_": "17a7cea4-5d4f-476c-b4bb-97227fb04f32", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f52a816c-53ba-4abf-94d6-f2c72448a156", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "be2ea0203699ce6619c0e858717f7397b2311dd08a66293a559528c9ce24efee", "class_name": "RelatedNodeInfo"}}, "text": "2) requ\u00eate HTTP", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 17, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "708d0bb6-58d6-4411-8b94-ee0c6afe37f7": {"__data__": {"id_": "708d0bb6-58d6-4411-8b94-ee0c6afe37f7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "782ee217-a635-4cff-8072-a8534fde9c38", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "bd62b668092d81a6d7a8c8358861fb66ffef05d10e6ec716bd8a1dbdab670ca5", "class_name": "RelatedNodeInfo"}}, "text": "a) exemple\n\nVoici une version simplifi\u00e9e de la composition d'une requ\u00eate HTTP (client vers serveur) :\n\n- la m\u00e9thode employ\u00e9e pour effectuer la requ\u00eate\n\n- l'URL de la ressource\n\n- la version du protocole utilis\u00e9 par le client (souvent HTTP 1.1)\n\n- le navigateur employ\u00e9 (Firefox, Chrome) et sa version\n\n- le type du document demand\u00e9 (par exemple HTML)\n\n...\n\nCertaines de ces lignes sont optionnelles.\n\nVoici un exemple de requ\u00eate HTTP :\n\n```\nGET /mondossier/monFichier.html HTTP/1.1\nUser-Agent : Mozilla/5.0\nAccept : text/html\n```\n\nNous avons ici plusieurs informations :\n\n- GET\" est la m\u00e9thode employ\u00e9e (voir ci-dessous)\n\n- \"/mondossier/monFichier.html\" correspond \u00e0 l'URL de la ressource demand\u00e9e\n\n- \"HTTP/1.1\" : la version du protocole est la 1.1\n\n- \"Mozilla/5.0\" : le navigateur web employ\u00e9 est Firefox de la soci\u00e9t\u00e9 Mozilla\n\n- \"text/html\" : le client s'attend \u00e0 recevoir du HTML", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 884, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6236bb44-b265-4655-87e9-a883a3953602": {"__data__": {"id_": "6236bb44-b265-4655-87e9-a883a3953602", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b4cef0e-9945-4c4e-96c7-316936eb93f8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "eb1b007855effbe17dcc7637eef16aafc41a8b1c06d773248492a25a878ec845", "class_name": "RelatedNodeInfo"}}, "text": "b) m\u00e9thodes de requ\u00eate HTTP\n\nUne requ\u00eate HTTP  utilise une m\u00e9thode (c'est une commande qui demande au serveur d'effectuer une certaine action). Voici la liste des m\u00e9thodes disponibles :\n\nGET, HEAD, POST, OPTIONS, CONNECT, TRACE, PUT, PATCH, DELETE\n\nD\u00e9taillons 4 de ces m\u00e9thodes :\n\n- GET : C'est la m\u00e9thode la plus courante pour demander une ressource. Elle est sans effet sur la ressource.\n\n- POST : Cette m\u00e9thode est utilis\u00e9e pour soumettre des donn\u00e9es en vue d'un traitement (c\u00f4t\u00e9 serveur). Typiquement c'est la m\u00e9thode employ\u00e9e lorsque l'on envoie au serveur les donn\u00e9es issues d'un formulaire.\n\n- DELETE : Cette m\u00e9thode permet de supprimer une ressource sur le serveur.\n\n- PUT : Cette m\u00e9thode permet de modifier une ressource sur le serveur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 746, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "add011c4-722e-4b76-b275-f8f9569e8c27": {"__data__": {"id_": "add011c4-722e-4b76-b275-f8f9569e8c27", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4deda91-bd75-45a5-b72e-4d08724a43cc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "aa311ccc3843a1787646082c8c2e93decba19f6b8717dcf922243c2fbb7a45cf", "class_name": "RelatedNodeInfo"}}, "text": "3) R\u00e9ponse du serveur \u00e0 une requ\u00eate HTTP\n\nUne fois la requ\u00eate re\u00e7ue, le serveur va renvoyer une r\u00e9ponse, voici un exemple de r\u00e9ponse du serveur :\n\n```\nHTTP/1.1 200 OK\nDate: Thu, 15 feb 2019 12:02:32 GMT\nServer: Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4\nConnection: close\nTransfer-Encoding: chunked\nContent-Type: text/html; charset=ISO-8859-1\n\n\n\n\nVoici mon site\n\n\n Hello World! Ceci est un titre\nCeci est un paragraphe. Avez-vous bien compris ?\n\n\n```\n\nNous n'allons pas d\u00e9tailler cette r\u00e9ponse, voici quelques explications sur les \u00e9l\u00e9ments qui nous seront indispensables par la suite :\n\nCommen\u00e7ons par la fin : le serveur renvoie du code HTML, une fois ce code re\u00e7u par le client, il est interpr\u00e9t\u00e9 par le navigateur qui affiche le r\u00e9sultat \u00e0 l'\u00e9cran. Cette partie correspond au corps de la r\u00e9ponse.\n\nLa 1re ligne se nomme la ligne de statut :\n\n- HTTP/1.1 : version de HTTP utilis\u00e9 par le serveur\n\n- 200 : code indiquant que le document recherch\u00e9 par le client a bien \u00e9t\u00e9 trouv\u00e9 par le serveur. Il existe d'autres codes dont un que vous connaissez peut-\u00eatre d\u00e9j\u00e0 : le code 404 (qui signifie  \u00abLe document recherch\u00e9 n'a pu \u00eatre trouv\u00e9\u00bb).\n\nLes 5 lignes suivantes constituent l'en-t\u00eate de la r\u00e9ponse, une ligne nous int\u00e9resse plus particuli\u00e8rement :\n\nServer: Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4\n\nLe serveur web qui a fourni la r\u00e9ponse http ci-dessus a comme syst\u00e8me d'exploitation une distribution GNU/Linux nomm\u00e9e \"Debian\" (pour en savoir plus sur GNU/Linux, n'h\u00e9sitez pas \u00e0 faire vos propres recherches). \"Apache\" est le coeur du serveur web puisque c'est ce logiciel qui va g\u00e9rer les requ\u00eates http (recevoir les requ\u00eates http en provenance des clients et renvoyer les r\u00e9ponses http). Il existe d'autres logiciels capables de g\u00e9rer les requ\u00eates http (nginx, lighttpd...) mais, aux derni\u00e8res nouvelles, Apache est toujours le plus populaire puisqu'il est install\u00e9 sur environ la moiti\u00e9 des serveurs web mondiaux !", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1932, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b343514e-e98b-4432-8fba-160eb5efeed9": {"__data__": {"id_": "b343514e-e98b-4432-8fba-160eb5efeed9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95f3fe0d-62f5-431a-868d-bfda70ce05bc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "f6366d49bcb9fc281e8c6c77c6158e0516ec5f34286459af04930731e441c9f7", "class_name": "RelatedNodeInfo"}}, "text": "4) Protocole HTTPS\n\nLe \"HTTPS\" est la version \"s\u00e9curis\u00e9e\" du protocole HTTP. Par \"s\u00e9curis\u00e9\" on entend que les donn\u00e9es sont chiffr\u00e9es avant d'\u00eatre transmises sur le r\u00e9seau.\n\nVoici les diff\u00e9rentes \u00e9tapes d'une communication client - serveur utilisant le protocole HTTPS :\n\n- le client demande au serveur une connexion s\u00e9curis\u00e9e (en utilisant \"https\" \u00e0 la place de \"http\" dans la barre d'adresse du navigateur web)\n\n- le serveur r\u00e9pond au client qu'il est OK pour l'\u00e9tablissement d'une connexion s\u00e9curis\u00e9e. Afin de prouver au client qu'il est bien celui qu'il pr\u00e9tend \u00eatre, le serveur fournit au client un certificat prouvant son \"identit\u00e9\". En effet, il existe des attaques dites \"man in the middle\", o\u00f9 un serveur \"pirate\" essaye de se faire passer, par exemple, pour le serveur d'une banque : le client, pensant \u00eatre en communication avec le serveur de sa banque, va saisir son identifiant et son mot de passe, identifiant et mot de passe qui seront r\u00e9cup\u00e9r\u00e9s par le serveur pirate. Afin d'\u00e9viter ce genre d'attaque, des organismes d\u00e9livrent donc des certificats prouvant l'identit\u00e9 des sites qui proposent des connexions \"https\".\n\n- \u00e0 partir de ce moment-l\u00e0, les \u00e9changes entre le client et le serveur seront chiffr\u00e9s gr\u00e2ce \u00e0 un syst\u00e8me de cl\u00e9 de chiffrement (nous aborderons cette notion de cl\u00e9 de chiffrement l'ann\u00e9e prochaine, en terminale). M\u00eame si un pirate arrivait \u00e0 intercepter les donn\u00e9es circulant entre le client et le serveur, ces derni\u00e8res ne lui seraient d'aucune utilit\u00e9, car totalement incompr\u00e9hensible \u00e0 cause du chiffrement (seuls le client et le serveur sont aptes \u00e0 d\u00e9chiffrer ces donn\u00e9es)\n\nD'un point vu strictement pratique il est n\u00e9cessaire de bien v\u00e9rifier que le protocole est bien utilis\u00e9 (l'adresse commence par \"https\") avant de transmettre des donn\u00e9es sensibles (coordonn\u00e9es bancaires...). Si ce n'est pas le cas, passez votre chemin, car toute personne qui interceptera les paquets de donn\u00e9es sera en mesure de lire vos donn\u00e9es sensibles.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1971, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "58ce8596-e250-4467-bfc2-cfa82e1189a5": {"__data__": {"id_": "58ce8596-e250-4467-bfc2-cfa82e1189a5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac238a27-1fd5-4222-81f0-4b38b6c08a99", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "aa8e301763d43fb09061a4c3b56dfba7475039e55cbeee335cc6fef9a4136545", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nLe protocole (un protocole est ensemble de r\u00e8gles qui permettent \u00e0 2 ordinateurs de communiquer ensemble) HTTP (HyperText Transfert Protocol) va permettre au client d'effectuer des requ\u00eates \u00e0 destination d'un serveur web. En retour, le serveur web va envoyer une r\u00e9ponse.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 295, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8dbac3ef-00f4-4795-8ef0-36af836593f4": {"__data__": {"id_": "8dbac3ef-00f4-4795-8ef0-36af836593f4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2be0c1b0-fd96-4a5d-a3bc-a4523242870c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8e687c435fd8150ad2355894c81b4268b3721b176976210549da12d98ef6f9a7", "class_name": "RelatedNodeInfo"}}, "text": "requ\u00eate du client\n\nUne requ\u00eate HTTP utilise une m\u00e9thode (c'est une commande qui demande au serveur d'effectuer une certaine action). A chaque requ\u00eate faite par un client vers un serveur, on associe une des m\u00e9thodes ci-dessous : GET, HEAD, POST, OPTIONS, CONNECT, TRACE, PUT, PATCH, DELETE\n\nD\u00e9taillons 4 de ces m\u00e9thodes :\n\n- GET : C'est la m\u00e9thode la plus courante pour demander une ressource. Elle est sans effet sur la ressource.\n \n- POST : Cette m\u00e9thode est utilis\u00e9e pour soumettre des donn\u00e9es en vue d'un traitement (c\u00f4t\u00e9 serveur). Typiquement c'est la m\u00e9thode employ\u00e9e lorsque l'on\nenvoie au serveur les donn\u00e9es issues d'un formulaire.\n\n- DELETE : Cette m\u00e9thode permet de supprimer une ressource sur le serveur.\n \n- PUT : Cette m\u00e9thode permet de modifier une ressource sur le serveur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 789, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9592eb56-f0b9-456f-84f9-5e34fbe9d2f1": {"__data__": {"id_": "9592eb56-f0b9-456f-84f9-5e34fbe9d2f1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e55aa66c-2992-46e6-adb0-d0ea580b3f43", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4a1aeddb150402861405cbde784d76666b293644cde2da323f54d21ed8201974", "class_name": "RelatedNodeInfo"}}, "text": "r\u00e9ponse du serveur\n\nSuite \u00e0 une requ\u00eate d\u2019un client, le serveur envoie une r\u00e9ponse \u00e0 ce client. Dans la r\u00e9ponse du serveur on trouve beaucoup de choses (voir le cours), mais on n\u2019en retiendra deux :\n\n- un code : par exemple 200 si tout est OK ou 404 si la ressource demand\u00e9e n\u2019a pas \u00e9t\u00e9 trouv\u00e9e\u2026\n\n- du code HTML", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ceb2e93-6a8b-4231-8a93-0d61c3c64ad9": {"__data__": {"id_": "9ceb2e93-6a8b-4231-8a93-0d61c3c64ad9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "71e34556-ad07-4cfa-9fa4-0ac410ff206a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "192cb772b0243a168c0e6221232439f6435544a97b4d7e74e11bb43dce4a1452", "class_name": "RelatedNodeInfo"}}, "text": "HTTPS\n\nLe \"HTTPS\" est la version \"s\u00e9curis\u00e9e\" du protocole HTTP : les donn\u00e9es sont chiffr\u00e9es avant d'\u00eatre transmises sur le r\u00e9seau. Seul le possesseur de la cl\u00e9 de d\u00e9chiffrement sera en mesure de lire les donn\u00e9es transmises sur le r\u00e9seau (dans le cas du HTTP toutes les informations transmises sur le r\u00e9seau sont \u201clisibles\u201d par n\u2019importe qui).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 344, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbb76287-4411-4549-9f39-852777411527": {"__data__": {"id_": "fbb76287-4411-4549-9f39-852777411527", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c27a.md", "file_name": "c27a.md", "file_size": 1775, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e43b5b72-23ea-46d2-90b9-ba3f95b6c3ee", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c27a.md", "file_name": "c27a.md", "file_size": 1775, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "14e77ee3175596baf497e6e0fd8a9ba00f92e4f4e5704dcb4d3ae8bd6e9bac7f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 27.1\n\nEn utilisant Filius, nous allons maintenant mettre en place un serveur Web afin de pouvoir faire des requ\u00eates HTTP. Il sera possible d'analyser les donn\u00e9es \u00e9chang\u00e9es entre les machines gr\u00e2ce \u00e0 l'outil \"data exchange\". Pour afficher cet outil, il suffit de faire un clic droit sur la machine concern\u00e9e et de choisir \"show data exchange\". Commencez par visionner la vid\u00e9o ci-dessous :\n\nhttps://www.youtube.com/watch?v=fY2yiRXMdS8\n\nUne fois la vid\u00e9o visionn\u00e9e, en utilisant le logiciel Filius, mettez en place un r\u00e9seau compos\u00e9 de 2 clients et d'un serveur Web, cr\u00e9ez ensuite une page HTML toute simple et activez le serveur Web (comme indiqu\u00e9 dans la vid\u00e9o). Choisissez un client et par l'interm\u00e9diaire d'un navigateur Web (que vous aurez au pr\u00e9alable install\u00e9 sur le client), effectuez une requ\u00eate HTTP. Analysez les donn\u00e9es \u00e9chang\u00e9es entre le client et le serveur \u00e0 l'aide de l'outil \"data exchange\".\n\nComme vous pouvez le constater on retrouve :\n\n- le protocole TCP au niveau de la couche \"Transport\" (\"ACK\" signifie acknowledgement, ce sont les accus\u00e9s de r\u00e9ception aussi appel\u00e9s acquittement)\n\n- le protocole HTTP au niveau de la couche \"Application\" (en cliquant sur les requ\u00eates et r\u00e9ponses HTTP on retrouve ce que l'on a vu pr\u00e9c\u00e9demment dans le cours \"Protocole HTTP\")\n\n- le protocole ARP qui permet de trouver une adresse MAC \u00e0 partir d'une adresse IP (l'\u00e9change entre les 2 machines commence d'ailleurs avec ce protocole ARP, sinon, impossible d'envoyer les trames)\n\nOn notera que les trames et les paquets IP ne sont pas directement visibles avec cet outil \"data exchange\" : il faut cliquer sur une ligne \"TCP\" pour \"voir\" les couches \"Internet\" et \"acc\u00e8s r\u00e9seau\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1690, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8aeefa1-cd9f-449b-b76d-ac95bc42972c": {"__data__": {"id_": "e8aeefa1-cd9f-449b-b76d-ac95bc42972c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b2345e20-3747-417f-bff5-df5eb0274580", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "19f7a56d7aa368d3dcd17007f30a6f4fc226dcfefd5eb8a208a9a5853d42b97e", "class_name": "RelatedNodeInfo"}}, "text": "Comme d\u00e9j\u00e0 \u00e9voqu\u00e9 dans la partie consacr\u00e9e au mod\u00e8le client-serveur, un serveur web (aussi appel\u00e9 serveur HTTP) permet de r\u00e9pondre \u00e0 une requ\u00eate HTTP effectu\u00e9e par un client (tr\u00e8s souvent un navigateur web). Nous allons travailler avec le serveur web qui est install\u00e9 sur votre ordinateur. Nous allons donc avoir une configuration un peu particuli\u00e8re puisque le client et le serveur vont se trouver sur la m\u00eame machine. Cette configuration est classique lorsque l'on d\u00e9sire effectuer de simples tests. Nous aurons donc 2 logiciels sur le m\u00eame ordinateur : le client (navigateur web) et le serveur (serveur web), ces 2 logiciels vont communiquer en utilisant le protocole HTTP. Il existe de nombreux serveurs web, mais le plus utilis\u00e9 se nomme Apache. Nous n'allons pas utiliser Apache, car nous allons travailler avec le framework Python Flask. Ce framework va nous permettre de g\u00e9n\u00e9rer des pages web c\u00f4t\u00e9 serveur, il poss\u00e8de son propre serveur web. \u00c0 noter qu'il est aussi possible d'utiliser d'autres langages c\u00f4t\u00e9 serveur : Java, C# et surtout PHP (pour ceux qui sont int\u00e9ress\u00e9s, vous trouverez ici l'\u00e9quivalent de la pr\u00e9sente activit\u00e9 en PHP \u00e0 la place de Python).\n\nNous allons commencer par un cas tr\u00e8s simple o\u00f9 le serveur va renvoyer au client une simple page HTML statique (ne pas h\u00e9siter \u00e0 consulter la partie consacr\u00e9e au mod\u00e8le client-serveur pour plus de pr\u00e9cision sur ce terme \"statique\").", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c49fd740-52b3-4b0d-9bfb-041c747ff9ea": {"__data__": {"id_": "c49fd740-52b3-4b0d-9bfb-041c747ff9ea", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "35bbd956-890c-4847-9686-e5aa5da6f6a7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0de5b1c84447c1841e2201f0952edf9813edfd3cb0609003969289a152a5917d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.1\n\nDans votre r\u00e9pertoire de travail, cr\u00e9ez un r\u00e9pertoire nomm\u00e9 \"flask\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27ade77b-1eb2-440c-9b79-6e8417b0ce0b": {"__data__": {"id_": "27ade77b-1eb2-440c-9b79-6e8417b0ce0b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c39bf27f-f3b2-47ab-8b85-ca1dc4b83770", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "913614af988d296a1a313e173bda0c361dec54947a0f4756df0c6860d95fa46c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.2\n\n\u00c0 l'aide de Spyder, cr\u00e9ez un fichier Python \"views.py\" (ce fichier devra \u00eatre sauvegard\u00e9 dans le r\u00e9pertoire \"flask\" pr\u00e9c\u00e9demment cr\u00e9\u00e9). Saisissez le code suivant dans le fichier \"views.py\"\n\n```python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  return \"Tout fonctionne parfaitement\"\n\napp.run(debug=True)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "58aa44d3-0c7f-437f-ae9c-d582c1b30bd5": {"__data__": {"id_": "58aa44d3-0c7f-437f-ae9c-d582c1b30bd5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ad97850-9710-4b28-8c1d-fc92a2cf5c66", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d6044cd46e90781f635066b810cb3d07571232a083586c844b3619ca1f47404c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.3\n\nApr\u00e8s avoir ex\u00e9cut\u00e9 le programme ci-dessus, ouvrez votre navigateur web et tapez dans la barre d'adresse \"localhost:5000\".\n\nVous devriez voir la phrase \"Tout fonctionne parfaitement\" s'afficher dans votre navigateur.\n\nUne petite explication s'impose \u00e0 propos du \"localhost:5000\" : comme nous l'avons d\u00e9j\u00e0 dit, notre serveur et notre client se trouvent sur la m\u00eame machine, avec le \"localhost\", on indique au navigateur que le serveur web se trouve sur le m\u00eame ordinateur que lui (on parle de machine locale). Dans un cas normal, la barre d'adresse devrait \u00eatre renseign\u00e9e avec l'adresse du serveur web. Le \"5000\" indique le port, nous n'\u00e9tudierons pas cet aspect des choses ici, vous devez juste savoir que le \"5000\" doit suivre le \"localhost\".\n\nStoppez l'ex\u00e9cution du programme dans Spyder.\n\nEssayons de comprendre en d\u00e9tail ce qui s'est pass\u00e9 :\n\nEn ex\u00e9cutant le programme Python ci-dessus, le framework Flask a lanc\u00e9 un serveur web. Ce serveur web attend des requ\u00eates HTTP sur le port 5000. En ouvrant un navigateur web et en tapant \"localhost:5000\", nous faisons une requ\u00eate HTTP, le serveur web fourni avec Flask r\u00e9pond \u00e0 cette requ\u00eate HTTP en envoyant une page web contenant uniquement \"Tout fonctionne parfaitement\".\n\nReprenons le programme Python ligne par ligne :\n\n```python\nfrom flask import Flask\n```\n\nNous importons la biblioth\u00e8que Flask\n\n```python\napp = Flask(__name__)\n```\n\t\t\t\nNous cr\u00e9ons un objet app : cette ligne est syst\u00e9matique n\u00e9cessaire.\n\n```python\n@app.route('/')\n```\n\nNous utilisons ici un d\u00e9corateur (cette notion de d\u00e9corateur ne sera pas trait\u00e9e en NSI). Vous devez juste comprendre la fonction qui suit ce d\u00e9corateur (\"index\"), sera ex\u00e9cut\u00e9e dans le cas o\u00f9 le serveur web recevra une requ\u00eate HTTP avec une URL correspondant \u00e0 la racine du site ('/'), c'est \u00e0 dire, dans notre exemple, le cas o\u00f9 on saisie dans la barre d'adresse \"localhost:5000/\" (ou simplement \"localhost:5000\") Nous verrons ci-dessous un exemple avec une URL autre que '/'.\n\n```python\ndef index():\n    return \"Tout fonctionne parfaitement\"\n```\n\nEn cas de requ\u00eate HTTP d'un client avec l'URL \"/\", le serveur renvoie vers le client une page HTML contenant uniquement la ligne \"\\Tout fonctionne parfaitement\\\".\n\n```python\napp.run(debug=True)\n```\n\nCette ligne permet de lancer le serveur, elle sera syst\u00e9matiquement pr\u00e9sente.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2333, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59794a89-7c77-4cee-b678-833454c1fdf4": {"__data__": {"id_": "59794a89-7c77-4cee-b678-833454c1fdf4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5144c61f-b32a-4b47-bb51-8dbf3fb57728", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cd74771550691e86d269a722ff0ea5fd8190c14394cbb5df8625e6d27b3898b4", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.4\n\n\u00c0 l'aide de Spyder, modifiez le fichier Python \"views.py\" :\n\n```python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  return \"Tout fonctionne parfaitement\"\n@app.route('/about')\ndef about():\n  return \"Une autre page\"\napp.run(debug=True)\n```\n\nApr\u00e8s avoir ex\u00e9cut\u00e9 le programme ci-dessus, saisissez \"localhost:5000/about\" dans la barre d'adresse de votre navigateur.\n\nComme vous pouvez le constater, le serveur nous renvoie dans ce cas une autre page. \u00c9videmment l'URL racine (\"/\") reste disponible, vous pouvez passer d'une page \u00e0 l'autre en modifiant l'URL dans la barre d'adresse (\"localhost:5000\" ou \"localhost:5000/about\")\n\n\u00c9crire le code HTML qui devra \u00eatre renvoy\u00e9 au client dans le programme Python n'est pas tr\u00e8s pratique, Flask propose une autre solution bien plus satisfaisante :", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80afb447-33ce-4799-bd7e-86d7c2bf812e": {"__data__": {"id_": "80afb447-33ce-4799-bd7e-86d7c2bf812e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68c88959-f408-42bb-b6b1-18a1a7b8a19e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "34249f01e3d19cdb569700647e38365d7098da96d29518948bb8ef2e4ba38dd2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.5\n\nDans votre r\u00e9pertoire \"Flask\", cr\u00e9ez un r\u00e9pertoire \"templates\". Dans ce r\u00e9pertoire templates, cr\u00e9ez un fichier index.html. Saisissez le code HTML ci-dessous dans ce fichier index.html\n\n```html\n\n\n\t\n\t\t\n\t\tMa page\n\t\n\t\n\t  Mon super site\n\t  Tout fonctionne parfaitement\n\t\n\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 287, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c3d5a9c-f8ac-4eff-80b4-ee82297369b6": {"__data__": {"id_": "2c3d5a9c-f8ac-4eff-80b4-ee82297369b6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "96372a4d-4946-457b-a279-82a3a952b44f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8ccdde1cbfca69716df4b20e28f6dd3e306040b44e08e757ffdc0c2f846bf5c0", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.6\n\nModifiez le programme views.py comme suit :\n\n```python\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return render_template(\"index.html\")\n\napp.run(debug=True)\n```\n\nRelancez le programme Python et tapez \"localhost:5000\" dans la barre d'adresse de votre navigateur\n\nLe serveur renvoie maintenant au client la page HTML correspondant au fichier \"index.html\" qui a \u00e9t\u00e9 cr\u00e9\u00e9 dans le r\u00e9pertoire \"templates\". Attention, les fichiers HTML devront syst\u00e9matiquement se trouver dans un r\u00e9pertoire nomm\u00e9 \"templates\".\n\nN. B. le \"debug=True\" de la derni\u00e8re ligne permet de modifier les fichiers HTML sans \u00eatre oblig\u00e9 de red\u00e9marrer le programme \"views.py\".\n\nPour l'instant notre site est statique : la page reste identique, quelles que soient les actions des visiteurs. Flask permet de cr\u00e9er des pages dynamiques :\n\n- le client (le navigateur web) envoie une requ\u00eate HTTP vers un serveur web\n\n- en fonction de la requ\u00eate re\u00e7ue et de diff\u00e9rents param\u00e8tres, Flask \"fabrique\" une page HTML diff\u00e9rente\n\n- le serveur web associ\u00e9 \u00e0 Flask envoie la page nouvellement cr\u00e9\u00e9e au client\n\n- une fois re\u00e7ue, la page HTML est affich\u00e9e dans le navigateur web", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af5b269d-8d5f-4fa7-86a6-c2ba13170077": {"__data__": {"id_": "af5b269d-8d5f-4fa7-86a6-c2ba13170077", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4aa79ce-ba6c-4c81-b2ac-afb0a1f0a2e0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bc131bfcafe890c64384add9833bce7e9904760ad10926df76d50a237a7346ab", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.7\n\nModifiez le fichier views.py comme suit :\n\n```python\nfrom flask import Flask, render_template\nimport datetime\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  date = datetime.datetime.now()\n  h = date.hour\n  m = date.minute\n  s = date.second\n  return render_template(\"index.html\", heure = h, minute = m, seconde = s)\n\napp.run(debug=True)\n```\n\nDans le programme ci-dessous nous importons le module \"datetime\" afin de pouvoir d\u00e9terminer la date et l'heure courante. Le\n\n```python\ndate = datetime.datetime.now()\n```\n\nnous permet de r\u00e9cup\u00e9rer la date et l'heure courante\n\n```\nh = date.hour\nm = date.minute\ns = date.second\n```\n\nApr\u00e8s l'ex\u00e9cution des 3 lignes ci-dessus, les variables h, m et s contiennent l'heure courante.\n\nLa fonction \"render_template\"\n\n```python\nreturn render_template(\"index.html\", heure = h, minute = m, seconde = s)\n```\n\ncontient 3 param\u00e8tres de plus par rapport \u00e0 l'exemple du \"\u00c0 faire vous-m\u00eame 6\" : le param\u00e8tre \"heure\", le param\u00e8tre \"minute\" et le param\u00e8tre \"seconde\", nous allons retrouver ces 3 param\u00e8tres dans le fichier HTML.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1074, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54ec4195-3bd2-478f-912b-ce59cbb4e8db": {"__data__": {"id_": "54ec4195-3bd2-478f-912b-ce59cbb4e8db", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e76a0f23-5de0-451d-a5b3-ddc62f08cadf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1d1b4612decc37c6542d98a00228f4463ae2ce3df67390ce2f6b0ae0da5bcdac", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.8\n\nModifiez le fichier \"index.html\" comme suit :\n\n```html\n\n\n\t\n\t\t\n\t\tUtilisation de Flask\n\t\n\t\n\t  Mon super site\n\t  Le serveur fonctionne parfaitement, il est {{heure}} h {{minute}} minutes et {{seconde}} secondes\n\t\n\n```\n\t\t\t\nTestez ces modifications en saisissant \"localhost:5000\" dans la barre de votre navigateur web.\n\nNous avons bien une page dynamique, puisqu'\u00e0 chaque fois que vous actualisez la page dans votre navigateur, l'heure courante s'affiche : \u00e0 chaque fois que vous actualisez la page, vous effectuez une nouvelle requ\u00eate et en r\u00e9ponse \u00e0 cette requ\u00eate, le serveur envoie une nouvelle page HTML.\n\nAttention, il est bien important de comprendre que la page HTML envoy\u00e9e par le serveur au client ne contient plus les param\u00e8tres {{heure}}, {{minute}} et {{seconde}}. Au moment de cr\u00e9er la page, le serveur remplace ces param\u00e8tres par les valeurs pass\u00e9es en param\u00e8tres de la fonction \"render_template\" (s'il est 14 h 45 minutes et 31 secondes, le serveur remplacera \"Le serveur fonctionne parfaitement, il est {{heure}} h {{minute}} minutes et {{seconde}} secondes\" par \"Le serveur fonctionne parfaitement, il est 15 h 45 minutes et 31 secondes\").\n\nLe fichier \"index.html\" ne contient donc pas du HTML (m\u00eame si cela ressemble beaucoup \u00e0 du HTML), car les param\u00e8tres {{heure}}, {{minute}} et {{seconde}} n'existent pas en HTML. Le fichier \"index.html\" contient en fait un langage de template nomm\u00e9 Jinja. Jinja ressemble beaucoup au HTML, mais il rajoute beaucoup de fonctionnalit\u00e9s par rapport au HTML (notamment les param\u00e8tres entour\u00e9s d'une double accolade comme {{heure}}). Si vous utilisez Jinja seul (sans un framework comme Flask), les param\u00e8tres ne seront pas remplac\u00e9s et votre navigateur affichera \"Le serveur fonctionne parfaitement, il est {{heure}} h {{minute}} minutes et {{seconde}} secondes\".\n\nNous allons maintenant nous int\u00e9resser \u00e0 la gestion des formulaires.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1898, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69f654fc-2572-42ee-97e5-36f581b2d9c7": {"__data__": {"id_": "69f654fc-2572-42ee-97e5-36f581b2d9c7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a88948b-e236-4b7c-b407-7a21335754ef", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3fcd06b0b8b60ed09c5407d891a44bcdf1c4f8c81fe24cea25c20a7059c86f17", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.9\n\nModifiez le fichier \"index.html\" comme suit :\n\n```html\n\n\n\n\n    \n    Le formulaire\n\n\n\n    \n        Nom : \n        Pr\u00e9nom : \n        \n    \n\n\n\n```\n\net cr\u00e9ez un fichier \"resultat.html\" (dans le r\u00e9pertoire \"templates\"), ce fichier devra contenir le code suivant :\n\n```html\n\n\n\n\n    \n    R\u00e9sultat\n\n\n\n    Bonjour {{prenom}} {{nom}}, j'esp\u00e8re que vous allez bien.\n\n\n\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 378, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90966541-1f47-4a63-ae3c-86b8501ded98": {"__data__": {"id_": "90966541-1f47-4a63-ae3c-86b8501ded98", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "837cdf55-a178-44a7-8901-7367d1ff6b89", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cebc3e5eba8ec8eda3281e013791722c4b68eacda23fff8fdeaba8b790796a36", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.10\n\nModifiez le fichier views.py comme suit :\n\n```python\nfrom flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  return render_template('index.html')\n\n@app.route('/resultat',methods = ['POST'])\ndef resultat():\n  result = request.form\n  n = result['nom']\n  p = result['prenom']\n  return render_template(\"resultat.html\", nom=n, prenom=p)\n\napp.run(debug=True)\n```\n\nApr\u00e8s avoir relanc\u00e9 \"views.py\", testez cet exemple en saisissant \"localhost:5000\" dans la barre d'adresse de votre navigateur web.\n\nSi vous saisissez, par exemple, \"Martin\" et \"Sophie\" dans les champs \"Nom\" et \"Pr\u00e9nom\" du formulaire, vous devriez obtenir le r\u00e9sultat suivant apr\u00e8s avoir appuy\u00e9 sur le bouton \"Envoyer\" :\n\n!\n\nReprenons un par un les \u00e9v\u00e9nements qui nous ont amen\u00e9s \u00e0 ce r\u00e9sultat :\n\nNous effectuons une requ\u00eate HTTP avec l'URL \"/\", le serveur g\u00e9n\u00e8re une page web \u00e0 partir du fichier \"index.html\", cette page, qui contient un formulaire (balise \\) est envoy\u00e9e vers le client. On remarque 2 attributs dans cette balise form : action=\"http://localhost:5000/resultat\" et method=\"post\". Ces 2 attributs indiquent que le client devra effectuer une requ\u00eate de type POST (la m\u00e9thode POST a d\u00e9j\u00e0 \u00e9t\u00e9 vue dans la partie consacr\u00e9e au protocole HTTP) d\u00e8s que l'utilisateur appuiera sur le bouton \"Envoyer\". Cette requ\u00eate POST sera envoy\u00e9e \u00e0 l'URL \"http://localhost:5000/resultat\" (voir l'attribut \"action\"). Les donn\u00e9es saisies dans le formulaire seront envoy\u00e9es au serveur par l'interm\u00e9diaire de cette requ\u00eate.\n\nN.B Vous avez sans doute remarqu\u00e9 que la m\u00e9thode \u00e0 employer pour effectuer la requ\u00eate HTTP n'est pas pr\u00e9cis\u00e9e dans le \"@app.route('/')\". Si rien n'est pr\u00e9cis\u00e9, par d\u00e9faut, c'est la m\u00e9thode GET qui est utilis\u00e9e.\n\nInt\u00e9ressons-nous \u00e0 la fonction \"resultat\", puisque c'est cette fonction qui sera ex\u00e9cut\u00e9e c\u00f4t\u00e9 serveur pour traiter la requ\u00eate POST :\n\n```python\ndef resultat():\n result = request.form\n n = result['nom']\n p = result['prenom']\n return render_template(\"resultat.html\", nom=n, prenom=p)\n```\n\n\"request.form\" est un dictionnaire Python qui a pour cl\u00e9s les attributs \"name\" des balises \"input\" du formulaire (dans notre cas les cl\u00e9s sont donc \"nom\" et \"prenom\") et comme valeurs ce qui a \u00e9t\u00e9 saisi par l'utilisateur. Si l'utilisateur saisit \"Martin\" et \"Sophie\", le dictionnaire \"request.form\" sera :\n\n```\n{'nom':'Martin', 'prenom':'Sophie'}\n```\n\nLe reste du code ne devrait pas vous poser de probl\u00e8me.\n\nLe template \"resultat.html\" utilise des param\u00e8tres \"nom\" et \"prenom\".\n\nEn r\u00e9ponse \u00e0 la requ\u00eate POST, le serveur renvoie une page HTML cr\u00e9\u00e9e \u00e0 partir du template \"resultat.html\" et des param\u00e8tres \"nom\" et \"prenom\". Si l'utilisateur a saisi \"Martin\" et \"Sophie\", le navigateur affichera \"Bonjour Sophie Martin, j'esp\u00e8re que vous allez bien.\"\n\nPour g\u00e9rer le formulaire, il est possible d'utiliser une m\u00e9thode HTTP \"GET\" \u00e0 la place de la m\u00e9thode \"POST\" :", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2898, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de3ed5fe-e569-4d6a-bf5c-ac961b7eb76f": {"__data__": {"id_": "de3ed5fe-e569-4d6a-bf5c-ac961b7eb76f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "360f90b9-76e8-4736-80be-81e7ac45c138", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f81186446c4331e14440e8efc3640ef1f3ffbf86f2c211ec86c56ce7a56d70ae", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.11\n\nModifiez les fichiers comme suit :\n\nindex.html\n\n```html\n\n\n\n\n    \n    Le formulaire\n\n\n\n    \n        Nom : \n        Pr\u00e9nom : \n        \n    \n\n\n\n```\n\nresultat.html (le fichier est inchang\u00e9)\n\n```html\n\n\n\n\n    \n    R\u00e9sultat\n\n\n\n    Bonjour {{prenom}} {{nom}}, j'esp\u00e8re que vous allez bien.\n\n\n\n```\n\nviews.py\n\n```python\nfrom flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n return render_template('index.html')\n\n@app.route('/resultat',methods = ['GET'])\ndef resultat():\n  result=request.args\n  n = result['nom']\n  p = result['prenom']\n  return render_template(\"resultat.html\", nom=n, prenom=p)\n\napp.run(debug=True)\n```\n\nDans \"index.html\", la m\u00e9thode POST a \u00e9t\u00e9 remplac\u00e9e par la m\u00e9thode GET. Dans le fichier \"views.py\" nous avons aussi remplac\u00e9 POST par GET, et on utilise \"request.args\" \u00e0 la place de \"request.form\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d37b4f44-f15f-44f4-bb85-9a1118c9bae8": {"__data__": {"id_": "d37b4f44-f15f-44f4-bb85-9a1118c9bae8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b580db8f-0ccf-43af-ae53-040b6d44a476", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cc9d14a12170434d83da8ce156cf03f0b4f70ad44d87985719cc3d0a4e0a27b0", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.12\n\nRelancez l'ex\u00e9cution de \"views.py\" et saisissez \"localhost:5000\" dans la barre d'adresse d'un navigateur web. Une fois la page web affich\u00e9e dans votre navigateur, Saisissez \"Sophie\" pour le pr\u00e9nom et \"Martin\" pour le nom puis validez en cliquant sur le bouton \"Envoyer\". Une fois que vous avez cliqu\u00e9 sur le bouton \"Envoyer\", observez attentivement la barre d'adresse de votre navigateur. Vous devriez obtenir quelque chose qui ressemble \u00e0 cela :\n\n!\n\nVous avez d\u00fb remarquer que cette fois-ci, les informations du formulaire sont transmises au serveur par l'interm\u00e9diaire de l'URL : localhost:5000/resultat?nom=Martin&prenom=Sophie\n\nDans le cas de l'utilisation d'une m\u00e9thode \"POST\" les donn\u00e9es issues d'un formulaire sont envoy\u00e9es au serveur sans \u00eatre directement visibles, alors que dans le cas de l'utilisation d'une m\u00e9thode \"GET\", les donn\u00e9es sont visibles (et accessibles) puisqu'elles sont envoy\u00e9es par l'interm\u00e9diaire de l'URL.\n\nLes donn\u00e9es envoy\u00e9es par l'interm\u00e9diaire d'une m\u00e9thode \"GET\" peuvent \u00eatre modifi\u00e9es directement dans l'URL :", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1061, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95c23524-1808-4c95-9a49-9318c2cbf9f1": {"__data__": {"id_": "95c23524-1808-4c95-9a49-9318c2cbf9f1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "25f289f4-ffe1-42ca-b64c-6d7c719c57b3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "91b412367ee20bc271b9eb9dd26c57ec59df851d344aa41ba5a92c02e864f8a2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.13\n\nOuvrez votre navigateur Web et tapez dans la barre d'adresse \"localhost:5000\". Une fois la page web affich\u00e9e dans votre navigateur, Saisissez \"Sophie\" pour le pr\u00e9nom et \"Martin\" pour le nom puis validez en cliquant sur le bouton \"Envoyer\". Une fois que le message \"Bonjour Sophie Martin, j'esp\u00e8re que vous allez bien.\" apparait, modifier l'URL : passez de \"localhost:5000/resultat?nom=Martin&prenom=Sophie\" \u00e0 \"localhost:5000/resultat?nom=Martin&prenom=Jean-Pierre\", validez votre modification en appuyant sur la touche \"Entr\u00e9e\".\n\nComme vous pouvez le constater, la page a bien \u00e9t\u00e9 modifi\u00e9e : \"Bonjour Jean-Pierre Martin, j'esp\u00e8re que vous allez bien.\"\n\nM\u00eame si dans notre cas cette op\u00e9ration de modification d'URL est inoffensive, vous devez bien vous douter que dans des situations plus complexes, une telle modification pourrait entrainer des cons\u00e9quences plus probl\u00e9matiques (piratage). Il faut donc \u00e9viter d'utiliser la m\u00e9thode \"GET\" pour transmettre les donn\u00e9es issues d'un formulaire vers un serveur.\n\nIl est important de bien comprendre que la m\u00e9thode \"POST\" n'offre pas non plus une s\u00e9curit\u00e9 absolue puisque toute personne ayant un bagage technique minimum sera capable de lire les donn\u00e9es transmises \u00e0 l'aide de la m\u00e9thode \"POST\" en analysant la requ\u00eate HTTP, m\u00eame si ces donn\u00e9es ne sont pas directement visibles dans l'URL. Seule l'utilisation du protocole s\u00e9curis\u00e9 HTTPS garantit un transfert s\u00e9curis\u00e9 des donn\u00e9es entre le client et le serveur (les donn\u00e9es sont chiffr\u00e9es et donc illisibles pour une personne ne poss\u00e9dant pas la cl\u00e9 de d\u00e9chiffrement).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1580, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f89be756-713b-4f4d-840b-779c672d72fa": {"__data__": {"id_": "f89be756-713b-4f4d-840b-779c672d72fa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bb7cb0f-104c-4bd1-af9d-570c619bd47f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b3636b9d7eb2e0b34cd478c03827a8753ed0725015fd0392044c11c3b5856dde", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.1\n\nPour nos premiers pas avec Pandas, nous allons utiliser des donn\u00e9es tr\u00e8s simples au format CSV, ces donn\u00e9es sont contenues dans le fichier ident_virgule.csv.\n\n- cr\u00e9ez un r\u00e9pertoire *nsi_pandas* dans votre r\u00e9pertoire de travail\n\n- t\u00e9l\u00e9chargez le fichier ident_virgule.csv et placez-le dans le dossier *nsi_pandas*\n\n- cr\u00e9ez un fichier *nsi_p.py* et placez-le dans le dossier *nsi_pandas*\n\n- ouvrez le fichier *nsi_p.py* avec Spyder et saisissez le code suivant dans la partie  \"\u00c9diteur\" de Spyder :\n\n```\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\n```\n\nApr\u00e8s l'ex\u00e9cution de ce programme, vous devriez voir apparaitre les donn\u00e9es contenues dans la variable \"iden\", rang\u00e9es sous la forme d'un tableau, un peu comme ce que nous obtenions en ouvrant le fichier \"ident_virgule.csv\" avec un tableur :\n\n!\n\nVous avez peut-\u00eatre remarqu\u00e9 qu'une colonne a \u00e9t\u00e9 ajout\u00e9e par rapport \u00e0 ce que nous obtenions avec le tableur :\n\n!\n\nLes nombres pr\u00e9sents dans cette colonne sont appel\u00e9s des index. Chaque ligne du tableau a un index (premi\u00e8re ligne : index 0, deuxi\u00e8me ligne index 1...)\n\nATTENTION : les index commencent \u00e0 0 et pas \u00e0 1\n\nLes colonnes poss\u00e8des \u00e9galement des index, dans notre exemple ces index correspondent au \"nom\" (index de la premi\u00e8re colonne), au \"prenom\" (index de la deuxi\u00e8me colonne) et \u00e0 \"date_naissance\" (index de la troisi\u00e8me colonne)\n\nEn r\u00e9sum\u00e9 : les lignes poss\u00e8dent des index (0,1,2..), les colonnes poss\u00e8dent aussi des index (\"nom\", \"prenom\",...)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1484, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb01600e-c11e-466f-8c32-9af0f451852d": {"__data__": {"id_": "fb01600e-c11e-466f-8c32-9af0f451852d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0efcf9d5-8193-452e-806d-e023ffa8dea9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a6d2362e7ce1928966f12becd186bc431de849a89c3ce51e2717a9fd9e41218b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.2\n\nIl est possible de r\u00e9cup\u00e9rer certaines donn\u00e9es du tableau, par exemple, certaines lignes, certaines colonnes ou bien encore des valeurs uniques. Pour cela, il suffit d'utiliser l'instruction \"loc\" avec les index des lignes et les index des colonnes. Le principe de fonctionnement de \"loc\" est relativement simple puisque l'on aura une instruction de la forme *loc[index_ligne,index_colonne]*\n\nTestez le programme suivant (vous pouvez r\u00e9utiliser le fichier *nsi_p.py*) :\n\n```python\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\ninfo=iden.loc[1,'prenom']\n```\nV\u00e9rifiez que la variable \"info\" contient bien le pr\u00e9nom \"christophe\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fa47120-a57a-4589-9795-7bc87cf3e4a6": {"__data__": {"id_": "4fa47120-a57a-4589-9795-7bc87cf3e4a6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d6dc4655-26ea-426b-95f5-633dfc3e627f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "73aeb379a7bcd7b73a2714814d4df9ffed71545a693b203066211fe3b193143b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.3\n\nModifiez le programme de l'activit\u00e9 29.2 pour que la valeur de la variable *info* soit \u00e9gale \u00e0 \"12/06/1978\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 124, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d652e246-5b2d-4576-a9d6-5c1a9d5086f0": {"__data__": {"id_": "d652e246-5b2d-4576-a9d6-5c1a9d5086f0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "875b5a3e-7561-47aa-a9e0-6f8a530a13f8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8e2f47d54d772d2982aef318a04aad78b91a4cc2c905ea07a8cdf2fd70f8504e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.4\n\nIl est possible de r\u00e9cup\u00e9rer toutes les lignes d'une colonne, il suffit de remplacer la partie \"index_ligne\" de \"loc\" par \":\"\n\nTestez le programme suivant :\n\n```python\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\ninfo=iden.loc[:,'nom']\n```\n\nV\u00e9rifiez que la valeur de la variable \"info\" est \u00e9gale \u00e0 une structure de donn\u00e9es qui contient toutes les donn\u00e9es de la colonne d'index \"nom\", autrement dit, tous les noms.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbab9b9d-2336-4ccc-9e0d-27b1a4d3284c": {"__data__": {"id_": "dbab9b9d-2336-4ccc-9e0d-27b1a4d3284c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a1b19ff8-ad6e-46eb-a9d2-bdac77b9f998", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "dafa270508504a5606c5249fd93897d834d3ed3cb914c3e155115e11c0750050", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.5\n\nIl est possible de r\u00e9cup\u00e9rer toutes les colonnes d'une ligne particuli\u00e8re, cette fois en rempla\u00e7ant la partie \"index_colonne\" de \"loc\" par \":\"\n\nTestez le programme suivant :\n\n```python\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\ninfo=iden.loc[2,:]\n```\n\nV\u00e9rifiez que la valeur de la variable \"info\" est \u00e9gale \u00e0 une structure de donn\u00e9es qui contient toutes les donn\u00e9es pr\u00e9sentes dans la ligne d'index 2 (la derni\u00e8re ligne).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 450, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6683efb0-98a2-4b9c-9895-e02b14d725cb": {"__data__": {"id_": "6683efb0-98a2-4b9c-9895-e02b14d725cb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78a86a96-7bad-4aca-9636-477a311954a8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f1f4ea61fc70e45d46a02124e541c938eeb639cdf535e51c17d9e8dbcb0d3740", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.6\n\nIl est aussi possible de r\u00e9cup\u00e9rer seulement certaines lignes et certaines colonnes.\n\nTestez le programme suivant :\n\n```python\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\ninfo=iden.loc[[0,1],['nom','date_naissance']]\n```\n\nOn r\u00e9cup\u00e8re bien les 2 premi\u00e8res lignes (index 0 et index 1) et les colonnes *nom* et *date_naissance*.\n\nAfin d'avoir des exemples plus complexes \u00e0 traiter, dans la suite, nous allons travailler sur les donn\u00e9es contenues dans le fichier villes_virgule.csv. Ce fichier contient des informations sur plus de 36000 communes fran\u00e7aises.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 583, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccb1001d-755c-40c5-8233-7b16f0122861": {"__data__": {"id_": "ccb1001d-755c-40c5-8233-7b16f0122861", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32a9f017-2ac7-49a8-af2a-033e0d7032f1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ebecceb357077af91caa5a5346448880047f16d0dee663926f94bcf8888fa127", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.7\n\n- t\u00e9l\u00e9chargez le fichier villes_virgule.csv et placez-le dans r\u00e9pertoire *nsi_pandas*\n\n- dans la suite vous continuerez \u00e0 utiliser le ficher *nsi_p.py*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34ce7564-6228-4343-9b99-36d5bc8ea5fd": {"__data__": {"id_": "34ce7564-6228-4343-9b99-36d5bc8ea5fd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d78f35f5-25ef-4fad-a0d4-7105c352bd70", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "29ebd12ec45050bef48bca041ef8cc828cfb67466fad675a687f3c58f59919b5", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.8\n\nTestez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\n``` \n\nV\u00e9rifiez que la variable \"info_villes\" contient bien les donn\u00e9es contenues dans le fichier ville_virgule.csv.\n\nComme vous pouvez le constater, il manque des donn\u00e9es dans le tableau qui s'affiche dans la console spyder (les donn\u00e9es manquantes sont symbolis\u00e9es par des ...), en effet, le tableau contient trop donn\u00e9es pour qu'il soit enti\u00e8rement affich\u00e9 dans la console spyder. Heureusement, il existe une solution :\n\nDans spyder, dans la fen\u00eatre situ\u00e9e juste au-dessus de la console, vous allez trouver un onglet \"Explorateur de variables\". Cliquez sur cet onglet, vous devriez alors obtenir ceci :\n\n!\n\nDouble-cliquez sur \"info_villes\" et vous devriez alors voir apparaitre une nouvelle fen\u00eatre qui contiendra un tableau avec l'ensemble des donn\u00e9es.\n\nEn explorant le tableau, vous devriez, notamment dans les colonnes l'altitude mini et maxi, voir apparaitre un \u00e9trange \"nan\" pour les derni\u00e8res villes du tableau. \"nan\" signifie \"not a number\", ici, cela veut tout simplement dire que certaines donn\u00e9es sont manquantes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08259f5d-4993-4e3c-813f-41f34c8332a5": {"__data__": {"id_": "08259f5d-4993-4e3c-813f-41f34c8332a5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bf150a4d-483e-4c04-a02b-90b127d6e49e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3978c6c643c1366e23a2fb75eed6a8162654c3025bd26b7688fbc64525c82049", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.9\n\nNous allons maintenant introduire des conditions dans la s\u00e9lection des villes. Imaginez par exemple que vous d\u00e9sirez obtenir un tableau contenant toutes les villes qui ont une altitude minimum sup\u00e9rieure \u00e0 1500 m :\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\nnom_alt=info_villes.loc[info_villes[\"alt_min\"]>1500,[\"nom\",\"alt_min\"]]\n```\n\nDans le \"loc\", l'expression \"info_villes[\"alt_min\"]>1500\" est bien avant la virgule, elle concerne donc les index des lignes du tableau. On s\u00e9lectionnera uniquement les lignes qui auront la valeur du descripteur \"alt_min\" sup\u00e9rieure \u00e0 1500. Nous allons donc bien s\u00e9lectionner les villes qui ont une altitude minimum sup\u00e9rieure \u00e0 1500 m", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0228fb1d-2c5a-42ef-a76e-6687b71b5c4f": {"__data__": {"id_": "0228fb1d-2c5a-42ef-a76e-6687b71b5c4f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3e71fc8d-cb25-4371-90df-647eb5719182", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cb98448701f6d68932141c9c27934efdb89670c8b9c679f73fcc48466cf08561", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.10\n\nEn vous inspirant de ce qui a \u00e9t\u00e9 fait \u00e0 l'activit\u00e9 29.9, \u00e9crivez un programme qui permettra d'avoir les villes qui ont une densit\u00e9 d'habitant inf\u00e9rieure \u00e0 50 (dans le tableau ainsi cr\u00e9\u00e9, on aura 3 colonnes : le nom de la ville, la densit\u00e9 de la population et l'altitude minimum)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c10dfee1-8c9f-4eba-9d5d-d679694f60b8": {"__data__": {"id_": "c10dfee1-8c9f-4eba-9d5d-d679694f60b8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80eab1f6-4f44-4d32-9430-260637c9eaf8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3a84b7a202234d49417987c24555b4d28db44eda9a9f5e08c02147204545533b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.11\n\nIl est possible de combiner plusieurs facteurs de s\u00e9lection en utilisant un \"et\"(\"&\") ou un \"ou\"(\"|\").\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\nnom_alt=info_villes.loc[(info_villes[\"alt_min\"]>1500) & (info_villes[\"dens\"]>50),[\"nom\",\"dens\",\"alt_min\"]]\n```\n\nVous devriez constater qu'il y a, en France, une seule ville avec une densit\u00e9 de population sup\u00e9rieure \u00e0 50 et une altitude minimum sup\u00e9rieure \u00e0 1500 m.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 503, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eae0ac1a-dd40-47de-bef7-d3aee7953785": {"__data__": {"id_": "eae0ac1a-dd40-47de-bef7-d3aee7953785", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16ffe8eb-f018-4c19-910a-33c3a3a9d1f1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "396be6e6933642d1652f74c35f9fd0bcb66b243ae8379c06e6f0c266e309a566", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.12\n\nIl est aussi possible d'effectuer des calculs sur des colonnes, par exemple des moyennes. Il suffit d'utiliser l'instruction \"mean\" pour effectuer une moyenne :\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\nmoyenne_alt_min=info_villes.loc[:,\"alt_min\"].mean()\n```\n\nVous devriez constater que l'altitude minimum moyenne est de 193 m en France. Je rappelle que dans \"loc[:,\"alt_min\"]\" le \":\" signifie que l'on consid\u00e8re toutes les lignes du tableau. De plus le \"alt_min\" que le calcul de la moyenne porte bien sur les donn\u00e9es du descripteur \"alt_min\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a280eec-18b5-46aa-bea9-4f8e3e5aa8fb": {"__data__": {"id_": "7a280eec-18b5-46aa-bea9-4f8e3e5aa8fb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4b0172ab-5468-4964-90e1-f1d12293e276", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "afb3d8057f8bb82b1b854879ae0d08cab3195d054588c3ee2abf0e3a08e93cf0", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.13\n\n\u00c9crivez un programme permettant de calculer le nombre moyen d'habitants en 2012", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 97, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87ca4493-a863-4569-a327-358fc2ee93e0": {"__data__": {"id_": "87ca4493-a863-4569-a327-358fc2ee93e0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f04e318-c1f7-4f15-a28a-77854ab85aa9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3a037ca5124157085ec4d100594fb4d521a6da13780d9ed612f50fcabec58783", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.14\n\nPour l'instant nous avons calcul\u00e9 une moyenne sur l'ensemble des lignes, il est aussi possible d'imposer une condition sur les lignes qui seront utilis\u00e9es pour le calcul.\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\nnbe_hab=info_villes.loc[info_villes[\"alt_min\"]>1500,\"nb_hab_2012\"].mean()\n```\n\nVous devriez constater que les villes ayant une altitude minimum sup\u00e9rieure \u00e0 1500 m avaient en moyenne 350 habitants en 2012.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 512, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "397a4a1f-675f-43c6-8c06-57971a1b638a": {"__data__": {"id_": "397a4a1f-675f-43c6-8c06-57971a1b638a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b66fb5f3-0507-4a43-94cc-c745751f9bbe", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bb79b2d02586beb7b8a3ceb655a2c81311f06ad6677c021461e32f7f45f48792", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.15\n\nIl est aussi possible de trier le tableau en fonction des valeurs d'un descripteur. Il suffit d'utiliser l'instruction \"sort_values\"\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\ntri_alt_min=info_villes.sort_values(by=[\"alt_min\"])\n```\n\nVous devriez obtenir un nouveau tableau de donn\u00e9es \"tri_alt_min\" tri\u00e9 dans l'ordre croissant des altitudes minimums. Quelle est la ville ayant l'altitude minimum la plus faible de France ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4ee6bb9-be76-4818-b484-444fbfc51783": {"__data__": {"id_": "e4ee6bb9-be76-4818-b484-444fbfc51783", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ec3f2c67-2f22-41be-87c5-2a6063c8ec0c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4cb89e92caecf8b4e323512cef9f9dbe2023c84aef113411804952712e513123", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.16\n\nIl est aussi possible de trier par ordre d\u00e9croissant en ajoutant \"ascending=False\" :\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\ntri_alt_min=info_villes.sort_values(by=[\"alt_min\"], ascending=False)\n```\n\nQuelle est la ville ayant l'altitude minimum la plus importante de France ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "596684b7-29af-4a2f-9005-0b93c7cd71dc": {"__data__": {"id_": "596684b7-29af-4a2f-9005-0b93c7cd71dc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c51a751-8651-4564-b9cb-93eaa8cdc21e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "000716593b4d1efa5ad7dff402f6a2239abbc7e23667fa6f9b6e4ba9e3b86209", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.17\n\n\u00c9crivez un programme permettant de r\u00e9pondre \u00e0 la question suivante : quelle est la ville ayant la densit\u00e9 de population la plus forte ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 153, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5112ca33-75e8-463f-8e82-3806803292d1": {"__data__": {"id_": "5112ca33-75e8-463f-8e82-3806803292d1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "52113a87-964c-40e9-a779-6a203982c81d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8eea1d7c3ddbee86aab34deb8a57bc51976c87c9d7aae8bd19370cb02dcb3097", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.18\n\nIl est possible de fusionner 2 tableaux de donn\u00e9es qui ont une colonne commune :\n\nAfin de travailler sur cette fusion, nous allons travailler avec 2 fichiers au format CSV : fiches_client.csv et fiches_com.csv\n\nApr\u00e8s avoir t\u00e9l\u00e9charg\u00e9 les 2 fichiers ci-dessus, testez le code suivant :\n\n```python\nimport pandas\nclient=pandas.read_csv(\"fiches_client.csv\")\ncommande=pandas.read_csv(\"fiches_com.csv\")\n```\n\nUtilisez l'explorateur de variables de Spyder afin d'afficher le contenu des variables \"client\" et \"commande\"\n\nVous devriez normalement obtenir pour \"client\" :\n\n!\n\net pour \"commande\" :\n\n!\n\nRien de bien complexe, nous avons un tableau qui r\u00e9f\u00e9rence les clients (nom, pr\u00e9nom, ville), chaque client poss\u00e8de un num\u00e9ro de client. Le deuxi\u00e8me tableau r\u00e9f\u00e9rence des commandes : pour chaque commande, nous avons un num\u00e9ro de commande, une date et le num\u00e9ro du client qui a pass\u00e9 la commande, ce num\u00e9ro de client correspond \u00e9videmment au num\u00e9ro de client que l'on trouve dans le premier tableau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2a53a3e-97a9-4d19-9a00-e26d6d92ecd3": {"__data__": {"id_": "d2a53a3e-97a9-4d19-9a00-e26d6d92ecd3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fddc6040-a0cf-4bda-a8e6-2270dc7307c4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b45c3e76025058e745d4108b9ab0d97f00d21a38c2baa4139cda46095c732b38", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.19\n\nSachant que nous avons deux colonnes contenant les m\u00eames types d'information (num\u00e9ros de client), nous allons pouvoir fusionner les deux tableaux en un seul :\n\nTestez le code suivant :\n\n```python\nimport pandas\nclient=pandas.read_csv(\"fiches_client.csv\")\ncommande=pandas.read_csv(\"fiches_com.csv\")\ncl_com=pandas.merge(client, commande)\n```\n\nUtilisez l'explorateur de variables de Spyder afin d'afficher la valeur de la variable *cl_com*\n\nVous devriez obtenir ceci :\n\n!\n\nPrenons l'exemple de Mme Julie Gabriaux qui habite \u00e0 Bordeaux (n\u00b0 de client 2454) et de la commande effectu\u00e9e le 02/02/2012 par le client ayant le n\u00b0 2454 (commande n\u00b0 45). La cliente qui a pass\u00e9 cette commande n\u00b0 45 est bien Mme Gabriaux, nous avons une ligne dans notre tableau *cl-com*\n\nNous avons bien fusionn\u00e9 les 2 tableaux \"client\" et \"commande\" en un seul tableau *cl_com* qui regroupe les informations pour chaque commande. Quand on effectue ce genre de fusion, on dit souvent que l'on effectue une jointure.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1004, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c2fcda0-0530-4995-869c-6ce68c87ed80": {"__data__": {"id_": "9c2fcda0-0530-4995-869c-6ce68c87ed80", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b0e665e-8b43-4c2b-8183-8c20be24be4d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d3d396281b4789184c6a58d6609cd4b887e410ab1dfcf082d01cd49822dcec54", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.20\n\nIl faut prendre garde \u00e0 l'ordre des arguments de la fonction *merge* :\n\nTestez le code suivant :\n\n```python\nimport pandas\nclient=pandas.read_csv(\"fiches_client.csv\")\ncommande=pandas.read_csv(\"fiches_com.csv\")\ncom_cl=pandas.merge(commande, client)\n```\n\nUtilisez l'explorateur de variables de Spyder afin d'afficher la valeur de la variable **com_cl*\n\nVous devriez obtenir ceci :\n\n!\n\nComme vous pouvez le constater, l'ordre des colonnes est diff\u00e9rent. Il faudra donc \u00eatre attentif \u00e0 l'ordre des param\u00e8tres de la fonction *merge*.\n\nRemarque : On trouve Mme Ila Neufville sur 2 lignes, car elle a pass\u00e9 2 commandes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 629, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a5fcb52-9446-43bc-b175-10eea1358d29": {"__data__": {"id_": "5a5fcb52-9446-43bc-b175-10eea1358d29", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37bfa5f9-9772-4dec-b169-c4df9573330d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b48ac4f5d4e23df4d8a5c9711704c6d45ac9c0c401e43fa581c136ed63663034", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.21\n\nVous avez peut-\u00eatre remarqu\u00e9 que Mme \u00c9lodie Gaulin (n\u00b0 de client 895) bien que pr\u00e9sente dans le tableau \"client\", est absente du tableau *com_cl* (ou *cl_com*). Pourquoi d'apr\u00e8s vous ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2591dda3-cf53-44d1-83f8-1258e7f42415": {"__data__": {"id_": "2591dda3-cf53-44d1-83f8-1258e7f42415", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6ae9894b-e706-4f6f-92af-db62b1c458bc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "9be59d7ed015dd1dce080237b69e68ad16692a18ece66429cd52d843cb25ae77", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.22\n\nDe la m\u00eame mani\u00e8re, aucun trace de la commande n\u00b0 1324 du 01/02/2017 dans le tableau *com_cl* (ou *cl_com*), pourquoi d'apr\u00e8s vous ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "adeb2794-6e5d-4208-8c02-6a9a8218d9c9": {"__data__": {"id_": "adeb2794-6e5d-4208-8c02-6a9a8218d9c9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed95d086-40d4-4285-a85f-673fd80d8483", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "2ea22a735bfd31532083ab0c9df77fa7a669acdb66e01dec2863d95578c1585a", "class_name": "RelatedNodeInfo"}}, "text": "1) Les donn\u00e9es en table\n\nLe stockage de l'information est un enjeu majeur pour nos soci\u00e9t\u00e9s. Les donn\u00e9es peuvent \u00eatre stock\u00e9es sous forme de tableau, on parle alors de donn\u00e9es tabulaires ou plus simplement de donn\u00e9es en table.\n\nVoici un exemple de donn\u00e9es stock\u00e9es sous forme de tableau :\n\n| nom | pr\u00e9nom | date_naissance |\n| --- | --- | --- |\n| Durand | Jean-Pierre | 23/05/1985 |\n| Dupont | Christophe | 15/12/1967 |\n| Terta | Henry | 12/06/1978 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba92772b-b180-4b6f-8c96-85059a531088": {"__data__": {"id_": "ba92772b-b180-4b6f-8c96-85059a531088", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f6d1e96f-4fca-4a73-a5b3-3f4f64b3c423", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "75712251cccc17802f97264511a77f5a46f9718615894e770f30a27185d7e677", "class_name": "RelatedNodeInfo"}}, "text": "2) le format CSV", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 18, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b9eb3cd-82a9-41df-8153-6ad68b4efe9b": {"__data__": {"id_": "1b9eb3cd-82a9-41df-8153-6ad68b4efe9b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b22dd71f-997f-4b63-aff4-1c0445cb8fe7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "607ce96d2a11430726441b390c596b8f683f824648503c42859772a8a2d7ade2", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nLe format CSV permet de stocker des donn\u00e9es sous forme de tableau, d'apr\u00e8s Wikip\u00e9dia :\n\n*Un fichier CSV est un fichier texte, par opposition aux formats dits \u00ab binaires \u00bb. Chaque ligne du texte correspond \u00e0 une ligne du tableau et les virgules correspondent aux s\u00e9parations entre les colonnes. Les portions de texte s\u00e9par\u00e9es par une virgule correspondent ainsi aux contenus des cellules du tableau.*\n\nVoici le tableau ci-dessus au format CSV :\n\n```\nnom,prenom,date_naissance\nDurand,Jean-Pierre,23/05/1985\nDupont,Christophe,15/12/1967\nTerta,Henry,12/06/1978\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71e17f29-132e-4895-a657-223f42def1b6": {"__data__": {"id_": "71e17f29-132e-4895-a657-223f42def1b6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "003753d3-2978-485b-b84d-b67245b98cb5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "9b826d5080f207adce5cae10d4dd9b6a165ca1920cd840ae9aa4663dfc1eaa8c", "class_name": "RelatedNodeInfo"}}, "text": "b) descripteurs\n\n*nom*, *prenom* et *date_naissance* sont appel\u00e9s des descripteurs. Les descripteurs permettent de d\u00e9crire un *objet* et ainsi de pouvoir le distinguer d'un autre *objet* du m\u00eame type (*nom*, *prenom* et *date_naissance* sont des caract\u00e9ristiques qui permettent de distinguer 2 personnes). \"Durand\", \"Dupont\" et \"Terta\" sont les valeurs du descripteur *nom*.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 376, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0011577b-a14c-4006-949b-7131dbed93f4": {"__data__": {"id_": "0011577b-a14c-4006-949b-7131dbed93f4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c22fbed1-1525-4dca-bb53-9e0ae033b792", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "32cfad52ff314027da1035a3eb6d5f49add2d587b19b5e32da558b35874f50d4", "class_name": "RelatedNodeInfo"}}, "text": "c) s\u00e9parateur\n\nLa virgule est un standard pour les donn\u00e9es anglo-saxonnes, mais pas pour les donn\u00e9es aux normes fran\u00e7aises. En effet, en fran\u00e7ais, la virgule est le s\u00e9parateur des chiffres d\u00e9cimaux. Il serait impossible de diff\u00e9rencier les virgules des d\u00e9cimaux et les virgules de s\u00e9paration des informations. C\u2019est pourquoi on utilise un autre s\u00e9parateur : le point-virgule (;). Dans certains cas cela peut engendrer quelques probl\u00e8mes, vous devrez donc rester vigilants sur le type de s\u00e9parateur utilis\u00e9.\n\nLes tableurs, tels que \"Calc\" (Libre Office), sont normalement capables de lire les fichiers au format CSV. J'ai pr\u00e9cis\u00e9 \"normalement\" car certains tableurs g\u00e8rent mal le s\u00e9parateur CSV \"point-virgule\" et le s\u00e9parateur des chiffres d\u00e9cimaux \"virgule\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f74968e-2cfc-4f4d-a1b5-81b102817f6e": {"__data__": {"id_": "0f74968e-2cfc-4f4d-a1b5-81b102817f6e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b833fec4-4245-4269-8c06-728629e68bc9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "3f67d04303c99f7903e71292dcdf0b678caeda8f6cb71cd6af53eb2fdd9a2570", "class_name": "RelatedNodeInfo"}}, "text": "3) traitement des donn\u00e9es\n\nPour traiter des donn\u00e9es, nous allons utiliser la biblioth\u00e8que Python Pandas. On rappelle qu'une biblioth\u00e8que  permet de rajouter des fonctionnalit\u00e9s par rapport au langage de base. La biblioth\u00e8que Pandas est donc tr\u00e8s utilis\u00e9e pour tout ce qui touche au traitement des donn\u00e9es. Nous allons nous int\u00e9resser \u00e0 cette biblioth\u00e8que dans la partie *activit\u00e9* de ce chapitre.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60c3fe63-a691-4938-bc68-4b1d2bb5d8cd": {"__data__": {"id_": "60c3fe63-a691-4938-bc68-4b1d2bb5d8cd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29r.md", "file_name": "c29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e89bdd7e-1c92-4e61-bc30-fc2e9570e563", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29r.md", "file_name": "c29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "203f5e620a9c3a5306e626e28d24bce8590711c597a8c1a9b2262819b6b64eb0", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir\n\nUn fichier CSV est un fichier texte. Chaque ligne du texte correspond \u00e0 une ligne d'un tableau et les virgules correspondent aux s\u00e9parations entre les colonnes.\n\nce contenu :\n\n```\nnom,prenom,date_naissance\nDurand,Jean-Pierre,23/05/1985\nDupont,Christophe,15/12/1967\nTerta,Henry,12/06/1978\n```\n\npermet d'avoir l'\u00e9quivalent de :\n\n| nom | pr\u00e9nom | date_naissance |\n| --- | --- | --- |\n| Durand | Jean-Pierre | 23/05/1985 |\n| Dupont | Christophe | 15/12/1967 |\n| Terta | Henry | 12/06/1978 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7efe51dc-1319-447a-bda3-f75c0efabf24": {"__data__": {"id_": "7efe51dc-1319-447a-bda3-f75c0efabf24", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29r.md", "file_name": "c29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ab62a31-1f6d-476a-8d0c-088b65100d38", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29r.md", "file_name": "c29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f9e70c912cb627c333e0ea7190d64eb1a058032baf6d3a6c2a75499ccc878592", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir faire\n\nVous devez \u00eatre capable, gr\u00e2ce \u00e0 la biblioth\u00e8que Pandas, d'effectuer des requ\u00eates sur des donn\u00e9es au format CSV", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4e919b6-2c6a-48a9-9ebe-a69a55f62934": {"__data__": {"id_": "d4e919b6-2c6a-48a9-9ebe-a69a55f62934", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "246423f6-6697-4c0f-92d4-58acafcde898", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "61f028d851dbfbb240cb5232261c516bfe7a51024da7195a074d9b011daaa527", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.1\nIl est possible de visualiser le contenu d'un tuple ou d'un tableau directement dans la console.\n\nSaisissez le code suivant dans la partie \"\u00e9diteur\" de spyder :\n\n```python\nmon_tuple = (5, 8, 6, 9)\n```\nEx\u00e9cutez le programme\n\nTapez ensuite *mon_tuple* dans la partie \"console\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 289, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb9ce593-07c6-4ed1-9ba9-0820502dd784": {"__data__": {"id_": "fb9ce593-07c6-4ed1-9ba9-0820502dd784", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88682c63-c023-434d-9b98-bc4d4ea8da21", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "28b8d39fd4a556cc3b85db2f1e37bf81739d2f7dfe9647ebdaa2f848bbc2a0bf", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.2\n\nCompl\u00e9tez le programme suivant afin que la variable *a* ait pour valeur 8\n\n```python\nmon_tuple = (5, 8, 6, 9)\na = mon_tuple[...]\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "915af28b-f239-4b02-8b26-3c1d167e25c9": {"__data__": {"id_": "915af28b-f239-4b02-8b26-3c1d167e25c9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e582b632-df7e-4523-a0d9-0fc6fe2300ff", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4eb018cb01ad055a87896f62b2294db5b4884f11730a3bfe8593559224759886", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.3\n\nCompl\u00e9tez le programme suivant afin que la variable *a* ait pour valeur 8 et que la variable *b* ait pour valeur 5 \n\n```python\na, b = (..., ...)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 164, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4188542-5ed0-47f9-8822-520abdf4dd1b": {"__data__": {"id_": "a4188542-5ed0-47f9-8822-520abdf4dd1b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7d9197f4-a0cc-4754-b3c6-bc831ae325d2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "29942bea11807567b97b61b4d5d7466c2ac2d975ba4bf3e0c25a9cbe01c32ee6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.4\n\nCompl\u00e9tez le programme ci-dessous pour qu'apr\u00e8s ex\u00e9cution de ce dernier, le tableau *mon_tab* soit compos\u00e9 des \u00e9l\u00e9ments suivants : [15, 8, 6,  9]\n\n```python\nmon_tab = [5, 8, 6, 9]\nmon_tab[...] = 15\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1882781-013d-4336-81ec-d2f793a179e0": {"__data__": {"id_": "c1882781-013d-4336-81ec-d2f793a179e0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87f580f8-605a-4428-a9c6-e20d8dc53ea8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "77a12592609160c6edb375197ffed37b6a01262429d2199ecbf2da989a0ed879", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.5\n\nSoit le tableau suivant :\n\n```python\ntab = [3,3,6,9]\n```\nQuelle sera la composition de ce tableau si on ex\u00e9cute la ligne suivante :\n\n```python\ntab.append(0)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 176, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5fae006-a116-4d28-8b7e-00355eca7ed8": {"__data__": {"id_": "c5fae006-a116-4d28-8b7e-00355eca7ed8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7cddefa-3979-4177-b205-9b9dfea5d523", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "57f54c5e6ac7a2eb599dd9e184e3dce46db3cbbca5590171c0c448f6b8de771c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.6\n\n```python\nmon_tab = [1, 2, 3, 4]\ndel mon_tab[1]\n```\nDonnez  la composition du tableau *mon_tab*  apr\u00e8s l'ex\u00e9cution du programme  ci-dessus", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 154, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a28f8e61-73cd-4bdc-a809-10b1e5dcc06c": {"__data__": {"id_": "a28f8e61-73cd-4bdc-a809-10b1e5dcc06c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f35a402-dff8-470f-8d37-8a9e4d5ca82a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e6eea8d5bef0e3d016dc2361f3ed1712ca95a12ebbaad7e11fdf866869a10524", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.7\n\n```python\nmon_tab = [5, 8, 6, 9, 15,  0]\na = len(mon_tab)\n```\nQuelle  est la valeur de la variable *a*  apr\u00e8s  l'ex\u00e9cution du programme ci-dessus ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "583dd425-afdf-450b-b46b-f7d90ef051d1": {"__data__": {"id_": "583dd425-afdf-450b-b46b-f7d90ef051d1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f7e51a5-cf91-4f39-afd3-75e71396a20b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d6ffed8160adb71d43cff14ba9f1baa3f2a9680dab1c556fb3f7ef2ffa8ac559", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.8\n\n```python\ntab = [1, 2, 3]\ns = 0\nfor t in tab:\n\ts = s + t\n```\nQuelle est la valeur de la variable *s* apr\u00e8s  l'ex\u00e9cution du programme  ci-dessus. V\u00e9rifiez  votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4ea5705-9a78-4de1-8359-4a6488870a94": {"__data__": {"id_": "c4ea5705-9a78-4de1-8359-4a6488870a94", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e7e8586-6fd3-4a35-b2bb-1044236ef116", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0ce78057434b9ef869f10f728bbd74fdcdddae3693929df2bd5ae228fdc2e24f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.9\n\n```python\ntab = [5, 3, 4, 8]\nmon_tab = [2*t for t in tab if t > 4]\n```\n\nQuelle est la composition du tableau *mon_tab* apr\u00e8s  l'ex\u00e9cution du programme  ci-dessus. V\u00e9rifiez  votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a1987cb-6bb2-40b0-996c-4bb20c2291d0": {"__data__": {"id_": "8a1987cb-6bb2-40b0-996c-4bb20c2291d0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "448da2ee-73bd-4617-b31b-10a43da6176e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "52407ca7b98eab9ed66a33f775959e267dbdfcef76e66f47689b862f7cd8b543", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.10\n\nSoit le programme suivant :\n\n```python\nm = [[1, 3, 4],\n     [5, 6, 8],\n     [2, 1, 3],\n     [7, 8, 15]]\na  = m[0][1]\n```\nQuelle est la valeur de la variable *a* apr\u00e8s  l'ex\u00e9cution de ce programme ? V\u00e9rifiez  votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 262, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "242b10a1-d638-4ad8-a152-0c9b7fc489e7": {"__data__": {"id_": "242b10a1-d638-4ad8-a152-0c9b7fc489e7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1aa9fdf1-94b3-422b-8255-0f0275a9c93e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "12a88c9d9501173d3fe3955fa9d83ab7a24ec2390aac7f01bfccb47761919ba6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.11\n\n```python\nm = [[1, 3],\n     [5, 8],\n     [2, 3]]\nnb_colonne = 2\nnb_ligne = 2\na = 0\nfor i in range(0, nb_ligne):\n\tfor j in range(0, nb_colonne):\n\t\ta = a + m[i][j]\n```\n\nQuelle est la valeur de la variable *a* apr\u00e8s  l'ex\u00e9cution de ce programme ? V\u00e9rifiez  votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c0c9d0a-80cb-4124-8026-fb09d0ca584b": {"__data__": {"id_": "5c0c9d0a-80cb-4124-8026-fb09d0ca584b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e85c0f25-3cfc-449a-b61b-80e044a05568", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "14b5f70e344cf1fe2786b54e866571b68ac2d8ae547245392c33cd7857de5114", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.12\n\nLa fonction *recherche_max* prend en param\u00e8tre un tableau et renvoie la plus grande valeur pr\u00e9sente dans le tableau (le tableau est constitu\u00e9 d'entiers positifs ou nuls).\n\nPar exemple, *recherche_max([4, 3, 0, 5])* renvoie 5\n\n```python\ndef recherche_max(tab):\n\tmaxi = ...\n\tfor t in tab :\n\t\tif ... > maxi :\n\t\t\tmaxi = ...\n\treturn ...\n```\nComp\u00e9tez la fonction ci-dessus", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51dc72a8-0590-45c3-b3d0-05e26995fd3d": {"__data__": {"id_": "51dc72a8-0590-45c3-b3d0-05e26995fd3d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f0288b78-3d39-49cd-b66e-17d40ab9d454", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7b081f5ca7755feb53c4d9c46bb52838a121aef5f1f7177c4136b4b78959f084", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.13\n\nLa fonction *somme* prend en param\u00e8tres un tableau *tab* contenant des entiers. Cette fonction renvoie la somme des entiers pr\u00e9sents dans le tableau *tab*.\n\nExemples :\n\n```\n>>> somme([3,5,8,4])\n20\n```\n\n```python\ndef somme(tab):\n\ts = ...\n\tfor t in ... :\n\t\ts = s + ...\n\treturn ...\n```\n\nCompl\u00e9tez la fonction *somme* ci-dessus.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c037299-f1d0-446c-9ea3-74bf37527244": {"__data__": {"id_": "0c037299-f1d0-446c-9ea3-74bf37527244", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3a4ebeb2-85d1-4f3c-a5f2-1a3a045858d2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4aa15e1b649f6dbf5276491828aab03b60d9ca314fb3af6d7cea0598c9cfa7fa", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.14\n\nLa fonction *recherche* prend en param\u00e8tres un tableau *tab* contenant des entiers et un entier *n*. Cette fonction renvoie l'indice de position de l'entier n s'il est pr\u00e9sent dans le tableau *tab* ou -1 dans le cas contraire (on partira du principe que le tableau ne peut pas contenir 2 fois le m\u00eame entier).\n\nExemples :\n\n```\n>>> recherche([3,5,8,34], 8)\n2\n>>> recherche([3,5,8,34], 42)\n-1\n```\n\n```python\ndef recherche(tab, n):\n\tindice = ...\n\ti = 0\n\tfor t in ... :\n\t\tif n == ... :\n\t\t\tindice = ...\n\t\ti = i + ...\n\treturn ...\n```\n\nCompl\u00e9tez la fonction *recherche* ci-dessus.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 590, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1cfc9ac1-eab2-4877-9cee-dd2246c9e35d": {"__data__": {"id_": "1cfc9ac1-eab2-4877-9cee-dd2246c9e35d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fecfbbab-a647-4585-98a0-974e66dcf2dc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "244ca0c6bb0d28c1b11b0601537ec066da2cec4eba63b44f9530f59aa1b7e192", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.15\n\n\u00c9crire une fonction *moyenne* qui prend en param\u00e8tre un tableau d'entiers non vide *tab* et qui renvoie la moyenne de ces entiers.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5baffde-65c6-4fdf-8c1c-18297b11120f": {"__data__": {"id_": "c5baffde-65c6-4fdf-8c1c-18297b11120f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eab3f2f7-7474-45a6-bea0-9722588a4acc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "f8af3026e868a98f21edd230109f4879bd9757a1d0b81b6a19377b275ea8daf7", "class_name": "RelatedNodeInfo"}}, "text": "1) Les s\u00e9quences en Python\n\nIl est possible de \"stocker\" plusieurs grandeurs dans une m\u00eame structure, ce type de structure est appel\u00e9 une s\u00e9quence. De fa\u00e7on plus pr\u00e9cise, nous d\u00e9finirons une s\u00e9quence comme un ensemble fini et ordonn\u00e9 d'\u00e9l\u00e9ments indic\u00e9s de 0 \u00e0 n-1 (si cette s\u00e9quence comporte n \u00e9l\u00e9ments). Rassurez-vous, nous reviendrons ci-dessous sur cette d\u00e9finition. Nous allons \u00e9tudier plus particuli\u00e8rement 2 types de s\u00e9quences : les tuples et les tableaux (il en existe d'autres que nous n'\u00e9voquerons pas ici).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 518, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "485b4894-9719-4fa5-8659-13d340d7f4b9": {"__data__": {"id_": "485b4894-9719-4fa5-8659-13d340d7f4b9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7226d25-6b5c-4d46-93d7-240de8d83be2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "83c2eb247237dfb6049f030cfc51b84b4bd1faf76817a9a3c363fd414736f47f", "class_name": "RelatedNodeInfo"}}, "text": "a) Les tuples en Python\n\nComme d\u00e9j\u00e0 dit ci-dessus, un tuple est une s\u00e9quence. Voici un exemple tr\u00e8s simple :\n\n```python\nmon_tuple = (5, 8, 6, 9)\n```\n\nDans le code ci-dessus, le nom mon_tuple est associ\u00e9 \u00e0 un tuple (l'association entre un nom et un tuple est aussi une variable), ce tuple est constitu\u00e9 des entiers 5, 8, 6 et 9. Comme indiqu\u00e9 dans la d\u00e9finition, chaque \u00e9l\u00e9ment du tuple est indic\u00e9 (il poss\u00e8de un indice):\n\nle premier \u00e9l\u00e9ment du tuple (l'entier 5) poss\u00e8de l'indice 0\nle deuxi\u00e8me \u00e9l\u00e9ment du tuple (l'entier 8) poss\u00e8de l'indice 1\nle troisi\u00e8me \u00e9l\u00e9ment du tuple (l'entier 6) poss\u00e8de l'indice 2\nle quatri\u00e8me \u00e9l\u00e9ment du tuple (l'entier 9) poss\u00e8de l'indice 3\nComment acc\u00e9der \u00e0 l'\u00e9l\u00e9ment d'indice i dans un tuple ?\n\nSimplement en utilisant la \"notation entre crochets\" :\n\n```python\nmon_tuple = (5, 8, 6, 9)\na = mon_tuple[2]\n```\n\nDans le programme ci-dessus, la variable *a* a pour valeur 6.\n\nATTENTION : dans les s\u00e9quences les indices commencent toujours \u00e0 0 (le premier \u00e9l\u00e9ment de la s\u00e9quence a pour indice 0), oublier cette particularit\u00e9 est une source d'erreur \"classique\".\n\nUn tuple ne contient pas forc\u00e9ment des nombres entiers, il peut aussi contenir des nombres d\u00e9cimaux, des cha\u00eenes de caract\u00e8res, des bool\u00e9ens...\n\nDans le programme ci-dessous :\n\n```python\nmon_tuple = (\"le\", \"monde\", \"bonjour\")\nmsg = mon_tuple[2] + \" \" + mon_tuple[0] + \" \" + mon_tuple[1] + \"!\"\n```\n\nla variable msg a pour valeur : \"bonjour le monde!\"\n\nGr\u00e2ce au tuple, une fonction peut renvoyer plusieurs valeurs :\n\nInt\u00e9ressons-nous au programme suivant :\n\n```python\ndef add(a, b):\n\tc = a + b\n\treturn (a, b, c)\nval = add(5, 8)\n```\nApr\u00e8s ex\u00e9cution du programme ci-dessus, la variable *val* a  pour valeur le tuple *(5, 8, 13)* car notre fonction *add* renvoie bien un tuple (*return (a, b, c)*)\n\nIl est possible d'associer \u00e0 des noms les valeurs contenues dans un tuple. Dans l'exemple ci-dessous :\n\n```python\na, b, c = (5, 8, 6)\n```\n\nla variable *a* a pour valeur 5, *b* a pour valeur 8 et *c* a pour valeur 6.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1996, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af74f855-9e5b-4917-a0b1-cf63275469bd": {"__data__": {"id_": "af74f855-9e5b-4917-a0b1-cf63275469bd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "470849e7-f4a3-41f4-947a-a0ca341e0d89", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "30bbfa7efbdd171632c84bc2203023e8a10aa37c48a449b845df8f9dfd03d900", "class_name": "RelatedNodeInfo"}}, "text": "b) Les tableaux en Python\n\nATTENTION : Dans la suite nous allons employer le terme \"tableau\". Pour parler de ces \"tableaux\" les concepteurs de Python ont choisi d'utiliser le terme de \"list\" (\"liste\" en fran\u00e7ais). Pour \u00e9viter toute confusion, notamment par rapport \u00e0 des notions qui seront abord\u00e9es en terminale, le choix a \u00e9t\u00e9 fait d'employer \"tableau\" \u00e0 la place de \"liste\" (dans la documentation vous rencontrerez le terme \"list\", cela ne devra pas vous perturber)\n\nIl n'est pas possible de modifier un tuple apr\u00e8s sa cr\u00e9ation (on parle d'objet \"immutable\"), si vous essayez de modifier un tuple existant, l'interpr\u00e9teur Python vous renverra une erreur. Les tableaux sont,comme les tuples, des s\u00e9quences, mais \u00e0 la diff\u00e9rence des tuples, ils sont modifiables (on parle d'objets \"mutables\").\n\nPour cr\u00e9er un tableau, il existe diff\u00e9rentes m\u00e9thodes : une de ces m\u00e9thodes ressemble beaucoup \u00e0 la cr\u00e9ation d'un tuple :\n\n```python\nmon_tab = [5, 8, 6, 9]\n```\n\nNotez la pr\u00e9sence des crochets \u00e0 la place des parenth\u00e8ses.\n\nUn tableau est une s\u00e9quence, il est donc possible de \"r\u00e9cup\u00e9rer\" un \u00e9l\u00e9ment d'un tableau \u00e0 l'aide de son indice (de la m\u00eame mani\u00e8re que pour un tuple)\n\nDans le cas ci-dessous :\n\n```python\nmon_tab = [5, 8, 6, 9]\nval = mon_tab[1]\n```\nla variable *val* a pour valeur  8 (index 0 : 5, index 1 :  8...)\n\nIl est possible de modifier un tableau \u00e0 l'aide de la \"notation entre crochets\" :\n\n```python\nmon_tab = [5, 8, 6, 9]\nmon_tab[2] = 15\n```\nApr\u00e8s l'ex\u00e9cution du programme ci-dessus, la tableau *mon_tab* est constitu\u00e9 des valeurs suivantes : [5, 8, **15**,  9]. L'\u00e9l\u00e9ment d'indice 2 (le nombre entier 6) a bien \u00e9t\u00e9 remplac\u00e9 par le nombre entier 15\n\nIl est aussi possible d'ajouter un \u00e9l\u00e9ment en fin de tableau \u00e0 l'aide de la m\u00e9thode \"append\" :\n\n```python\nmon_tab = [5, 8, 6, 9]\nmon_tab.append(15)\n```\n\nApr\u00e8s l'ex\u00e9cution du programme ci-dessus, la tableau *mon_tab* est constitu\u00e9 des valeurs suivantes : [5, 8, 6, 9, **15**]. La valeur 15 a  bien \u00e9t\u00e9 ajout\u00e9e au tableau en derni\u00e8re position.\n\nL'instruction \"del\" permet de supprimer un \u00e9l\u00e9ment d'un tableau en utilisant son index :\n\n```python\nmon_tab = [5, 8, 6, 9]\ndel mon_tab[1]\n```\n\u00c0 la suite de l'ex\u00e9cution du programme ci-dessus le tableau *mon_tab* contient les  valeurs [5, 6, 9] : l'\u00e9l\u00e9ment situ\u00e9 \u00e0 l'index 1 (c'est \u00e0 dire 8) a bien \u00e9t\u00e9 supprim\u00e9.\n\nLa fonction \"len\" renvoie le nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans une s\u00e9quence (tableau et tuple)\n\n```python\nmon_tab = [5, 8, 6, 9]\na = len(mon_tab)\n```\nApr\u00e8s ex\u00e9cution du programme ci-dessus,  la  variable *a* a  pour valeur 4 (le tableau [5, 8, 6, 9] est bien constitu\u00e9 de 4 \u00e9l\u00e9ments)\n\nApr\u00e8s avoir vu les tableaux, on pourrait s'interroger sur l'int\u00e9r\u00eat d'utiliser un tuple puisque le tableau permet plus de choses ! La r\u00e9ponse est simple : les op\u00e9rations sur les tuples sont plus \"rapides\". Quand vous savez que votre tableau ne sera pas modifi\u00e9, il est pr\u00e9f\u00e9rable d'utiliser un tuple \u00e0 la place d'un tableau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cddfaf43-0017-40ed-a82f-0dfe09f28228": {"__data__": {"id_": "cddfaf43-0017-40ed-a82f-0dfe09f28228", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "09b37ed1-5055-41ad-a72c-49ac95ded20e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "f70ec29abef339d5e05806bf38b37db6c056e7f6f593565d34b828e82a98676c", "class_name": "RelatedNodeInfo"}}, "text": "2) Parcourir une s\u00e9quence \u00e0 l'aide de la boucle *for*\n\nLa boucle for... in permet de parcourir chacun des \u00e9l\u00e9ments d\u2019une s\u00e9quence (tableau ou tuple) :\n\nPrenons l'exemple suivant :\n\n```python\nmon_tab = [5, 8, 6, 9]\nfor ele in mon_tab:\n\tprint(ele)\n```\nL'ex\u00e9cution du programme ci-dessus permettra d'afficher toutes les valeurs contenues dans le tableau *mon_tab* :\n\n```\n5\n8\n6\n9\n```\n\nQuelques explications : comme son nom l'indique, la boucle \"for\" est une boucle ! Nous \"sortirons\" de la boucle une fois que tous les \u00e9l\u00e9ments du tableau mon_tab auront \u00e9t\u00e9 parcourus :\n\n- au premier tour de boucle, la variable *ele* sera \u00e9gale 5\n\n- au deuxi\u00e8me tour de boucle, la variable *ele* sera \u00e9gale 8\n\n- au troisi\u00e8me tour de boucle, la variable *ele* sera \u00e9gale 6\n\n- au quatri\u00e8me et dernier tour de boucle, la variable *ele* sera \u00e9gale 9\n\nUne chose importante \u00e0 bien comprendre : le choix du nom de la variable qui va \u00eatre associ\u00e9 aux \u00e9l\u00e9ments du tableau les uns apr\u00e8s les autres (*ele*) est totalement arbitraire, il est possible de choisir un autre nom sans aucun probl\u00e8me, le code suivant aurait donn\u00e9 exactement le m\u00eame r\u00e9sultat :\n\n```python\nmon_tab = [5, 8, 6, 9]\nfor toto in mon_tab:\n\tprint(toto)\n```\n\nDans la boucle for... in il est possible d\u2019utiliser la fonction native *range* \u00e0 la place d\u2019un tableau d\u2019entiers :\n\n```python\nfor ele in range(0, 5):\n\tprint (ele)\n```\n\naura exactement le m\u00eame effet que le programme : \n\n```python\nfor ele in [0, 1, 2, 3, 4]:\n\tprint (ele)\n```\n\nComme vous pouvez le constater, *range(0,5)* est, au niveau de la boucle \"for..in\", \u00e9quivalent au tableau [0,1,2,3,4]\n\nATTENTION : si vous avez dans un programme \"range(a,b)\", a est la borne inf\u00e9rieure et b a borne sup\u00e9rieure. Vous ne devez surtout pas perdre de vu que la borne inf\u00e9rieure est incluse, mais que la borne sup\u00e9rieure est exclue.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1816, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e13cf9ac-d0c3-42a0-8494-74a0225b294a": {"__data__": {"id_": "e13cf9ac-d0c3-42a0-8494-74a0225b294a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9eddf6b5-d6a6-45f1-8308-fca7f42325b2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "a7713e7df0baa094a949f57e2b8ec69c56eea25d42db7a13186cb6bbdb54e392", "class_name": "RelatedNodeInfo"}}, "text": "3) Cr\u00e9er un tableau par compr\u00e9hension\n\nNous avons vu qu'il \u00e9tait possible de \"remplir\" un tableau en renseignant les \u00e9l\u00e9ments du tableau les uns apr\u00e8s les autres :\n\n```python\nmon_tab = [0, 1, 2, 3]\n```\n\nIl est aussi possible d'obtenir exactement le m\u00eame r\u00e9sultat que ci-dessus en une seule ligne gr\u00e2ce \u00e0 la compr\u00e9hension de tableau :\n\n```python\nmon_tab = [p for p in range(0, 4)]\n```\n\nnous avons une boucle for entre crochets. p va successivement prendre les valeurs 0, 1, 2, 3. Ces diff\u00e9rentes valeurs de p vont permettre de remplir le tableau *mon_tab*.\n\nLes compr\u00e9hensions de tableau permettent de rajouter une condition (if) :\n\n```python\nl = [1, 7, 9, 15, 5, 20, 10, 8]\nmon_tab = [p for p in l if p > 10]\n```\n\nci-dessus nous utilisons le tableau *l* pour cr\u00e9er le tableau *mon_tab* : on parcourt le tableau *l* gr\u00e2ce \u00e0 la boucle *for p in l* mais on \"garde\" uniquement les valeurs sup\u00e9rieures \u00e0 10 (gr\u00e2ce au *if p > 10*). Apr\u00e8s l'ex\u00e9cution du programme ci-dessus, le tableau *mon_tab* est constitu\u00e9 des \u00e9l\u00e9ments suivants : [15, 20]\n\nIl y a aussi la possibilit\u00e9 d'ajouter des op\u00e9rations arithm\u00e9tiques  :\n\n```python\nl = [1, 7, 9, 15, 5, 20, 10, 8]\nmon_tab = [p**2 for p in l if p < 10]\n```\n\nOn utilise le tableau  *l* pour  cr\u00e9er le tableau *mon_tab* en mettant au carr\u00e9 tous les \u00e9l\u00e9ments du tableau *l* \u00e0 condition qu'ils soient strictement inf\u00e9rieurs \u00e0 10. On obtient donc le tableau *mon_tab* suivant : [1, 49, 81, 25, 64]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1429, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0233847e-1f44-473e-8269-7b93dad752c5": {"__data__": {"id_": "0233847e-1f44-473e-8269-7b93dad752c5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4ff59ed-2a6f-43e5-883a-0440ec01099c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "7f987c573cf7286cc7cdf64c472f8ce490b8182f0b54f0e9a506d420778c15c8", "class_name": "RelatedNodeInfo"}}, "text": "4) Travailler sur des \"tableaux de tableaux\"\n\nChaque \u00e9l\u00e9ment d'un tableau peut \u00eatre un tableau, on parle de tableau de tableau.\n\nVoici un exemple de tableau de tableau :\n\n```python\nm = [[1, 3, 4], [5 ,6 ,8], [2, 1, 3], [7, 8, 15]]\n```\n\nLe premier \u00e9l\u00e9ment du tableau ci-dessus est bien un tableau ([1, 3, 4]), le deuxi\u00e8me \u00e9l\u00e9ment est aussi un tableau ([5, 6, 8])...\n\nIl est souvent plus pratique de pr\u00e9senter ces \"tableaux de tableaux\" comme suit :\n\n```python\nm = [[1, 3, 4],\n     [5, 6, 8],\n     [2, 1, 3],\n     [7, 8, 15]]\n```\n\nNous obtenons ainsi quelque chose qui ressemble beaucoup \u00e0 un \"objet math\u00e9matique\" tr\u00e8s utilis\u00e9 : une matrice\n\nIl est \u00e9videmment possible d'utiliser les indices de position avec ces \"tableaux de tableaux\". Pour cela nous allons consid\u00e9rer notre tableau de tableaux comme une matrice, c'est \u00e0 dire en utilisant les notions de \"ligne\" et de \"colonne\". Dans la matrice ci-dessus :\n\nEn ce qui concerne les lignes :\n\n- 1, 3, 4 constituent la premi\u00e8re ligne\n\n- 5, 6, 8 constituent la deuxi\u00e8me ligne\n\n- 2, 1, 3 constituent la troisi\u00e8me ligne\n\n- 7, 8, 15 constituent la quatri\u00e8me ligne\n\n\nEn ce qui concerne les colonnes :\n\n- 1, 5, 2, 7 constituent la premi\u00e8re colonne\n\n- 3, 6, 1, 8 constituent la deuxi\u00e8me colonne\n\n- 4, 8, 3, 15 constituent la troisi\u00e8me colonne\n\nPour cibler un \u00e9l\u00e9ment particulier de la matrice, on utilise la notation avec \"doubles crochets\" : m\\[ligne]\\[colonne] (sans perdre de vu que la premi\u00e8re ligne et la premi\u00e8re colonne ont pour indice 0)\n\nSi nous prenons cet exemple : \n\n```python\nm = [[1, 3, 4],\n     [5, 6, 8],\n     [2, 1, 3],\n     [7, 8, 15]]\na = m[1][2]\n```\n\nla variable  *a* aura  pour valeur 8.\n\nExplications : *m[1]* correspond au  tableau *[5, 6, 8]* (2e \u00e9l\u00e9ment).  Dans ce tableau *[5, 6, 8]*, \u00e0  l'index 2 (*m[1][2]*), on trouve bien la valeur 8.\n\nSi maintenant nous consid\u00e9rons l'exemple suivant :\n\n```python\nm = [1, 2, 3]\nmm = [m, m, m]\nm[0] = 100\n```\nApr\u00e8s l'ex\u00e9cution de ce programme le tableau *mm* est constitu\u00e9 des \u00e9l\u00e9ments suivants  : [[100, 2, 3], [100, 2, 3], [100, 2, 3]]\n\nComme vous pouvez le constater, la modification du tableau associ\u00e9 au nom m entra\u00eene la modification du tableau associ\u00e9 au nom mm (alors que nous n'avons pas directement modifi\u00e9 le tableau associ\u00e9 au nom mm). Il faut donc \u00eatre tr\u00e8s prudent lors de ce genre de manipulation afin d'\u00e9viter des modifications non d\u00e9sir\u00e9es.\n\nIl est possible de parcourir l'ensemble des \u00e9l\u00e9ments d'une matrice \u00e0 l'aide d'une \"double boucle for\" :\n\n```python\nm = [[1, 3, 4],\n     [5, 6, 8],\n     [2, 1, 3],\n     [7, 8, 15]]\nnb_colonne = 3\nnb_ligne = 4\nfor i in range(0, nb_ligne):\n\tfor j in range(0, nb_colonne):\n\t\ta = m[i][j]\n\t\tprint(a)\n```\nL'ex\u00e9cution de ce programme donnera le r\u00e9sultat suivant :\n\n```\n1\n3\n4\n5\n6\n8\n2\n1\n3\n7\n8\n15\n```\nNous avons bien parcouru l'ensemble des \u00e9l\u00e9ments du tableau *m*.\n\nCette double boucle *for* est une structure complexe, mais pourtant assez r\u00e9pandue. N'h\u00e9sitez pas \u00e0 consacrer quelques minutes \u00e0 son analyse.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2961, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fffd3fd4-88c3-400f-8ba5-3418640fd82d": {"__data__": {"id_": "fffd3fd4-88c3-400f-8ba5-3418640fd82d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3846111-a316-41f4-b275-3a61d91b4825", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "068d4a4aeb17a8711851978225d3028661d914b383be600f3a88d76739c3f36c", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nIl est possible de \"stocker\" plusieurs grandeurs dans une m\u00eame structure, ce\ntype de structure est appel\u00e9 une s\u00e9quence.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 143, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec7aaf40-6f29-4692-8412-385eb9126948": {"__data__": {"id_": "ec7aaf40-6f29-4692-8412-385eb9126948", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4d4d68ab-7c59-464e-b558-324d6579b651", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "16eb92666ae5b37fa8a95222e755c2c21359d6382be6cfa43a997a5a3bc95476", "class_name": "RelatedNodeInfo"}}, "text": "Les tuples\n\n- un tuple est une s\u00e9quence (exemple de tuple => tu = (1, 5, 3, 4))\n\n- chaque \u00e9l\u00e9ment d\u2019un tuple est identifi\u00e9 par un indice (1er \u00e9l\u00e9ment indice\n0, 2e \u00e9l\u00e9ment indice 1,...)\n\n- pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment d\u2019indice i on utilise la notation entre crochets :\ntu[i] (avec tu un tuple)\n\n- une fois cr\u00e9\u00e9, un tuple ne peut pas \u00eatre modifi\u00e9", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 343, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9f2c770-ac34-45e8-8728-472027a57236": {"__data__": {"id_": "f9f2c770-ac34-45e8-8728-472027a57236", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e86a2e2-4b36-4ef4-84af-0a0cf1d57048", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7fdae6360b05cf1b3569e96d7a857d62e460970e4b0e2a9fb6325c6cb6009ae0", "class_name": "RelatedNodeInfo"}}, "text": "Les tableaux\n\nun tableau est une s\u00e9quence (exemple de tableau => ta = [1, 5, 3, 4])\n\nchaque \u00e9l\u00e9ment d\u2019un tableau est identifi\u00e9 par un indice (1er \u00e9l\u00e9ment\nindice 0, 2e \u00e9l\u00e9ment indice 1,...)\n\npour acc\u00e9der \u00e0 un \u00e9l\u00e9ment d\u2019indice i on utilise la notation entre crochets\nta[i] (avec ta un tableau)\n\nil est possible de modifier un tableau\n\non peut cr\u00e9er des tableaux de tableaux (exemple t = [[1, 2, 3], [7,\n9,15]])", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "104828e4-1490-4e78-bbf1-9e59de94f1d7": {"__data__": {"id_": "104828e4-1490-4e78-bbf1-9e59de94f1d7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "20c9115d-c070-4247-bed9-ea2c457aff45", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7d9aa93e284923101a127d7ed10dd642d01dd7e05327662cb69d124af6470baf", "class_name": "RelatedNodeInfo"}}, "text": "La boucle for\n\non peut utiliser une boucle for pour parcourir les \u00e9l\u00e9ments d\u2019un tableau", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 89, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98aa7164-3913-476e-b947-c9d890a1dac0": {"__data__": {"id_": "98aa7164-3913-476e-b947-c9d890a1dac0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a029d4cc-40d6-4bba-87db-d2eb1ae8c544", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "92167f44e632a0680bc2cc58c6c135b6da41447932bc922cc39b47f89f3dfcf0", "class_name": "RelatedNodeInfo"}}, "text": "Cr\u00e9er un tableau par compr\u00e9hension\n\nil est possible de cr\u00e9er un tableau en utilisant une boucle for et \u00e9ventuellement une condition\n(if).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c13cb6f-ae63-475f-be91-4d433b8c4146": {"__data__": {"id_": "2c13cb6f-ae63-475f-be91-4d433b8c4146", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e17917f-d22f-4b89-b573-76f45b8e4da9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8e17b4b94c265cc3602a63ea73444f29fcb9c0e24370904dcfa09a4dd3c162d0", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- savoir utiliser les tuples (cr\u00e9ation, utilisation) et les tableaux (cr\u00e9ation, utilisation, modification\u2026)\n\n- savoir utiliser une boucle for pour parcourir une s\u00e9quence (tuple et tableau)\n\n- savoir cr\u00e9er une tableau par compr\u00e9hension (utilisation du for et du if)\n\n- savoir manipuler des tableaux de tableaux", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 339, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "109c539d-f414-4df8-946a-128e57654911": {"__data__": {"id_": "109c539d-f414-4df8-946a-128e57654911", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b02ae0cb-1d17-4e67-8396-16cce47f2bc3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "05fd298392471e969643b5399763824fc6dc0048ffe1e691db089273a09c2cf9", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 30.1\n\nFaites un sch\u00e9ma permettant d'expliquer le principe de la recherche dichotomique en vous basant sur l'exemple suivant : t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 40 (valeur recherch\u00e9e)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 209, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a06900b-cb8a-480c-9289-c685aadf0b91": {"__data__": {"id_": "2a06900b-cb8a-480c-9289-c685aadf0b91", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19e0440e-6590-4e4c-a881-f54d52d3d95f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cd219ac00e253b1a23ed80dd57ff1a8036167403a7df0104035e0a4945325719", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 30.2\n\nFaites un sch\u00e9ma permettant d'expliquer le principe de la recherche dichotomique en vous basant sur l'exemple suivant : t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 9 (valeur recherch\u00e9e)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4501edae-3cb7-4a40-b726-d8374280fd4a": {"__data__": {"id_": "4501edae-3cb7-4a40-b726-d8374280fd4a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e37d62e9-7140-4a47-9d15-e827cd73abb9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3875c1764f4e966b832339c581d3689e79ec886370bfc3657c5813f0b7715ac6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 30.3\n\nSoit l'algorithme de recherche dichotomique :\n\n```\nVARIABLE\nt : tableau d'entiers tri\u00e9\nmil : nombre entier\nfin : nombre entier\ndeb : nombre entier\nx : nombre entier // x : l'entier recherch\u00e9\ntr : bool\u00e9en\nDEBUT\ntr \u2190 FAUX\ndeb \u2190 1\nfin \u2190 longueur(t)\ntant que tr == FAUX et que deb \u2a7d fin :\n mil \u2190 partie_enti\u00e8re((deb+fin)/2)\n si t[mil] == x :\n  tr = VRAI\n sinon :\n  si x > t[mil] :\n   deb \u2190 mil+1\n  sinon :\n   fin \u2190 mil-1\n  fin si\n fin si\nfin tant que\nrenvoyer la valeur de tr\nFIN\n```\n\n1) Appliquez cet algorithme au tableau  t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 40. V\u00e9rifiez que l'algorithme renvoie bien VRAI\n\n2) Appliquez cet algorithme au tableau  t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 9. V\u00e9rifiez que l'algorithme renvoie bien FAUX", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4479dc76-d6f5-41b7-a2d8-1781558fb77a": {"__data__": {"id_": "4479dc76-d6f5-41b7-a2d8-1781558fb77a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1c0d2b08-e7ac-43fc-8232-fe0518c4e34d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "05a517138187fb7edd7711428a7d10390a0274cb4b50602d70e9fd039015a5cd", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 30.4\n\nImpl\u00e9mentez l'algorithme de recherche dichotomique en Python.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 78, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "35d18d93-fc25-4395-ba69-e0ec558d5460": {"__data__": {"id_": "35d18d93-fc25-4395-ba69-e0ec558d5460", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d6430cdd-584b-4ea9-a2de-3deb22056d79", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "5d48bc68a5fc57f9f613efcd5d6f936b62d5c5184b80d6699fb7167bae545017", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous avons d\u00e9j\u00e0 eu l'occasion d'\u00e9tudier un algorithme de recherche d'un entier dans un tableau. Dans le pire des cas (l'entier recherch\u00e9 n'est pas dans le tableau), l'algorithme parcourt l'ensemble du tableau, nous avions donc une complexit\u00e9 O(n). Est-on oblig\u00e9 de parcourir l'ensemble du tableau pour v\u00e9rifier qu'un entier x ne se trouve pas dans un tableau t ? A priori oui, sauf si le tableau t est tri\u00e9 !", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "45270851-ed56-41ea-ab57-f36e96aea63d": {"__data__": {"id_": "45270851-ed56-41ea-ab57-f36e96aea63d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65220c05-f98d-4b17-838c-1b7342f474b4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "142a405b4ed292dc4c7d4121c661d039209c318fbc6e5baf975aca99c97dc72e", "class_name": "RelatedNodeInfo"}}, "text": "2) Principe\n\nIl est aussi possible de repr\u00e9senter le principe de l'algorithme de recherche dichotomique avec le sch\u00e9ma suivant (on recherche la valeur x=35 dans le tableau t =  [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] :\n\n!\n\nDans le sch\u00e9ma ci-dessus, \u00e0 chaque \u00e9tape, on garde uniquement le tableau d\u00e9sign\u00e9 par la fl\u00e8che en trait plein, on abandonne le tableau d\u00e9sign\u00e9 par la fl\u00e8che en pointill\u00e9. Dans la premi\u00e8re \u00e9tape on part du tableau [5, 7, 12, 14, 23, 27, 35, 40, 41, 45], ce tableau est divis\u00e9 en 2 tableaux :  [5, 7, 12, 14, 23] et [27, 35, 40, 41, 45]. La valeur recherch\u00e9e (35) ne peut pas \u00eatre dans le premier tableau ([5, 7, 12, 14, 23]) puisque 35 > 23 et que les autres valeurs du premier tableau sont forc\u00e9ment plus petite que 23 (le tableau est tri\u00e9). On garde donc uniquement le second tableau ([27, 35, 40, 41, 45]) et on recommence le processus (on divise ce tableau en deux...) jusqu'au moment o\u00f9 l'on \"tombe\" sur la valeur recherch\u00e9e ou que l'on se retrouve avec un tableau contenant un seul \u00e9l\u00e9ment : si l'\u00e9l\u00e9ment unique du tableau n'est pas l'\u00e9l\u00e9ment recherch\u00e9, cela signifie que l'\u00e9l\u00e9ment recherch\u00e9 n'est pas dans le tableau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca638584-4006-4a26-ad65-875f0f65ec1f": {"__data__": {"id_": "ca638584-4006-4a26-ad65-875f0f65ec1f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8eb92ee0-c436-46f7-8a6b-bc8728be3e53", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "4b09a82414d14f7a7a9dbeefba7dcd10726f65d51f1e1e02472d902fcb2dcc86", "class_name": "RelatedNodeInfo"}}, "text": "3) algorithme\n\nVoici l'algorithme qui permet d'effectuer une recherche dichotomique :\n\n```\nVARIABLE\nt : tableau d'entiers tri\u00e9\nmil : nombre entier\nfin : nombre entier\ndeb : nombre entier\nx : nombre entier // x : l'entier recherch\u00e9\ntr : bool\u00e9en\nDEBUT\ntr \u2190 FAUX\ndeb \u2190 1\nfin \u2190 longueur(t)\ntant que tr == FAUX et que deb \u2a7d fin :\n mil \u2190 partie_enti\u00e8re((deb+fin)/2)\n si t[mil] == x :\n  tr = VRAI\n sinon :\n  si x > t[mil] :\n   deb \u2190 mil+1\n  sinon :\n   fin \u2190 mil-1\n  fin si\n fin si\nfin tant que\nrenvoyer la valeur de tr\nFIN\n```\n\nOn peut r\u00e9sumer le principe de fonctionnement de l'algorithme de recherche dichotomique par le sch\u00e9ma suivant :\n\n!\n\nLes variables *deb*, *mil* et *fin* du sch\u00e9ma correspondent aux variables *deb*, *mil* et *fin* de l'algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 751, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d540fc0e-7184-49d2-b0bf-fc15bc71554c": {"__data__": {"id_": "d540fc0e-7184-49d2-b0bf-fc15bc71554c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65906afb-d75a-499c-ba5c-ec09d2e65a72", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "f5fb15fc52a2cb04dbe917fbb47f1f30a99243845e123406cb87cc4f5c07cbdb", "class_name": "RelatedNodeInfo"}}, "text": "4) complexit\u00e9 de l'algorithme\n\nPour \u00e9tudier la complexit\u00e9, nous allons nous int\u00e9resser \u00e0 la boucle : au niveau de la boucle, combien doit-on effectuer d'it\u00e9rations pour un tableau de taille n dans le cas le plus d\u00e9favorable (l'entier x n'est pas dans le tableau t) ?\n\nSachant qu'\u00e0 chaque it\u00e9ration de la boucle on divise le tableau en 2, cela revient donc \u00e0 se demander combien de fois faut-il diviser le tableau en 2 pour obtenir, \u00e0 la fin, un tableau comportant un seul entier ? Autrement dit, combien de fois faut-il diviser n par 2 pour obtenir 1 ?\n\nMath\u00e9matiquement cela se traduit par l'\u00e9quation $\\frac{n}{2^a}=1$ avec a le nombre de fois qu'il faut diviser n par 2 pour obtenir 1. Il faut donc trouver a !\n\nA ce stade il est n\u00e9cessaire d'introduire une nouvelle notion math\u00e9matique : le \"logarithme base 2\" not\u00e9 $log_2$. Par d\u00e9finition $log_2(2^x)=x$\n\nNous avons donc :\n\n$\\frac{n}{2^a}=1$ => $n=2^a$ => $log_2(n)=log_2(2^a)=a$, nous avons donc $a=log_2(n)$\n\t\t\t\nNous pouvons donc dire que la complexit\u00e9 en temps dans le pire des cas de l'algorithme de recherche dichotomique est $O(log_2(n))$\n\t\t\t\nAfin de pouvoir comparer l'efficacit\u00e9 des diff\u00e9rents algorithmes, voici une repr\u00e9sentation graphique des fonctions $y=x$ (en rouge), $y=x^2$ (en bleu) et $y=log_2(x)$ (en vert)\n\n!\n\nComme vous pouvez le constater l'algorithme de recherche dichotomique est plus efficace que l'algorithme de recherche qui consiste \u00e0 parcourir l'ensemble du tableau, car $x>log_2(x)$ quelque soit $x$.\n\nCependant, il ne faut pas perdre de vu que dans le cas de la recherche dichotomique, il est n\u00e9cessaire d'avoir un tableau tri\u00e9, si au d\u00e9part le tableau n'est pas tri\u00e9, il faut rajouter la dur\u00e9e du tri.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1689, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "157aecde-15c2-4740-bf99-b1f29aea6089": {"__data__": {"id_": "157aecde-15c2-4740-bf99-b1f29aea6089", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45735fb3-3121-4794-abb3-673383e13c03", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "b385c588c4107919df6633e265b57e201df09f1710d0ddb195eafa42d8e0b7c4", "class_name": "RelatedNodeInfo"}}, "text": "5) terminaison de l'algorithme\n\nPour terminer, nous allons d\u00e9montrer que cet algorithme se termine dans tous les cas (on ne peut pas \"tomber dans une boucle infinie\") :\n\t\t\t\nNous avons les variables *fin* et *deb*. D\u00e9finissons fini et debi avec i qui correspond \u00e0 la i\u00e8me it\u00e9ration de la boucle : deb0 correspond \u00e0 la valeur de la variable *deb* avant la premi\u00e8re it\u00e9ration de la boucle (nous avons donc deb0 = 0). M\u00eame chose pour fini (nous avons donc fin0 = n). \u00c0 la fin de la premi\u00e8re it\u00e9ration de la boucle, nous aurons fin1 et deb1...\n\t\t\nOn d\u00e9finit aussi mi = (debi + fini) / 2.\n\t\t\nPartons du principe que nous sommes \u00e0 la k i\u00e8me it\u00e9ration (i=k), nous avons plusieurs cas \u00e0 consid\u00e9rer :\n\t\t\t\n- si debk > fink ou si t[mk] = x, l'algorithme se termine, car on n'entre pas dans la boucle.\n\t\t\t\t\n- si debk \u2a7d fink et si x k], on entre dans la boucle : debk+1 = debk et fink+1 = mk - 1. On a alors fink+1 - debk+1 k - debk\n\t\t\t\t\n- si debk \u2a7d fink et si x > t[mk], on entre dans la boucle : debk+1 = mk + 1 et fink+1 = fink. On a alors fink+1 - debk+1 k - debk\n\t\t\t\nQuel que soit le cas, nous avons fink+1 - debk+1 k - debk, nous pouvons donc dire que fini - debi est strictement d\u00e9croissante.\n\nIl existe donc un entier p tel que :\n\t\t\t\n- soit debp > finp, dans ce cas l'algorithme va se terminer, car on \"n'entre pas\" dans la boucle et l'algorithme renvoie FAUX.\n\t\t\t\t\n- soit x = t[mp] avec mp = (debp + finp) / 2, dans ce cas l'algorithme va se terminer, car on n'entre pas dans la boucle et l'algorithme renvoie VRAI.\n\t\nNous venons d\u00e9montrer que l'algorithme se termine \u00e0 un moment ou \u00e0 un autre. Pour effectuer cette d\u00e9monstration nous avons utilis\u00e9 le fait que fini - debi est strictement d\u00e9croissante. fini - debi est appel\u00e9 un variant de boucle. \n\nUn variant de boucle est une grandeur qui, comme son nom l'indique, varie \u00e0 chaque it\u00e9ration, cette variation fait qu'\u00e0 un moment ou \u00e0 un autre, l'algorithme finira par s'arr\u00eater.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1926, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c67295a5-db2c-4731-93cc-457c2885deba": {"__data__": {"id_": "c67295a5-db2c-4731-93cc-457c2885deba", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30r.md", "file_name": "c30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f3b55d7-2eb5-4215-8c89-40e654c582aa", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30r.md", "file_name": "c30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5d64d26ae39330035f9ee5c564f694a1418622d6e91874d7b6bee4bde6e8f643", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir\n\n- l'algorithme de recherche dichotomique permet de rechercher un \u00e9l\u00e9ment dans un tableau **tri\u00e9**, en divisant ce tableau en 2 \u00e0 chaque \u00e9tape de la recherche\n\n- la complexit\u00e9 en temps dans le pire des cas de cet algorithme est en O(log2(n)) (donc meilleur que l'algorithme qui cherche l'\u00e9l\u00e9ment en parcourant enti\u00e8rement le tableau qui est en O(n)).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 373, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b51012fd-9d39-4aff-886e-224aa6e1d2dc": {"__data__": {"id_": "b51012fd-9d39-4aff-886e-224aa6e1d2dc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30r.md", "file_name": "c30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d091946c-c776-422d-b40d-eecfcaff648c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30r.md", "file_name": "c30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "47870a2f1226acba78cbbedb51dcb71b1a27f3f4e4917ca71b5225025c6847c4", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir faire\n\nVous devez \u00eatre capable d'appliquer cet algorithme sur un exemple donn\u00e9.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61499b69-ea93-4c7e-8bba-0dffdbcfbfe7": {"__data__": {"id_": "61499b69-ea93-4c7e-8bba-0dffdbcfbfe7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d6489f5-e434-43db-82f8-3f2cf689cf6d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "473aad05189c6ab71ed01fe4a3c8018f6da5bd65d66dc566a6177585b93a7cc5", "class_name": "RelatedNodeInfo"}}, "text": "Nous allons dans cette s\u00e9rie d'activit\u00e9 \u00e9tudier un probl\u00e8me classique en informatique, le probl\u00e8me du rendu de monnaie", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 118, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4b207da-b444-4b51-b197-b08d8193d327": {"__data__": {"id_": "e4b207da-b444-4b51-b197-b08d8193d327", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0951f814-958a-4be7-b87f-e4fbe955787a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a5ff8c04f3b0c3af9e895aa2de3df243a0c8366384738f7faffee9af279d1a35", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 31.1\n\nNous sommes des commer\u00e7ants, nous avons \u00e0 notre disposition un nombre illimit\u00e9 de pi\u00e8ces de :\n\n- 1 centime\n- 2 centimes\n- 5 centimes\n- 10 centimes\n- 20 centimes\n- 50 centimes\n- 1 \u20ac\n- 2 \u20ac\n\nNous devons rendre la monnaie \u00e0 un client \u00e0 l'aide de ces pi\u00e8ces. La contrainte est d'utiliser le moins de pi\u00e8ces possible.\n\nTrouvez une m\u00e9thode gloutonne permettant d'effectuer un rendu de monnaie (en utilisant le moins possible de pi\u00e8ces).\n\nVous devez rendre la somme de 2,63 \u20ac, appliquez la m\u00e9thode que vous venez de mettre au point.\n\nCombien de pi\u00e8ces avez-vous utilis\u00e9es ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d10b3429-fcf7-4c5b-ba70-e7778ec51c92": {"__data__": {"id_": "d10b3429-fcf7-4c5b-ba70-e7778ec51c92", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f43c4970-cc75-4cd0-9c6f-f0672c919aef", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5ce36ed78ddd6b20cedbf3de4eeaea8088e90945b83deb9a55f0f03eff21dc53", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 31.2\n\n\u00c0 partir de la m\u00e9thode gloutonne que vous avez \u00e9labor\u00e9e dans l'activit\u00e9 31.1, \u00e9crivez un algorithme glouton qui permettra de d\u00e9terminer le nombre minimal de pi\u00e8ces \u00e0 utiliser pour une somme donn\u00e9e. Vous proposerez ensuite une impl\u00e9mentation en Python de votre algorithme. Vous testerez votre programme avec une somme \u00e0 rendre de 2 euros et 63 centimes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccc5483e-f062-4792-8cc6-d67d173c5cda": {"__data__": {"id_": "ccc5483e-f062-4792-8cc6-d67d173c5cda", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "df21f770-5b6b-42b5-828f-054e758c832b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4f9fbe5267affc8855466cefd7a01766ede3b88d7e51606e64b9eea8b6cf3e17", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 31.3\n\nNous avons maintenant uniquement les pi\u00e8ces suivantes :\n\n- 2 centimes\n- 5 centimes\n- 10 centimes\n- 20 centimes\n- 50 centimes\n- 1 \u20ac\n- 2 \u20ac\n\nUtilisez le programme que vous avez d\u00e9velopp\u00e9 dans l'activit\u00e9 31.2  pour essayer de r\u00e9soudre le probl\u00e8me pour une somme de 11 centimes \u00e0 rendre. Que constatez-vous ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "897c3c7a-2840-41bd-8361-9387be4fa54f": {"__data__": {"id_": "897c3c7a-2840-41bd-8361-9387be4fa54f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07bdb5de-a433-4795-b8eb-2087893410dc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0b2276ffbe31abe95ca7df57b4410a0c0806aeea632ee09a6e9f0e37cc8e4be5", "class_name": "RelatedNodeInfo"}}, "text": "1) Probl\u00e8me du sac \u00e0 dos\n\nUn cambrioleur poss\u00e8de un sac \u00e0 dos d'une contenance maximum de 30 Kg. Au cours d'un de ses cambriolages, il a la possibilit\u00e9 de d\u00e9rober 4 objets A, B, C et D. Voici un tableau qui r\u00e9sume les caract\u00e9ristiques de ces objets :\n\n| objet | A | B | C | D |\n| --- | --- | --- | --- | --- |\n| masse (en Kg) | 13 | 12 | 8 | 10 |\n| valeur (en \u20ac) | 700 | 400 | 300 | 300 |\n\nQuelle est la meilleure strat\u00e9gie \u00e0 adopter pour ce voleur sachant qu'il est limit\u00e9 \u00e0 30 Kg et qu'il cherche un gain maximum ?\n\nCe genre de probl\u00e8me est un grand classique en informatique, on parle de probl\u00e8me d'optimisation. Il existe toujours plusieurs solutions possibles \u00e0 un probl\u00e8me d'optimisation (dans le probl\u00e8me du sac \u00e0 dos, on peut choisir A+B ou A+C ou B+C+D... toutes les combinaisons sont possibles \u00e0 partir du moment o\u00f9 la masse totale ne d\u00e9passe pas 30 Kg), mais on ne cherche pas n'importe quelle solution, on cherche une solution dite optimale : dans notre exemple, on cherche le plus grand gain possible. Souvent, dans les probl\u00e8mes d'optimisation, il n'existe pas une solution optimale, mais plusieurs solutions optimales, r\u00e9soudre un probl\u00e8me d'optimisation c'est donc trouver une des solutions optimales.\n\nIl existe diff\u00e9rentes m\u00e9thodes algorithmiques permettant de trouver une solution optimale \u00e0 un probl\u00e8me d'optimisation : il peut, en effet, \u00eatre int\u00e9ressant \"d'automatiser\" la r\u00e9solution des probl\u00e8mes d'optimisation \u00e0 l'aide d'algorithme (dans notre cas, trouver un algorithme qui trouve une solution optimale au probl\u00e8me du sac \u00e0 dos).\n\nEn apparence, la solution la plus simple dans le cas du sac \u00e0 dos serait d'\u00e9crire un algorithme qui teste toutes les combinaisons d'objets possibles et qui retient les solutions qui offrent un gain maximum. Dans notre cas pr\u00e9cis, avec seulement 4 objets, cette solution pourrait \u00eatre envisag\u00e9e, mais avec un plus grand nombre d'objets, le temps de calculs, m\u00eame pour un ordinateur tr\u00e8s puissant, deviendrait trop important. En effet, l'algorithme qui testerait toutes les combinaisons possibles aurait une complexit\u00e9 en temps en O(an) avec a une constante et n les nombre d'objets. On parle d'une complexit\u00e9 exponentielle. Les algorithmes \u00e0 complexit\u00e9 exponentielle ne sont pas efficaces pour r\u00e9soudre des probl\u00e8mes, le temps de calcul devient beaucoup trop important quand n devient tr\u00e8s grand.\n\n\u00c0 la place de cette m\u00e9thode \"je teste toutes les possibilit\u00e9s\", il est possible d'utiliser une m\u00e9thode dite gloutonne (greedy en anglais).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2494, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf294721-a769-4636-a373-b36491bb6140": {"__data__": {"id_": "cf294721-a769-4636-a373-b36491bb6140", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e2096f31-656d-45d2-8c95-e4e3602547d7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8a4ed2379f306210a6150d6ab066c24dfb847a69c0100344bc992f4cc5151ed2", "class_name": "RelatedNodeInfo"}}, "text": "2) la m\u00e9thode gloutonne", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 25, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab156337-6667-4ec7-92d2-19f3b427476a": {"__data__": {"id_": "ab156337-6667-4ec7-92d2-19f3b427476a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "965f68a4-cdc5-45fc-83ba-0984a423722e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d092a3c60074fcaf833b4a90c13d0069ad765387363ce22022bed038397b9145", "class_name": "RelatedNodeInfo"}}, "text": "a) pr\u00e9sentation\n\nQu'est-ce qu'une m\u00e9thode gloutonne ?\n\nLa r\u00e9solution d'un probl\u00e8me d'optimisation se fait g\u00e9n\u00e9ralement par \u00e9tapes : \u00e0 chaque \u00e9tape, on doit faire un choix. Par exemple, dans le probl\u00e8me du sac \u00e0 dos, nous ajoutons les objets un par un, chaque ajout d'un objet constitue une \u00e9tape : \u00e0 chaque \u00e9tape, on doit choisir un objet \u00e0 mettre dans le sac. Le principe de la m\u00e9thode gloutonne est de, \u00e0 chaque \u00e9tape de la r\u00e9solution du probl\u00e8me, faire le choix qui semble le plus pertinent sur le moment, avec l'espoir qu'au bout du compte, cela nous conduira vers une solution optimale du probl\u00e8me \u00e0 r\u00e9soudre. Autrement dit, on fait des choix localement optimaux dans l'espoir que ces choix m\u00e8neront \u00e0 une solution globalement optimale (le \"localement\" signifie ici \"\u00e0 chaque \u00e9tape de la r\u00e9solution du probl\u00e8me\"). Il est aussi important de bien comprendre qu'avec une m\u00e9thode gloutonne on ne revient jamais en arri\u00e8re : quand, \u00e0 une \u00e9tape donn\u00e9e, on effectue un choix, ce choix est d\u00e9finitif, on ne reviendra jamais dessus plus tard (au cours des \u00e9tapes ult\u00e9rieures), m\u00eame si on se rend compte que le choix fait pr\u00e9c\u00e9demment n'\u00e9tait pas vraiment judicieux. \n\nAppliquons une m\u00e9thode gloutonne \u00e0 la r\u00e9solution du probl\u00e8me du sac \u00e0 dos :\n\n- Sachant que l'on cherche \u00e0 maximiser le gain, commen\u00e7ons par \u00e9tablir un tableau nous donnant la \"valeur massique\" de chaque objet (pour chaque objet on divise sa valeur par sa masse) :\n\n| objet | A | B | C | D |\n| --- | --- | --- | --- | --- |\n|valeur massique (en \u20ac/Kg)| 54 | 33 | 38 | 30 |\n\n- On classe ensuite les objets par ordre d\u00e9croissant de valeur massique : A - C - B - D\n\n- Enfin, on remplit le sac en prenant les objets dans l'ordre et en s'arr\u00eatant d\u00e8s que la masse limite est atteinte. C'est ici que se fait \"le choix glouton\", \u00e0 chaque \u00e9tape, on prend l'objet ayant le rapport \"valeur-masse\" le plus int\u00e9ressant au vu des objectifs :\n\n\t- 1re \u00e9tape : A (13 Kg)\n\t\n\t- 2e \u00e9tape : C (13+8=21 Kg)\n\t\n\t- 3e \u00e9tape : B (13+8+12=33 Kg) => impossible, on d\u00e9passe les 30 Kg.\n\t\nLe sac est donc compos\u00e9 de 2 objets : A et C pour un montant total de 1000 \u20ac et une masse totale de 21 Kg.\n\nCette m\u00e9thode gloutonne peut \u00eatre \"automatis\u00e9e\", il est donc possible d'\u00e9crire un algorithme glouton (un algorithme qui est bas\u00e9 sur une m\u00e9thode gloutonne) afin de trouver une solution au probl\u00e8me du sac \u00e0 dos avec n'importe quelles valeurs (nombre d'objets, masse des objets, valeur des objets, masse maximum).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2442, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ad3e460-bde9-45b4-9cf5-c4f2210b73e7": {"__data__": {"id_": "1ad3e460-bde9-45b4-9cf5-c4f2210b73e7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "51f9383a-97e6-4341-a36c-6e6895826b7a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "71d1c6ef8503283c9a540f0cf276b17f7864f54caa454d833408cf8654e546ad", "class_name": "RelatedNodeInfo"}}, "text": "b) une m\u00e9thode optimale ?\n\nLa solution trouv\u00e9e ci-dessus est-elle optimale ?\n\nOn constate rapidement que la r\u00e9ponse est non, car le couple A+B permet d'atteindre une valeur de 1100 \u20ac pour une masse de 25 Kg. Dans notre probl\u00e8me, la m\u00e9thode gloutonne ne nous donne pas une solution optimale.\n\nPlus g\u00e9n\u00e9ralement , il est important de bien comprendre qu'un algorithme glouton ne donne pas forcement une solution optimale. Pour certains types de probl\u00e8mes, il est possible de d\u00e9montrer qu'un algorithme glouton donnera toujours une solution optimale, mais cela d\u00e9passe largement le cadre de ce cours.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2da20d0f-e8f1-439d-bb0d-cdfdbce59d80": {"__data__": {"id_": "2da20d0f-e8f1-439d-bb0d-cdfdbce59d80", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31r.md", "file_name": "c31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6db7ea9f-7680-4609-908b-6d6889649fd6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31r.md", "file_name": "c31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e29364d7223714a5e07b8bc1f302c33b0a013af8bbb83b789bbde562e4f12db9", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir\n\n- un algorithme est dit glouton s'il se base sur une m\u00e9thode gloutonne pour r\u00e9soudre un probl\u00e8me d'optimisation\n\n- dans une m\u00e9thode gloutonne, on fait des choix localement optimaux dans l'espoir que ces choix m\u00e8neront \u00e0 une solution globalement optimale. Ces choix ne seront jamais remis en  cause  au  cours de la r\u00e9solution du probl\u00e8me (pas de retour en arri\u00e8re possible)\n\n- une m\u00e9thode gloutonne ne donne pas forc\u00e9ment une solution optimale.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 468, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5474527b-07a3-4e6b-acd2-c6ee79cf4f8e": {"__data__": {"id_": "5474527b-07a3-4e6b-acd2-c6ee79cf4f8e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31r.md", "file_name": "c31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4a02b499-71f0-4b65-90cd-bfc9e80b80a1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31r.md", "file_name": "c31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b91f2290d3d751a0d61c515eeaef4e6598bede90296358ff84329f1d9a486ac2", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir faire\n\n\u00c9crire un programme Python permettant de r\u00e9soudre un probl\u00e8me d'optimisation (sac \u00e0 dos ou rendu de monnaie) \u00e0 l'aide d'un algorithme glouton", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 171, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bad92416-781d-4917-8f78-08570c71dd67": {"__data__": {"id_": "bad92416-781d-4917-8f78-08570c71dd67", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8d8ac7f7-1c2e-4d4a-be3f-a3e4bdfc018b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "1c88f235a898d17948ae3578a6f5bf0c678969e826f018e235408031ded04d1c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 32.1\n\nCr\u00e9ez un r\u00e9pertoire *knn_iris* et t\u00e9l\u00e9chargez le fichier iris.csv dans ce r\u00e9pertoire.\n\nEn r\u00e9sum\u00e9, vous trouverez dans ce fichier :\n\n- la longueur des p\u00e9tales\n- la largeur des p\u00e9tales\n- l'esp\u00e8ce de l'iris (au lieu d'utiliser les noms des esp\u00e8ces, on utilisera des chiffres : 0 pour \"iris setosa\", 1 pour \"iris versicolor\" et 2 pour \"iris virginica\")\n\npour 50 iris.\n\nNous allons chercher \u00e0 obtenir la repr\u00e9sentation graphique suivante (en abscisse la longueur du p\u00e9tale et en ordonn\u00e9e la largeur du p\u00e9tale pour les 3 esp\u00e8ces d'iris)  :\n\n!\n\nCr\u00e9ez un  fichier  *knn_iris.py* dans le r\u00e9pertoire *knn_iris* et copiez-coller le code suivant dans ce fichier :\n\n```python\nimport pandas\nimport matplotlib.pyplot as plt\niris=pandas.read_csv(\"iris.csv\")\nx=iris.loc[:,\"petal_length\"]\ny=iris.loc[:,\"petal_width\"]\nlab=iris.loc[:,\"species\"]\nplt.axis('equal')\nplt.scatter(x[lab == 0], y[lab == 0], color='g', label='setosa')\nplt.scatter(x[lab == 1], y[lab == 1], color='r', label='versicolor')\nplt.scatter(x[lab == 2], y[lab == 2], color='b', label='virginica')\nplt.legend()\nplt.show()\n```\n\nQuelques mots sur le programme ci-dessus :\n\n- La partie \"Pandas\" ne devrait pas vous poser de probl\u00e8mes : x correspond \u00e0 la longueur des p\u00e9tales, y correspond \u00e0 la largeur des p\u00e9tales et lab correspond \u00e0 l'esp\u00e8ce d'iris (0,1 ou 2)\n\n- Nous utilisons ensuite la biblioth\u00e8que matplotlib qui permet de tracer des graphiques tr\u00e8s facilement. \"plt.axis('equal')\" permet d'obtenir un rep\u00e8re orthonorm\u00e9. \"plt.scatter\" permet de tracer des points, le \"x[lab == 0]\" permet de consid\u00e9rer uniquement l'esp\u00e8ce \"iris setosa\" (lab==0). Le premier \"plt.scatter\" permet de tracer les points correspondant \u00e0 l'esp\u00e8ce \"iris setosa\", ces points seront vert (color='g'), le deuxi\u00e8me \"plt.scatter\" permet de tracer les points correspondant \u00e0 l'esp\u00e8ce \"iris versicolor\", ces points seront rouge (color='r'), enfin le troisi\u00e8me \"plt.scatter\" permet de tracer les points correspondant \u00e0 l'esp\u00e8ce \"iris virginica\", ces points seront bleu (color='b'). Nous aurons en abscisse la longueur du p\u00e9tale et en ordonn\u00e9e la largeur du p\u00e9tale.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2098, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1a77f49-9d1b-4e9e-b0ce-eea1f2a702b5": {"__data__": {"id_": "c1a77f49-9d1b-4e9e-b0ce-eea1f2a702b5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57d222e6-7b59-4f93-b242-717dafff6b53", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "64c33dc755b65dcff9856f4a5307a26c54131f9539770b542f59199b12b900f1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 32.2\n\nCopiez-collez le code ci-dessous dans le fichier *knn_iris.py*\n\n```python\nimport pandas\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier\n\n#traitement CSV\niris=pandas.read_csv(\"iris.csv\")\nx=iris.loc[:,\"petal_length\"]\ny=iris.loc[:,\"petal_width\"]\nlab=iris.loc[:,\"species\"]\n#fin traitement CSV\n\n#valeurs\nlongueur=2.5\nlargeur=0.75\nk=3\n#fin valeurs\n\n#graphique\nplt.axis('equal')\nplt.scatter(x[lab == 0], y[lab == 0], color='g', label='setosa')\nplt.scatter(x[lab == 1], y[lab == 1], color='r', label='versicolor')\nplt.scatter(x[lab == 2], y[lab == 2], color='b', label='virginica')\nplt.scatter(longueur, largeur, color='k')\nplt.legend()\n#fin graphique\n\n#algo knn\nd=list(zip(x,y))\nmodel = KNeighborsClassifier(n_neighbors=k)\nmodel.fit(d,lab)\nprediction= model.predict([[longueur,largeur]])\n#fin algo knn\n\n#Affichage r\u00e9sultats\ntxt=\"R\u00e9sultat : \"\nif prediction[0]==0:\n  txt=txt+\"setosa\"\nif prediction[0]==1:\n  txt=txt+\"versicolor\"\nif prediction[0]==2:\n  txt=txt+\"virginica\"\nplt.text(3,0.5, f\"largeur : {largeur} cm longueur : {longueur} cm\", fontsize=12)\nplt.text(3,0.3, f\"k : {k}\", fontsize=12)\nplt.text(3,0.1, txt, fontsize=12)\n#fin affichage r\u00e9sultats\n\nplt.show()\n```\n\nTestez le programme ci-dessus\n\nLa biblioth\u00e8que Python Scikit Learn propose un grand nombre d'algorithmes li\u00e9 au machine learning (c'est sans aucun doute la biblioth\u00e8que la plus utilis\u00e9e en machine learning). Parmi tous ces algorithmes, Scikit Learn propose l'algorithme des k plus proches voisins.\n\n\nLe programme ci-dessus n'est pas tr\u00e8s complexe \u00e0 comprendre, nous allons tout de m\u00eame nous attarder sur la partie \"knn\" :\n\n```\nd=list(zip(x,y))\nmodel = KNeighborsClassifier(n_neighbors=k)\nmodel.fit(d,lab)\nprediction= model.predict([[longueur,largeur]])\n```\n\nLa premi\u00e8re ligne \"d=list(zip(x,y))\" permet de passer des 2 listes x et y :\n\n```\nx = [1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, ...]\ny = [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.4,....]\n```\n\n\u00e0 une liste de tuples d :\n\n```\nd = [(1.4, 0.2), (1.4, 0.2), (1.3, 0.2) (1.5, 0.2), (1.4, 0.2), (1.7, 0.2), (1.4, 0.4), ...]\n```\n\nles \u00e9l\u00e9ments des tableaux x et y ayant le m\u00eame indice sont regroup\u00e9s dans un tuple, nous obtenons bien une liste de tuples.\n\n\"KNeighborsClassifier\" est une m\u00e9thode issue de la biblioth\u00e8que scikit-learn (voir plus haut le \"from sklearn.neighbors import KNeighborsClassifier\"), cette m\u00e9thode prend ici en param\u00e8tre le nombre de \"plus proches voisins\" (model = KNeighborsClassifier(n_neighbors=k))\n\n\"model.fit(d, lab)\" permet d'associer les tuples pr\u00e9sents dans la liste \"d\" avec les labels (0 : \"iris setosa\", 1 : \"iris versicolor\" ou 2 : \"iris virginica\"). Par exemple le premier tuple de la liste \"d\", (1.4, 0.2) est associ\u00e9 au premier label de la liste lab (0), et ainsi de suite...\n\nLa ligne \"prediction= model.predict([[longueur,largeur]])\" permet d'effectuer une pr\u00e9diction pour un couple [longueur, largeur] (dans l'exemple ci-dessus \"longueur=2.5\" et \"largeur=0.75\"). La variable \"prediction\" contient alors le label trouv\u00e9 par l'algorithme knn. \n\nAttention, \"prediction\" est une liste Python qui contient un seul \u00e9l\u00e9ment (le label), il est donc n\u00e9cessaire d'\u00e9crire \"prediction[0]\" afin d'obtenir le label.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9e9e22e-0d11-4beb-9c61-780b34c91b8a": {"__data__": {"id_": "e9e9e22e-0d11-4beb-9c61-780b34c91b8a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8cfc641-1b0a-4550-956e-446bab2a1df9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "dad3595dd67bf826e821a9546e75126caad4a8cee5f225332802be79ea068547", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 32.3\n\nModifiez le programme de l'activit\u00e9 32.2 afin de tester l'algorithme knn avec un nombre \"de plus proches voisins\" diff\u00e9rent (en gardant un iris ayant une longueur de p\u00e9tale \u00e9gale \u00e0 2,5 cm et une largeur de p\u00e9tale \u00e9gale \u00e0 0,75 cm).\n\nQue se passe-t-il pour k = 5 ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 279, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb4bdb82-374b-4f3f-b4f4-08f99957b665": {"__data__": {"id_": "eb4bdb82-374b-4f3f-b4f4-08f99957b665", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f11c12e-0a68-4783-bad2-e308746521bc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d4c459e22dfaa02a7a1901304ce9526ad6f5133d07f8da3c8af90224010bd625", "class_name": "RelatedNodeInfo"}}, "text": "1)  introduction\n\nNous allons maintenant travailler sur un algorithme d'apprentissage automatique, souvent appel\u00e9, m\u00eame en fran\u00e7ais, algorithme de machine learning. L'id\u00e9e est d'utiliser un grand nombre de donn\u00e9es afin \"d'apprendre \u00e0 la machine\" \u00e0 r\u00e9soudre un certain type de probl\u00e8me (nous verrons un exemple un peu plus loin).\n\nCette id\u00e9e d'apprentissage automatique ne date pas d'hier, puisque le terme de machine learning a \u00e9t\u00e9 utilis\u00e9 pour la premi\u00e8re fois par l'informaticien am\u00e9ricain Arthur Samuel en 1959. Pourquoi le machine learning est tant \"\u00e0 la mode\" depuis quelques ann\u00e9es ? Simplement parce que le nerf de la guerre dans les algorithmes de machine learning est la qualit\u00e9 et la quantit\u00e9 des donn\u00e9es (les donn\u00e9es qui permettront \u00e0 la machine d'apprendre \u00e0 r\u00e9soudre un probl\u00e8me), or, avec le d\u00e9veloppement d'internet, il est relativement simple de trouver des donn\u00e9es sur n'importe quel sujet (on parle de \"big data\"). \u00c0 noter aussi l'importance des strat\u00e9gies mises en place par les GAFAM (Google, Apple, Facebook, Amazon et Microsoft) afin de r\u00e9cup\u00e9rer un grand nombre de donn\u00e9es concernant leurs clients. Ces donn\u00e9es sont tr\u00e8s souvent utilis\u00e9es pour \"nourrir\" des algorithmes de machine learning (comment, d'apr\u00e8s vous, Amazon arrive \u00e0 proposer \u00e0 ces clients des \"suggestions d'achats\" souvent tr\u00e8s pertinentes ?)\n\nNous allons \u00e9tudier un algorithme d'apprentissage assez simple \u00e0 appr\u00e9hender : l'algorithme des \"k plus proches voisins\" (en anglais \"k nearest neighbors\" : knn)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f7ec619-bbc4-4fef-9b96-55a3ff07b7a6": {"__data__": {"id_": "9f7ec619-bbc4-4fef-9b96-55a3ff07b7a6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e9e370b-9f26-47dd-90b4-0e9176c0f50c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5f9b1d77a4e4b749791d9945771bd89b14aa92c7ef9fac2baf6b1453a1dcef21", "class_name": "RelatedNodeInfo"}}, "text": "2) le probl\u00e8me des iris\n\nAfin de travailler sur un exemple, nous allons utiliser un jeu de donn\u00e9es relativement connu dans le monde du machine learning : le jeu de donn\u00e9es \"iris\".\n\nEn 1936, Edgar Anderson a collect\u00e9 des donn\u00e9es sur 3 esp\u00e8ces d'iris : \"iris setosa\", \"iris virginica\" et \"iris versicolor\"\n\niris setosa :\n\n!\n\niris virginica : \n\n!\n\niris versicolor :\n\n!\n \nPour chaque iris \u00e9tudi\u00e9, Anderson a mesur\u00e9 (en cm) :\n\n- la largeur des s\u00e9pales\n- la longueur des s\u00e9pales\n- la largeur des p\u00e9tales\n- la longueur des p\u00e9tales\n\nPar souci de simplification, nous nous int\u00e9resserons uniquement \u00e0 la largeur et \u00e0 la longueur des p\u00e9tales.\n\nPour chaque iris mesur\u00e9, Anderson a aussi not\u00e9 l'esp\u00e8ce (\"iris setosa\", \"iris versicolor\" ou \"iris virginica\")\n\nEn travaillant sur ce jeu de donn\u00e9es, on peut obtenir le graphique suivant (en abscisse la longueur du p\u00e9tale et en ordonn\u00e9e la largeur du p\u00e9tale) :\n\n!\n\nNous obtenons des \"nuages\" de points, on remarque ces points sont regroup\u00e9s par esp\u00e8ces d'iris (pour \"iris virginica\" et \"iris versicolor\", les points ont un peu tendance \u00e0 se m\u00e9langer).\n\nImaginez maintenant qu'au cours d'une promenade vous trouviez un iris, n'\u00e9tant pas un sp\u00e9cialiste, il ne vous est pas vraiment possible de d\u00e9terminer l'esp\u00e8ce. En revanche, vous \u00eates capables de mesurer la longueur et la largeur des p\u00e9tales de cet iris. Partons du principe qu'un p\u00e9tale fasse 0,5 cm de large et 2 cm de long. Pla\u00e7ons cette nouvelle donn\u00e9e sur notre graphique (point en noir) :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1484, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e343ef8d-c4c6-4ee0-8a00-f9361cecb98f": {"__data__": {"id_": "e343ef8d-c4c6-4ee0-8a00-f9361cecb98f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7fee7542-c6c1-4aff-95b6-8c6cc2680502", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2f7cc49fa45df3730d601b1d578d211c9ee8bc47d86be51d24c8d5a0d8da8866", "class_name": "RelatedNodeInfo"}}, "text": "3) algorithme de k plus proches voisins\n\nIl est possible de rencontrer des cas plus difficiles, par exemple : largeur du p\u00e9tale = 0,75 cm ; longueur du p\u00e9tale = 2,5 cm :\n\n!\n\nDans ce genre de cas, il peut \u00eatre int\u00e9ressant d'utiliser l'algorithme des \"k plus proches voisins\", en quoi consiste cet algorithme ?\n\n- on calcule la distance entre notre point (largeur du p\u00e9tale = 0,75 cm ; longueur du p\u00e9tale = 2,5 cm) et chaque point issu du jeu de donn\u00e9es \"iris\" (\u00e0 chaque fois c'est un calcul de distance entre 2 points tout ce qu'il y a de plus classique)\n\n- on s\u00e9lectionne uniquement les k distances les plus petites (les k plus proches voisins)\n\n- parmi les k plus proches voisins, on d\u00e9termine quelle est l'esp\u00e8ce majoritaire. On associe \u00e0 notre \"iris myst\u00e8re\" cette \"esp\u00e8ce majoritaire parmi les k plus proches voisins\"\n\nPrenons k = 3\n\n!\n\nLes 3 plus proches voisins sont signal\u00e9s ci-dessus avec des fl\u00e8ches : nous avons deux \"iris setosa\" (point vert) et un \"iris versicolor\" (point rouge). D'apr\u00e8s l'algorithme des \"k plus proches voisins\", notre \"iris myst\u00e8re\" appartient \u00e0 l'esp\u00e8ce \"setosa\".\n\nLe choix de la valeur de k est important, il faut souvent effectuer plusieurs essais.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "855ed736-eb8b-4c21-9231-4c7d99d59395": {"__data__": {"id_": "855ed736-eb8b-4c21-9231-4c7d99d59395", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32r.md", "file_name": "c32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ae0500d-cee7-46cb-93aa-c15dec7af085", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32r.md", "file_name": "c32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cd37efec2e447ae2f27cd6a025ae0b9087085701c9ed29b2ce3f1996194bb8fc", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir\n\n- l'algorithme des k plus proches voisins fait partie de la famille des algorithmes d'apprentissage automatique\n\n- vous devez conna\u00eetre le principe de fonctionnement de l'algorithme des k plus proches voisins", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 232, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "89d19608-bfc0-4cfc-a139-6deceb07f92d": {"__data__": {"id_": "89d19608-bfc0-4cfc-a139-6deceb07f92d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32r.md", "file_name": "c32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "162cf4aa-07ee-4338-93e9-8855f2f1e0b6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32r.md", "file_name": "c32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a0ca87791105d3a29d1aa563e81b9408fc8465420333d26593b422652ad19174", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir faire\n\nVous devez \u00eatre capable d'utiliser l'algorithme des k plus proches voisins sur un jeu de donn\u00e9es simple (utilisation des biblioth\u00e8ques Python Pandas et scikit-learn)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6259b141-ddff-42d4-af36-2775412afaed": {"__data__": {"id_": "6259b141-ddff-42d4-af36-2775412afaed", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c33c.md", "file_name": "c33c.md", "file_size": 2143, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "30ddd3c8-50c8-461a-b416-7ec749d17efc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c33c.md", "file_name": "c33c.md", "file_size": 2143, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "82ef35c4be5c2a3cd73025db647bb6745eb93856f001298ecc3ea41cde507e30", "class_name": "RelatedNodeInfo"}}, "text": "Nous allons nous int\u00e9resser aux interfaces Homme-Machine (IHM). Une IHM permet \u00e0 un utilisateur d'interagir avec une machine, la souris et le clavier sont des exemples d'IHM, mais il en existe bien d'autres (par exemple les \u00e9crans tactiles des smartphones). Par \"machine\", on entend bien \u00e9videmment \"ordinateur\", comme dans le cas du duo clavier-souris, mais pas seulement. En effet, les \"machines\" peuvent aussi \u00eatre des objets connect\u00e9s, des syst\u00e8mes embarqu\u00e9s ou encore des robots. Nous allons justement nous int\u00e9resser ici \u00e0 cette derni\u00e8re cat\u00e9gorie : les robots.\n\nQu'est-ce qu'un robot ?\n\nLe mot robot a \u00e9t\u00e9 utilis\u00e9 pour la premi\u00e8re fois par l\u2019\u00e9crivain tch\u00e9coslovaque Karel \u010capek dans sa pi\u00e8ce de th\u00e9\u00e2tre \"Rossum's Universal Robots\" en 1920, il a pour origine le mot russe \"rabota\" qui signifie travail, corv\u00e9e. La notion de robot a \u00e9t\u00e9 ensuite d\u00e9velopp\u00e9e par l'\u00e9crivain am\u00e9ricano-russe Isaac Asimov dans son recueil de nouvelles \"Les Robots\" (1950).\n\nPour simplifier \u00e0 l'extr\u00eame, un robot est constitu\u00e9 de 2 choses :\n\n- des actionneurs qui lui permettent d'effectuer des actions (se d\u00e9placer, saisir des choses, faire de la soudure...)\n- des capteurs qui lui permettent de \"connaitre\" son environnement (d\u00e9tecteurs d'obstacles, capteur de temp\u00e9rature...)\n\nAu niveau IHM, il est possible d'interagir avec le robot avec une simple t\u00e9l\u00e9commande : l'op\u00e9rateur donne des ordres au robot par l'interm\u00e9diaire de cette t\u00e9l\u00e9commande (\"aller \u00e0 gauche\", \"avancer de 3 m\u00e8tres\", \"prendre un objet avec une pince\"...), par exemple, les robots qui interviennent dans des milieux dangereux (centrale nucl\u00e9aire) sont t\u00e9l\u00e9command\u00e9s \u00e0 distance par des op\u00e9rateurs.\n\nrobot destin\u00e9 aux interventions dans les centrales nucl\u00e9aires :\n\n!\n\nop\u00e9rateur robot :\n\n!\n\nIl est aussi possible d'interagir avec un robot non pas directement, mais en le programmant afin de lui donner une certaine autonomie. La programmation consiste \u00e0 donner au robot la marche \u00e0 suivre en fonction des situations rencontr\u00e9es : \"si le capteur X d\u00e9tecte quelque chose alors arr\u00eate les moteurs\".", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be935835-83d5-4faa-a3f9-e15e5f934021": {"__data__": {"id_": "be935835-83d5-4faa-a3f9-e15e5f934021", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "600f9404-f04f-48ac-ab4f-74f6676ed18b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3dd29c9a6f7b50acc45384013c3d9a01253b6acd31cd24c014089ba11499997a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.1\n\nIl est possible d'afficher le contenu d'un dictionnaire dans la console.\n\nTapez la ligne suivante dans la partie \u00e9diteur de Spyder ou de basthon :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n```\napr\u00e8s avoir ex\u00e9cut\u00e9 le \"programme\" ci-dessus, tapez  *mes_fruits* dans la partie console. Vous devriez alors voir s'afficher le contenu (cl\u00e9s et valeurs) du dictionnaire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 399, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0372cffd-2839-4f01-942f-e1c61053d571": {"__data__": {"id_": "0372cffd-2839-4f01-942f-e1c61053d571", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e07f7fe2-f7b7-4675-ad58-235814565d79", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a8a4ce68cc24e3906599b728dcfd9a70f8fd2c3d553b5a35ef513c46592867b8", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.2\n\n```python\nd = {\"voiture\": 25, \"v\u00e9lo\": 55, \"train\": 20}\ntr = d['v\u00e9lo']\n```\nQuelle  est la valeur de la variable *tr* apr\u00e8s l'ex\u00e9cution du programme ci-dessus. V\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a28d584-adb8-4748-a87f-66406def848f": {"__data__": {"id_": "2a28d584-adb8-4748-a87f-66406def848f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59ab57d8-e008-466e-8ba3-38f018bf7a86", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bfd36c85963b7fdca1c290fddcd66e931a1379af5b5765a66e4b4492703505de", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.3\n\n```python\ntab = []\nd = {\"voiture\": 25, \"v\u00e9lo\": 55, \"train\": 20}\nfor t in d.values():\n\tif t < 40 :\n\t\ttab.append(t)\n```\nQuelle est la valeur de la variable *tab* apr\u00e8s l'ex\u00e9cution de  ce programme. V\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 258, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a86de2cf-2df1-4c8d-9912-192c7427e67c": {"__data__": {"id_": "a86de2cf-2df1-4c8d-9912-192c7427e67c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88268a5c-cf98-4502-83c2-980134b1c589", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "adcbe1dccda3a69141eb852832861f0e9fe4daacfe4ab8c04efd05977cfb9267", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.4\n\n```python\ntab = []\nd = {\"voiture\": 25, \"v\u00e9lo\": 55, \"train\": 20}\nfor v,t in d.items():\n\tif t < 40 :\n\t\ttab.append(v)\n```\nQuelle est la valeur de la variable *tab* apr\u00e8s l'ex\u00e9cution de  ce programme. V\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 259, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a45a066-af26-4f05-9592-486f245b7cf4": {"__data__": {"id_": "4a45a066-af26-4f05-9592-486f245b7cf4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "907f16ba-d3a5-4664-9dd8-849863c036e4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c7f5a36b7ed33cc919d33f9be101340eab5e30493e6af2fc0baaad939f6d490c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.5\n\n```python\ntab = [{'nom': 'toto', 'num': 2}, {'nom': 'titi', 'num': 5},  {'nom': 'tata', 'num': 4}]\ntab_nom =  []\n\nfor t in tab :\n\tif t['num'] > 3:\n\t\ttab_nom.append(t['nom'])\n```\nQuelle est la valeur de la variable *tab_nom* apr\u00e8s l'ex\u00e9cution de  ce programme. V\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2f751e4-9b6f-4159-873f-99e7098d57eb": {"__data__": {"id_": "f2f751e4-9b6f-4159-873f-99e7098d57eb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "18306ca2-6220-4f49-9395-d7ef2ca1600f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "339f44d77ebc37620de74a861108461ddf5f737db944cb367bcd15172e4beef8", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.6\n\nOn utilise un tableau contenant des dictionnaires afin de stocker les  notes des \u00e9l\u00e8ves Titi, Toto et Tutu :\n\n```python\n[{'nom':'Titi', 'note':12}, {'nom':'Tutu', 'note':11}, {'nom':'Toto', 'note':17}]\n```\n\nLa fonction *plusHaute* prend en param\u00e8tre un tableau contenant des dictionnaires (comme celui ci-dessus) et renvoie le nom de l'\u00e9l\u00e8ve ayant obtenu la meilleure note (on partira du principe que les \u00e9l\u00e8ves ont tous des notes diff\u00e9rentes).\n\n```python\ndef plusHaute(tab):\n\tnom = \"\"\n\tmax_note = ...\n\tfor t in ...:\n\t\tif t['note'] > ...:\n\t\t\tmax_note = t[...]\n\t\t\tnom = t[...]\n\treturn ...\n```\n\t\t\t\nCompl\u00e9tez la fonction *plusHaute*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 645, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1e046fe-2733-4584-b93d-68386d05ea14": {"__data__": {"id_": "c1e046fe-2733-4584-b93d-68386d05ea14", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6702176-62da-4e10-9f0d-6bf59b12c512", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cb2312aa9299a502bd09847b55fb1fb97347ad8d20f7bb853747ee4056168167", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.7\n\nOn utilise un tableau et des dictionnaires pour stocker des noms et des num\u00e9ros  de t\u00e9l\u00e9phone :\n\n```python\n[{'nom':'Titi', 'num':987675643}, {'nom':'Tutu', 'num':424224}, {'nom':'Toto', 'num':343235365}]\n```\n\nLa fonction *numTel* prend 2 param\u00e8tres :\n\n- un tableau de dictionnaires *tab_tel* contenant les noms  et les num\u00e9ros de t\u00e9l\u00e9phone (comme celui ci-dessus)\n- un nom *n*\n\nLa fonction *numTel* doit renvoyer le num\u00e9ro de t\u00e9l\u00e9phone de *n* si ce dernier existe. Dans le cas o\u00f9 *n* n'existe pas, la  fonction *numTel* doit renvoyer -1\n\n```python\ndef numTel(n, ...):\n\tfor ... in tab_tel:\n\t\tif ...  == t['nom']:\n\t\t\treturn ...\n\treturn ...\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d9d63fa-4a83-4847-8a81-5ae2d5b12174": {"__data__": {"id_": "1d9d63fa-4a83-4847-8a81-5ae2d5b12174", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a16b0e2-4422-40a8-8577-bfbd0af0de1f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c0cd57de6bdf1dd0429bacce2d591c3f5879b7b90fd43ddd26e3b085a56c3540", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.8\n\nOn utilise un tableau contenant des dictionnaires afin de stocker les  notes des \u00e9l\u00e8ves Titi, Toto et Tutu :\n\n```python\n[{'nom':'Titi', 'note':12}, {'nom':'Tutu', 'note':11}, {'nom':'Toto', 'note':17}]\n```\nLa fonction *moyenne* prend en param\u00e8tre un tableau contenant des dictionnaires (comme celui ci-dessus) et renvoie la moyenne des notes.\n\n\u00c9crivez la fonction *moyenne*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de36a2c5-3663-4151-a566-e58e3bd0586c": {"__data__": {"id_": "de36a2c5-3663-4151-a566-e58e3bd0586c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ce6d5db-219d-4d97-84dd-349fa00f832f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5c9c746034c9ececc5fe61bd04523173746cba030bc238253ae418136f2ecbf7", "class_name": "RelatedNodeInfo"}}, "text": "1)  pr\u00e9sentation des dictionnaires\n\nComme les listes, les dictionnaires permettent de \"stocker\" des donn\u00e9es. Chaque \u00e9l\u00e9ment d'un dictionnaire est compos\u00e9 de 2 parties, on parle de paires \"cl\u00e9/valeur\". \n\nVoici un exemple de dictionnaire :\n\n```python\nmon_dico = {\"nom\": \"Durand\", \"prenom\": \"Christophe\", \"date de naissance\": \"29/02/1981\"}\n```\n\nComme vous pouvez le constater, nous utilisons des accolades {} pour d\u00e9finir le d\u00e9but et la fin du dictionnaire (alors que nous utilisons des crochets [] pour les listes et les parenth\u00e8ses pour les tuples). Dans le dictionnaire ci-dessus, \"nom\", \"prenom\" et \"date de naissance\" sont des cl\u00e9s et \"Durand\", \"Christophe\" et \"29/02/1981\" sont des valeurs. La cl\u00e9 \"nom\" est associ\u00e9e \u00e0 la valeur \"Durand\", la cl\u00e9 \"prenom\" est associ\u00e9e \u00e0 la valeur \"Christophe\" et la cl\u00e9 \"date de naissance\" est associ\u00e9e \u00e0 la valeur \"29/02/1981\". Les cl\u00e9s sont des cha\u00eenes de caract\u00e8res ou des nombres. Les valeurs peuvent \u00eatre des cha\u00eenes de caract\u00e8res, des nombres, des bool\u00e9ens...\n\nPour cr\u00e9er un dictionnaire, il est aussi possible de proc\u00e9der comme suit :\n\n```python\nmon_dico = {}\nmon_dico[\"nom\"] = \"Durand\"\nmon_dico[\"prenom\"] = \"Christophe\"\nmon_dico[\"date de naissance\"] = \"29/02/1981\"\n```\n\n\u00c0 noter qu'il est aussi possible d'\u00e9crire :\n\n```python\nmon_dico = dict()\nmon_dico[\"nom\"] = \"Durand\"\nmon_dico[\"prenom\"] = \"Christophe\"\nmon_dico[\"date de naissance\"] = \"29/02/1981\"\n```\n\nIl est possible d'obtenir la valeur associ\u00e9e \u00e0 une cl\u00e9 :\n\n```python\nmon_dico = {\"nom\": \"Durand\", \"prenom\": \"Christophe\", \"date de naissance\": \"29/02/1981\"}\n\na = mon_dico['nom']\n```\n\nDans le programme ci-dessus, la variable *a* aura pour valeur *Durand*.\n\nIl est facile d'ajouter un \u00e9l\u00e9ment \u00e0 un dictionnaire (les dictionnaires sont mutables)\n\n```python\nmon_dico = {\"nom\": \"Durand\", \"prenom\": \"Christophe\", \"date de naissance\": \"29/02/1981\"}\n\nmon_dico['lieu de naissance'] = 'Contamine'\n```\nLa  deuxi\u00e8me ligne du programme ci-dessus  a permis  d'ajouter la cl\u00e9 *lieu de naissance* au dictionnaire *mon_dico*. Cette cl\u00e9 a pour valeur *Contamine*\n\nL'instruction \"del\" permet du supprimer une paire \"cl\u00e9/valeur\"\n\nSoit le dictionnaire suivant :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n```\nsi on ex\u00e9cute la ligne :\n\n```python\ndel mes_fruits[\"pomme\"]\n```\nle dictionnaire *mes_fruits* n'aura plus  que 2 cl\u00e9s : *poire* et *orange*\n\nIl est possible de modifier la valeur d'une cl\u00e9 :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\nmes_fruits[\"pomme\"] = mes_fruits[\"pomme\"] - 1\n```\n\nApr\u00e8s l'ex\u00e9cution de ce programme, la cl\u00e9 *pomme* aura pour valeur 3", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2577, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "863bb0d4-667e-4d7e-a547-2c3a3848054d": {"__data__": {"id_": "863bb0d4-667e-4d7e-a547-2c3a3848054d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7bfe8ae9-e211-44af-80de-7ab02ee7c0d2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e2df120cb974ed6ed6de060cab088cfd52f82fb89ddcf31b751873fa49669d77", "class_name": "RelatedNodeInfo"}}, "text": "2) parcourir un dictionnaire avec la boucle for", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec21d0f1-ca60-4b54-9848-ce97a3ace5cc": {"__data__": {"id_": "ec21d0f1-ca60-4b54-9848-ce97a3ace5cc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5cebd64b-4cc2-4071-bf47-65b0c645018c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "954c39984a3192cafe51bacfe8836c10683cf5b7fd63064d1a90a13db69c1eb3", "class_name": "RelatedNodeInfo"}}, "text": "a) parcourir les cl\u00e9s\n\nIl est possible de parcourir un dictionnaire \u00e0 l'aide d'une boucle for. Ce parcours peut se faire selon les cl\u00e9s ou les valeurs. Commen\u00e7ons par parcourir les cl\u00e9s \u00e0 l'aide de la m\u00e9thode *keys*\n\nLe programme suivant :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n\nfor fruit in mes_fruits.keys():\n\tprint(fruit)\n```\npermet d'afficher :\n\n```\npoire\npomme\norange\n```\n\nAttention : vous n'obtiendrez par forcement le m\u00eame ordre que ci-dessus (surtout si vous utilisez une version un peu ancienne de Python). En effet, les paires cl\u00e9/valeur ne sont pas ordonn\u00e9es dans un dictionnaire.\n\n\u00c0 noter que le *.keys()* n'est pas obligatoire pour parcourir les cl\u00e9s, on obtient le m\u00eame r\u00e9sultat avec simplement :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n\nfor fruit in mes_fruits:\n\tprint(fruit)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 842, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60120b3b-9ab7-4d28-a336-e9994e31616e": {"__data__": {"id_": "60120b3b-9ab7-4d28-a336-e9994e31616e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e3f3935-8365-4b57-9ccb-27992cff4aaf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4620038ab5f3ff0064ae0b41145907b6f826863fc4b8c164ab0a32a802e9030b", "class_name": "RelatedNodeInfo"}}, "text": "b) parcourir les valeurs\n\nLa m\u00e9thode *values* permet de parcourir le dictionnaire selon les valeurs :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\nfor qte in mes_fruits.values():\n  print(qte)\n```\n\nLe programme ci-dessus permet d'obtenir :\n\n```\n3\n4\n2\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b88ff740-8e35-49c4-a6ab-7373edde692c": {"__data__": {"id_": "b88ff740-8e35-49c4-a6ab-7373edde692c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9c68f7b-b6eb-4145-a77e-31ccc5bfa6b2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "edff298c3082f9b0d6254c80f704b3206106efd5a1418eb570164c5ce919797c", "class_name": "RelatedNodeInfo"}}, "text": "c)  parcourir les cl\u00e9s et les valeurs en m\u00eame temps\n\nIl est possible de parcourir un dictionnaire \u00e0 la fois sur les cl\u00e9s et les valeurs en utilisant la m\u00e9thode *items* :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n\nfor fruit, qte in mes_fruits.items():\n\tprint (f\"{fruit} : {qte}\")\n```\nl'ex\u00e9cution du programme ci-dessus nous permet d'avoir :\n```\npoire : 3\npomme : 4\norange : 2\n```\n\nVous avez sans doute remarqu\u00e9 l'utilisation de deux variables (*fruit* et *qte*) au niveau du *for...in*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebb5361c-bcf9-4938-a6ec-f1f9c59ac638": {"__data__": {"id_": "ebb5361c-bcf9-4938-a6ec-f1f9c59ac638", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3r.md", "file_name": "c3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed657fae-aa89-4b42-975e-c2845ede16b9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3r.md", "file_name": "c3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c562d83e4b0599a5c184a1c79949858ff04c0901ae86ff70b7ad61af8d7cf44b", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- un dictionnaire permet de \u201cstocker\u201d des donn\u00e9es\n\n- chaque \u00e9l\u00e9ment d'un dictionnaire est compos\u00e9 de 2 parties, on parle de paires \"cl\u00e9/valeur\" (exemple : *mon_dico = {\"nom\": \"Durand\", \"prenom\": \"Christophe\", \"date de naissance\": \"29/02/1981\"})*\n\n- pour afficher une \u201cvaleur\u201d particuli\u00e8re, on utilise la notation *mon\\_dico[nom\\_de\\_la\\_cl\u00e9 ]*\n\n- il est possible de parcourir l\u2019ensemble des cl\u00e9s d\u2019un dictionnaire \u00e0 l\u2019aide d\u2019une boucle\nfor en utilisant *keys*\n\n- il est possible de parcourir l\u2019ensemble des valeurs d\u2019un dictionnaire \u00e0 l\u2019aide d\u2019une boucle for en utilisant *values*\n\n- il est possible de parcourir l\u2019ensemble des cl\u00e9s et des valeurs (en m\u00eame temps) d\u2019un dictionnaire \u00e0 l\u2019aide d\u2019une boucle for en utilisant *items*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 752, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce48a269-70e4-4de1-8bcb-1b5374a9a8fd": {"__data__": {"id_": "ce48a269-70e4-4de1-8bcb-1b5374a9a8fd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3r.md", "file_name": "c3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c5a8c2a0-b1b7-4539-98cc-17bdaabd46bd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3r.md", "file_name": "c3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "376e454a9611d7ee3fa601aebc061d6d3373d78d173aff626ae014a421747892", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- construire un dictionnaire\n\n- utiliser la notation *mon\\_dico[nom\\_de\\_la\\_cl\u00e9 ]* afin d\u2019utiliser une valeur particuli\u00e8re\n\n- parcourir l\u2019ensemble des valeurs\n\n- parcourir l\u2019ensemble des cl\u00e9s\n\n- parcourir l\u2019ensemble des cl\u00e9s et des valeurs (en m\u00eame temps)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0866d920-5529-47fa-87c8-473a930cc87e": {"__data__": {"id_": "0866d920-5529-47fa-87c8-473a930cc87e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c776819b-9e49-4503-b554-113c77bd9ab4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "37b148fd25fe1431403cc4bedd94992af4e47bd4229896b090ae64b26888905b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.1\n\nConvertir 4210 en base 2", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 40, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb5e8362-7e30-4768-89a1-558e6820bb9c": {"__data__": {"id_": "bb5e8362-7e30-4768-89a1-558e6820bb9c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27aa0fba-91c0-4df3-8644-e273073492be", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "65e04d11d8060b369659560534e38af4a86f42f28f6ab2cb8c97bc0a97e6c98a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.2\n\nConvertir 100110012 en base 10", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 46, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8837437e-c66f-42d7-ae21-c690ab936c78": {"__data__": {"id_": "8837437e-c66f-42d7-ae21-c690ab936c78", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bffafe05-2d14-4755-8154-7f02a3aaf4d9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5e30281202242c5e85cc2497c460798ba0c15d550a1c7e603ee375d399bdfd2a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.3\n\nConvertir 1011110110012 en base 16", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 50, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0238d57-cc00-4209-9ce3-71eb6f28692f": {"__data__": {"id_": "d0238d57-cc00-4209-9ce3-71eb6f28692f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34cc731f-712a-482c-8a29-352b74730b81", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "220f2b5390ccd449e3a0b7ddbbb8a38157a920365a7289afeec80362c86ab65b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.4\n\nConvertir 1110112 en base 16", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 44, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aca1e2ba-2215-4f76-b87a-e1745fc38026": {"__data__": {"id_": "aca1e2ba-2215-4f76-b87a-e1745fc38026", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0df7abf-4493-494e-a3ac-ab29bdf0ace6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "31258aa402404bc862cf639ed2ac07be4eb18b3b96f3ebed1f674664b0bc954a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.5\n\nConvertir 1A3E16 en base 2", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 42, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "674c58dc-50e8-4950-a68f-649d96c3a2ba": {"__data__": {"id_": "674c58dc-50e8-4950-a68f-649d96c3a2ba", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f903d67c-55d1-4c0b-bf6d-10901f9e0447", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2466714432506854649397d76630ef7516c37d799d15d044439276fda84644e4", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.6\n\nConvertir 138710 en base 16", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 43, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46e0ad61-400f-4bb9-8bd9-490a67c03eed": {"__data__": {"id_": "46e0ad61-400f-4bb9-8bd9-490a67c03eed", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee9edae1-e5cc-43c5-9e7f-4c49225a5a44", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a3d2daea97d47fb859089814ad3a248a85dc2e845d1e63ce0ba34b633789a091", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.7\n\nConvertir 1B8716 en base 10", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 43, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ac5c6e4-4641-4abd-b310-0e4683019549": {"__data__": {"id_": "8ac5c6e4-4641-4abd-b310-0e4683019549", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03f2038e-7850-4f24-8f79-200d37e6a3ca", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "51a4fa769dcf18e3e1bd05b4c0f31de02963dfc7fe2fbed72f7be09ad971ed5d", "class_name": "RelatedNodeInfo"}}, "text": "1) Le syst\u00e8me d\u00e9cimal\nPour que vous compreniez le fonctionnement du binaire, et des syst\u00e8mes de comptage en g\u00e9n\u00e9ral (plus commun\u00e9ment appel\u00e9s bases), je vais commencer par faire une petite r\u00e9introduction \u00e0 la base 10 que vous connaissez tous.\n\nEn effet, tout le monde sait compter en base 10 (d\u00e9cimal). Mais comment \u00e7a marche ? Comment est construit notre syst\u00e8me ? Pour r\u00e9pondre \u00e0 cette question \u00e0 l'apparence simple, oubliez tout et reprenons depuis le d\u00e9but : comment avez-vous appris \u00e0 compter \u00e0 l'\u00e9cole ?\n\nVous penserez peut-\u00eatre que la base 10 vient du fait qu'on a 10 doigts, mais en tout cas deux choses sont s\u00fbres :\n\nIl y a 10 chiffres : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.\n\nAvec ces derniers, on peut compter jusqu'\u00e0 9.\n\nEt si l'on veut aller au-del\u00e0 de 9, il faut changer de rang.\n\nCela signifie que si le rang des unit\u00e9s est plein, il faut passer \u00e0 celui des dizaines, puis des centaines, milliers et j'en passe.\n\nPar exemple : \u00e0 19, le rang des unit\u00e9s est \"satur\u00e9\" (plein), car il contient le chiffre 9, et il n'y a pas (dans la base 10) de valeur plus \u00e9lev\u00e9e. Il faut donc incr\u00e9menter le rang p\u00e9riph\u00e9rique puis r\u00e9initialiser l'\u00e9tat de celui des unit\u00e9s. Ce qui signifie : j'ai 19, je ne peux pas mettre plus de 9 \u00e0 droite, donc j'ajoute 1 \u00e0 celui de gauche et je remets \u00e0 z\u00e9ro celui de droite.\n\n!\n\nComme je disais tout \u00e0 l'heure, le nombre entier va \u00eatre compos\u00e9 de rangs (unit\u00e9s, dizaines, centaines, etc). Chaque rang vaut le rang pr\u00e9c\u00e9dent multipli\u00e9 par l'indice de la base. Une centaine vaut dix dizaines, et une dizaine vaut 10 unit\u00e9s. Par exemple, dans l'image ci-dessus, on peut voir le nombre 18510 (ici, le 10 signifie qu'il s'agit d'un nombre, en base 10). Dans ce nombre, on peut voir trois rangs : centaines, dizaines et unit\u00e9s. Pour n'importe quelle base, la valeur d'un rang est \u00e9gale \u00e0 bn, o\u00f9 b est l'indice de la base (ici, 10) et n la position du rang. Ici, les unit\u00e9s ont la position 0, les dizaines la position 1 et les centaines la position 2. Nous pouvons donc \u00e9crire :\n\n185=1\u2217102+8\u2217101+5\u2217100\n\nCe que je viens de faire, c'est d\u00e9composer 185 en puissance de 10 (unit\u00e9s, dizaines, centaines, etc).\n\nUn nombre est \u00e9gal \u00e0 la somme des valeurs de ses rangs, et on peut d\u00e9composer n'importe quel nombre en puissance de sa base.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2251, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f240052-ef2a-4e9d-a108-09afacc661be": {"__data__": {"id_": "0f240052-ef2a-4e9d-a108-09afacc661be", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3d74aa4f-ce18-4c96-a00f-20c1df5834ef", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "abfedde1fc86f2781249b94237c9d1b74ad1fb6be3c760fc64abcb3ab21665cc", "class_name": "RelatedNodeInfo"}}, "text": "2) Le binaire", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 15, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "263b91b1-6c34-4682-b76a-0bda87688e3f": {"__data__": {"id_": "263b91b1-6c34-4682-b76a-0bda87688e3f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e2c2e690-cdea-403b-b80d-3dafebb58677", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "086c6110ef2056abc297b69bd41097b0192639acb467a6b7456166535857d786", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nLe binaire, c'est le syst\u00e8me de comptage des ordinateurs. Pourquoi le binaire et pas le d\u00e9cimal comme les humains ? Et bien c'est tr\u00e8s simple : un ordinateur est compos\u00e9 de circuits \u00e9lectroniques, et donc de composants \u00e9lectriques. Le plus simple pour compter est donc d'utiliser un syst\u00e8me en base 2 (le binaire) car on peut repr\u00e9senter ses deux valeurs possibles (0 et 1) par un signal \u00e9lectrique : 1, y'a du courant, 0, y'en a pas (c'est la version simple).\n\nJe vous ai parl\u00e9 ci-dessus de rangs. En binaire, c'est pareil \u00e0 la diff\u00e9rence qu'on utilise le terme bit, qui est la contraction de \"binary digit\", litt\u00e9ralement \"chiffre binaire\". Par exemple, le nombre 10011 occupe 5 bits. L\u00e0 o\u00f9 tout se complique, c'est que comme je l'ai expliqu\u00e9, chaque rang en binaire ne peut avoir que deux valeurs (binaire = base 2) diff\u00e9rentes : 0 ou 1. Pour la base 10, chaque rang repr\u00e9sente une puissance de 10, pour la base 2, chaque rang occupe une puissance de 2. Voici comment compter en binaire jusqu'\u00e0 10 :\n\n\n|Nombre en d\u00e9cimal|Nombre en binaire|Le pourquoi du comment|\n|--- |--- |--- |\n|0|0|Pour l'instant, \u00e7a va.|\n|1|1|L\u00e0 encore, c'est simple.|\n|2|10|Le premier rang ayant \u00e9t\u00e9 rempli, on passe au suivant !|\n|3|11|On re-remplit le rang 1.|\n|4|100|Le rang 2 est plein, le rang 1 aussi, qu'\u00e0 cela ne tienne, on passe au suivant.|\n|5|101|On continue en suivant la m\u00eame m\u00e9thode.|\n|6|110|On continue en suivant la m\u00eame m\u00e9thode.|\n|7|111|On continue en suivant la m\u00eame m\u00e9thode.|\n|8|1000|On commence le rang 4.|\n|9|1001|On continue comme tout \u00e0 l'heure.|\n|10|1010|On continue comme tout \u00e0 l'heure.|\n|...|...|...|\n\n- avec 1  bit on peut coder 2 valeurs (0 et 1)\n\n- avec  2 bits on peut coder 4 valeurs (00, 01, 10 et 11)\n\n- avec  3 bits on peut coder 8 valeurs (000, 001, 010, 011, 100, 101, 110, 111)\n\n- avec n bits on peut coder... **2n** valeurs (v\u00e9rifications : 21 = 2 ; 22 = 4 ; 23 = 8 ...)\n\nComme on a pu le voir, compter jusqu'\u00e0 10 ou 20 reste ais\u00e9, mais imaginons un instant que je vous demandasse d'\u00e9crire 185 en binaire ? Vous allez faire chaque rang, un par un ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2081, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f08ed43e-6b11-4caf-9b83-ba34ca632ffc": {"__data__": {"id_": "f08ed43e-6b11-4caf-9b83-ba34ca632ffc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ea97ccb-3943-4cd5-ae7e-610216037a99", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bcd7863ef536f19bb8972430e82210d83769b00e1002db3f18d77dea87e60324", "class_name": "RelatedNodeInfo"}}, "text": "b) Conversion d\u00e9cimale binaire\n\nPour l'instant, on n'a compt\u00e9 que jusqu'\u00e0 10. Mais pour les plus grands nombres, la m\u00e9thode pr\u00e9c\u00e9dente peut se r\u00e9v\u00e9ler fastidieuse\n\nLa m\u00e9thode :\n\nIl existe bien s\u00fbr plusieurs m\u00e9thodes de conversion, mais nous allons \u00e9tudier la plus simple et la plus rapide. Il s'agit de la m\u00e9thode euclidienne.\n\nCette m\u00e9thode, en plus d'\u00eatre facile \u00e0 utiliser en programmation (c'est un algorithme) est une des meilleures lorsqu'il s'agit de traiter les grands nombres.\n\nVoici la m\u00e9thode :\n\nOn prend le nombre en base 10 (forme normale).\nOn le divise par 2 et on note le reste de la division (soit 1 soit 0)\nOn refait la m\u00eame chose avec le quotient pr\u00e9c\u00e9dent, et on met de nouveau le reste de c\u00f4t\u00e9.\nOn r\u00e9it\u00e8re la division, jusqu'\u00e0 ce que le quotient soit 0.\nLe nombre en binaire appara\u00eet alors : il suffit de prendre tous les restes de bas en haut.\nEt l'exemple :\n\n185 = 2 x 92 + 1\n\n92 = 2 x 46 + 0\n\n46 = 2 x 23 + 0\n\n23 = 2 x 11 + 1\n\n11 = 2 x 5 + 1\n\n5 = 2 x 2 + 1\n\n2 = 2 x 1 + 0\n\n1 = 2 x 0 + 1\n\nAttention, il faut bien lire de bas en haut !\n\n185 en base 10 vaut donc 10111001 en binaire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1105, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d9481df-02bd-4983-85ae-4ba44b0f1b34": {"__data__": {"id_": "7d9481df-02bd-4983-85ae-4ba44b0f1b34", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ffcc6ffa-51ba-43c5-a387-fbbd0ffb1fbe", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "dfdd416340d049e3ad1e95e26cd838da63d9410741f7ef0dbf88a3ed47f038c4", "class_name": "RelatedNodeInfo"}}, "text": "c) Conversion binaire d\u00e9cimale\n\nJe vous rassure tout de suite : c'est plus simple dans ce sens-l\u00e0 que dans l'autre.\n\nPrenons un nombre au hasard, tel que 11010011. Il s'\u00e9tale sur 8 rangs, et comme dit pr\u00e9c\u00e9demment, chaque rang correspond \u00e0 une puissance de deux.\nLe premier rang (en partant de la droite) est le rang 0, le second est le 1, etc.\n\nPour convertir le tout en d\u00e9cimale, on proc\u00e8de de la mani\u00e8re suivante : on multiplie par 20 la valeur du rang 0, par 21 la valeur du rang 1, par 22 la valeur du rang 2, [...], par 210 la valeur du rang 10, etc.\n\nApr\u00e8s \u00e7a, il ne reste plus qu'\u00e0 remplacer les puissances de 2 par leurs valeurs et de calculer la somme : (Attention \u00e0 bien partir de la droite !)\n11010011binaire=1\u22171+1\u22172+0\u22174+0\u22178+1\u221716+0\u221732+1\u221764+1\u2217128=211d\u00e9cimal", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a19b887-3e63-4923-b89c-7a81a7315e06": {"__data__": {"id_": "5a19b887-3e63-4923-b89c-7a81a7315e06", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6351452c-d3c1-457f-b7f0-be1b616fa91d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0fed4560146a285fd4a19c67cb822e7339df019f497d24dbb6ef700858181a05", "class_name": "RelatedNodeInfo"}}, "text": "3) L'hexad\u00e9cimal", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 18, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d43d2065-b5a9-4919-80d0-71d84c0cce87": {"__data__": {"id_": "d43d2065-b5a9-4919-80d0-71d84c0cce87", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eaa0fea2-4ba3-4d4a-aa51-e177e5cd4bc1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "84365299f6f9c729c5f6ff5bee2794d13f5c657663b3e2b566f8984f34f6b6bc", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nLe binaire, c'est bien pratique : on peut coder des nombres uniquement avec des 0 et des 1. C'est bien pour les signaux \u00e9lectriques et tout le bazar, mais dans la vie de tous les jours c'est pas bien facile d'utilisation. On utilise couramment la base 10. Le probl\u00e8me c'est qu'en informatique, tout est bas\u00e9 sur le binaire, et \u00e9tant une base d'indice 2, c'est plus ais\u00e9 d'encoder les informations sur un nombre multiple de 2. On utilise donc souvent la base 16, appel\u00e9 syst\u00e8me hexad\u00e9cimal (hexa = 6, d\u00e9ci = 10, 16 = 6 + 10) car 16 est un multiple de 2, et qu'il permet de repr\u00e9senter 8 bits avec seulement 2 chiffres. \u00c7a para\u00eet simple, mais il y a un autre probl\u00e8me : en base 10, on utilise 10 chiffres. En base 2 (binaire) on utilise seulement 2 chiffres : 0 et 1. Mais du coup, en base 16, il faut 16 chiffres. OK, 0 1 2 3 4 5 6 7 8 9.. quoi apr\u00e8s ? On prend des lettres de l'alphabet.\n\nCe qui donne :\n\n0 1 2 3 4 5 6 7 8 9 A B C D E F \n\nOn peut \u00e9tablir une liste de correspondances entre la base 10 et la base 16 (voire m\u00eame la base 2) :\n\n|Binaire (base 2)|D\u00e9cimal (base 10)|Hexad\u00e9cimal (base 16)|\n|--- |--- |--- |\n|0|0|0|\n|1|1|1|\n|10|2|2|\n|11|3|3|\n|100|4|4|\n|101|5|5|\n|110|6|6|\n|111|7|7|\n|1000|8|8|\n|1001|9|9|\n|1010|10|A|\n|1011|11|B|\n|1100|12|C|\n|1101|13|D|\n|1110|14|E|\n|1111|15|F|\n\nComme vous pouvez le voir, le plus grand chiffre en hexad\u00e9cimal est F, et il correspond \u00e0 15 en d\u00e9cimal et 1111 en binaire : F est donc encod\u00e9 sur 4 bits (Fhex=1111bin, 4 chiffres binaires = 4 bits).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c4eac2a-ac7e-40a3-9d71-82ae88c80ce0": {"__data__": {"id_": "3c4eac2a-ac7e-40a3-9d71-82ae88c80ce0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd3d631e-8de1-424d-a789-2c1f0b19c52d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "979eff664032eb34f451360dd6b0ba9d33150ec6de94ecf5e1f14c8c9446b015", "class_name": "RelatedNodeInfo"}}, "text": "b) Convertir un nombre binaire en hexad\u00e9cimal (et vice versa)\n\nPour convertir un nombre binaire en base 16, on regroupe les bits 4 \u00e0 4, chaque groupe donnant un chiffre hexad\u00e9cimal. \u00c0 l'inverse, passer d'un nombre hexad\u00e9cimal \u00e0 sa repr\u00e9sentation binaire se fait en rempla\u00e7ant chaque chiffre pour son \u00e9quivalent sur 4 bits. Ainsi, 110110012=1101 10012=D916, tandis que 7F16=0111 11112=011111112. \n\nAttention, si le nombre binaire de d\u00e9part n'a pas un nombre de bits multiple de 4, il faut ajouter des z\u00e9ros en t\u00eate (ce qui ne change pas sa valeur) afin de pouvoir les regrouper 4 par 4.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 587, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d210708-c8b1-4131-84f9-cede89ae3e81": {"__data__": {"id_": "6d210708-c8b1-4131-84f9-cede89ae3e81", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c7d819a-132d-4967-a392-beb22920a5b8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "85ee19ec0d679f286ea7c9463423e168349a0736aec6c9fb16a0700ac5f447b7", "class_name": "RelatedNodeInfo"}}, "text": "c) Convertir un nombre d\u00e9cimal en hexad\u00e9cimal\n\nPour convertir un nombre d\u00e9cimal en hexad\u00e9cimal, la m\u00e9thode est similaire au binaire, sauf que cette fois on divise par 16.\n\n185 = 16 x 11 + 9\n\n11 = 16 x 0 + 11 (c'est \u00e0 dire B)\n\nAttention, il faut bien lire de bas en haut !\n\n185 en base 10 vaut donc B9 en hexad\u00e9cimal.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "89dba70e-bfdb-4160-85fd-42c38f9b0066": {"__data__": {"id_": "89dba70e-bfdb-4160-85fd-42c38f9b0066", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3eacbb55-915a-41c0-83d7-e6e92dfa5af5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d38fba85b9b7e5285e45977d8d2beae5593697c5ab1da48753562d4e2d2a48df", "class_name": "RelatedNodeInfo"}}, "text": "d) Convertir un nombre hexad\u00e9cimal en d\u00e9cimal\n\nLe principe est le m\u00eame que pour la conversation \"binaire en d\u00e9cimal\" sauf qu'au lieu d'utiliser des 2n on utilise des 16n :\n\nexemple :\n\n12B716 = 1\u00d7163 + 2\u00d7162 + 11\u00d7161 + 7\u00d7160=1\u00d74096 + 2\u00d7256 + 11\u00d716 + 7= 4096 + 512 + 176 + 7 = 4791\n\nVous avez remarqu\u00e9 que quand on trouve un B dans le nombre \u00e9crit en hexad\u00e9cimal, on le remplace par un 11 dans le calcul. C'est exactement la m\u00eame chose quand on trouve :\n\n- un A, on le remplace par un 10\n\n- un C, on le remplace par un 12\n\n- un D, on le remplace par un 13\n\n- un E, on le remplace par un 14\n\n- un F, on le remplace par un 15", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "094774b3-5e50-40c9-8296-43fdc4949a5a": {"__data__": {"id_": "094774b3-5e50-40c9-8296-43fdc4949a5a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4r.md", "file_name": "c4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe18119-448c-4ad8-9d75-927231c2e1fa", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4r.md", "file_name": "c4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ce97011e0db53d4c4c5cb774faf54ba09be0d4a4d734c1affcd3a7e86dd51172", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- en base 10 nous avons 10 symboles (chiffres) : 0, 1, 2, 3, 4, 5\u2026.9\n\n- en base 2 (binaire) nous avons 2 symboles (chiffres) : 0 et 1\n\n- en base 16 (hexad\u00e9cimal) nous avons 16 symboles : 0, 1, 2\u2026.8, 9, A, B, C, D, E, F\n\n- \u00e0 chaque fois que l\u2019on a utilis\u00e9 tous les symboles, on doit changer de rang\n\n- il serait judicieux de conna\u00eetre \u201cpar coeur\u201d (ou au moins \u00eatre capable de les retrouver\nrapidement) les nombres jusqu\u2019\u00e0 15 :\n\n| d\u00e9cimal | binaire | hexad\u00e9cimal |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n| 1 | 1 | 1 |\n| 2 | 10 | 2 |\n| 3 | 11 | 3 |\n| 4 | 100 | 4 |\n| 5 | 101 | 5 |\n| 6 | 110 | 6 |\n| 7 | 111 | 7 |\n| 8 | 1000 | 8 |\n| 9 | 1001 | 9 |\n| 10 | 1010 | A |\n| 11 | 1011 | B |\n| 12 | 1100 | C |\n| 13 | 1101 | D |\n| 14 | 1110 | E |\n| 15 | 1111 | F |\n\n- on peut coder 2n valeurs avec n bits", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a51c091-1556-4448-9eea-c04724d7f422": {"__data__": {"id_": "7a51c091-1556-4448-9eea-c04724d7f422", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4r.md", "file_name": "c4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d7cdbccc-2a2c-40c2-bd82-6eb24bcddb96", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4r.md", "file_name": "c4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "beac76dd7f5b03fb5225b1a0a898598649d16183a5391c764044bc9ef0f9a02a", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- convertir d\u00e9cimal vers binaire\n- convertir binaire vers d\u00e9cimal\n- convertir d\u00e9cimal vers hexad\u00e9cimal\n- convertir hexad\u00e9cimal vers d\u00e9cimal\n- convertir binaire vers hexad\u00e9cimal\n- convertir hexad\u00e9cimal vers binaire", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f6ace27-d7b2-4294-8fd8-cd8d45841f79": {"__data__": {"id_": "0f6ace27-d7b2-4294-8fd8-cd8d45841f79", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5a.md", "file_name": "c5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a46fa12-4cf5-47c5-bcd0-9ae40c48350e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5a.md", "file_name": "c5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3c60da2240ddb8c8ebf67e7a87eb78a40cefc036516d17dbcb04806047330171", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 5.1\nQuel est le code binaire du \"a\" minuscule en ASCII ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c156cd0-bde9-493b-beae-65074eed703b": {"__data__": {"id_": "7c156cd0-bde9-493b-beae-65074eed703b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5a.md", "file_name": "c5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bf4d0dac-4683-489a-8d07-8ae4f7f36d76", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5a.md", "file_name": "c5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d599cb5086f32c0b864d37c92a128bb1c6c9a5932eee68e9bde3c813a8a214a8", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 5.2\n\nQuel est le code binaire du \"b\" minuscule Unicode cod\u00e9 avec UTF-8 ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 83, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33c971b6-34c2-4df3-95be-7d20fe0cf1e6": {"__data__": {"id_": "33c971b6-34c2-4df3-95be-7d20fe0cf1e6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cc10864-ebc9-48c4-bde6-9a4d5cdaf4fc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "abbccab1ae2cc8ddbc8c6ee462acfe2daac01043c33f82e3cc419530c554c432", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous savons qu'un ordinateur est uniquement capable de traiter des donn\u00e9es binaires, comment sont donc cod\u00e9s les textes dans un ordinateur ? Ou plus pr\u00e9cis\u00e9ment, comment sont cod\u00e9s les caract\u00e8res dans un ordinateur ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 235, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b89f0893-3684-4ba0-bf4a-eba469ddf954": {"__data__": {"id_": "b89f0893-3684-4ba0-bf4a-eba469ddf954", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45de2243-3212-4996-b224-e143d685c5fe", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "8fca67dacade5f208b51751381e9550de028ea5c876e8653a23a0a5785cba35d", "class_name": "RelatedNodeInfo"}}, "text": "2) ASCII\n\nAvant 1960 de nombreux syst\u00e8mes de codage de caract\u00e8res existaient, ils \u00e9taient souvent incompatibles entre eux. En 1960, l'organisation internationale de normalisation (ISO) d\u00e9cide de mettre un peu d'ordre dans ce bazar en cr\u00e9ant la norme ASCII (American Standard Code for Information Interchange). \u00c0 chaque caract\u00e8re est associ\u00e9 un nombre binaire sur 8 bits (1 octet). En faite, seuls 7 bits sont utilis\u00e9s pour coder un caract\u00e8re, le 8e bit n'est pas utilis\u00e9 pour le codage des caract\u00e8res. Avec 7 bits il est possible de coder jusqu'\u00e0 128 caract\u00e8res ce qui est largement suffisant pour un texte \u00e9crit en langue anglaise (pas d'accents et autres lettres particuli\u00e8res).\n\n!\n\nComme vous pouvez le constater dans le tableau ci-dessus, au \"A\" majuscule correspond le code binaire 10000012 (6510 ou 4116)\n\nCertains codes ne correspondent pas \u00e0 des caract\u00e8res (de 0 \u00e0 3210), nous n'aborderons pas ce sujet ici.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 917, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "869ab5b0-d076-40de-a9ba-b6de5d44014a": {"__data__": {"id_": "869ab5b0-d076-40de-a9ba-b6de5d44014a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40bad771-a053-4995-b0e7-b94c9578b219", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "982b0fb7518e924833d222daa74d5d71387dc2f3e20add777d9f7238c90253a3", "class_name": "RelatedNodeInfo"}}, "text": "3) ISO-8859-1\n\nLa norme ASCII convient bien \u00e0 la langue anglaise, mais pose des probl\u00e8mes dans d'autres langues, par exemple le fran\u00e7ais. En effet l'ASCII ne pr\u00e9voit pas d'encoder les lettres accentu\u00e9es. C'est pour r\u00e9pondre \u00e0 ce probl\u00e8me qu'est n\u00e9e la norme ISO-8859-1. Cette norme reprend les m\u00eames principes que l'ASCII, mais les nombres binaires associ\u00e9s \u00e0 chaque caract\u00e8re sont cod\u00e9s sur 8 bits, ce qui permet d'encoder jusqu'\u00e0 256 caract\u00e8res. Cette norme va \u00eatre principalement utilis\u00e9e dans les pays europ\u00e9ens puisqu'elle permet d'encoder les caract\u00e8res utilis\u00e9s dans les principales langues europ\u00e9ennes (la norme ISO-8859-1 est aussi appel\u00e9e \"latin1\" car elle permet d'encoder les caract\u00e8res de l'alphabet dit \"latin\")\n\nProbl\u00e8me, il existe beaucoup d'autres langues dans le monde qui n'utilisent pas l'alphabet dit \"latin\", par exemple le chinois ou le japonais ! D'autres normes ont donc d\u00fb voir le jour, par exemple la norme \"GB2312\" pour le chinois simplifi\u00e9 ou encore la norme \"JIS_X_0208\" pour le japonais.\n\nCette multiplication des normes a tr\u00e8s rapidement pos\u00e9 probl\u00e8me. Imaginons un fran\u00e7ais qui parle le japonais. Son traitement de texte est configur\u00e9 pour reconnaitre les caract\u00e8res de l'alphabet \"latin\" (norme ISO-8859-1). Un ami japonais lui envoie un fichier texte \u00e9crit en japonais. Le fran\u00e7ais devra modifier la configuration de son traitement afin que ce dernier puisse afficher correctement l'alphabet japonais. S'il n'effectue pas ce changement de configuration, il verra s'afficher des caract\u00e8res \u00e9sot\u00e9riques.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a2db493-e8ad-485c-a5bc-5bd5ef67c23f": {"__data__": {"id_": "0a2db493-e8ad-485c-a5bc-5bd5ef67c23f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4299ff68-f8ca-446e-90c1-e65c3bacb89e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "149e57d62ecae192908560a0de5e94932e401201a03eb20187cfea5009bc55a8", "class_name": "RelatedNodeInfo"}}, "text": "4) Unicode\n\nPour \u00e9viter ce genre de probl\u00e8me, en 1991 une nouvelle norme a vu le jour : Unicode\n\nUnicode a pour ambition de rassembler tous les caract\u00e8res existant afin qu'une personne utilisant Unicode puisse, sans changer la configuration de son traitement de texte, \u00e0 la fois lire des textes en fran\u00e7ais ou en japonais\n\nUnicode est uniquement une table qui regroupe tous les caract\u00e8res existant au monde, il ne s'occupe pas de la fa\u00e7on dont les caract\u00e8res sont cod\u00e9s dans la machine. Unicode accepte plusieurs syst\u00e8mes de codage : UTF-8, UTF-16, UTF-32. Le plus utilis\u00e9, notamment sur le Web, est UTF-8.\n\nPour encoder les caract\u00e8res Unicode, UTF-8 utilise un nombre variable d'octets : les caract\u00e8res \"classiques\" (les plus couramment utilis\u00e9s) sont cod\u00e9s sur un octet, alors que des caract\u00e8res \"moins classiques\" sont cod\u00e9s sur un nombre d'octets plus important (jusqu'\u00e0 4 octets). Un des avantages d'UTF-8 c'est qu'il est totalement compatible avec la norme ASCII : Les caract\u00e8res Unicode cod\u00e9s avec UTF-8 ont exactement le m\u00eame code que les m\u00eames caract\u00e8res en ASCII.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1075, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fda2d545-5f3a-446a-90fd-6666b1864ea2": {"__data__": {"id_": "fda2d545-5f3a-446a-90fd-6666b1864ea2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4696a990-f116-4a81-a313-b251dcc6fc0a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3daae0f14f64cccd30c69498f408203546c3bf2a2dfb2ddb8958216ba791c5b7", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fc71def-5c35-4e8e-b8a3-179d165eaca4": {"__data__": {"id_": "4fc71def-5c35-4e8e-b8a3-179d165eaca4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9abb271-3ade-4003-9c88-406974f19d36", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "93e6c4390c324cd6160643a47b600455537b99e98a013cb685e3b417173d6293", "class_name": "RelatedNodeInfo"}}, "text": "Norme ASCII\n\nLa norme ASCII (American Standard Code for Information Interchange) permet de repr\u00e9senter les caract\u00e8res. Chaque caract\u00e8re est associ\u00e9 \u00e0 un nombre cod\u00e9 sur 8 bits (7 bits pour coder le caract\u00e8re + 1 bit dit de parit\u00e9). Avec 7 bits il est donc possible de coder\n128 caract\u00e8res.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a6ad1c1-dac9-4691-9916-2e028c663128": {"__data__": {"id_": "9a6ad1c1-dac9-4691-9916-2e028c663128", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9dd70dc-5201-40c4-9c88-9570ee323611", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b6cea3bf178dc041a27ca7cc23dfb53f8b97c78cd3fe3379dd400fa1c10937ea", "class_name": "RelatedNodeInfo"}}, "text": "Norme ISO-8859-1\n\nLa norme ASCII convient bien \u00e0 la langue anglaise, mais pose des probl\u00e8mes dans d'autres langues, par exemple le fran\u00e7ais. En effet l'ASCII ne pr\u00e9voit pas d'encoder les lettres accentu\u00e9es. C'est pour r\u00e9pondre \u00e0 ce probl\u00e8me qu'est n\u00e9e la norme ISO-8859-1. Cette\nnorme reprend les m\u00eames principes que l'ASCII, mais les nombres binaires associ\u00e9s \u00e0 chaque caract\u00e8re sont cod\u00e9s sur 8 bits, ce qui permet d'encoder jusqu'\u00e0 256 caract\u00e8res Cette norme va \u00eatre principalement utilis\u00e9e dans les pays europ\u00e9ens puisqu'elle permet\nd'encoder les caract\u00e8res utilis\u00e9s dans les principales langues europ\u00e9ennes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 614, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3f22065-4b3f-4c86-a1b0-e7d84b6af736": {"__data__": {"id_": "d3f22065-4b3f-4c86-a1b0-e7d84b6af736", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6205e53a-d619-4229-9e6e-48deab07a1a1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f8ae24b8bef0b6c97633266bfcccecb5d9ff5107aaacf488a1f788657c68e48b", "class_name": "RelatedNodeInfo"}}, "text": "Unicode\n\nLe but de la norme Unicode est de pouvoir encoder tous les caract\u00e8res que l\u2019on peut rencontrer dans le monde. Unicode est uniquement une table qui regroupe tous les\ncaract\u00e8res existant au monde, il ne s'occupe pas de la fa\u00e7on dont les caract\u00e8res sont cod\u00e9s dans la machine. Unicode accepte plusieurs syst\u00e8mes de codage : UTF-8, UTF-16, UTF-32. Le plus utilis\u00e9, notamment sur le Web, est UTF-8. Pour encoder les caract\u00e8res Unicode,\nUTF-8 utilise un nombre variable d'octets : les caract\u00e8res \"classiques\" (les plus couramment\nutilis\u00e9s) sont cod\u00e9s sur un octet, alors que des caract\u00e8res \"moins classiques\" sont cod\u00e9s sur\nun nombre d'octets plus important (jusqu'\u00e0 4 octets). Il y a compatibilit\u00e9 entre ASCII et UTF-8 puisque les caract\u00e8res Unicode cod\u00e9s avec UTF-8 ont exactement le m\u00eame code que les m\u00eames caract\u00e8res en ASCII.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1515418-2880-41a5-815c-19abae417d44": {"__data__": {"id_": "d1515418-2880-41a5-815c-19abae417d44", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9588a929-e332-4384-be44-202f0c450e12", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b5a7fba237a9905d62142881a25ecd5902139ef8fa50f1f3378f12aff35857b8", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nConvertir un fichier texte dans diff\u00e9rents formats d\u2019encodage.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 92, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd32794b-6dfd-4a00-936d-b0ec45751848": {"__data__": {"id_": "bd32794b-6dfd-4a00-936d-b0ec45751848", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8630e0b8-a2c0-48d9-aa0b-baafd59c78f5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bcaebecda199cd0995fa0575953598ac3c2ba9ff1c7aa3b743089171fdb34591", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 6.1\n\nEn utilisant le compl\u00e9ment \u00e0 2, repr\u00e9sentez -15 en binaire (repr\u00e9sentation sur 8 bits)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a084b5c-2f6f-4e98-b25d-b6b4dfa4b2a5": {"__data__": {"id_": "0a084b5c-2f6f-4e98-b25d-b6b4dfa4b2a5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5940cf8b-2c98-4504-96a5-91968308b526", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "db35013d506c3c4f78ae0cdada4eb7cfb2cecde7e51f9a1ff6e8ca890da47a13", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 6.2\n\nEn utilisant le compl\u00e9ment \u00e0 2, repr\u00e9sentez sur 8 bits l'entier 4 puis repr\u00e9sentez, toujours sur 8 bits, l'entier -5. Additionnez ces 2 nombres (en utilisant les repr\u00e9sentations binaires bien \u00e9videmment), v\u00e9rifiez que vous obtenez bien -1.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 255, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b9b006b-f4f9-40ee-9828-3dd16de8e7d4": {"__data__": {"id_": "2b9b006b-f4f9-40ee-9828-3dd16de8e7d4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d644ef8f-4871-43b8-a94b-882e34a4f410", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a1aa1dd02d37812d831f85e535d1d9affbce91b33c28b9cfbf7ac6ae60f8016d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 6.3\n\nQuel est l'entier relatif cod\u00e9 en compl\u00e9ment \u00e0 2 sur un octet par le code 11011010 ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 100, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b4064ed-e32c-4d2e-9508-86e0029c2ee6": {"__data__": {"id_": "6b4064ed-e32c-4d2e-9508-86e0029c2ee6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bae923f-25d3-4f7d-b135-28783187467e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "fc2290783f5a746b2e096c40ec26384ef6f1138b020218fa03ceb327e66585ab", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 6.4\n\nQuelles sont les bornes inf\u00e9rieure et sup\u00e9rieure d'un entier relatif cod\u00e9 sur 16 bits ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 103, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e788a4af-90b0-49f8-9cae-8e43866b0e1b": {"__data__": {"id_": "e788a4af-90b0-49f8-9cae-8e43866b0e1b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6c.md", "file_name": "c6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "001b33d7-9e20-4eed-ad4a-dc353380cd62", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6c.md", "file_name": "c6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b634815bf4c43c83f67cbb834e18f248434bd074c7c82cab29aecb110bef1972", "class_name": "RelatedNodeInfo"}}, "text": "1) une mauvaise id\u00e9e pour commencer...\n\nNous avons d\u00e9j\u00e0 vu comment repr\u00e9senter les entiers positifs, nous allons maintenant nous int\u00e9resser aux entiers relatifs.\n\nLa premi\u00e8re id\u00e9e qui pourrait nous venir \u00e0 l'esprit est, sur un nombre comportant n bits, d'utiliser 1 bit pour repr\u00e9senter le signe et n-1 bit pour repr\u00e9senter la valeur absolue du nombre \u00e0 repr\u00e9senter. Le bit de signe \u00e9tant le bit dit \"de poids fort\" (c'est \u00e0 dire le bit le plus \u00e0 gauche), ce bit de poids fort serait \u00e0 0 dans le cas d'un nombre positif et \u00e0 1 dans le cas d'un nombre n\u00e9gatif.\n\nun exemple : on repr\u00e9sente l'entier 5 sur 8 bits par 00000101, -5 serait donc repr\u00e9sent\u00e9 par 10000101\n\nIl existe un \u00e9norme inconv\u00e9nient \u00e0 cette m\u00e9thode : l'existence de deux z\u00e9ros, un z\u00e9ro positif (00000000) et un z\u00e9ro n\u00e9gatif (10000000) !\n\nCe probl\u00e8me est, pour plusieurs raisons qui ne seront pas d\u00e9velopp\u00e9es ici, r\u00e9dhibitoire. Nous allons donc devoir utiliser une autre m\u00e9thode : le compl\u00e9ment \u00e0 deux", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 966, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5379edc6-1b08-46d0-8510-8d1f63c990a9": {"__data__": {"id_": "5379edc6-1b08-46d0-8510-8d1f63c990a9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6c.md", "file_name": "c6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ed99b48-f05d-4577-a374-b6664329f7c5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6c.md", "file_name": "c6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "cd1d57a1caae9ca5969c3a1b601fcb2e703e75c829d0c893490c3c407bde05b3", "class_name": "RelatedNodeInfo"}}, "text": "2) le compl\u00e9ment \u00e0 deux\n\nAvant de repr\u00e9senter un entier relatif, il est n\u00e9cessaire de d\u00e9finir le nombre de bits qui seront utilis\u00e9s pour cette repr\u00e9sentation (souvent 8, 16 , 32 ou 64 bits)\n\nPrenons tout de suite un exemple : d\u00e9terminons la repr\u00e9sentation de -12 sur 8 bits\n\n- Commen\u00e7ons par repr\u00e9senter 12 sur 8 bits (sachant que pour repr\u00e9senter 12 en binaire seuls 4 bits sont n\u00e9cessaire, les 4 bits les plus \u00e0 gauche seront \u00e0 0) : 00001100\n\n- Inversons tous les bits (les bits \u00e0 1 passent \u00e0 0 et vice versa) : 11110011\n\n- Ajoutons 1 au nombre obtenu \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente :\n\n!\n\nles retenues sont not\u00e9es en rouge\n\nLa repr\u00e9sentation de -12 sur 8 bits est donc : 11110100\n\nComment peut-on \u00eatre s\u00fbr que 11110100 est bien la repr\u00e9sentation de -12 ?\n\nNous pouvons affirmer sans trop de risque de nous tromper que 12 + (-12) = 0, v\u00e9rifions que cela est vrai pour notre repr\u00e9sentation sur 8 bits.\n\n!\n\nDans l'op\u00e9ration ci-dessus, nous avons un 1 pour le 9e bit, mais comme notre repr\u00e9sentation se limite \u00e0 8 bits, il nous reste bien 00000000.\n\nIl faut noter qu'il est facile de d\u00e9terminer si une repr\u00e9sentation correspond \u00e0 un entier positif ou un entier n\u00e9gatif : si le bit de poids fort est \u00e0 1, nous avons affaire \u00e0 un entier n\u00e9gatif, si le bit de poids fort est \u00e0 0, nous avons affaire \u00e0 un entier positif.\n\nLa plus petite valeur qu'il est possible de coder sur 8 bits est 10000000 (soit -128). La plus grande valeur est 01111111 (soit 127). \n\nPlus g\u00e9n\u00e9ralement, nous pouvons dire que pour une repr\u00e9sentation sur n bits, il sera possible de coder des valeurs comprises entre -2n-1 et +2n-1 - 1", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1593, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91b25d45-ba1f-4a85-8296-9190d5b51cc0": {"__data__": {"id_": "91b25d45-ba1f-4a85-8296-9190d5b51cc0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6r.md", "file_name": "c6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f5aacbf-1d67-4bc9-9a70-eba124fd5f7e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6r.md", "file_name": "c6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "00e6f0b8731d3a3df0b45f84da8e372ad78f1caed9a16058c1e20e8fa4ae07f7", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- conna\u00eetre le principe du compl\u00e9ment \u00e0 2 (voir cours)\n\n- savoir que pour une repr\u00e9sentation sur n bits, il sera possible de coder des valeurs comprises entre -2\nn-1 et +2n-1- 1", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 201, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76a5b0c9-4cd3-4d66-8914-a9fc3262f913": {"__data__": {"id_": "76a5b0c9-4cd3-4d66-8914-a9fc3262f913", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6r.md", "file_name": "c6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "614ff83f-a982-4f72-a386-9c9ead55af5e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6r.md", "file_name": "c6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "af4dc91ef741e9e0fdd2622359e849bc9a6b1e88e6e92ebe6b7205b5a5c7a50f", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nvous devez savoir repr\u00e9senter un entier (positif ou n\u00e9gatif) en utilisant le compl\u00e9ment \u00e0 2 sur\nn bits (repr\u00e9sentation binaire -> repr\u00e9sentation d\u00e9cimale et repr\u00e9sentation d\u00e9cimale ->\nrepr\u00e9sentation binaire)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26efddfd-bd6b-4a55-9eb4-cc1c1280c887": {"__data__": {"id_": "26efddfd-bd6b-4a55-9eb4-cc1c1280c887", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "799b2f64-9a55-404b-91c1-2e04af562191", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d73cfb109f4303683acd41b8e400048ec74b30c551221021315c7187447d9187", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.1\n\nTrouvez la repr\u00e9sentation binaire de 4,12510", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3aceeb9-a865-42c8-8201-4e8b4dbabda3": {"__data__": {"id_": "a3aceeb9-a865-42c8-8201-4e8b4dbabda3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1eeebb7e-f279-4935-81c9-85f9bb9350f0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "30131b8ea2a48547c53bd141aa45236874aecf6f5d8fdae71ec8cf9e9a99b640", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.2\n\nTrouvez la repr\u00e9sentation binaire de 0,2510", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7560f20a-3f15-4734-af15-a0f983078dda": {"__data__": {"id_": "7560f20a-3f15-4734-af15-a0f983078dda", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1f146f4-d1e1-4fe6-8032-f26a927f5022", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1777945b7be702faa92ef8610b973b51f7010062a0241aef68a8bf5aff23e880", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.3\n\nTrouvez la repr\u00e9sentation binaire d'un tiers (1/3)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11bc04a5-00cc-45d5-9719-8a386bd78ff0": {"__data__": {"id_": "11bc04a5-00cc-45d5-9719-8a386bd78ff0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "782127d0-4db3-4a41-87a1-cfede8befb5c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "36d6dead5a7c790a6393e35dbc81a6dbbf7fced9bda76147f69508597b8766c6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.4\n\nTrouvez la repr\u00e9sentation d\u00e9cimale de 100,0012", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4b9dd5d-199c-4e95-b27a-3e94ed310e6d": {"__data__": {"id_": "a4b9dd5d-199c-4e95-b27a-3e94ed310e6d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d85e239b-4eff-4603-b1bc-8eb518c6e1b8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2ed6cf39a332964a859a5c7c3bdf06408d19d10db2b98c8094b71fff29deb343", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.5\n\nTrouvez la repr\u00e9sentation d\u00e9cimale de 1,1012", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2ef5419-b049-4e13-bae1-495cf655b145": {"__data__": {"id_": "e2ef5419-b049-4e13-bae1-495cf655b145", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0731d3f1-c084-44aa-ad83-37f1e42accbb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cf62e73e95a1da27ac5a2aa24c6452a48a17814503ed35461c6a224359b14b22", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.6\n\nTrouvez la repr\u00e9sentation binaire de 0,110", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82fd6513-3f49-450a-91e7-86e3585f316f": {"__data__": {"id_": "82fd6513-3f49-450a-91e7-86e3585f316f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bf062df-3912-4ccc-99d4-558080e21c98", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "712946efb17d999e8f8427d4fd1a6f94f2adbc0c7c7d08cfd75428e4d4c79122", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.7\n\n\u00c0 l'aide de Spyder, tapez dans la console : 0.1 + 0.2\nQuel r\u00e9sultat obtenez-vous  ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 99, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6c37924-4090-4a8e-bab5-f5634536ed0d": {"__data__": {"id_": "a6c37924-4090-4a8e-bab5-f5634536ed0d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4ee03d3e-4a43-4f83-b6cc-2eedfaa44153", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a162876833a60ae0fd50bc801e4c25d92ddaf0d715c053162b3d918e5b6e0264", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous avons vu comment sont repr\u00e9sent\u00e9s les entiers relatifs au sein d'un ordinateur. Nous allons maintenant voir comment sont repr\u00e9sent\u00e9s les nombres r\u00e9els, appel\u00e9s ici nombres flottants.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ebf8fc4-4848-4ce1-875c-394e05c3c0db": {"__data__": {"id_": "9ebf8fc4-4848-4ce1-875c-394e05c3c0db", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c2451bf-3197-46fc-bc8d-20b9a3123da8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a850c9badcfc6a398a029408e40f402009bda7dc87d577e97fb3cc0a7e1b5d7f", "class_name": "RelatedNodeInfo"}}, "text": "2) repr\u00e9sentation de la partie d\u00e9cimale d'un nombre", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 53, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a3651dd-cd4d-4909-b19c-5b2078ba54f5": {"__data__": {"id_": "4a3651dd-cd4d-4909-b19c-5b2078ba54f5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980feda3-84dd-4f09-8a91-ea033f104e82", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "184d7388dc9b141623e3a064d4630446e6863e106b74ce24cf2ba8e6443ff651", "class_name": "RelatedNodeInfo"}}, "text": "a) base 10 vers base 2\n\nPartons tout de suite sur un exemple : comment repr\u00e9senter 5,1875 en binaire ?\n\nIl nous faut d\u00e9j\u00e0 repr\u00e9senter 5, \u00e7a, pas de probl\u00e8me : 101\n\nComment repr\u00e9senter le \",1875\" ?\n\n- on multiplie 0,1875 par 2 : 0,1875 x 2 = 0,375. On obtient 0,375 que l'on \u00e9crira 0 + 0,375\n\n- on multiplie 0,375 par 2 : 0,375 x 2 = 0,75. On obtient 0,75 que l'on \u00e9crira 0 + 0,75\non multiplie 0,75 par 2 : 0,75 x 2 = 1,5. On obtient 1,5 que l'on \u00e9crira 1 + 0,5 (quand le r\u00e9sultat de la multiplication par 2 est sup\u00e9rieur \u00e0 1, on garde uniquement la partie d\u00e9cimale)\n\n- on multiplie 0,5 par 2 : 0,5 x 2 = 1,0. On obtient 1,0 que l'on \u00e9crira 1 + 0,0 (la partie d\u00e9cimale est \u00e0 0, on arr\u00eate le processus)\n\nOn obtient une succession de \"a + 0,b\" (\"0 + 0,375\", \"0 + 0,75\", \"1 + 0,5\" et \"1 + 0,0\"). Il suffit maintenant de \"prendre\" tous les \"a\" (dans l'ordre de leur obtention) afin d'obtenir la partie d\u00e9cimale de notre nombre : 0011\n\nNous avons 101,00112 qui est la repr\u00e9sentation binaire de 5,187510", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 998, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "132a679e-2651-4bae-9e28-8e24919cc790": {"__data__": {"id_": "132a679e-2651-4bae-9e28-8e24919cc790", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c02826b9-ec3a-47c1-84a9-06e320a9ab34", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c150df652848bcb5cc03dda61afaab377e5af3dfb8c0c76deba767068d4fc0ab", "class_name": "RelatedNodeInfo"}}, "text": "b) base 2 vers base 10\n\nIl est possible de retrouver une repr\u00e9sentation d\u00e9cimale en base 10 \u00e0 partir d'une repr\u00e9sentation en binaire.\n\nPartons de 100,01012\n\nPas de probl\u00e8me pour la partie enti\u00e8re, nous obtenons \"4\". Pour la partie d\u00e9cimale nous devons \u00e9crire : 0 x 2-1 + 1 x 2-2 + 0 x 2-3 + 1 x 2-4 = 0,3125. Nous avons donc 4,312510", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 335, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f6fc643-74da-49f9-b7da-d5fe56e106c2": {"__data__": {"id_": "4f6fc643-74da-49f9-b7da-d5fe56e106c2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1764569-670c-41eb-bdfd-2a422fb2c496", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ed6f827aa2c0520766177150c560d6f6427260e89254ec26924c45d27e408805", "class_name": "RelatedNodeInfo"}}, "text": "c) le cas  particulier de 0,1<sub>10</sub>\n\nInt\u00e9ressons-nous \u00e0 la conversion de 0,110.\n\n0,1 x 2 = 0,2 = 0 + 0,2\n\n0,2 x 2 = 0,4 = 0 + 0,4\n\n0,4 x 2 = 0,8 = 0 + 0,8\n\n0,8 x 2 = 1,6 = 1 + 0,6\n\n0,6 x 2 = 1,2 =  1 + 0,2\n\n0,2 x 2 = 0,4 = 0 + 0,4\n\nNous constatons que la 6e ligne  est identique \u00e0 la 2e ligne. Le processus va donc se poursuivre sans jamais  s'arr\u00eater, car apr\u00e8s le 0,2 x 2 = 0,4 = 0 + 0,4 nous allons retrouver :\n\n0,4 x 2 = 0,8 = 0 + 0,8\n\n0,8 x 2 = 1,6 = 1 + 0,6\n\n0,6 x 2 = 1,2 =  1 + 0,2\n\net nous retombons donc sur 0,2 x 2 = 0,4 = 0 + 0,4...\n\nle processus de \"conversion\" ne s'arr\u00eate pas, nous obtenons : 0,0001100110011..., le sch\u00e9ma \"0011\" se r\u00e9p\u00e8te \u00e0 \"l'infini\". Cette caract\u00e9ristique est tr\u00e8s importante, nous aurons l'occasion de revenir l\u00e0-dessus plus tard.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0de2bed4-d4d3-4109-a36a-ad2e8d338701": {"__data__": {"id_": "0de2bed4-d4d3-4109-a36a-ad2e8d338701", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08acfa62-385f-4687-833c-59f9b917a566", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b357f2f716ce85b1d4060c7ccbcea2d239f55ed7a83e976e6ef56d46c4da55af", "class_name": "RelatedNodeInfo"}}, "text": "d) \u00e9crire un nombre binaire \u00e0 l'aide de puissance de 2\n\nEn base dix, il est possible d'\u00e9crire les tr\u00e8s grands nombres et les tr\u00e8s petits nombres gr\u00e2ce aux \"puissances de dix\" (exemples 6,02.1023 ou 6,67.10-11). Il est possible de faire exactement la m\u00eame chose avec une repr\u00e9sentation binaire, puisque nous sommes en base 2, nous utiliserons des \"puissances de deux\" \u00e0 la place des \"puissances dix\" (exemple : 101,1101.210).\n\nPour passer d'une \u00e9criture sans \"puissance de deux\" \u00e0 une \u00e9criture avec \"puissance de deux\", il suffit de d\u00e9caler la virgule : 1101,1001 = 1,1011001.211 pour passer de 1101,1001 \u00e0 1,1011001 nous avons d\u00e9cal\u00e9 la virgule de 3 rangs vers la gauche d'o\u00f9 le 211 (attention de ne pas oublier que nous travaillons en base 2 le 11 correspond bien \u00e0 un d\u00e9calage de 3 rangs de la virgule).\n\nSi l'on d\u00e9sire d\u00e9caler la virgule vers la droite, il va \u00eatre n\u00e9cessaire d'utiliser des \"puissances de deux n\u00e9gatives\" 0,0110 = 1,10.2-10, nous d\u00e9calons la virgule de 2 rangs vers la droite, d'o\u00f9 le -10", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1010, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eecf0c7f-a3e0-4871-8ccb-bc21a256ced8": {"__data__": {"id_": "eecf0c7f-a3e0-4871-8ccb-bc21a256ced8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5d88c600-ce1d-43c4-8224-93fbed4fece9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "e111805e52c26453155bd1c157cf36a2532879f3bbfbdaec2b335e87206f6cf2", "class_name": "RelatedNodeInfo"}}, "text": "3) repr\u00e9sentation des flottants dans un ordinateur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 52, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3788996b-8634-4834-b50b-1b3268154386": {"__data__": {"id_": "3788996b-8634-4834-b50b-1b3268154386", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a36879d2-8fa9-49b7-a282-e78b3ba85490", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ec039a10bcbd3ee68b778d7bc0e52eba6f192746af024231937a03c939576c49", "class_name": "RelatedNodeInfo"}}, "text": "a) principe\n\nLa norme IEEE 754 est la norme la plus employ\u00e9e pour la repr\u00e9sentation des nombres \u00e0 virgule flottante dans le domaine informatique. La premi\u00e8re version de cette norme date de 1985.\n\nNous allons \u00e9tudier deux formats associ\u00e9s \u00e0 cette norme : le format dit \"simple pr\u00e9cision\" et le format dit \"double pr\u00e9cision\". Le format \"simple pr\u00e9cision\" utilise 32 bits pour \u00e9crire un nombre flottant alors que le format \"double pr\u00e9cision\" utilise 64 bits. Dans la suite nous travaillerons principalement sur le format 32 bits.\n\nQue cela soit en simple pr\u00e9cision ou en double pr\u00e9cision, la norme IEEE754 utilise :\n\n- 1 bit de signe (1 si le nombre est n\u00e9gatif et 0 si le nombre est positif)\n\n- des bits consacr\u00e9s \u00e0 l'exposant (8 bits pour la simple pr\u00e9cision et 11 bits pour la double pr\u00e9cision)\n\n- des bits consacr\u00e9s \u00e0 la mantisse (23 bits pour la simple pr\u00e9cision et 52 bits pour la double pr\u00e9cision)\n\n!\n\nNous pouvons v\u00e9rifier que l'on a bien 1 + 8 + 23 = 32 bits pour la simple pr\u00e9cision et 1 + 11 + 52 = 64 bits pour la double pr\u00e9cision.\n\nPour \u00e9crire un nombre flottant en respectant la norme IEEE754, il est n\u00e9cessaire de commencer par \u00e9crire le nombre sous la forme 1,XXXXX.2e (avec e l'exposant), il faut obligatoirement qu'il y ait un seul chiffre \u00e0 gauche de la virgule et il faut que ce chiffre soit un 1. Par exemple le nombre 1010,11001 devra \u00eatre \u00e9crit 1,01011001.211. Autre exemple, 0,00001001 devra \u00eatre \u00e9crit 1,001.2-101.\n\nLa partie XXXXXX de 1,XXXXX.2e constitue la mantisse (dans notre exemple 1010,11001 la mantisse est 01011001). Comme la mantisse comporte 23 bits en simple pr\u00e9cision, il faudra compl\u00e9ter avec le nombre de z\u00e9ro n\u00e9cessaire afin d'atteindre les 23 bits (si nous avons 01011001, il faudra ajouter 23 - 8 = 15 z\u00e9ros \u00e0 droite, ce qui donnera en fin de compte 01011001000000000000000 )\n\nNotre premi\u00e8re intuition serait de dire que la partie \"exposant\" correspond simplement au \"e\" de 1,XXXXX.2e (dans notre exemple 1010,11001, nous aurions 11). En faite, c'est un peu plus compliqu\u00e9 que cela. En effet, comment repr\u00e9senter les exposants n\u00e9gatifs ? Aucun bit pour le signe de l'exposant n'a \u00e9t\u00e9 pr\u00e9vu dans la norme IEEE754, une autre solution a \u00e9t\u00e9 choisie :\n\nPour le format simple pr\u00e9cision, 8 bits sont consacr\u00e9s \u00e0 l'exposant, il est donc possible de repr\u00e9senter 256 valeurs, nous allons pouvoir repr\u00e9senter des exposants compris entre -12610 et +12710 (les valeurs -127 et +128 sont des valeurs r\u00e9serv\u00e9es, nous n'aborderons pas ce sujet ici). Pour avoir des valeurs uniquement positives, il va falloir proc\u00e9der \u00e0 un d\u00e9calage : ajouter syst\u00e9matiquement 127 \u00e0 la valeur de l'exposant. Prenons tout de suite un exemple (dans la suite, afin de simplifier les choses nous commencerons par \u00e9crire les exposants en base 10 avant de les passer en base 2 une fois le d\u00e9calage effectu\u00e9) :\n\nRepartons de 1010,11001 qui nous donne 1,01011001.23, effectuons le d\u00e9calage en ajoutant 127 \u00e0 3 : 1,01011001.2130, soit en passant l'exposant en base 2 : 1,01011001.210000010. Ce qui nous donne donc pour 1010,11001 une mantisse 01011001000000000000000 (en ajoutant les z\u00e9ros n\u00e9cessaires \u00e0 droite pour avoir 23 bits) et un exposant 10000010 (m\u00eame si ce n'est pas le cas ici, il peut \u00eatre n\u00e9cessaire d'ajouter des z\u00e9ros pour arriver \u00e0 8 bits, ATTENTION, ces z\u00e9ros devront \u00eatre rajout\u00e9s \u00e0 gauche).\n\n\u00c0 noter que pour le format double pr\u00e9cision le d\u00e9calage est de 1023 (il faut syst\u00e9matiquement ajouter 1023 \u00e0 l'exposant afin d'obtenir uniquement des valeurs positives)\n\nNous sommes maintenant pr\u00eats \u00e0 \u00e9crire notre premier nombre au format simple pr\u00e9cision :\n\nSoit le nombre -10,125 en base 10 repr\u00e9sentons-le au format simple pr\u00e9cision :\n\nnous avons 1010 = 10102 et 0,12510 = 0,0012 soit 10,12510 = 1010,0012\nD\u00e9calons la virgule : 1010,001 = 1,010001.23, soit avec le d\u00e9calage de l'exposant 1,010001.2130, en \u00e9crivant l'exposant en base 2, nous obtenons 1,010001.210000010\n\nNous avons donc : notre bit de signe = 1 (nombre n\u00e9gatif), nos 8 bits d'exposant = 10000010 et nos 23 bits de mantisse = 01000100000000000000000\n\nSoit en \"collant\" tous les \"morceaux\" :\n\n11000001001000100000000000000000\n\nCette \u00e9criture \u00e9tant un peu p\u00e9nible, il est possible d'\u00e9crire ce nombre en hexad\u00e9cimal : C1220000", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 4204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "785e72c1-c3f1-42fb-954e-6b73e279e70d": {"__data__": {"id_": "785e72c1-c3f1-42fb-954e-6b73e279e70d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c5d6db81-8c26-4998-8a05-ed2be1246cc4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "9e26fda6ef302ce549e27d00d0a00860b2e78bf4d05d01e0195a1f6bf3281d64", "class_name": "RelatedNodeInfo"}}, "text": "b) probl\u00e8me de l'arrondi\n\nRevenons au cas de 0,110 :\n\nnous avons vu plus  que la repr\u00e9sentation en binaire est infinie : \n\n0,0001100110011...2, le sch\u00e9ma \"0011\" se r\u00e9p\u00e8te \u00e0 \"l'infini\"\n\nLa m\u00e9moire d'un ordinateur n'\u00e9tant pas infinie, nous allons devoir nous limiter \u00e0 32 bits (en simple pr\u00e9cision) ou \u00e0 64 bits (en double pr\u00e9cision) pour la repr\u00e9sentation de 0,110\n\nNous obtenons donc la repr\u00e9sentation suivante (simple pr\u00e9cision) :\n\n0,110 => 00111101110011001100110011001100\n\nSi nous proc\u00e9dons \u00e0 la conversion inverse (conversion en  base 10 du nombre flottant ci-dessus) nous n'obtenons pas 0,1 mais 0,099999994 !\n\nCette \"l\u00e9g\u00e8re\" erreur \u00e9tait pr\u00e9visible, elle est due \u00e0 la limitation impos\u00e9e (32 bits dans cet exemple). \n\nCette repr\u00e9sentation avec un nombre limit\u00e9 de bits des nombres flottants est un probl\u00e8me classique en informatique. Cela peut entra\u00eener des erreurs d'arrondi dans les calculs qui peuvent \u00eatre tr\u00e8s g\u00eanants si on n'y prend pas garde. Il faut donc \u00eatre tr\u00e8s m\u00e9fiant quand on utilise des flottants  pour des calculs.  \n\nPrenons un exemple simple :\n\n```\na = 0.1\nb = 0.2\nc = a + b\nif c == 0.3:\n\tprint(\"pas de probl\u00e8me\")\nelse :\n\tprint(\"oups...??!\")\n```\n\nLe r\u00e9sultat attendu apr\u00e8s l'ex\u00e9cution de ce programme peut para\u00eetre \u00e9vident : nous devrions voir s'afficher le message \"pas de probl\u00e8me\"...pourtant c'est le message \"oups...??!\" qui s'affiche !\n\nComme nous l'avons vu, la repr\u00e9sentation de 0.1 en m\u00e9moire pose un probl\u00e8me, le r\u00e9sultat du calcul *a + b* pose donc aussi un probl\u00e8me (nous  n'obtenons pas exactement 0.3), donc *c == 0.3* renvoie *False*...\n\nOn \u00e9vitera donc de proc\u00e9der \u00e0 des comparaisons de flottants dans les programmes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e93978f-9c28-47a3-b9b6-b585a0bf5ffb": {"__data__": {"id_": "4e93978f-9c28-47a3-b9b6-b585a0bf5ffb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7r.md", "file_name": "c7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "823a0b15-3bf6-4af4-aec2-6a627cdae056", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7r.md", "file_name": "c7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1c2b26acaabf0bbacefb41adc4e6fd49c3fc36be201f9bcb1786561c040a56e0", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- la repr\u00e9sentation en machine des nombres r\u00e9els (on parle souvent en informatique\nde nombres flottants) diff\u00e8re de la repr\u00e9sentation en machine des entiers\n\n- la norme IEEE 754 est la norme la plus employ\u00e9e pour la repr\u00e9sentation des\nnombres \u00e0 virgule flottante dans le domaine informatique.\n\n- il existe 2 formats associ\u00e9s \u00e0 la norme IEEE 754 : le format simple pr\u00e9cision (le\nnombre est repr\u00e9sent\u00e9 sur 32 bits) et le format double pr\u00e9cision (le nombre est\nrepr\u00e9sent\u00e9 sur 64 bits)\n\n- que cela soit en simple pr\u00e9cision ou en double pr\u00e9cision, la norme IEEE754 utilise :\n\n\t- 1 bit de signe (1 si le nombre est n\u00e9gatif et 0 si le nombre est positif)\n\t\n\t- des bits consacr\u00e9s \u00e0 l'exposant (8 bits pour la simple pr\u00e9cision et 11 bits pour la double pr\u00e9cision)\n\t\n\t- des bits consacr\u00e9s \u00e0 la mantisse (23 bits pour la simple pr\u00e9cision et 52 bits pour la double pr\u00e9cision)\n\t\n- \u00e0 cause de la limitation de la taille de mantisse on peut dans certains cas avoir des erreurs d\u2019arrondies, par exemple 0.1 + 0.2 n\u2019est pas \u00e9gal \u00e0 0.3. On \u00e9vitera de tester l\u2019\u00e9galit\u00e9 entre 2 flottants (par exemple 0.1 + 0.2 == 0.3 retourne Faux !)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66e32006-eefa-42d8-9efd-02fe4fc24ee0": {"__data__": {"id_": "66e32006-eefa-42d8-9efd-02fe4fc24ee0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7r.md", "file_name": "c7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a4ad946e-c2cd-4523-b3c1-8c5ff607aa67", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7r.md", "file_name": "c7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e0c084c18919889f7b7278f8bcf09cf0f3a353a178acfd6b69a71776c26e512b", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable de trouver la repr\u00e9sentation en binaire d\u2019un r\u00e9el (par exemple 0.1, 0.25 ou encore 1/3)\n\n- vous n\u2019avez pas \u00e0 savoir \u00e9crire un nombre flottant en utilisant la norme IEEE754, vous devez juste connaitre les grands principes de cette norme (bit de signe,\nmantisse, exposant)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 326, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20bc18b3-1eae-4099-a6b2-1ee6b09b5185": {"__data__": {"id_": "20bc18b3-1eae-4099-a6b2-1ee6b09b5185", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "998b8787-1ebd-4776-b51a-35dd6e68ff31", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "2a8ed5f8fa24906e6d9394c96b70088009bdd6d1cf7a8ffda152ca6d938de484", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.1\n\nApr\u00e8s avoir visionn\u00e9 cette vid\u00e9o, \u00e9num\u00e9rez les diff\u00e9rents composants d'un ordinateur.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24332e94-3571-493a-b007-501aed78484a": {"__data__": {"id_": "24332e94-3571-493a-b007-501aed78484a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6a059fb5-a867-448d-a7a8-931e146c5675", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "232edf30a69e9566da50d28ea008c41f95dfab866141b56f38f9c7668ba9d818", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.2\n\nVisionnez cette vid\u00e9o, de la chaine Deus Ex Silicium, consacr\u00e9e aux circuits int\u00e9gr\u00e9s.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83f74b12-7699-412a-a7f2-76c7b01dbaf8": {"__data__": {"id_": "83f74b12-7699-412a-a7f2-76c7b01dbaf8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3899bb86-29b5-49ee-953d-b97777c8a8e0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "7e08f8a6289e9d7dd243eef3912d563d4590b6f79613f171a89e23453e642d09", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.3\n\nEn vous aidant de la table de v\u00e9rit\u00e9 de l'additionneur, effectuez l'addition suivant : \n1100010012 + 1100102. Le r\u00e9sultat devra \u00eatre donn\u00e9 en base 2.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "114c023e-6e8b-46c1-ac2b-305dd6df7852": {"__data__": {"id_": "114c023e-6e8b-46c1-ac2b-305dd6df7852", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "041d4060-a84e-41b5-b436-0fd721504868", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "f8bf1e4c570d3e51c66dedd65a010db3abfc66849f888741d139348485ca313e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.4\n\nCompl\u00e9tez le sch\u00e9ma ci-dessous avec les termes suivants :\n\n- CPU\n\n- transistor\n\n- porte logique\n\n- additionneur\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 130, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f48178a2-3ca4-47c5-ba43-b039ae34dfb7": {"__data__": {"id_": "f48178a2-3ca4-47c5-ba43-b039ae34dfb7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "11e5b69a-3646-4ff8-a99b-25df3e18af19", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "3138814d1553339406dbafa6f8fcc60fe6d738501122c6fb2d8e7a5d1c5c6b0a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.5\n\nExpliquez bri\u00e8vement, les instructions suivantes :\n\n```\nADD R0, R1, #42\n```\n\n```\nLDR R5,98\n```\n\n```\nCMP R4, #18\nBGT 77\n```\n\n```\nSTR R0,15\n```\n\n```\nB 100\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5124be0b-0939-4a05-be33-ed6d1ad3ef0e": {"__data__": {"id_": "5124be0b-0939-4a05-be33-ed6d1ad3ef0e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60bfa989-4317-44e2-b34a-f502b5d62612", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "7a12f12d818f43550bf516d8b3e4d3e5f17b037c26593e787d7a681033198d83", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.6\n\nNommez et d\u00e9crivez les diff\u00e9rentes parties qui constituent le mod\u00e8le de von Neumann", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 99, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b58f7c69-2bc8-46f4-bfcb-f49b8f1e0878": {"__data__": {"id_": "b58f7c69-2bc8-46f4-bfcb-f49b8f1e0878", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d373c69-4a80-485f-a384-8757cacec6f2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "f1167e903e8d847afe1ef1cbfb26725c836f5e77a41e9413edfdec9730543f35", "class_name": "RelatedNodeInfo"}}, "text": "1) du transistor au micro-processeur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 38, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f818504-45ee-415a-9968-037af3b44234": {"__data__": {"id_": "1f818504-45ee-415a-9968-037af3b44234", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c9d0cd15-de23-49b6-993d-a062986cea6a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "4f9b736847ca5dad786ecdebad14d52aafa925aadf81bbd4cb7c47f05dabe49b", "class_name": "RelatedNodeInfo"}}, "text": "a) le transistor\n\nOn entend souvent dire qu'\"un ordinateur utilise uniquement des \"1\" et des \"0\"\". Cette affirmation m\u00e9rite d'\u00eatre pr\u00e9cis\u00e9e.\n\n\u00c0 la base de la plupart des composants d'un ordinateur, on retrouve le transistor. Ce composant \u00e9lectronique a \u00e9t\u00e9 invent\u00e9 fin 1947 par les Am\u00e9ricains John Bardeen, William Shockley et Walter Brattain. L'invention du transistor a \u00e9t\u00e9 un immense progr\u00e8s, mais les premiers ordinateurs sont ant\u00e9rieurs \u00e0 cette invention. En effet, ces premiers ordinateurs, par exemple le Colossus qui date de 1943, \u00e9taient con\u00e7us \u00e0 base de tubes \u00e9lectroniques (on parle aussi de tubes \u00e0 vide) qui, bien que beaucoup plus gros et beaucoup moins fiable que les transistors fonctionnent sur le m\u00eame principe que ce dernier.\n\nun transistor :\n\n!\n\nun tube \u00e9lectronique :\n\n!\n\nAutre aspect historique qu'il est important de pr\u00e9ciser : on ne trouve plus, depuis quelque temps d\u00e9j\u00e0, de transistors en tant que composant \u00e9lectronique discret (comme le transistor de la photo ci-dessus). Dans un ordinateur, les transistors sont regroup\u00e9s au sein de ce que l'on appelle des circuits int\u00e9gr\u00e9s. Dans un circuit int\u00e9gr\u00e9, les transistors sont grav\u00e9s sur des plaques de silicium, les connexions entre les millions de transistors qui composent un circuit int\u00e9gr\u00e9 sont, elles aussi, grav\u00e9es directement dans le silicium. Les processus mis en jeu lors de ces gravures d\u00e9passent largement le cadre de ce cours, si ce sujet vous int\u00e9resse, je vous invite \u00e0 visionner cette vid\u00e9o : https://www.youtube.com/watch?v=NFr-WyytNfo\n\nun circuit int\u00e9gr\u00e9 :\n\n!\n\nIl n'est pas question de nous pencher en d\u00e9tail sur le fonctionnement d'un transistor, mais vous devez tout de m\u00eame savoir que dans un ordinateur les transistors se comportent comme des interrupteurs : soit le transistor laisse passer le courant \u00e9lectrique (interrupteur ferm\u00e9), soit il ne le laisse pas passer (interrupteur ouvert). Et c'est tout, il n'y a pas d'autre \u00e9tat possible pour un transistor dans un ordinateur : le courant passe ou le courant ne passe pas. Globalement l'ordinateur fonctionne uniquement avec deux \u00e9tats. On parle d'un \u00e9tat \"haut\" et d'un \u00e9tat \"bas\". On symbolise souvent l'\u00e9tat \"haut\" par le chiffre \"1\" et l'\u00e9tat \"bas\" par le chiffre \"0\", mais il faut bien avoir conscience qu'il n'y a pas dans un ordinateur des \"petits 1\" ou des \"petits 0\" qui se \"baladent\", c'est juste une histoire de \"courant qui passe\" ou de \"courant qui ne passe pas\". On travaille donc uniquement avec 2 chiffres, voil\u00e0 pourquoi un ordinateur travaille en base 2 (en binaire) et non pas en base 10 comme dans la vie courante.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2585, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ea93ae5-0fac-4268-a6d9-4f36da88894e": {"__data__": {"id_": "0ea93ae5-0fac-4268-a6d9-4f36da88894e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3f52050-43bd-41a3-bfa9-b171f12a680a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "85a4bc7297a8db11c369f041d5a10012df5a1fd08398d362a780d543ac888d8e", "class_name": "RelatedNodeInfo"}}, "text": "b) les circuits logiques\n\nLe transistor est l'\u00e9l\u00e9ment de base des circuits logiques. Un circuit logique permet de r\u00e9aliser une op\u00e9ration bool\u00e9enne. Ces op\u00e9rations bool\u00e9ennes sont directement li\u00e9es \u00e0 l'alg\u00e8bre de Boole (Georges Boole, math\u00e9maticien Britanique 1815-1864). L'\u00e9tude de l'alg\u00e8bre de Boole d\u00e9passe le cadre de ce cours, vous devez juste savoir qu'un circuit logique prend en entr\u00e9e un ou des signaux \u00e9lectriques (chaque entr\u00e9e est dans un \u00e9tat \"haut\" (symbolis\u00e9 par un \"1\") ou \u00e0 un \u00e9tat \"bas\" (symbolis\u00e9 par un \"0\")) et donne en sortie un ou des signaux \u00e9lectriques (chaque sortie est aussi dans un \u00e9tat \"haut\" ou \u00e0 un \u00e9tat \"bas\"). Il existe deux cat\u00e9gories de circuit logique :\n\n- les circuits combinatoires (les \u00e9tats en sortie d\u00e9pendent uniquement des \u00e9tats en entr\u00e9e)\n\n- les circuits s\u00e9quentiels (les \u00e9tats en sortie d\u00e9pendent des \u00e9tats en entr\u00e9e ainsi que du temps et des \u00e9tats ant\u00e9rieurs)\n\nDans la suite nous nous int\u00e9resserons principalement aux circuits combinatoires.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 989, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fd3a863-3ade-4d7d-a012-3cd56db73e0e": {"__data__": {"id_": "6fd3a863-3ade-4d7d-a012-3cd56db73e0e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "413d9d97-9c86-45e2-94bc-3a521aa134e3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "baaa4b1c8de9289f97deebd2aa6c56c9f3b00bff16af0dfb568f8b0be159d98f", "class_name": "RelatedNodeInfo"}}, "text": "i) la porte NON (NOT)\n\nLe plus simple des circuits combinatoires est la porte \"NON\" (\"NOT\" en anglais) qui inverse l'\u00e9tat en entr\u00e9e : si l'entr\u00e9e de la porte est dans un \u00e9tat \"bas\" alors la sortie sera dans un \u00e9tat \"haut\" et vice versa. Si on symbolise l'\u00e9tat \"haut\" par un \"1\" et l'\u00e9tat \"bas\" pour un \"0\", on peut obtenir ce que l'on appelle la table de v\u00e9rit\u00e9 de la porte \"NON\" :\n\n| E (Entr\u00e9e) | S (Sortie) |\n| --- | --- |\n| 1 | 0 |\n| 0 | 1 |\n\nLa porte \"NON\" est symbolis\u00e9e par le sch\u00e9ma suivant :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e289a80-579c-497d-864f-9c86e2360510": {"__data__": {"id_": "9e289a80-579c-497d-864f-9c86e2360510", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0f3a7786-9149-485e-8d53-d2ab5da307d3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "d79935bd06d965d4bf5f56e89d306229c48503295bff93509cf2895e3a7117ed", "class_name": "RelatedNodeInfo"}}, "text": "ii) la porte OU (OR)\n\nLa porte \"OU\" a deux entr\u00e9es (E1 et E2) et une sortie S\n\n!\n\nTable de v\u00e9rit\u00e9 porte \"OU\" :\n\n| E1 | E2 | S |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n| 0 | 1 | 1 |\n| 1 | 0 | 1 |\n| 1 | 1 | 1 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 205, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c71d55a1-3eb5-4c36-9d04-5a15f6b85d75": {"__data__": {"id_": "c71d55a1-3eb5-4c36-9d04-5a15f6b85d75", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55d25b03-6e59-40ac-a592-b21e5b8ecd04", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c5c09447f291a405df37696c6e389d34d74ba117bde1b2273e26084460584fb9", "class_name": "RelatedNodeInfo"}}, "text": "iii) la porte ET (AND)\n\nLa porte \"ET\" (\"AND\") a deux entr\u00e9es (E1 et E2) et une sortie S\n\n!\n\nTable de v\u00e9rit\u00e9 porte \"ET\" :\n\n| E1 | E2 | S |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n| 0 | 1 | 0 |\n| 1 | 0 | 0 |\n| 1 | 1 | 1 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0a3708b-d3f9-4de7-b748-248814390045": {"__data__": {"id_": "a0a3708b-d3f9-4de7-b748-248814390045", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19774448-04fc-45b5-9d95-3737bc0680f5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "1057f78bd2853477eb38af3f15b001f2eaa96ec160be0fbc4ff46ce495f22b60", "class_name": "RelatedNodeInfo"}}, "text": "iv) la porte OU EXCLUSIF (XOR)\n\nLa porte \"OU EXCLUSIF\" (\"XOR\") a deux entr\u00e9es (E1 et E2) et une sortie S\n\n!\n\nTable de v\u00e9rit\u00e9 porte \"XOR\" :\n\n| E1 | E2 | S |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n| 0 | 1 | 1 |\n| 1 | 0 | 1 |\n| 1 | 1 | 0 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8a0d206-bba6-4f85-9501-a47100ddc02d": {"__data__": {"id_": "e8a0d206-bba6-4f85-9501-a47100ddc02d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55229f16-91c4-4bf7-be90-272f78c62f96", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "f7d0e86c599386790d2bb3e5b29f36c71df42e371948161b7ab35b5eaf58bc42", "class_name": "RelatedNodeInfo"}}, "text": "v) l'additionneur\n\nEn combinant les portes logiques, on obtient des circuits plus complexes. Par exemple en combinant 2 portes \"OU EXCLUSIF\", 2 portes \"ET\" et une porte \"OU\" on obtient un additionneur :\n\n!\n\nComme son nom l'indique, l'additionneur permet d'additionner 2 bits (E1 et E2) en tenant compte de la retenue entrante (\"Cin\" \"carry in\" en anglais). En sortie on obtient le r\u00e9sultat de l'addition (S) et la retenue sortante (\"Cout\").\n\n| E1 | E2 | Cin | Cout | S |\n| --- | --- | --- | --- | --- |\n| 0 | 0 | 0 | 0 | 0 |\n| 0 | 0 | 1 | 0 | 1 |\n| 0 | 1 | 0 | 0 | 1 |\n| 0 | 1 | 1 | 1 | 0 |\n| 1 | 0 | 0 | 0 | 1 |\n| 1 | 0 | 1 | 1 | 0 |\n| 1 | 1 | 0 | 1 | 0 |\n| 1 | 1 | 1 | 1 | 1 |\n\nEn combinant plusieurs fois le type de circuit d\u00e9crit ci-dessus, on obtient des additionneurs capables d'additionner des nombres sur X bits.\n\nUne chose est tr\u00e8s importante \u00e0 bien comprendre : \u00e0 la base nous avons le transistor, une combinaison de transistor (sous forme de circuit int\u00e9gr\u00e9) permet d'obtenir des circuits logiques, la combinaison de circuits logiques permet d'obtenir des circuits plus complexes (exemple : l'additionneur), et ainsi de suite...\n\nAu sommet de cet \u00e9difice (on pourrait parler de poup\u00e9e russe), nous allons trouver la m\u00e9moire vive (RAM) et le microprocesseur (CPU).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c72858c1-a243-4397-b6a4-c638eaab2193": {"__data__": {"id_": "c72858c1-a243-4397-b6a4-c638eaab2193", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6b6cf10-cf90-48ee-bfa8-0dd194fa2beb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "78fd651b357fb92878220f6f8b38a6219aafe929d16ca6d84c5c50add039930c", "class_name": "RelatedNodeInfo"}}, "text": "c) la m\u00e9moire vive RAM (Random Acess Memory)\n\nLa m\u00e9moire vive permet de stocker des donn\u00e9es et des programmes. Comme nous l'avons vu, l'ordinateur utilise uniquement 2 \u00e9tats, la m\u00e9moire va donc stocker les donn\u00e9es sous forme de bits (0 ou 1), mais encore une fois, il ne faut pas s'imaginer que la m\u00e9moire est pleine de \"petit 0\" et de \"petit 1\", ce sont des \"\u00e9tats \u00e9lectriques\" qui sont stock\u00e9s dans cette m\u00e9moire.\n\nLa m\u00e9moire ne g\u00e8re pas les bits 1 par 1, mais 8 par 8, la m\u00e9moire g\u00e8re donc des octets (rappel : 1 octet = 8 bits)\n\nOn peut se repr\u00e9senter la m\u00e9moire comme une s\u00e9rie de cellules, chaque cellule \u00e9tant capable de stocker 1 octet. Chacune de ces cellules poss\u00e8de une adresse. Les op\u00e9rations sur la m\u00e9moire sont de 2 types : lecture / \u00e9criture. Une op\u00e9ration de lecture consiste \u00e0 aller lire l'octet situ\u00e9 \u00e0 l'adresse m\u00e9moire XXXXX (ces adresses m\u00e9moire \u00e9tant bien \u00e9videmment cod\u00e9es en binaire) et une op\u00e9ration d'\u00e9criture consiste \u00e0 \u00e9crire un octet donn\u00e9 \u00e0 l'adresse m\u00e9moire YYYYY. Cette notion d'adresse m\u00e9moire est fondamentale, nous aurons l'occasion de revenir dessus un peu plus loin.\n\nToujours sur l'aspect technologique, 1 bit d'une cellule est l'association d'un transistor et d'un condensateur. Un condensateur est un composant \u00e9lectronique qui peut \u00eatre soit charg\u00e9 (on stocke alors un \"1\"), soit d\u00e9charg\u00e9 (on stocke alors un \"0\"). Un condensateur n'est pas capable de conserver sa charge pendant tr\u00e8s longtemps, il doit donc \u00eatre aliment\u00e9 \u00e9lectriquement parlant afin de conserver cette charge. Voil\u00e0 pourquoi la m\u00e9moire vive est une m\u00e9moire volatile : toutes les donn\u00e9es pr\u00e9sentes en m\u00e9moire sont perdues en cas de coupure de courant. Pour conserver les donn\u00e9es une fois l'ordinateur \u00e9teint, il faut faire appel \u00e0 d'autres types de m\u00e9moire : les m\u00e9moires de stockage. Le disque dur est aujourd'hui la m\u00e9moire de stockage la plus utilis\u00e9 (au moins dans les usages \"familiaux\"). Un disque dur (HDD : Hard Disk Drive et SSD : Solid State Drive) n'a pas besoin d'alimentation \u00e9lectrique pour conserver les donn\u00e9es. \u00c0 noter que les vitesses d'\u00e9criture ou de lecture des donn\u00e9es sur un disque dur sont beaucoup plus faibles que les vitesses d'\u00e9criture ou de lecture des donn\u00e9es en m\u00e9moire RAM.\n\nPour terminer sur cet aspect technologique, il faut noter que l'on trouve aussi des m\u00e9moires vives qui stockent l'information gr\u00e2ce \u00e0 un circuit dit de type \"bascule\". Ce circuit est une combinaison de plusieurs portes logiques.\n\ncircuit de type bascule, permet de stocker 1 bit :\n\n!\n\nIl n'est pas question pour nous d'\u00e9tudier ce type de circuit, le sch\u00e9ma ci-dessus vous permet juste de v\u00e9rifier qu'une fois de plus nous avons bien \u00e0 faire \u00e0 une combinaison de porte logique.\n\nN.B. : il existe un autre type de m\u00e9moire dans un ordinateur, la m\u00e9moire ROM (Read Only Memory) aussi appel\u00e9e \"m\u00e9moire morte\". Comme son acronyme l'indique, cette m\u00e9moire est uniquement utilisable en lecture. Au contraire de la RAM, la ROM n'est pas volatile. Elle est notamment utilis\u00e9e pour stocker les informations n\u00e9cessaires au d\u00e9marrage d\u2019un ordinateur (BIOS).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3060, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8ec439b-3e4a-4b42-8b4a-a12df369f9f5": {"__data__": {"id_": "a8ec439b-3e4a-4b42-8b4a-a12df369f9f5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f04c5e7-e88b-4400-8332-27e1e522f8d4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "5648f6825feba2c3a00ac657dbb2d7ef01a181f6d2fdb77aea3e379dd8166d09", "class_name": "RelatedNodeInfo"}}, "text": "d) Le microprocesseur CPU (Central Processing Unit)\n\nLe microprocesseur est le \"coeur\" d'un ordinateur : les instructions sont ex\u00e9cut\u00e9es au niveau du CPU. Il est sch\u00e9matiquement constitu\u00e9 de 3 parties :\n\n- les registres permettent de m\u00e9moriser de l'information (donn\u00e9e ou instruction) au sein m\u00eame du CPU. Leur nombre et leur taille sont variables en fonction du type de microprocesseur. Dans la suite on nommera ces registres R1, R2, R3...\n\n- l'unit\u00e9 arithm\u00e9tique et logique (UAL ou ALU en anglais) est charg\u00e9e de l'ex\u00e9cution de tous les calculs que peut r\u00e9aliser le microprocesseur. Nous allons retrouver dans cette UAL des circuits comme l'additionneur (voir plus haut)\n\n- l'unit\u00e9 de commande permet d'ex\u00e9cuter les instructions (les programmes)\n\nun microprocesseur :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 774, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69497276-90ce-4304-8348-d949069c1a7f": {"__data__": {"id_": "69497276-90ce-4304-8348-d949069c1a7f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "141ee999-1125-4c65-a708-27d51e49900a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ac28d0a912fbd13a40a1b0d0da39a606ff887822c26f6895be4d3925396cf69d", "class_name": "RelatedNodeInfo"}}, "text": "e) Le bus\n\nLes donn\u00e9es doivent circuler entre les diff\u00e9rentes parties d\u2019un ordinateur, notamment entre la m\u00e9moire vive et le CPU. Le syst\u00e8me permettant cette circulation est appel\u00e9 bus. Il existe, sans entrer dans les d\u00e9tails, 3 grands types de bus :\n\n- Le bus d\u2019adresse permet de faire circuler des adresses (par exemple l\u2019adresse d\u2019une donn\u00e9e \u00e0 aller chercher en m\u00e9moire)\n\n- Le bus de donn\u00e9es permet de faire circuler des donn\u00e9es\n\n- Le bus de contr\u00f4le permet de sp\u00e9cifier le type d\u2019action (exemples : \u00e9criture d\u2019une donn\u00e9e en m\u00e9moire, lecture d\u2019une donn\u00e9e en m\u00e9moire).\n\nbus :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "89d6d5de-bbec-4f14-9e0e-fd24eb8b8e89": {"__data__": {"id_": "89d6d5de-bbec-4f14-9e0e-fd24eb8b8e89", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce0fb984-ab84-4816-a972-e8e08eac958b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "f6afcf586a18b5749b714492f53e00c1d41451982d71e64cf57a5634313bc5e8", "class_name": "RelatedNodeInfo"}}, "text": "2) initiation \u00e0 l'assembleur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 30, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3181efed-db96-4277-9125-0d3fc9cd0f14": {"__data__": {"id_": "3181efed-db96-4277-9125-0d3fc9cd0f14", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c99e1fab-dd00-479a-b311-ed5c7bed364a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "529e9a6bfd0694f9f9fd12bd30302c5ec48daa7d2e79a4d3f283e230e83021b9", "class_name": "RelatedNodeInfo"}}, "text": "a) principes\n\nRevenons sur ces instructions aussi appel\u00e9es \"instructions machines\" ex\u00e9cut\u00e9es par l'unit\u00e9 de commande. Comme vous le savez d\u00e9j\u00e0, un ordinateur ex\u00e9cute des programmes qui sont des suites d'instructions. Le CPU est incapable d'ex\u00e9cuter directement des programmes \u00e9crits, par exemple, en Python. En effet, comme tous les autres constituants d'un ordinateur, le CPU g\u00e8re uniquement 2 \u00e9tats (toujours symbolis\u00e9s par un \"1\" et un \"0\"), les instructions ex\u00e9cut\u00e9es au niveau du CPU sont donc cod\u00e9es en binaire. L'ensemble des instructions ex\u00e9cutables directement par le microprocesseur constitue ce que l'on appelle le \"langage machine\".\n\nUne instruction machine est une cha\u00eene binaire compos\u00e9e principalement de 2 parties :\n\n- le champ \"code op\u00e9ration\" qui indique au processeur le type de traitement \u00e0 r\u00e9aliser. Par exemple le code \"00100110\" donne l'ordre au CPU d'effectuer une multiplication.\n\n- le champ \"op\u00e9randes\" indique la nature des donn\u00e9es sur lesquelles l'op\u00e9ration d\u00e9sign\u00e9e par le \"code op\u00e9ration\" doit \u00eatre effectu\u00e9e.\n\ninstruction machine :\n\n!\n\nLes instructions machines sont relativement basiques (on parle d'instructions de bas niveau), voici quelques exemples :\n\n- les instructions arithm\u00e9tiques (addition, soustraction, multiplication...). Par exemple, on peut avoir une instruction qui ressemble \u00e0 \"additionne la valeur contenue dans le registre R1 et le nombre 789 et range le r\u00e9sultat dans le registre R0\" (l'adresse m\u00e9moire est donn\u00e9e en base 10 pour souci de simplicit\u00e9, n'oubliez pas qu'en interne elle est cod\u00e9e en binaire)\n\n- les instructions de transfert de donn\u00e9es qui permettent de transf\u00e9rer une donn\u00e9e d'un registre du CPU vers la m\u00e9moire vive et vice versa. Par exemple, on peut avoir une instruction qui ressemble \u00e0 \"prendre la valeur situ\u00e9e \u00e0 l'adresse m\u00e9moire 487 et la placer dans la registre R2\" ou encore \"prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l'adresse m\u00e9moire 512\"\n\n- les instructions de rupture de s\u00e9quence : les instructions machines sont situ\u00e9es en m\u00e9moire vive, si, par exemple, l'instruction n\u00b01 est situ\u00e9e \u00e0 l'adresse m\u00e9moire 343, l'instruction n\u00b02 sera situ\u00e9e \u00e0 l'adresse m\u00e9moire 344, l'instruction n\u00b03 sera situ\u00e9e \u00e0 l'adresse m\u00e9moire 345... Au cours de l'ex\u00e9cution d'un programme, le CPU passe d'une instruction \u00e0 une autre en passant d'une adresse m\u00e9moire \u00e0 l'adresse m\u00e9moire imm\u00e9diatement sup\u00e9rieure : apr\u00e8s avoir ex\u00e9cut\u00e9 l'instruction n\u00b02 (situ\u00e9 \u00e0 l'adresse m\u00e9moire 344), le CPU \"va chercher\" l'instruction suivante \u00e0 l'adresse m\u00e9moire 344+1=345. Les instructions de rupture de s\u00e9quence d'ex\u00e9cution encore appel\u00e9es instructions de saut ou de branchement permettent d'interrompre l'ordre initial sous certaines conditions en passant \u00e0 une instruction situ\u00e9e une adresse m\u00e9moire donn\u00e9e, par exemple, nous pouvons avoir une instruction qui ressemble \u00e0 cela : imaginons qu'\u00e0 l'adresse m\u00e9moire 354 nous avons l'instruction \"si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors ex\u00e9cuter l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 4521\". Si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors la prochaine instruction \u00e0 ex\u00e9cuter est l'adresse m\u00e9moire 4521, dans le contraire, la prochaine instruction \u00e0 ex\u00e9cuter est \u00e0 l'adresse m\u00e9moire 355.\n\nComme d\u00e9j\u00e0 dit, les op\u00e9randes d\u00e9signent les donn\u00e9es sur lesquelles le code op\u00e9ration de l'instruction doit \u00eatre r\u00e9alis\u00e9e. Un op\u00e9rande peut \u00eatre de 3 natures diff\u00e9rentes :\n\n1) l'op\u00e9rande est une valeur imm\u00e9diate : l'op\u00e9ration est effectu\u00e9e directement sur la valeur donn\u00e9e dans l'op\u00e9rande\n\n2) l'op\u00e9rande est un registre du CPU : l'op\u00e9ration est effectu\u00e9e sur la valeur situ\u00e9e dans un des registres (R0,R1, R2,...), l'op\u00e9rande indique de quel registre il s'agit\n\n3) l'op\u00e9rande est une donn\u00e9e situ\u00e9e en m\u00e9moire vive : l'op\u00e9ration est effectu\u00e9e sur la valeur situ\u00e9e en m\u00e9moire vive \u00e0 l'adresse XXXXX. Cette adresse est indiqu\u00e9e dans l'op\u00e9rande.\n\nQuand on consid\u00e8re l'instruction machine : \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\", nous avons 2 valeurs : le \"nombre 125\" (qui est une valeur imm\u00e9diate, nous sommes dans le cas n\u00b01) et \"la valeur situ\u00e9e dans le registre R2\" (nous sommes dans le cas n\u00b02)\n\nQuand on consid\u00e8re l'instruction machine : \"prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l'adresse m\u00e9moire 512\", nous avons 2 valeurs : \"\u00e0 l'adresse m\u00e9moire 512\" (nous sommes dans le cas n\u00b03) et \"la valeur situ\u00e9e dans le registre R1\" (nous sommes toujours dans le cas n\u00b02)\n\n\u00c9videmment le microprocesseur est incapable d'interpr\u00e9ter la phrase \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\" tout cela doit \u00eatre cod\u00e9 sous forme binaire.\n\nUn programme en langage machine est donc une suite tr\u00e8s tr\u00e8s longue de \"1\" et de \"0\", ce qui vous en conviendrez est quelque peu r\u00e9barbatif \u00e0 programmer : sur les dizaines de milliers de \"1\" et de \"0\" qui composent un programme en langage machine de taille modeste, une seule erreur, et votre programme ne fonctionne pas...imaginer la difficult\u00e9 pour retrouver l'erreur ! Bref programmer en langage machine est extr\u00eamement difficile, pour pallier cette difficult\u00e9, les informaticiens ont remplac\u00e9 les codes binaires abscons par des symboles mn\u00e9moniques (plus facile \u00e0 retenir qu'une suite de \"1\" et de \"0\"). Nous avons toujours des instructions machines du genre \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\", mais au lieu d'\u00e9crire \"11100010100000100001000001111101\", nous pourrons \u00e9crire \"ADD R1,R2,#125\". Dans les 2 cas, la signification est identique : \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\".\n\nLe processeur est uniquement capable d'interpr\u00e9ter le langage machine, un programme appel\u00e9 \"assembleur\" assure donc le passage de \"ADD R1,R2,#125\" \u00e0 \"11100010100000100001000001111101\". Par extension, on dit que l'on programme en assembleur quand on \u00e9crit des programmes avec ces symboles mn\u00e9moniques \u00e0 la place de suites de \"0\" et de \"1\". Aujourd'hui plus personne n'\u00e9crit de programme directement en langage machine, en revanche l'\u00e9criture de programme en assembleur est encore chose relativement courante.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 6274, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad153ca5-70d4-41d4-82aa-f5a811dd3c48": {"__data__": {"id_": "ad153ca5-70d4-41d4-82aa-f5a811dd3c48", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e02f3a1-2a0b-419e-9a33-eb2624dc6cd8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "346574423e0fae7af1cd811831b7e0f1f8dfc51dae2c5e94e54803d33d18bfb2", "class_name": "RelatedNodeInfo"}}, "text": "b) quelques exemples\n\nIl n'est pas question d'apprendre \u00e0 programmer en assembleur dans ce cours, mais voici tout de m\u00eame quelques exemples d'instructions en assembleur :\n\n```\nLDR R1,78\n```\n\nPlace la valeur stock\u00e9e \u00e0 l'adresse m\u00e9moire 78 dans le registre R1 (par souci de simplification, nous continuons \u00e0 utiliser des adresses m\u00e9moire cod\u00e9es en base 10)\n\n```\nSTR R3,125\n```\n\nPlace la valeur stock\u00e9e dans le registre R3 en m\u00e9moire vive \u00e0 l'adresse 125\n\n```\nADD R1,R0,#128\n```\n\nAdditionne le nombre 128 (une valeur imm\u00e9diate est identifi\u00e9e gr\u00e2ce au symbole #) et la valeur stock\u00e9e dans le registre R0, place le r\u00e9sultat dans le registre R1\n\n```\nADD R0,R1,R2\n```\n\nAdditionne la valeur stock\u00e9e dans le registre R1 et la valeur stock\u00e9e dans le registre R2, place le r\u00e9sultat dans le registre R0\n\n```\nSUB R1,R0,#128\n```\n\nSoustrait le nombre 128 de la valeur stock\u00e9e dans le registre R0, place le r\u00e9sultat dans le registre R1\n\n```\nSUB R0,R1,R2\n```\n\nSoustrait la valeur stock\u00e9e dans le registre R2 de la valeur stock\u00e9e dans le registre R1, place le r\u00e9sultat dans le registre R0\n\n```\nMOV R1, #23\n```\n\nPlace le nombre 23 dans le registre R1\n\n```\nMOV R0, R3\n```\n\nPlace la valeur stock\u00e9e dans le registre R3 dans le registre R0\n\n```\nB 45\n```\n\nNous avons une structure de rupture de s\u00e9quence, la prochaine instruction \u00e0 ex\u00e9cuter se situe en m\u00e9moire vive \u00e0 l'adresse 45\n\n```\nCMP R0, #23\n```\n\nCompare la valeur stock\u00e9e dans le registre R0 et le nombre 23. Cette instruction CMP doit pr\u00e9c\u00e9der une instruction de branchement conditionnel BEQ, BNE, BGT, BLT (voir ci-dessous)\n\n```\nCMP R0, R1\n```\n\nCompare la valeur stock\u00e9e dans le registre R0 et la valeur stock\u00e9e dans le registre R1.\n\n```\nCMP R0, #23\nBEQ 78\n```\n\nLa prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est \u00e9gale \u00e0 23\n\n```\nCMP R0, #23\nBNE 78\n```\n\nLa prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 n'est pas \u00e9gale \u00e0 23\n\n```\nCMP R0, #23\nBGT 78\n```\n\nLa prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est plus grand que 23\n\n```\nCMP R0, #23\nBLT 78\n```\n\nLa prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est plus petit que 23\n\n```\nHALT\n```\n\nArr\u00eate l'ex\u00e9cution du programme\n\nEncore une fois, il n'est pas question d'apprendre \u00e0 programmer en assembleur, les instructions ci-dessus sont uniquement des exemples.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a263edc-faf1-4472-aa82-5dcc3adff3b7": {"__data__": {"id_": "7a263edc-faf1-4472-aa82-5dcc3adff3b7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "21826cca-9bec-4ff0-b346-6a05a696ea98", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "1abf24db2c9d02e3f04e380ab1c52308efc0e663ab6f2cc648fed4f25314af15", "class_name": "RelatedNodeInfo"}}, "text": "c) utilisation des labels\n\nEn faite, les instructions assembleur B, BEQ, BNE, BGT et BLT n'utilisent pas directement l'adresse m\u00e9moire de la prochaine instruction \u00e0 ex\u00e9cuter, mais des \"labels\". Un label correspond \u00e0 une adresse en m\u00e9moire vive (c'est l'assembleur qui fera la traduction \"label\"->\"adresse m\u00e9moire\"). L'utilisation d'un label \u00e9vite donc d'avoir \u00e0 manipuler des adresses m\u00e9moires en binaire ou en hexad\u00e9cimale. Voici un exemple qui montre comment utiliser un label :\n\n```\n   CMP R4, #18\n   BGT monLabel\n   MOV R0,#14\n   HALT\nmonLabel:\n   MOV R0,#18\n   HALT\n```\n\nDans l'exemple ci-dessus, nous avons choisi \"monLabel\" comme nom de label. La ligne \"MOV R0,#18\" a pour label \"monLabel\" car elle est situ\u00e9e juste apr\u00e8s la ligne \"monLabel:\". Concr\u00e8tement, voici ce qui se passe avec ce programme : si la valeur stock\u00e9e dans le registre R4 est sup\u00e9rieure \u00e0 18 on place le nombre 18 dans le registre R0 sinon on place le nombre 14 dans le registre R0. ATTENTION : la pr\u00e9sence du \"HALT\" juste apr\u00e8s la ligne \"MOV R0,#14\" est indispensable, car sinon, la ligne \"MOV R0,#18\" sera aussi ex\u00e9cut\u00e9e (m\u00eame si la valeur stock\u00e9e dans le registre R4 est inf\u00e9rieure \u00e0 18 )", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1169, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88970c69-7b72-4834-bd21-b429818f4b7b": {"__data__": {"id_": "88970c69-7b72-4834-bd21-b429818f4b7b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcac341f-2e9f-4589-ae01-2d8a0c366e8e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "2bf0d0f8e79c4ff2dd9cd50904bb2b9dc527d1bd8b7fc5806b439c6b5ac79743", "class_name": "RelatedNodeInfo"}}, "text": "d) du langage de haut niveau \u00e0 l'assembleur\n\nComme dit plus haut, un CPU est uniquement capable d'ex\u00e9cuter des instructions machines. Les instructions  des langages de  haut niveau  comme Python doivent \u00eatre \"\"transform\u00e9es\" en langage machine (compilation ou interpr\u00e9tation).\n\nVoici ce que pourrait donner la \"transformation\" d'un programme Python tout simple en langage machine (plus  pr\u00e9cis\u00e9ment ici en assembleur).\n\nVoici le programme Python :\n\n```\nx = 4\ny = 8\nif x == 10:\n\ty = 9\nelse :\n\tx=x+1\nz=6\n```\n\net voici maintenant voici son \u00e9quivalent en assembleur :\n\n```\n MOV R0, #4\n   STR R0,30\n   MOV R0, #8\n   STR R0,75\n   LDR R0,30\n   CMP R0, #10\n   BNE else\n   MOV R0, #9\n   STR R0,75\n   B endif\nelse:\n   LDR R0,30\n   ADD R0, R0, #1\n   STR R0,30\nendif:\n   MOV R0, #6\n   STR R0,23\n   HALT\n```\n\nComme vous  pouvez  le constater le moindre programme Python donne un programme assembleur relativement complexe.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 910, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a1f93ae-12ef-4f54-b1e7-81462ee3e6f3": {"__data__": {"id_": "4a1f93ae-12ef-4f54-b1e7-81462ee3e6f3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4328512-6ede-41f9-af02-28219ef8f0a6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "cf61fa6f7d8e4b67446720a8475cce666e636363cea9b49b0f5d281f571b1f21", "class_name": "RelatedNodeInfo"}}, "text": "2) architecture de von Neumann\n\nComme vous avez pu le constater dans les exemples ci-dessus, les donn\u00e9es et les instructions sont stock\u00e9es en m\u00e9moire vive, les donn\u00e9es et les instructions se partagent la m\u00e9moire vive (il n'y a pas une m\u00e9moire pour les instructions et une m\u00e9moire diff\u00e9rente pour les donn\u00e9es). C'est John von Neumann (math\u00e9maticien et physicien am\u00e9ricano-hongrois 1903-1957) qui a eu l'id\u00e9e en 1945 d'utiliser une structure de stockage unique pour les donn\u00e9es et les instructions, voil\u00e0 pourquoi on parle d'architecture de von Neumann. Voici un sch\u00e9ma qui repr\u00e9sente ce mod\u00e8le de von Neumann :\n\nmod\u00e8le de von Neumann d'apr\u00e8s le site https://interstices.info/ :\n\n!\n\nSur ce sch\u00e9ma, nous avons :\n\n- La m\u00e9moire qui correspond \u00e0 la RAM vue ci-dessus\n\n- L'unit\u00e9 arithm\u00e9tique et logique qui correspond \u00e0 l'UAL vu ci-dessus (l'accumulateur est un registre permettant de stocker les r\u00e9sultats interm\u00e9diaires lors d'un calcul)\n\n- L'unit\u00e9 de commande qui g\u00e8re l'ex\u00e9cution des instructions machines (voir ci-dessus). \u00c0 noter que cette unit\u00e9 de commande est aussi parfois appel\u00e9e \"unit\u00e9 de contr\u00f4le\"\n\n- Le syst\u00e8me \"entr\u00e9e-sortie\" qui permet de communiquer avec \"le monde ext\u00e9rieur\" au syst\u00e8me CPU+RAM (clavier, souris, \u00e9cran, carte graphique, disque dur...)\n\nEncore aujourd'hui, tous les ordinateurs fonctionnent sur ce principe d\u00e9fini par von Neumann. \u00c0 noter que John von Neumann \u00e9tait un v\u00e9ritable g\u00e9nie \"touche \u00e0 tout\" puisqu'il a laiss\u00e9 son nom dans l'histoire de la m\u00e9canique quantique, dans l'histoire de la th\u00e9orie des ensembles...et comme nous venons de le voir, dans l'histoire de l'informatique. Il a aussi particip\u00e9 \u00e0 l'\u00e9laboration de la bombe atomique am\u00e9ricaine lors de la 2e guerre mondiale (projet Manhattan).\n\nPendant des ann\u00e9es, pour augmenter les performances des ordinateurs, les constructeurs augmentaient la fr\u00e9quence d'horloge des microprocesseurs : la fr\u00e9quence d'horloge d'un microprocesseur est li\u00e9e \u00e0 sa capacit\u00e9 d'ex\u00e9cuter un nombre plus ou moins important d'instructions machines par seconde. Plus la fr\u00e9quence d'horloge du CPU est \u00e9lev\u00e9e, plus ce CPU est capable d'ex\u00e9cuter un grand nombre d'instructions machines par seconde (en fait, c'est un peu plus compliqu\u00e9 que cela, mais nous nous contenterons de cette explication).\n\n\u00e9volution de la fr\u00e9quence d'horloge du CPU dans le temps :\n\n!\n\nComme vous pouvez le remarquer sur le graphique ci-dessus, \u00e0 partir de 2006 environ, la fr\u00e9quence d'horloge a cess\u00e9 d'augmenter, pourquoi ? \u00c0 cause d'une contrainte physique : en effet plus on augmente la fr\u00e9quence d'horloge d'un CPU, plus ce dernier chauffe. Il devenait difficile de refroidir le CPU, les constructeurs de microprocesseurs (principalement Intel et AMD) ont d\u00e9cid\u00e9 d'arr\u00eater la course \u00e0 l'augmentation de la fr\u00e9quence d'horloge, ils ont d\u00e9cid\u00e9 d'adopter une nouvelle tactique.\n\nIl n'est plus vraiment possible d'augmenter les performances en augmentant la fr\u00e9quence d'horloge des CPU, et bien augmentons le nombre de coeurs pr\u00e9sent sur un CPU ! Mais qu'est qu'un coeur dans un microprocesseur ? Dans un microprocesseur, un coeur est principalement compos\u00e9 : d'une UAL, de registres (R0, R1...) et d'une unit\u00e9 de commande, un coeur est donc capable d'ex\u00e9cuter des programmes de fa\u00e7on autonome. La technologie permettant de graver toujours plus de transistors sur une surface donn\u00e9e, il est donc possible, sur une m\u00eame puce, d'avoir plusieurs coeurs, alors qu'auparavant on trouvait un seul coeur dans un CPU. Cette technologie a \u00e9t\u00e9 impl\u00e9ment\u00e9e dans les ordinateurs grand public \u00e0 partir de 2006. Aujourd'hui (en 2019) on trouve sur le march\u00e9 des CPU poss\u00e9dant jusqu'\u00e0 18 coeurs ! M\u00eame les smartphones poss\u00e8dent des microprocesseurs multicoeurs : le Snapdragon 845 poss\u00e8de 8 coeurs.\n\nOn pourrait se dire que l'augmentation du nombre de coeurs entra\u00eene obligatoirement une augmentation des performances du CPU, en faite, c'est plus que complexe que cela : pour une application qui n'aura pas \u00e9t\u00e9 con\u00e7ue pour fonctionner avec un microprocesseur multicoeur, le gain de performance sera tr\u00e8s faible, voir m\u00eame nul. En effet, la conception d'applications capables de tirer profit d'un CPU multicoeur demande la mise en place de certaines techniques de programmation (techniques de programmation qui ne seront pas abord\u00e9es ici). Il faut aussi avoir conscience que les diff\u00e9rents coeurs d'un CPU doivent se \"partager\" l'acc\u00e8s \u00e0 la m\u00e9moire vive : quand un coeur travaille sur une certaine zone de la RAM, cette m\u00eame zone n'est pas accessible aux autres coeurs, ce qui, bien \u00e9videmment va brider les performances. De plus, on trouve \u00e0 l'int\u00e9rieur des microprocesseurs de la m\u00e9moire \"ultrarapide\" appel\u00e9e m\u00e9moire cache (il ne faut pas confondre m\u00e9moire cache et registres). Le CPU peut stocker certaines donn\u00e9es dans cette m\u00e9moire cache afin de pouvoir y acc\u00e9der tr\u00e8s rapidement dans le futur, en effet, l'acc\u00e8s \u00e0 la m\u00e9moire cache est beaucoup plus rapide que l'acc\u00e8s \u00e0 la RAM. La m\u00e9moire cache ayant un coup assez important, la quantit\u00e9 pr\u00e9sente au sein d'un CPU est assez limit\u00e9e, les diff\u00e9rents coeurs vont donc devoir se partager cette m\u00e9moire cache, ce qui peut aussi provoquer des ralentissements (en faite il existe plusieurs types de m\u00e9moire cache appel\u00e9s L1, L2 et L3, chaque coeur poss\u00e8de son propre cache L1, alors que les caches L2 et L3 sont partag\u00e9s par les diff\u00e9rents coeurs).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 5321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47a12f4a-c087-415b-a458-f4872d3c94ba": {"__data__": {"id_": "47a12f4a-c087-415b-a458-f4872d3c94ba", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16cbe139-3d65-4e11-abe4-309c87ff3fe0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "bb3f1a1de6bcecc4818fdeb8ac54bb6bcca97856fc0fd0830fb13f7bf0fbc6c8", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce7bdadc-f534-4bff-a0ac-34a3a780e20f": {"__data__": {"id_": "ce7bdadc-f534-4bff-a0ac-34a3a780e20f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f51acbf6-d57b-4833-89ed-bfd26c23535b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "4feb41200136370566ab191ab16004fc3e880fcbe98b20c55e1854529cad2480", "class_name": "RelatedNodeInfo"}}, "text": "Des transistors aux circuits complexes\n- \u00e0 la base de la plupart des composants d'un ordinateur, on retrouve le transistor.\n\n- dans un ordinateur, les transistors sont regroup\u00e9s au sein de ce que l'on appelle des circuits int\u00e9gr\u00e9s. Dans un circuit int\u00e9gr\u00e9, les transistors sont grav\u00e9s sur des plaques de silicium\n\n- dans un ordinateur les transistors se comportent comme des interrupteurs : soit le transistor laisse passer le courant \u00e9lectrique (interrupteur ferm\u00e9, \u00e9tat haut), soit il ne le laisse pas passer (interrupteur ouvert, \u00e9tat bas).\n\n- on symbolise souvent l'\u00e9tat \"haut\" par le chiffre \"1\" et l'\u00e9tat \"bas\" par le chiffre \"0\"\n\n- un ordinateur ne \u201cconnait\u201d que 2 \u00e9tats (haut et bas ou 0 et 1), un ordinateur travaille donc en binaire\n\n- Le transistor est l'\u00e9l\u00e9ment de base des circuits logiques. Un circuit logique permet de r\u00e9aliser une op\u00e9ration bool\u00e9enne.\n\n- Il existe deux cat\u00e9gories de circuit logique :\n\n\t- les circuits combinatoires (les \u00e9tats en sortie d\u00e9pendent uniquement des \u00e9tats en entr\u00e9e)\n\n\t- les circuits s\u00e9quentiels (les \u00e9tats en sortie d\u00e9pendent des \u00e9tats en entr\u00e9e ainsi que du temps et des \u00e9tats ant\u00e9rieurs)\n\n- les portes logiques sont des circuits combinatoires. Il existe 4 types de portes logiques : la porte NON, la porte OU, la porte ET et la porte OU EXCLUSIF\n\n- \u00e0 chaque type de porte logique on associe une table de v\u00e9rit\u00e9 (vous devez conna\u00eetre ces tables)\n\n- en combinant les portes logiques, on obtient des circuits plus complexes (exemples : m\u00e9moire, additionneur\u2026)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3f04d30-a422-45e2-bdca-ebe69d037700": {"__data__": {"id_": "a3f04d30-a422-45e2-bdca-ebe69d037700", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "84b39fbf-ffb1-4ef5-b224-0f9c6046ac2c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "f79e23db26adb1ea2b774932d06464a43a190248caa965f0811d10dc16e0bbc8", "class_name": "RelatedNodeInfo"}}, "text": "Les diff\u00e9rents composants d\u2019un ordinateur\n\n- la m\u00e9moire vive ou RAM (Random Access Memory) : la m\u00e9moire vive permet de stocker des donn\u00e9es et des programmes. La m\u00e9moire vive est une m\u00e9moire volatile :\ntoutes les donn\u00e9es pr\u00e9sentes en m\u00e9moire sont perdues en cas de coupure de courant. Pour stocker les donn\u00e9es plus longtemps on utilisera la m\u00e9moire de masse\nqui elle, n\u2019est pas volatile (cl\u00e9 USB, disque dur, disque SSD\u2026)\n\n- Le microprocesseur ou CPU (Central Processing Unit) : Le microprocesseur est le \"coeur\" d'un ordinateur : les instructions sont ex\u00e9cut\u00e9es au niveau du CPU. Il est\nsch\u00e9matiquement constitu\u00e9 de 3 parties :\n\n\t- les registres permettent de m\u00e9moriser de l'information (donn\u00e9e ou instruction) au sein m\u00eame du CPU. Leur nombre et leur taille sont variables en fonction du type de microprocesseur.\n\n\t- L'unit\u00e9 arithm\u00e9tique et logique (UAL ou ALU en anglais) est charg\u00e9e de l'ex\u00e9cution de tous les calculs que peut r\u00e9aliser le microprocesseur. Nous allons retrouver dans cette UAL des circuits comme l'additionneur\n\n\t- L'unit\u00e9 de commande permet d'ex\u00e9cuter les instructions (les programmes)\n\n- Le bus : les donn\u00e9es doivent circuler entre les diff\u00e9rentes parties d\u2019un ordinateur, notamment entre la m\u00e9moire vive et le CPU. Le syst\u00e8me permettant cette circulation est appel\u00e9 bus. Il existe, sans entrer dans les d\u00e9tails, 3 grands types de bus :\n\n\t- Le bus d\u2019adresse permet de faire circuler des adresses (par exemple l\u2019adresse d\u2019une donn\u00e9e \u00e0 aller chercher en m\u00e9moire)\n\n\t- Le bus de donn\u00e9es permet de faire circuler des donn\u00e9es\n\n\t- Le bus de contr\u00f4le permet de sp\u00e9cifier le type d\u2019action (exemples : \u00e9criture d\u2019une donn\u00e9e en m\u00e9moire, lecture d\u2019une donn\u00e9e en m\u00e9moire).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1682, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37ad4827-5fba-4979-a723-81fe93ed72aa": {"__data__": {"id_": "37ad4827-5fba-4979-a723-81fe93ed72aa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7163d3c-9ca6-4f3c-b3c5-fc170be37502", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "aaee09726dc9ef121c6daf5d0ea2609404ea6f41e4e96aaeec049341dec06620", "class_name": "RelatedNodeInfo"}}, "text": "Architecture de von Neumann\n\nJohn von Neumann (math\u00e9maticien et physicien am\u00e9ricano-hongrois 1903-1957) a eu l'id\u00e9e en 1945 d'utiliser une structure de stockage unique pour les donn\u00e9es et les instructions , on parle d'architecture de von Neumann. Voici un sch\u00e9ma qui repr\u00e9sente ce mod\u00e8le de von\nNeumann :\n\nSur ce sch\u00e9ma, nous avons :\n\n!\n\n- La m\u00e9moire qui correspond \u00e0 la RAM vue ci-dessus\n\n- L'unit\u00e9 arithm\u00e9tique et logique qui correspond \u00e0 l'UAL vu ci-dessus (l'accumulateur est un registre permettant de stocker les r\u00e9sultats interm\u00e9diaires lors d'un calcul)\n\n- L'unit\u00e9 de commande qui g\u00e8re l'ex\u00e9cution des instructions machines. \u00c0 noter que cette unit\u00e9 de commande est aussi parfois appel\u00e9e \"unit\u00e9 de contr\u00f4le\"\n\n- Le syst\u00e8me \"entr\u00e9e-sortie\" qui permet de communiquer avec \"le monde ext\u00e9rieur\" au syst\u00e8me CPU+RAM (clavier, souris, \u00e9cran, carte graphique, disque dur...)\n\nLes ordinateurs actuels continuent de se baser sur l'architecture de von Neumann. Pendant tr\u00e8s longtemps les constructeurs ont cherch\u00e9 \u00e0 augmenter la fr\u00e9quence d\u2019horloge des CPU afin d\u2019am\u00e9liorer les performances, aujourd\u2019hui la tendance est plut\u00f4t \u00e0 l\u2019augmentation du\nnombre de coeurs", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db1b2035-fecf-4854-8552-cde431a5ca7f": {"__data__": {"id_": "db1b2035-fecf-4854-8552-cde431a5ca7f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45728774-bbb4-485a-9648-346fdf752c59", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a8b5db1431c0b546d509a59d67b8dc74cd9fbed13f282a772e1eb2dd32cddbdd", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nVous devez \u00eatre capable d\u2019\u00e9crire et de lire (et comprendre) des programmes simples en assembleur (en ayant en votre possession l\u2019aide m\u00e9moire sur l\u2019assembleur)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d1e95e6-c19f-4c3c-aaa2-825753164007": {"__data__": {"id_": "2d1e95e6-c19f-4c3c-aaa2-825753164007", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd938875-60e5-4699-a93a-db866ce29ff8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "379a348d0af0238ee76da7553eb2023ac79d5df3c74f689b6cf94cea3a069ddc", "class_name": "RelatedNodeInfo"}}, "text": "Afin de mettre en pratique ce que nous avons \u00e9tudi\u00e9 dans le cours \"Mod\u00e8le d'architecture de von Neumann\", nous allons utiliser un simulateur d\u00e9velopp\u00e9 par Peter L Higginson. Ce simulateur est bas\u00e9 sur une architecture de von Neumann. Nous allons trouver dans ce simulateur :\n\n- une RAM\n\n- un CPU\n\nUne version en ligne de ce simulateur est disponible ici :  http://www.peterhigginson.co.uk/AQA/\n\nVoici ce que vous devriez obtenir en vous rendant \u00e0 l'adresse indiqu\u00e9e ci-dessus :\n\nsimulateur d\u00e9velopp\u00e9 par Peter L Higginson\n\n!\n\nIl est relativement facile de distinguer les diff\u00e9rentes parties du simulateur :\n\n- \u00e0 droite, on trouve la m\u00e9moire vive (\"main memory\")\nau centre, on trouve le microprocesseur\n\n- \u00e0 gauche on trouve la zone d'\u00e9dition (\"Assembly Language\"), c'est dans cette zone que nous allons saisir nos programmes en assembleur\n\nRevenons sur les parties RAM et CPU", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 875, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54fbe5d4-94c6-4dbc-86c4-5351675c2ec0": {"__data__": {"id_": "54fbe5d4-94c6-4dbc-86c4-5351675c2ec0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d75ed7dc-1e15-4d52-b8c3-aa4253205994", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2ee0a06fcc1d4957815e3466f09d7420ee56808ef800c49bbcc0a8ec2c773f45", "class_name": "RelatedNodeInfo"}}, "text": "La RAM\n\nPar d\u00e9faut le contenu des diff\u00e9rentes cellules de la m\u00e9moire est en base 10 (entier sign\u00e9), mais d'autres options sont possibles : base 10 (entier non-sign\u00e9, \"unsigned\"), base 16 (\"hex\"), base 2 (\"binary\"). On acc\u00e8de \u00e0 ces options \u00e0 l'aide du bouton \"OPTIONS\" situ\u00e9 en bas dans la partie gauche du simulateur.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 319, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f03f0dd5-da0a-420e-9a2e-0173f24aa3f0": {"__data__": {"id_": "f03f0dd5-da0a-420e-9a2e-0173f24aa3f0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "06d1a82a-4899-48eb-88b0-cdd6f5bb0736", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "16ae71fde55e814e5971c98334b455d55bf9144d0a237f0f10f870c0382ac41f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.1\n\n\u00c0 l'aide du bouton \"OPTIONS\", passez \u00e0 un affichage en binaire.\n\nComme vous pouvez le constater, chaque cellule de la m\u00e9moire comporte 32 bits (nous avons vu que classiquement une cellule de RAM comporte 8 bits). Chaque cellule de la m\u00e9moire poss\u00e8de une adresse (de 000 \u00e0 199), ces adresses sont cod\u00e9es en base 10.\n\nVous pouvez repasser \u00e0 un affichage en base 10 (bouton \"OPTION\"->\"signed\")", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "934730b3-4668-4560-a4f5-a867c8112e2c": {"__data__": {"id_": "934730b3-4668-4560-a4f5-a867c8112e2c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d8ef0b81-1d20-4362-b004-6fe0ba30c4fb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "50dfadfe85b4d4171bd877853f018e08efe1e2eb671deb19930a6111cc9eb19c", "class_name": "RelatedNodeInfo"}}, "text": "Le CPU\n\nDans la partie centrale du simulateur, nous allons trouver en allant du haut vers le bas :\n\nle bloc \"registre\" (\"Registers\") : nous avons 13 registres (R0 \u00e0 R12) + 1 registre (PC) qui contient l'adresse m\u00e9moire de l'instruction en court d'ex\u00e9cution\nle bloc \"unit\u00e9 de commande\" (\"Control Unit\") qui contient l'instruction machine en cours d'ex\u00e9cution (au format hexad\u00e9cimal)\nle bloc \"unit\u00e9 arithm\u00e9tique et logique\" (\"Arithmetic and Logic Unit\")\nNous ne nous int\u00e9resserons pas aux autres composants de la partie CPU", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 523, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52e349da-7cdb-417c-82dd-255634f2ad0c": {"__data__": {"id_": "52e349da-7cdb-417c-82dd-255634f2ad0c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd9709d5-5f44-47ac-9029-843ff86a12f2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2a5595f552b58509b0ea33b91896d37a9bc07fedd23479535a6d5dad35fb7a2d", "class_name": "RelatedNodeInfo"}}, "text": "Programmer en assembleur\n\nComme d\u00e9j\u00e0 dit plus haut, la partie de gauche permet de saisir des programmes en assembleur. L'assembleur du simulateur correspond exactement \u00e0 l'assembleur que nous avons \u00e9tudi\u00e9 dans le cours \"mod\u00e8le d'architecture de von Neumann\", n'h\u00e9sitez pas \u00e0 consulter ce cours.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d75462b4-29c2-45b3-bbe6-7c62fa04ac1a": {"__data__": {"id_": "d75462b4-29c2-45b3-bbe6-7c62fa04ac1a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16b1632e-49af-40bb-8506-31808c47b56c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "43b62586bd725a605ccc6d17b8a6df915438936333a43f5d30db85120646cb84", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.2\n\nDans la partie \"\u00e9diteur\" (\"Assembly Language\") saisissez les lignes de codes suivantes\n\n```\nMOV R0,#42\nSTR R0,150\nHALT\n```\n\t\t\t\nUne fois la saisie termin\u00e9e, cliquez sur le bouton \"submit\". Vous devriez voir apparaitre des nombres \"\u00e9tranges\" dans les cellules m\u00e9moires d'adresses 000, 001 et 002 :\n\n!\n\nL'assembleur a fait son travail, il a converti les 3 lignes de notre programme en instructions machines, la premi\u00e8re instruction machine est stock\u00e9e \u00e0 l'adresse m\u00e9moire 000 (elle correspond \u00e0 \"MOV R0,#42\" en assembleur), la deuxi\u00e8me \u00e0 l'adresse 001 (elle correspond \u00e0 \"STR R0,150\" en assembleur) et la troisi\u00e8me \u00e0 l'adresse 002 (elle correspond \u00e0 \"HALT\" en assembleur) Pour avoir une id\u00e9e des v\u00e9ritables instructions machines, vous devez repasser \u00e0 un affichage en binaire ((bouton \"OPTION\"->\"binary\")). Vous devriez obtenir ceci :\n\n!\n\nNous pouvons donc maintenant affirmer que :\n\n- l'instruction machine *11100011\u200910100000\u200900000000\u200900101010* correspond au code assembleur *MOV R0,#42*\n- l'instruction machine *11100101\u200910001111\u200900000010\u200901001100* correspond au code assembleur *STR R0,150*\n\n- l'instruction machine *11101111\u200900000000\u200900000000\u200900000000* correspond au code assembleur *HALT*\n\nAu passage, pour l'instruction machine *11100011\u200910100000\u200900000000\u200900101010*, vous pouvez remarquer que l'octet le plus \u00e0 droite, 001010102, est bien \u00e9gale \u00e0 4210 !\n\nRepassez \u00e0 un affichage en base 10 afin de faciliter la lecture des donn\u00e9es pr\u00e9sentes en m\u00e9moire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7077c9d6-d58a-470d-b8d0-9ce5a248283d": {"__data__": {"id_": "7077c9d6-d58a-470d-b8d0-9ce5a248283d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66fe3bfa-48e0-4808-abf4-dbda2c24efca", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "479bfc174f079673f2a3b29d0e8774595f4812a9482f127c838aac8fcc5aedd4", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.3\n\nPour ex\u00e9cuter notre programme, il suffit maintenant de cliquer sur le bouton \"RUN\". Vous allez voir le CPU \"travailler\" en direct gr\u00e2ce \u00e0 de petites animations. Si cela va trop vite (ou trop doucement), vous pouvez r\u00e9gler la vitesse de simulation \u00e0 l'aide des boutons \">\". Un appui sur le bouton \"STOP\" met en pause la simulation, si vous rappuyez une deuxi\u00e8me fois sur ce m\u00eame bouton \"STOP\", la simulation reprend l\u00e0 o\u00f9 elle s'\u00e9tait arr\u00eat\u00e9e.\n\nUne fois la simulation termin\u00e9e, vous pouvez constater que la cellule m\u00e9moire d'adresse 150, contient bien le nombre 42 (en base 10). Vous pouvez aussi constater que le registre R0 a bien stock\u00e9 le nombre 42.\n\n!\n!\n\nATTENTION : pour relancer la simulation, il est n\u00e9cessaire d'appuyer sur le bouton \"RESET\" afin de remettre les registres R0 \u00e0 R12 \u00e0 0, ainsi que le registre PC (il faut que l'unit\u00e9 de commande pointe de nouveau sur l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 000). La m\u00e9moire n'est pas modifi\u00e9e par un appui sur le bouton \"RESET\", pour remettre la m\u00e9moire \u00e0 0, il faut cliquer sur le bouton \"OPTIONS\" et choisir \"clr memory\". Si vous remettez votre m\u00e9moire \u00e0 0, il faudra cliquer sur le bouton \"ASSEMBLE\" avant de pouvoir ex\u00e9cuter de nouveau votre programme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1231, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50a16d67-00a9-4c58-8117-c3a9803655ec": {"__data__": {"id_": "50a16d67-00a9-4c58-8117-c3a9803655ec", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "406c6cdb-5657-4f83-b11a-79e014f1cad6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "021529eb4e55f52b8885c5df8f8002595c6d51574c7bc83559c60806b0fd835b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.4\n\nModifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place du registre R0. Testez vos modifications en ex\u00e9cutant la simulation.\n\nLe simulateur prend en charge les labels :", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6cb2874-fbb3-44a7-9178-c682223b5a98": {"__data__": {"id_": "f6cb2874-fbb3-44a7-9178-c682223b5a98", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55bf25df-e88a-4f7e-b25a-0b324fe9091b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "94c0f39e41b717db9bfda48c7d29a7058ad7295097b8c347d7e26d14370b944a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.5\n\nSaisissez et testez le programme suivant :\n\n```\n   MOV R0, #4\n   STR R0,30\n   MOV R0, #8\n   STR R0,75\n   LDR R0,30\n   CMP R0, #10\n   BNE else\n   MOV R0, #9\n   STR R0,75\n   B endif\nelse:\n   LDR R0,30\n   ADD R0, R0, #1\n   STR R0,30\nendif:\n   MOV R0, #6\n   STR R0,23\n   HALT\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6090556-16a2-4f9e-827e-19a7261de1ff": {"__data__": {"id_": "d6090556-16a2-4f9e-827e-19a7261de1ff", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a7dbcf7-7a7d-445d-8f84-41e4658f9e2b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ad8d6a4c80888b67f19fdf208c1e3f2e8af1e1633982b51192caa6d0ae5f0bf3", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.6\n\nVoici un programme Python :\n\n```\nx=0\nwhile x<3:\n   x=x+1\n```\n\n\u00c9crivez et testez un programme en assembleur \u00e9quivalent au programme ci-dessus.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 157, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a9c5ba2-3d2a-46fd-947f-957eb27b25b1": {"__data__": {"id_": "9a9c5ba2-3d2a-46fd-947f-957eb27b25b1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ffc74536-f958-44d4-a934-1d5f93aaa6b7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c2546e4a14368405997558b4ff98c2d24a145c3321a02bd564b65b9743db58d8", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 10.1\n\nFaites \"tourner \u00e0 la main\" l'algorithme \"x est-il pr\u00e9sent dans le tableau t ?\" (voir ci-dessous) avec t=[5,8,15,53] et x=12\n\n```\nVARIABLE\nt : tableau d'entiers\nx : nombre entier\ntr : bool\u00e9en (VRAI ou FAUX)\ni : nombre entier\nDEBUT\ntr \u2190 FAUX\ni \u2190 1\ntant que i<=longueur(t) et que tr==FAUX:\n  si t[i]==x:\n    tr \u2190 VRAI\n  fin si\n  i \u2190 i+1\nfin tant que\nrenvoyer la valeur de tr\nFIN\n```\n\nQuelle la complexit\u00e9 dans le pire des cas de cet algorithme ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 459, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03ee442d-2644-4397-9080-58693bc53bb3": {"__data__": {"id_": "03ee442d-2644-4397-9080-58693bc53bb3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d221c685-94d4-4035-b833-ecff278f92ae", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1a037cfa558a42b794eb63cd256bf56c1d9709edecfd74da1d4b4285a050543b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 10.2\n\n\u00c9crivez un algorithme permettant de trouver le plus grand entier pr\u00e9sent dans un tableau. Vous ferez \"tourner \u00e0 la main\" votre algorithme en utilisant le tableau t = [3,5,1,8,4,2]. Vous d\u00e9terminerez ensuite la complexit\u00e9 de votre algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 258, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a6a6fae-bb8c-4777-aa39-1db6d12858af": {"__data__": {"id_": "9a6a6fae-bb8c-4777-aa39-1db6d12858af", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f4421b6-b7cb-461e-b60c-c820f8baf627", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "29c0fae650385f6d483001b109c7b3e48037de236aec4025979be09bac02021f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 10.3\n\n\u00c9crivez un algorithme permettant de calculer la moyenne de tous les entiers pr\u00e9sents dans un tableau. Vous ferez \"tourner \u00e0 la main\" votre algorithme en utilisant le tableau t = [3,5,1,8,4,2]. Vous d\u00e9terminerez ensuite la complexit\u00e9 de votre algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06f0b7c7-6c82-4adb-bf3d-4ac83d90ee20": {"__data__": {"id_": "06f0b7c7-6c82-4adb-bf3d-4ac83d90ee20", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "776da2b8-81ea-43fd-bb9e-fc4a5c7727bd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b3fe4d7608cdb51191d130cf3401ae610556ca35f8c6256e2d7b01f645744a72", "class_name": "RelatedNodeInfo"}}, "text": "1) Qu'est-ce qu'un algorithme\n\nPour commencer, je vous conseille de visionner la vid\u00e9o de David Louapre (chaine YouTube \"Science \u00e9tonnante\"). Dans cette vid\u00e9o, David aborde quasiment toutes les notions qui seront vues ci-dessous (mais il va aussi plus loin...).\n\nhttps://www.youtube.com/watch?v=AgtOCNCejQ8\n\nLa notion d'algorithme est souvent associ\u00e9e \u00e0 l'informatique, pourtant le terme algorithme vient du nom du math\u00e9maticien perse du 9e si\u00e8cle Muhammad Ibn M\u016bs\u0101 al-Khuw\u0101rizm\u012b. La notion d'algorithme est donc tr\u00e8s ant\u00e9rieure \u00e0 la cr\u00e9ation du premier ordinateur.\n\nM\u016bs\u0101 al-Khuw\u0101rizm\u012b :\n\n!\n\nMais qu'est-ce qu'un algorithme ?\n\nVoici deux d\u00e9finitions trouv\u00e9es dans la litt\u00e9rature :\n\n- Proc\u00e9dure de calcul bien d\u00e9finie qui prend en entr\u00e9e une valeur ou un ensemble de valeur, et qui donne en sortie une valeur ou un ensemble de valeur.\n\n- Un algorithme est la sp\u00e9cification d'un sch\u00e9ma de calcul sous forme d'une suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un enchainement d\u00e9termin\u00e9.\n\nLe terme \"calcul\" revient dans les 2 d\u00e9finitions, un algorithme effectue donc des calculs (encore faudrait-il d\u00e9finir pr\u00e9cis\u00e9ment ce terme de \"calcul\", mais cela nous entra\u00eenerait trop loin).\n\nPour concevoir un algorithme, la 2e d\u00e9finition nous pr\u00e9cise qu'il est n\u00e9cessaire de d\u00e9finir \"une suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un enchainement d\u00e9termin\u00e9\". L'ordre dans lequel nous allons d\u00e9finir nos \"op\u00e9rations \u00e9l\u00e9mentaires\" va donc avoir son importance. Mais, qu'est-ce qu'une \"op\u00e9ration \u00e9l\u00e9mentaire\" ? Ici aussi, d\u00e9finir \"op\u00e9ration \u00e9l\u00e9mentaire\" n'est pas chose ais\u00e9e ! On peut tout de m\u00eame dire qu'une \"op\u00e9ration \u00e9l\u00e9mentaire\" est une action simple, qui doit \u00eatre facilement compr\u00e9hensible pour la personne charg\u00e9e d'effectuer cette action. L'action \"Peser 100 g de farine\" peut \u00eatre consid\u00e9r\u00e9e comme une \"op\u00e9ration \u00e9l\u00e9mentaire\", en effet, tout le monde est capable de comprendre ce que cela signifie et la r\u00e9alisation de cette op\u00e9ration ne pr\u00eate ni \u00e0 interpr\u00e9tation, ni \u00e0 confusion. En revanche \"Prendre de la farine, des oeufs, du sucre et du chocolat afin de faire un g\u00e2teau au chocolat\" n'est clairement pas une \"op\u00e9ration \u00e9l\u00e9mentaire\", car l'action d\u00e9crite ici manque de pr\u00e9cision, c'est une op\u00e9ration complexe (m\u00eame si dans la pratique il n'est pas tr\u00e8s difficile de faire un g\u00e2teau au chocolat, ce n'est pas \u00e9vident pour quelqu'un qui n'a pas l'habitude). La fronti\u00e8re entre \"op\u00e9ration \u00e9l\u00e9mentaire\" et \"op\u00e9ration complexe\" n'est pas toujours \u00e9vidente, en effet, l'op\u00e9ration \"Peser 100 g de farine\" pourrait \u00eatre encore plus pr\u00e9cise : \"mettre la balance \u00e0 z\u00e9ro (faire la tare), verser ensuite de la farine sur le plateau de la balance jusqu'\u00e0 ce que le nombre 100 soit affich\u00e9 sur l'\u00e9cran de la balance\"\n\n\u00c0 noter que \"proc\u00e9dure de calcul bien d\u00e9fini\" dans la premi\u00e8re d\u00e9finition est \u00e9quivalent \u00e0 \"suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un enchainement d\u00e9termin\u00e9\" dans la deuxi\u00e8me d\u00e9finition. Personnellement, je trouve la deuxi\u00e8me d\u00e9finition plus explicite.\n\nOn pourrait r\u00e9sumer ce qu'est un algorithme par le sch\u00e9ma suivant :\n\n!\n\nPrenons un exemple concret :\n\nNous allons \u00e9tudier cette ann\u00e9e, ainsi que l'ann\u00e9e prochaine, des algorithmes de tri pour les tableaux (un tableau ressemble beaucoup \u00e0 une liste en Python, m\u00eame si ce n'est pas exactement la m\u00eame chose). Nous avons en entr\u00e9e un tableau non tri\u00e9 et nous obtenons en sortie un tableau tri\u00e9 :\n\n!\n\nLa \"valeur de sortie\" n'est pas obligatoirement du m\u00eame type que la \"valeur d'entr\u00e9e\". Prenons l'exemple d'un algorithme qui prend en entr\u00e9e un tableau t d'entiers et un entier x, et qui \"r\u00e9pond\" par \"oui\" ou par \"non\" \u00e0 la question \"x est-il pr\u00e9sent dans le tableau t ?\". Dans ce cas, la \"valeur de sortie\" sera \"oui\" ou \"non\".\n\n!\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3712, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e58b3e28-99ba-4f17-897a-071ace42d589": {"__data__": {"id_": "e58b3e28-99ba-4f17-897a-071ace42d589", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5eb47cf-3001-47a7-bdbe-5f46fec9929e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "54a4cbfe03e69496da43f4cb17c6a26fe8f2be70926bbe6ec241f7ae13ab1866", "class_name": "RelatedNodeInfo"}}, "text": "2) un premier algorithme\n\nEssayons d'\u00e9crire l'algorithme d\u00e9crit ci-dessus :\n\nNous devons trouver la suite d'op\u00e9rations \u00e9l\u00e9mentaires qui permettra de r\u00e9pondre \u00e0 la question : \"x est-il pr\u00e9sent dans le tableau t ?\"\n\n```\nVARIABLE\nt : tableau d'entiers\nx : nombre entier\ntr : bool\u00e9en (VRAI ou FAUX)\ni : nombre entier\nDEBUT\ntr \u2190 FAUX\ni \u2190 1\ntant que i<=longueur(t) et que tr==FAUX:\n  si t[i]==x:\n    tr \u2190 VRAI\n  fin si\n  i \u2190 i+1\nfin tant que\nrenvoyer la valeur de tr\nFIN\n```\n\nRemarques :\n\n- Quand on \u00e9crit un algorithme, on utilise un langage dit \"langage naturel\" (\"tant que\", \"si\"...), ce langage naturel permet de passer facilement \u00e0 un langage de programmation (Python, Java...), on dit alors que l'on impl\u00e9mente l'algorithme.\n\n- Traditionnellement (sauf erreur de ma part, ce n'est pas une obligation), lorsque l'on \u00e9crit un algorithme le premier \u00e9l\u00e9ment d'un tableau a pour indice 1 (alors que dans la plupart des langages de programmation le premier \u00e9l\u00e9ment d'un tableau a pour indice 0). Il faut donc faire attention \u00e0 cela lorsque l'on veut impl\u00e9menter un algorithme.\n\n- Dans l'algorithme ci-dessus, on part du principe qu'il existe une fonction \"longueur\" qui prend en param\u00e8tre un tableau et qui renvoie le nombre d'\u00e9l\u00e9ments pr\u00e9sents dans ce tableau. Vous noterez que d\u00e9terminer le nombre d'\u00e9l\u00e9ments pr\u00e9sents dans un tableau n'est pas vraiment une \"op\u00e9ration \u00e9l\u00e9mentaire\", pourtant ici, on consid\u00e8re l'utilisation de \"longueur\" comme une op\u00e9ration \u00e9l\u00e9mentaire ! Il arrive relativement souvent que l'on s'autorise ce genre de libert\u00e9 quand on \u00e9crit un algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "337a0202-9196-49e5-bade-50c9d36d4f2c": {"__data__": {"id_": "337a0202-9196-49e5-bade-50c9d36d4f2c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2ef1a9a-3783-4567-9000-5a9356a89fb3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "9d56715f805a687ca6dfbb7959dcbc79a747741d23f117d085b5ea09474fc523", "class_name": "RelatedNodeInfo"}}, "text": "3) \u00c9tudier un algorithme\n\nLa premi\u00e8re chose \u00e0 faire quand on \u00e9tudie un algorithme, c'est de le \"faire tourner \u00e0 la main\" : on \"ex\u00e9cute\" l'algorithme en utilisant uniquement une feuille et un crayon. Voil\u00e0 ce que cela pourrait donner avec l'algorithme que nous venons d'\u00e9crire :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17afadcb-c53b-498b-bba5-42075596f5b2": {"__data__": {"id_": "17afadcb-c53b-498b-bba5-42075596f5b2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "221383d5-9013-4a6e-8b30-d94770a8b324", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "de75d7e4940bcc95ce32850828c158cc024bf40a9adcec82fde6dea227802507", "class_name": "RelatedNodeInfo"}}, "text": "4) complexit\u00e9 d'un algorithme\n\nLa notion de complexit\u00e9 d'un algorithme va rendre compte de l'efficacit\u00e9 de cet algorithme. Pour un m\u00eame probl\u00e8me, par exemple trier un tableau, il existe plusieurs algorithmes, certains algorithmes sont plus efficaces que d'autres (par exemple un algorithme A mettra moins de temps qu'un algorithme B pour r\u00e9soudre exactement le m\u00eame probl\u00e8me, sur la m\u00eame machine).\n\nIl existe 2 types de complexit\u00e9 : une complexit\u00e9 en temps et une complexit\u00e9 en m\u00e9moire. Nous nous int\u00e9resserons ici uniquement \u00e0 la complexit\u00e9 en temps. La complexit\u00e9 en temps est directement li\u00e9e au nombre d'op\u00e9rations \u00e9l\u00e9mentaires qui doivent \u00eatre ex\u00e9cut\u00e9es afin de r\u00e9soudre un probl\u00e8me donn\u00e9. L'\u00e9valuation de ce nombre d'op\u00e9rations \u00e9l\u00e9mentaires n'est pas chose facile, on rencontre souvent des cas litigieux. Prenons tout de suite un exemple avec notre algorithme \"x est-il pr\u00e9sent dans le tableau t ?\".\n\nIl y a 2 cas \u00e0 traiter :\n\n- L'entier recherch\u00e9 est bien pr\u00e9sent dans le tableau, il se trouve \u00e0 la position d'index j\n\n- L'entier recherch\u00e9 n'est pas pr\u00e9sent dans le tableau\nCommen\u00e7ons par le premier cas :\n\n```\nVARIABLE\nt : tableau d'entiers\nx : nombre entier\ntr : bool\u00e9en (VRAI ou FAUX)\ni : nombre entier\nDEBUT\n1 fois   tr \u2190 FAUX\n1 fois   i \u2190 1\nj+1 fois tant que i<=longueur(t) et que tr==FAUX:\nj fois      si t[i]==x:\n1 fois       tr \u2190 VRAI\n           fin si\nj fois     i \u2190 i+1\n        fin tant que\n1 fois  renvoyer la valeur de tr\nFIN\n```\n\nAu total nous avons : 1 + 1 + j + 1 + j + 1 + j + 1 = 3j + 5 op\u00e9rations \u00e9l\u00e9mentaires\n\nDans le cas o\u00f9 l'entier recherch\u00e9 ne se trouve pas dans le tableau (et que le nombre d'\u00e9l\u00e9ments dans le tableau est n) :\n\n```\nVARIABLE\nt : tableau d'entiers\nx : nombre entier\ntr : bool\u00e9en (VRAI ou FAUX)\ni : nombre entier\nDEBUT\n1 fois   tr \u2190 FAUX\n1 fois   i \u2190 1\nn+1 fois tant que i<=longueur(t) et que tr==FAUX:\nn fois      si t[i]==x:\n0 fois       tr \u2190 VRAI\n           fin si\nn fois     i \u2190 i+1\n        fin tant que\n1 fois  renvoyer la valeur de tr\nFIN\n```\n\nAu total nous avons : 1 + 1 + n + 1 + n + 0 + n + 1 = 3n + 4 op\u00e9rations \u00e9l\u00e9mentaires\n\nComme dans la plupart des cas n > j, on effectue plus d'op\u00e9rations \u00e9l\u00e9mentaires quand le nombre recherch\u00e9 n'est pas dans le tableau (sauf dans le cas pr\u00e9cis o\u00f9 l'entier recherch\u00e9 est en derni\u00e8re position, mais nous ne tiendrons pas compte de ce cas). On parle de \"complexit\u00e9 dans le pire des cas\" quand on s'int\u00e9resse uniquement au cas o\u00f9 le nombre d'op\u00e9rations \u00e9l\u00e9mentaires est le plus grand. Dans la suite nous nous int\u00e9resserons uniquement \u00e0 cette complexit\u00e9 dans le pire des cas (dans la suite \"complexit\u00e9\" = \"complexit\u00e9 en temps dans le pire des cas\"). Pour notre exemple, nous consid\u00e9rerons uniquement le cas o\u00f9 le nombre total d'op\u00e9rations \u00e9l\u00e9mentaires est de 3n + 4.\n\nNous venons de voir que la complexit\u00e9 d\u00e9pend de la taille du tableau, plus le tableau est grand et plus le nombre d'op\u00e9rations \u00e9l\u00e9mentaires \u00e0 effectuer est important. Pour effectuer des comparaisons entre plusieurs algorithmes, nous allons raisonner sur des tableaux de grande taille, car plus les tableaux sont grands et plus les diff\u00e9rences entre les algorithmes seront flagrantes. Pour comparer des algorithmes, nous allons donc uniquement nous int\u00e9resser \u00e0 ce que l'on appelle \"l'ordre de grandeur asymptotique\". La d\u00e9finition pr\u00e9cise de cet \"ordre de grandeur asymptotique\" est trop complexe pour \u00eatre abord\u00e9 ici. Vous devez juste savoir que cet \"ordre de grandeur asymptotique\" concerne les cas o\u00f9 l'on prend n tr\u00e8s tr\u00e8s grand. On note cet \"ordre de grandeur asymptotique\" avec un O majuscule. Pour le cas qui nous int\u00e9resse, nous aurons :\n\n3n+4 = O(n)\n\nLa relation ci-dessus signifie que \"3n+4 est domin\u00e9e asymptotiquement par n\", autrement dit \"si n est suffisamment grand, il existe une constante c qui permettra d'avoir c.n \u2a7e 3n+4\", vous n'avez pas tout compris ? Cela n'a pas vraiment d'importance, ce qu'il faut retenir c'est que nous utiliserons syst\u00e9matiquement cette notation O pour exprimer la complexit\u00e9 des algorithmes : au final on dira donc que la complexit\u00e9 de notre algorithme \"x est-il pr\u00e9sent dans le tableau t ?\" est O(n).\n\nComment obtient-on cette notation O \u00e0 partir du nombre d'op\u00e9rations \u00e9l\u00e9mentaires ?\n\nIci nous avons simplement supprim\u00e9 la constante (4) et le coefficient devant le n (c'est-\u00e0-dire 3), il reste donc uniquement n d'o\u00f9 le 3n+4 = O(n). Dans le cas o\u00f9 nous avons un polyn\u00f4me de degr\u00e9s quelconque, par exemple pour 6n2+3n+10, il suffit de :\n\n- supprimer la constante\n\n- garder uniquement le n qui poss\u00e8de l'exposant le plus grand\n\n- supprimer le coefficient devant le n\n\nOn aura donc 6n2+3n+10 = O(n2) : \"6n2+3n+10 est domin\u00e9e asymptotiquement par n2\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 4652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37ef492a-70d5-4c93-a57e-075ea43232b5": {"__data__": {"id_": "37ef492a-70d5-4c93-a57e-075ea43232b5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10r.md", "file_name": "termc10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "883efc58-86b7-4a78-a8cb-d45395be1e96", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10r.md", "file_name": "termc10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8ee90c8d5696d6d5e98dabf0471322c50749a2d398109599dd1ddf41410f65c7", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Un algorithme est la sp\u00e9cification d'un sch\u00e9ma de calcul sous forme d'une suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un encha\u00eenement d\u00e9termin\u00e9.\n\n- Quand on \u00e9crit un algorithme, on utilise un langage dit \"langage naturel\" (\"tant que\", \"si\"...), ce langage naturel permet de passer facilement \u00e0 un langage de\nprogrammation (Python, Java...), on dit alors que l'on impl\u00e9mente l'algorithme.\n\n- La notion de complexit\u00e9 d'un algorithme va rendre compte de l'efficacit\u00e9 de cet algorithme. Il existe 2 types de complexit\u00e9 : une complexit\u00e9 en temps et une\ncomplexit\u00e9 en m\u00e9moire. Nous nous int\u00e9resserons ici uniquement \u00e0 la complexit\u00e9 en temps. La complexit\u00e9 en temps est directement li\u00e9e au nombre d'op\u00e9rations\n\u00e9l\u00e9mentaires qui doivent \u00eatre ex\u00e9cut\u00e9es afin de r\u00e9soudre un probl\u00e8me donn\u00e9.\n\n- Nous nous int\u00e9resserons uniquement \u00e0 la complexit\u00e9 en temps \u201cdans le pire cas\u201d\n\n- Pour comparer des algorithmes, nous allons uniquement nous int\u00e9resser \u00e0 ce que l'on appelle \"l'ordre de grandeur asymptotique\" (notation O)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1035, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e5c272c-7f1e-49b2-a200-638e31a12ad6": {"__data__": {"id_": "7e5c272c-7f1e-49b2-a200-638e31a12ad6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10r.md", "file_name": "termc10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4264a5bf-8a0d-4f20-8f2b-2bc4c7197ef7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10r.md", "file_name": "termc10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1e4a8b7b55757dc992022eb59231758f77af27145c7603ddb070f98bd512b62d", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable d\u2019analyser le fonctionnement d\u2019un algorithme (faire tourner un algorithme \u201c\u00e0 la main\u201d)\n\n- vous devez \u00eatre capable de d\u00e9terminer la complexit\u00e9 en temps dans le pire des cas d\u2019un algorithme (exemples : O(n), O(n2), O(log2(n))...)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "640e6e3a-edf9-4e79-8ce3-308eef9d5672": {"__data__": {"id_": "640e6e3a-edf9-4e79-8ce3-308eef9d5672", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "14e10ba4-ad7c-4720-a8c0-800754e13e9c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "709e6955c0cdfca95ad49f2517b88d744a7678bb455e64f486232569ef399180", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.1\n\nLe sch\u00e9ma ci-dessous illustre le principe de fonctionnement du tri par insertion pour le tableau [27, 10, 12, 8, 11]\n\n!\n\nProduisez un sch\u00e9ma \u00e9quivalent pour le tableau [12, 8, 23, 10, 15]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ab0ad77-404a-4ad6-a7d2-99036243ae8c": {"__data__": {"id_": "4ab0ad77-404a-4ad6-a7d2-99036243ae8c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6456a82-4d84-4afe-8328-3cd17fbf6367", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "f868fa4e5942e4105478a1cd5a10e1d1c171d9323f035a2eb26549f76e6b62cc", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.2\n\nLe sch\u00e9ma ci-dessous illustre le principe de fonctionnement du tri par s\u00e9lection pour le tableau [12, 8, 23, 10, 15]\n\n!\n\nProduisez un sch\u00e9ma \u00e9quivalent pour le tableau [15, 16, 11, 13, 12]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 205, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ccccba6-924c-47a0-8cfa-5da1eca00bea": {"__data__": {"id_": "1ccccba6-924c-47a0-8cfa-5da1eca00bea", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0606545f-7a28-477d-af67-d257770ed5e3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "157255bdda535976dc325c059fcfc4f4963c336d75296d080fd692530befa631", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.3\n\nSoit l'algorithme du tri par insertion :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nj : nombre entier\nk : nombre entier\nDEBUT\nj\u21902\ntant que j<=longueur(t):  \n  i\u2190j-1\n  k\u2190t[j]\n  tant que i>0 et que t[i]>k:\n    t[i+1]\u2190t[i]\n    i\u2190i-1\n  fin tant que\n  t[i+1]\u2190k\n  j\u2190j+1\nfin tant que\nFIN\n```\n\nAppliquez cet algorithme au tableau  t = [27, 10, 12, 8, 11] et v\u00e9rifiez que vous obtenez bien le tableau [8, 10, 11, 12, 27]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7cae8d57-3cc6-456f-91ab-88fc3578c9b6": {"__data__": {"id_": "7cae8d57-3cc6-456f-91ab-88fc3578c9b6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "289f7679-e7d5-481a-b429-72389e2c707c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "90a4883ba817db87c920255d184da13145387c49caf29236f8aedb94485eaee6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.4\n\nSoit l'algorithme du tri par s\u00e9lection :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nmin : nombre entier\nj : nombre entier\nDEBUT\ni\u21901\ntant que i<longueur(t):  \n  j\u2190i+1\n  min\u2190i\n  tant que j<=longueur(t):  \n    si t[j]<t[min]:\n      min\u2190j\n    fin si\n    j\u2190j+1\n  fin tant que\n  si min\u2260i :\n    \u00e9changer t[i] et t[min]\n  fin si\n  i\u2190i+1\nfin tant que\nFIN\n```\n\nAppliquez cet algorithme au tableau  t = [27, 10, 12, 8, 11] et v\u00e9rifiez que vous obtenez bien le tableau [8, 10, 11, 12, 27]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e0ccc4dc-42a7-422d-b7c6-738c5e8924c2": {"__data__": {"id_": "e0ccc4dc-42a7-422d-b7c6-738c5e8924c2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "73a3cb42-1fc1-4821-98c2-50bb190db47a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "04ab181b06414b6449400c7c8a6a53c0ff49517965bbaeeb579b2818f6b1720d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.5\n\nProposez une impl\u00e9mentation en Python de l'algorithme de tri par insertion. Vous testerez votre programme \u00e0 l'aide du tableau t = [15, 16, 11, 13, 12]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec628ec3-4d2f-4763-b3aa-e2fd23ae1739": {"__data__": {"id_": "ec628ec3-4d2f-4763-b3aa-e2fd23ae1739", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9781e5c-a7cb-4022-991c-ef7559a420b9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "1d6c88b46f74069cb26648c8af3e765383bbca7277ab2d37adae0678afb193b7", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 11.6\n\nProposez une impl\u00e9mentation en Python de l'algorithme de tri par s\u00e9lection. Vous testerez votre programme \u00e0 l'aide du tableau t = [15, 16, 11, 13, 12]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69395d8d-c7ab-469f-8e8c-b70c223c3818": {"__data__": {"id_": "69395d8d-c7ab-469f-8e8c-b70c223c3818", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de335cd2-cdf7-4d23-9c32-4f345abb07d6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "72f8f314ebe663730497725d03544fbd420381ea463ca5635143d4d96dd1db26", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nLes algorithmes de tri des \u00e9l\u00e9ments d'un tableau ont une place \u00e0 part en algorithmique. En effet, ils sont souvent utilis\u00e9s pour mettre en \u00e9vidence certains concepts algorithmiques (concepts que l'on retrouve dans d'autres types d'algorithmes). Nous allons commencer par 2 algorithmes \"classiques\" : le tri par insertion et le tri par s\u00e9lection.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74095650-1c4f-499f-9d70-630004b5912e": {"__data__": {"id_": "74095650-1c4f-499f-9d70-630004b5912e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "245a971e-72fa-432e-a55b-2cb77ab9531c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "6f4959439800b65412dde9c7764d6064a5238c01c536e61b523794d3c365c3fc", "class_name": "RelatedNodeInfo"}}, "text": "2) Tri par insertion", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a36e9c2-8033-49d1-9b04-a6a88631e40a": {"__data__": {"id_": "2a36e9c2-8033-49d1-9b04-a6a88631e40a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7887dbb-f3d9-43ae-a923-bcb364a8a6b6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "cb61aa8a7e8bd3db618a582bdae17b251f5dcc1e2d91b995d7340d24803cd517", "class_name": "RelatedNodeInfo"}}, "text": "a)  algorithme du tri par insertion\n\nPour commencer, voici une vid\u00e9o qui explique le principe du tri par insertion :\n\nhttps://www.youtube.com/watch?v=bRPHvWgc6YM\n\nOn peut r\u00e9sumer le principe de fonctionnement de l'algorithme de tri par insertion avec le sch\u00e9ma suivant :\n\n!\n\nVoici l'algorithme du tri par insertion :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nj : nombre entier\nk : nombre entier\nDEBUT\ni\u21902\ntant que i<=longueur(t):  \n  j\u2190i-1\n  k\u2190t[i]\n  tant que j>0 et que t[j]>k: \n    t[j+1]\u2190t[j]\n    j\u2190j-1\n  fin tant que\n  t[j+1]\u2190k\n  i\u2190i+1\nfin tant que\nFIN\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc7dcffc-0cb8-4bff-a53d-72d2e042bbd5": {"__data__": {"id_": "cc7dcffc-0cb8-4bff-a53d-72d2e042bbd5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c0df6641-4909-45c6-8865-183103a64297", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "340db53889cb1ac4babc67c0997a3687769b23e7a66c62a34ad98f53a9ead374", "class_name": "RelatedNodeInfo"}}, "text": "b) complexit\u00e9 du tri par insertion\n\nEssayons maintenant de d\u00e9terminer la complexit\u00e9 de l'algorithme de tri par insertion :\n\nComme pr\u00e9c\u00e9demment nous nous int\u00e9resserons \u00e0 la complexit\u00e9 en temps dans le pire des cas. \u00c0 quoi correspond le pire des cas pour un algorithme de tri ? Tout simplement quand le tableau initial est \"tri\u00e9 \u00e0 l'envers\" (les entiers sont class\u00e9s du plus grand au plus petit), comme dans cet exemple : t = [5, 4, 3, 2, 1].\n\nPour d\u00e9terminer la complexit\u00e9 de l'algorithme de tri par insertion nous n'allons pas rechercher le nombre d'op\u00e9rations \u00e9l\u00e9mentaires, mais, pour souci de simplicit\u00e9, directement nous int\u00e9resser au \"nombre de d\u00e9calages effectu\u00e9s\" pour trier enti\u00e8rement un tableau. J'appelle \"d\u00e9calage\" ce qui est symbolis\u00e9 par une fl\u00e8che noire sur le sch\u00e9ma ci-dessous :\n\n!\n\nPour l'\u00e9tape ci-dessus nous avons 3 d\u00e9calages (d\u00e9calages du 10, du 12 et du 27). Nous ne tiendrons pas compte du \"placement\" du nombre en cours de traitement (8 dans notre exemple) symbolis\u00e9 par la fl\u00e8che en pointill\u00e9.\n\n\u00c9valuons le nombre de d\u00e9calages n\u00e9cessaires pour trier le tableau t = [5, 4, 3, 2, 1]\n\n\n!\n\nIl est, je l'esp\u00e8re, \u00e9vident pour vous que nous avons : 1 + 2 + 3 + 4 = 10 d\u00e9calages.\n\nDans le cas o\u00f9 nous avons un tableau \u00e0 trier qui contient n \u00e9l\u00e9ments, nous aurons : 1 + 2 + 3 +....+ n-3 + n-2 + n-1 d\u00e9calages (puisque pour 5 \u00e9l\u00e9ments nous avons 1 + 2 + 3 + 4 ). Si vous n'\u00eates pas convaincu, faites le test avec un tableau de 6 \u00e9l\u00e9ments, vous devriez trouver 1 + 2 + 3 + 4 + 5 = 15 d\u00e9calages.\n\nQue vaut cette somme S = 1 + 2 + 3 + .... + n-3 + n-2 + n-1 ?\n\n\u00c9crivons cette somme un peu diff\u00e9remment : S' = n-1 + n-2 + n-3 + .... + 3 + 2 + 1 (avec S = S' puisque l'addition est commutative)\n\nEn associant les termes de cette somme un par un nous obtenons : S + S' = n + n + n + .... + n + n + n (puisque 1+n-1=n, 2+n-2=n, 3+n-3=n,...., n-3+3=n, n-2+2=n et n-1+1=n)\n\nSoit, puisque S=S' : 2S = n + n + n + .... + n + n + n\n\nSi vous comptez bien nous avons n-1 fois n, ce que l'on peut \u00e9crire : 2S = n(n\u22121)\n\nsoit S = (n(n-1))/2 soit S = (n2-n)/2 soit encore S = (1/2)n2  -  (1/2)n\n\nComme nous l'avons vu pr\u00e9c\u00e9demment (1/2)n2  -  (1/2)n = O(n2 )\n\nL'algorithme de tri par insertion a donc une complexit\u00e9 en O(n2). On parle aussi de complexit\u00e9 quadratique.\n\nCe calcul est un peu complexe \u00e0 comprendre, rassurez-vous, vous ne serez jamais interrog\u00e9 sur cette d\u00e9monstration. Vous devez juste retenir que nous avons une boucle imbriqu\u00e9e dans une autre boucle et que donc la complexit\u00e9 de l'algorithme du tri par insertion est O(n2).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb5638dd-95c0-4961-8c72-2e8394f1788f": {"__data__": {"id_": "eb5638dd-95c0-4961-8c72-2e8394f1788f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ab61c23b-0ff2-4f6d-b1d8-dd761400608e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "7c7edf14a55f0e55675e7a39dca10d766b480aeb24b44af29539bd53a164f945", "class_name": "RelatedNodeInfo"}}, "text": "3) Tri par s\u00e9lection", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cdb1bcd-baf7-4cdd-bf9d-8b475f0248d9": {"__data__": {"id_": "3cdb1bcd-baf7-4cdd-bf9d-8b475f0248d9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c0e24a16-45b6-464b-af03-672028178965", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ce08b47d0ebaecf0552ab25603e42254d03a9d5cb0ba30c2fe5b6ffa8bd01655", "class_name": "RelatedNodeInfo"}}, "text": "a) algorithme du tri par s\u00e9lection\n\nComme pour le tri par insertion, commen\u00e7ons par le visionnage d'une petite vid\u00e9o :\n\nhttps://www.youtube.com/watch?v=8u3Yq-5DTN8\n\nOn peut r\u00e9sumer le principe de fonctionnement de l'algorithme de tri par s\u00e9lection avec le sch\u00e9ma suivant :\n\n\n!\n\nVoici l'algorithme du tri par s\u00e9lection :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nmin : nombre entier\nj : nombre entier\nDEBUT\ni\u21901\ntant que i<longueur(t):   //boucle 1\n  j\u2190i+1\n  min\u2190i\n  tant que j<=longueur(t):   //boucle 2\n    si t[j]<t[min]:\n      min\u2190j\n    fin si\n    j\u2190j+1\n  fin tant que\n  si min\u2260i :\n    \u00e9changer t[i] et t[min]\n  fin si\n  i\u2190i+1\nfin tant que\nFIN\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3e8327a-fcbf-4394-a713-a126bdfdb9e6": {"__data__": {"id_": "b3e8327a-fcbf-4394-a713-a126bdfdb9e6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34a7b795-b0bb-46d3-932c-60697b9b47dd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "d74c1cd4ff095e31d8b220d3973b100d268246edf93aaad908f1efdba52ca63e", "class_name": "RelatedNodeInfo"}}, "text": "b)  complexit\u00e9 du tri par s\u00e9lection\n\nEssayons maintenant de d\u00e9terminer la complexit\u00e9 de l'algorithme de tri par s\u00e9lection :\n\nPour \u00e9tablir la complexit\u00e9 de cet algorithme, comme pour l'algorithme de tri par insertion, nous n'allons pas directement nous int\u00e9resser au nombre d'op\u00e9rations \u00e9l\u00e9mentaires. Cette fois, nous allons comptabiliser les comparaisons entre 2 entiers.\n\nSi nous nous int\u00e9ressons \u00e0 l'\u00e9tape qui nous permet de passer de t = [12, 8, 23, 10, 15] \u00e0 t = [8, 12, 23, 10, 15] (i = 1) nous avons 4 comparaisons : 12 avec 8, puis 8 avec 23, puis 8 avec 10 et enfin 8 avec 15.\n\nSi nous nous int\u00e9ressons \u00e0 l'\u00e9tape qui nous permet de passer de t = [8, 12, 23, 10, 15] \u00e0 t = [8, 10, 23, 12, 15] (i = 2) nous avons 3 comparaisons : 12 avec 23, puis 12 avec 10, et enfin 10 avec 15.\n\nSi nous nous int\u00e9ressons \u00e0 l'\u00e9tape qui nous permet de passer de t = [8, 10, 23, 12, 15] \u00e0 t = [8, 10, 12, 23, 15] (i = 3) nous avons 2 comparaisons : 23 avec 12 et 12 avec 15\n\nSi nous nous int\u00e9ressons \u00e0 l'\u00e9tape qui nous permet de passer de t = [8, 10, 12, 23, 15] \u00e0 t = [8, 10, 12, 15, 23] (i = 4) nous avons 1 comparaison : 23 avec 15\n\nPour trier un tableau comportant 5 \u00e9l\u00e9ments nous avons : 4 + 3 + 2 + 1 = 10 comparaisons\n\nDans le cas o\u00f9 nous avons un tableau \u00e0 trier qui contient n \u00e9l\u00e9ments, nous aurons : n-1 + n-2 + n-3 +....+ 3 + 2 + 1 comparaisons. Si vous n'\u00eates pas convaincu, faites le test avec un tableau de 6 \u00e9l\u00e9ments, vous devriez trouver 5 + 4 + 3 + 2 +1 = 15 comparaisons.\n\nVous avez sans doute d\u00e9j\u00e0 remarqu\u00e9 que nous avons un r\u00e9sultat similaire au tri par insertion (sauf que nous nous int\u00e9ressons ici aux comparaisons alors que pour le tri par insertion nous nous int\u00e9ressons aux d\u00e9calages, mais cela ne change rien au probl\u00e8me)\n\nConclusion : nous allons trouver exactement le m\u00eame r\u00e9sultat que pour le tri par insertion : l'algorithme de tri par s\u00e9lection a une complexit\u00e9 en O(n2 ) (complexit\u00e9 quadratique).\n\nNous avons vu pr\u00e9c\u00e9demment des algorithmes de complexit\u00e9 lin\u00e9aire (O(n)) avec les algorithmes de recherche d'un entier dans un tableau, de recherche d'un extremum ou encore de calcul d'une moyenne. Nous avons vu ici que les algorithmes de tri par s\u00e9lection et de tri par insertion ont tous les deux une complexit\u00e9 quadratique (O(n2 )). Il est important de bien avoir conscience de l'impact de ces complexit\u00e9s sur l'utilisation des algorithmes : si vous doublez la taille du tableau, vous doublerez le temps d'ex\u00e9cution d'un algorithme de complexit\u00e9 lin\u00e9aire, en revanche vous quadruplerez le temps d'ex\u00e9cution d'un algorithme de complexit\u00e9 quadratique.\n\nSi votre ordinateur met T secondes pour trier un tableau de taille n, il mettra  4T secondes pour trier une tableau  de taille 2n.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b5cd42a-5a4a-43b7-9f28-7c9022760ffc": {"__data__": {"id_": "4b5cd42a-5a4a-43b7-9f28-7c9022760ffc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11r.md", "file_name": "termc11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44e1e962-fe04-4c94-b8e1-1595fc999d6b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11r.md", "file_name": "termc11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f6a53569462cadb1c4c12ac9c4e96191b42f61c791e952523dd8b553cc500074", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- conna\u00eetre l\u2019algorithme du tri par insertion\n\n- conna\u00eetre l\u2019algorithme du tri par s\u00e9lection\n\n- savoir que l\u2019algorithme du tri par insertion et l\u2019algorithme du tri par s\u00e9lection ont tous deux une complexit\u00e9 en temps dans le pire des cas en O(n2) (quadratique)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4094f98e-bf34-4017-bb7f-be81ee3b4439": {"__data__": {"id_": "4094f98e-bf34-4017-bb7f-be81ee3b4439", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11r.md", "file_name": "termc11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4965d2c4-9f17-4409-914f-42fb96264ef4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11r.md", "file_name": "termc11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0c6ae7937eed6755b130aeea00bb8110a623d17b0940e9c80a2d1a7b95ca1bf4", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable d\u2019analyser et d\u2019expliquer (faire tourner \u201c\u00e0 la main\u201d) les algorithmes de tri par insertion et par s\u00e9lection sur un exemple donn\u00e9\n\n- vous devez \u00eatre capable d\u2019impl\u00e9menter en Python les algorithmes de tri par insertion et par s\u00e9lection", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 289, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a216c9d7-a63b-43c4-ab9e-728f6902b387": {"__data__": {"id_": "a216c9d7-a63b-43c4-ab9e-728f6902b387", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12a.md", "file_name": "termc12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f2c22313-a8cd-4ba5-9105-af0dee4a8ab5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12a.md", "file_name": "termc12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "059c2d499fb53d1995476bd09e6eec3e6b249a838aba6b9b9620a9f96f0154fb", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 12.1\n\nOn rappelle l'algorithme du tri par s\u00e9lection :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nmin : nombre entier\nj : nombre entier\nDEBUT\ni\u21901\ntant que i<longueur(t):  //boucle 1\n  j\u2190i+1\n  min\u2190i\n  tant que j<=longueur(t):   //boucle 2\n    si t[j]<t[min]:\n      min\u2190j\n    fin si\n    j\u2190j+1\n  fin tant que\n  si min\u2260i :\n    \u00e9changer t[i] et t[min]\n  fin si\n  i\u2190i+1\nfin tant que\nFIN\n``` \n\nD\u00e9terminer un invariant de boucle pour la boucle *boucle 1* (voir code ci-dessus)\n\nD\u00e9montrez que l'algorithme de tri par s\u00e9lection est correct (qu'il trie les tableaux correctement).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 590, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3294c93-1479-4737-99a3-2d8d286aa3ef": {"__data__": {"id_": "b3294c93-1479-4737-99a3-2d8d286aa3ef", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12a.md", "file_name": "termc12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdaf83e0-8e06-4d74-ae1c-cacb98a2820b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12a.md", "file_name": "termc12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "74e93124aad24f439f99b35a9a956f5d407821080a9900e72f06833bc1297c89", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 12.2\n\nL'algorithme suivant permet de calculer la somme des N premiers entiers, o\u00f9 N est un nombre entier donn\u00e9 :\n\n```\ni =0\nsomme =0\nwhile i < N :\n  i = i + 1\n  somme = somme + i\n```\n\nD\u00e9terminez un invariant de boucle (on devra trouver  une propri\u00e9t\u00e9 qui concernera la variable *i* et une propri\u00e9t\u00e9 qui concernera la variable *somme*)\n\nEn utilisant l'invariant de boucle trouv\u00e9 ci-dessus, d\u00e9montrez la correction de cet algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e42bb6dc-2a94-4963-b9cf-bb2013e10c57": {"__data__": {"id_": "e42bb6dc-2a94-4963-b9cf-bb2013e10c57", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12c.md", "file_name": "termc12c.md", "file_size": 6535, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d429a06-4ee1-46e4-8c92-661315a5414b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12c.md", "file_name": "termc12c.md", "file_size": 6535, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d654e0b5e731d89bed4686876f0e1d65d70cd6438a0e839dc154bc2f826e979d", "class_name": "RelatedNodeInfo"}}, "text": "A priori, les algorithmes de tri par insertion et de tri par s\u00e9lection \"fonctionnent\" correctement : ils trient bien le tableau donn\u00e9 en entr\u00e9e, on dit que ces algorithmes sont corrects. On parle aussi de la \"correction d'un algorithme\" pour dire qu'un algorithme produit bien le r\u00e9sultat attendu.\n\nMultiplier les exemples qui \"fonctionnent\" ne veut pas dire que l'algorithme donnera le \"bon r\u00e9sultat\" dans toutes les circonstances. C'est un peu comme en math\u00e9matiques, v\u00e9rifier qu'une propri\u00e9t\u00e9 est vraie sur un exemple n'a pas valeur de d\u00e9monstration. Il se pourrait tr\u00e8s bien que dans une situation donn\u00e9e notre algorithme ne donne pas le r\u00e9sultat attendu.\n\nIl existe un moyen de d\u00e9montrer (au sens math\u00e9matique du terme) la correction d'un algorithme. Si nous arrivons \u00e0 d\u00e9montrer la correction de l'algorithme de tri par insertion, nous pourrons alors affirmer que, quel que soit le tableau donn\u00e9 en entr\u00e9e, nous obtiendrons bien en sortie ce m\u00eame tableau, mais tri\u00e9. Pour d\u00e9montrer la correction de l'algorithme de tri par insertion, nous allons utiliser un \"invariant de boucle\"\n\nQu'est-ce qu'un invariant de boucle ?\n\nOn appelle invariant de boucle une propri\u00e9t\u00e9 qui est vraie avant et apr\u00e8s chaque it\u00e9ration.\n\nPrenons tout de suite un exemple avec le tri par insertion :\n\nVoici, pour m\u00e9moire, l'algorithme de tri par insertion :\n\n```\nVARIABLE\nt : tableau d'entiers\ni : nombre entier\nj : nombre entier\nk : nombre entier\nDEBUT\nj\u21902\ntant que j<=longueur(t):   //boucle 1\n  i\u2190j-1\n  k\u2190t[j]\n  tant que i>0 et que t[i]>k:   //boucle 2\n    t[i+1]\u2190t[i]\n    i\u2190i-1\n  fin tant que\n  t[i+1]\u2190k\n  j\u2190j+1\nfin tant que\nFIN\n```\n\nDivisons le tableau t en 2 parties :\n\n- Une partie qui contient les \u00e9l\u00e9ments d'index 1 \u00e0 j-1 (le j correspond \u00e0 la variable j dans l'algorithme ci-dessus). Nous noterons cette partie (ce tableau) t[1..j-1]\n\n- Une seconde partie qui contient le reste du tableau t (index j \u00e0 n si le tableau t comporte n \u00e9l\u00e9ment)\nNous allons travailler sur cet exemple : t = [27, 10, 12, 8, 11]\n\nAu d\u00e9but de la premi\u00e8re it\u00e9ration, nous avons j=2, donc t[1..j-1] = t[1..1] = [27] (le tableau t[1..j-1] contient un unique \u00e9l\u00e9ment, le tableau est donc tri\u00e9). \u00c0 la fin de la premi\u00e8re it\u00e9ration (apr\u00e8s le j = j+1), nous avons j=3, donc t[1..2]=[10,27], le tableau t[1..j-1] est donc bien tri\u00e9\n\nAu d\u00e9but de la deuxi\u00e8me it\u00e9ration de la \"boucle 1\", nous avons t = [10, 27, 12, 8, 11] et j=3, d'o\u00f9 t[1..j-1] = t[1..2] = [10, 27], le tableau t[1..j-1] est donc bien tri\u00e9 \u00c0 la fin de la deuxi\u00e8me it\u00e9ration, nous avons j=4, donc t[1..3]=[10,12,27], le tableau t[1..j-1] est donc bien tri\u00e9\n\nAu d\u00e9but de la troisi\u00e8me it\u00e9ration de la \"boucle 1\", nous avons t = [10, 12, 27, 8, 11] et j=4, d'o\u00f9 t[1..j-1] = t[1..3] = [10, 12, 27], le tableau t[1..j-1] est donc bien tri\u00e9 \u00c0 la fin de la troisi\u00e8me it\u00e9ration, nous avons j=5, donc t[1..4]=[8,10,12,27], le tableau t[1..j-1] est donc bien tri\u00e9\n\nAu d\u00e9but de la quatri\u00e8me it\u00e9ration de la \"boucle 1\", nous avons t = [8, 10, 12, 27, 11] et j=5, d'o\u00f9 t[1..j-1] = t[1..4] = [8, 10, 12, 27], le tableau t[1..j-1] est donc bien tri\u00e9 \u00c0 la fin de la troisi\u00e8me it\u00e9ration, nous avons j=6, donc t[1..5]=[8,10,11,12,27], le tableau t[1..j-1] est donc bien tri\u00e9\n\nQue peut-on dire du tableau t[1..j-1] au d\u00e9but et \u00e0 la fin de chaque it\u00e9ration ?\n\nR\u00e9ponse : t[1..j-1] est un tableau tri\u00e9 !\n\nNotre invariant de boucle pourrait donc \u00eatre : \"Le tableau t[1..j-1] est tri\u00e9\"\n\nTrouver ce qui pourrait \u00eatre un invariant de boucle est une chose, encore faut-il ensuite d\u00e9montrer qu'il est correct (une fois de plus l'\u00e9tude d'un cas particulier ne vaut pas d\u00e9monstration). La d\u00e9monstration doit se faire en 3 \u00e9tapes :\n\n- INITIALISATION : on doit montrer que l'invariant de boucle est vrai avant la premi\u00e8re it\u00e9ration de la boucle\n\n- CONSERVATION : on doit montrer que si l'invariant de boucle est vrai avant une it\u00e9ration de la boucle, il le reste avant l'it\u00e9ration suivante.\n\n- TERMINAISON : une fois la boucle termin\u00e9e, l'invariant fournit une propri\u00e9t\u00e9 utile qui aide \u00e0 montrer la correction de l'algorithme.\n\nRevenons au tri par insertion et \u00e0 notre invariant de boucle \"Le tableau t[1..j-1] est tri\u00e9\" :\n\n- INITIALISATION : avant la 1re it\u00e9ration de la boucle 1, le tableau t[1..j-1] contient un seul \u00e9l\u00e9ment (j=2). Un tableau contenant un seul \u00e9l\u00e9ment est forc\u00e9ment tri\u00e9 (trivial), notre invariant \"le tableau t[1..j-1] est tri\u00e9\" est donc vrai.\n\n- CONSERVATION : nous devons maintenant montrer que l'invariant est conserv\u00e9 au cours d'une it\u00e9ration : si l'invariant est vrai en d\u00e9but d'it\u00e9ration (d\u00e9but de la boucle 1), il reste vrai \u00e0 la fin de cette m\u00eame it\u00e9ration. Globalement, que fait la boucle 1 ? Elle permet de d\u00e9placer les \u00e9l\u00e9ments t[j-1], t[j-2], t[j-3], etc d'une position vers la droite jusqu'\u00e0 ce que l'on trouve la bonne position pour t[j]. Apr\u00e8s ces d\u00e9calages vers la droite effectu\u00e9s, on ins\u00e8re la valeur t[j] au bon endroit. Au cours d'une it\u00e9ration de la boucle 1, nous passons d'un tableau t[1..j] non tri\u00e9 (le tableau t[1..j-1] est tri\u00e9, mais l'\u00e9l\u00e9ment t[j] n'est pas encore \u00e0 la bonne place, donc t[1..j] n'est pas encore tri\u00e9), \u00e0 un tableau tri\u00e9 (d\u00e9caler vers la droite les \u00e9l\u00e9ments t[j-1], t[j-2], t[j-3], etc et placer t[j] \u00e0 la bonne position). En fin d'it\u00e9ration (juste avant le \"j\u2190j+1\") t[1..j] est tri\u00e9, juste apr\u00e8s le \"j\u2190j+1\" le tableau t[1..j] pr\u00e9c\u00e9demment \u00e9voqu\u00e9 devient donc le tableau t[1..j-1]. Conclusion : en toute fin d'it\u00e9ration (apr\u00e8s le \"j\u2190j+1\") le tableau t[1..j-1] est tri\u00e9. Au d\u00e9but d'une it\u00e9ration t[1..j-1] est tri\u00e9, \u00e0 la toute fin de cette m\u00eame it\u00e9ration (apr\u00e8s le \"j\u2190j+1\") le tableau t[1..j-1] est tri\u00e9, nous pouvons donc affirmer que si l'invariant \"le tableau t[1..j-1] est tri\u00e9\" est vrai avant une it\u00e9ration de la boucle 1, il le reste avant l'it\u00e9ration suivante.\n\n- TERMINAISON : Que se passe-t-il quand la boucle se termine ? La boucle 1 se termine quand j > longueur(t) (quand j > n pour un tableau comportant n \u00e9l\u00e9ment). Quand la boucle se termine, on doit avoir j = n + 1. Si on substitue n+1 par j dans l'invariant de boucle, on obtient le tableau t[1..n]. Quand la boucle se termine, l'affirmation \"le tableau t[1..j-1] est tri\u00e9\" devient \"le tableau t[1..n] est tri\u00e9\". Or, le tableau t[1..n] correspond au tableau qui est compos\u00e9 des n \u00e9l\u00e9ments. Le tableau d'origine est donc maintenant tri\u00e9.\n\nCette d\u00e9monstration nous permet d'affirmer que l'algorithme de tri par insertion est correct.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 6351, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce3cdc3e-20d8-4dd8-8f1c-ece89795c8a3": {"__data__": {"id_": "ce3cdc3e-20d8-4dd8-8f1c-ece89795c8a3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12r.md", "file_name": "termc12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e5949a58-30d5-455a-a8b2-ce13210ba7cd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12r.md", "file_name": "termc12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2ec22a81d31dea093965f9e14a36bc102ed4d71567bd15f8c0093560df4f7f36", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n- on appelle \u201cinvariant de boucle\u201d une propri\u00e9t\u00e9 qui est vraie avant et apr\u00e8s chaque it\u00e9ration (boucle)\n\n- un invariant de boucle peut permettre de prouver la correction d\u2019un algorithme\n\n- il est n\u00e9cessaire de d\u00e9montrer que l\u2019on a bien un invariant de boucle, cette d\u00e9monstration doit se faire en 3 \u00e9tapes :\n\t- INITIALISATION : on doit montrer que l'invariant de boucle est vrai avant la premi\u00e8re it\u00e9ration de la boucle\n\n\t- CONSERVATION : on doit montrer que si l'invariant de boucle est vrai avant une it\u00e9ration de la boucle, il le reste avant l'it\u00e9ration suivante.\n\n\t- TERMINAISON : une fois la boucle termin\u00e9e, l'invariant fournit une propri\u00e9t\u00e9 utile qui aide \u00e0 montrer la correction de l'algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 726, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "379a0b8d-fd3e-471e-900b-52ff6dc66395": {"__data__": {"id_": "379a0b8d-fd3e-471e-900b-52ff6dc66395", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12r.md", "file_name": "termc12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ebba8aa4-dbc8-476a-ac58-5c25f4a70ce7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12r.md", "file_name": "termc12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6576e14d288ef2654d1220bb0890644ba51c223bfa8c91cfeaeb63efc8181fba", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable de trouver un invariant de boucle dans un algorithme\n\n- vous devez \u00eatre capable de prouver que c\u2019est bien un invariant de boucle\n\n- d\u2019utiliser cet invariant de boucle pour d\u00e9montrer la correction d\u2019un algorithme\n(notamment les algorithmes de tri par insertion et de tri par s\u00e9lection)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29e57b72-f770-4c1a-bf6e-2b0c7a8f6115": {"__data__": {"id_": "29e57b72-f770-4c1a-bf6e-2b0c7a8f6115", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c618f7c9-f7c9-4e54-a50b-29243ec37afc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f91b56e1e650786f8e08b447f1f53616078d3cada6d5921f13c8d4ceb723565e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 13.1\n\nCette vid\u00e9o va vous permettre de mieux comprendre le principe de fonctionnement d'un syst\u00e8me d'exploitation.\n\nOS\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 162, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d510786-e829-4103-b243-f87e0ddb0dff": {"__data__": {"id_": "5d510786-e829-4103-b243-f87e0ddb0dff", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ea984ad7-fc4f-4158-b7d2-f01819b68ea2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8d7e746fbb2e5355a1acb1c4f846b4fc8048e4be3a4f084d9bf797e06baa1b83", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 13.2\n\nCette vid\u00e9o revient sur l'histoire des syst\u00e8mes d'exploitation et plus particuli\u00e8rement sur l'histoire d'UNIX\n\nUNIX\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d9af7d2-433d-4aaa-9759-01bacda6e812": {"__data__": {"id_": "7d9af7d2-433d-4aaa-9759-01bacda6e812", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f337a2a-a7d2-4d33-aa02-46cfb8d0f44f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "07fbc0495a144ef437473836d0780bb93eb72905fb32f5293d531da29ae3c625", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 13.3\n\nCette br\u00e8ve vid\u00e9o de 2011 revient sur l'histoire de Linux\n\nL'Histoire de Linux\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbf86779-a985-47c4-9391-26f3ed566d0c": {"__data__": {"id_": "cbf86779-a985-47c4-9391-26f3ed566d0c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4d153c66-4bb3-48ce-9549-798e288cb930", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3264292ddab7a027f2364812e961bc15d25bc50fec17c0bcedb9ec1e71c30cd6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 13.4\n\nCette vid\u00e9o \u00e9voque GNU/Linux en entrant plus dans les d\u00e9tails (la  vid\u00e9o d\u00e9passe largement ce qu'il faut retenir en NSI mais elle est tout de m\u00eame int\u00e9ressante pour votre \"culture informatique\").\n\nle syst\u00e8me d'exploitation GNU/Linux\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2f6a85d-f944-4405-b047-928ea6de9739": {"__data__": {"id_": "f2f6a85d-f944-4405-b047-928ea6de9739", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41c0703a-fd80-4297-aaef-e2f073d9f66e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "de22e4e84821b66d48839583df78bdc5c80f665460372315e57bd42993404bbf", "class_name": "RelatedNodeInfo"}}, "text": "1) Qu'est-ce qu'un syst\u00e8me d'exploitation\n\nUn syst\u00e8me d'exploitation (Operating System en anglais) est un ensemble de logiciels qui permettent de faire fonctionner d'autres logiciels en  exploitant les  ressources propos\u00e9es par un ordinateur (RAM, CPU, disques...). Les logiciels n'ont pas vraiment \u00e0  g\u00e9rer les ressources mat\u00e9rielles,  le syst\u00e8me d'exploitation s'en charge pour eux.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 386, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "205e8e6c-4abd-4b1b-86d0-54497ce18440": {"__data__": {"id_": "205e8e6c-4abd-4b1b-86d0-54497ce18440", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4afd7ff3-8575-433f-8068-ae41ffa531be", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5bd9eb88290ff0da27081eac5279ec28696df0102be858ab6634924f5d78104d", "class_name": "RelatedNodeInfo"}}, "text": "2) De Multics \u00e0 UNIX\n\nLes tout premiers ordinateurs n'avaient pas vraiment de syst\u00e8me d'exploitation (les logiciels devaient g\u00e9rer la partie mat\u00e9riel). Il faut attendre 1965 pour voir arriver le premier syst\u00e8me d'exploitation multit\u00e2che (capable d'ex\u00e9cuter plusieurs programmes en \"m\u00eame temps\") et multi-utilisateur : Multics.\n\nLe syst\u00e8me d'exploitation UNIX voit le jour \u00e0 la toute fin des ann\u00e9es 60. Il a \u00e9t\u00e9 con\u00e7u par Ken Thompson et Dennis Ritchie des laboratoires Bell. Le syst\u00e8me d'exploitation Multics ne fonctionnait que sur des ordinateurs extr\u00eamement chers, l'id\u00e9e de Thompson et Ritchie \u00e9tait de concevoir un syst\u00e8me d'exploitation pour les ordinateurs un peu moins on\u00e9reux (mais on ne pouvait tout de m\u00eame pas parler \u00e0 cette \u00e9poque d'informatique \"grand public\", les ordinateurs \u00e9taient encore r\u00e9serv\u00e9s aux centres de recherche et aux grandes entreprises). Comme nous le verrons un peu plus loin, le syst\u00e8me UNIX est encore utilis\u00e9 aujourd'hui.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 958, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0d86229-a7ee-41ce-920d-764aa178952a": {"__data__": {"id_": "d0d86229-a7ee-41ce-920d-764aa178952a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5bd18c16-d90f-455c-b2b6-1100be8d67e9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bf9fef785a06d75dcee5e993c740382fc76258835a6caab07d999f67c2d6531c", "class_name": "RelatedNodeInfo"}}, "text": "3) syst\u00e8mes propri\u00e9taires vs syst\u00e8mes libres", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 46, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70d7454d-de7f-4070-bfb8-2dc2923c67c6": {"__data__": {"id_": "70d7454d-de7f-4070-bfb8-2dc2923c67c6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45507c2e-d73c-4285-9897-b91bda2de562", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2e7335abda9ba63ef244ee47ece125e2639bef62e8ff59e45ff9b435e360958f", "class_name": "RelatedNodeInfo"}}, "text": "a) notion de logiciel libre\n\nLe syst\u00e8me UNIX est un syst\u00e8me dit \"propri\u00e9taire\" (certaines personnes disent \"privateur\"), c'est-\u00e0-dire un syst\u00e8me non libre. Mais plus g\u00e9n\u00e9ralement, qu'est-ce qu'un logiciel libre ?\n\nD'apr\u00e8s Wikip\u00e9dia : \"Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et l\u00e9galement, ceci afin de garantir certaines libert\u00e9s induites, dont le contr\u00f4le du programme par l'utilisateur et la possibilit\u00e9 de partage entre individus\". Le syst\u00e8me UNIX ne respecte pas ces droits (par exemple le code source d'UNIX n'est pas disponible, l'\u00e9tude d'UNIX est donc impossible), UNIX est donc un syst\u00e8me \"propri\u00e9taire\" (le contraire de \"libre\"). Attention qui dit logiciel libre ne veut pas forcement dire logiciel gratuit (m\u00eame si c'est souvent le cas), la confusion entre \"libre\" et \"gratuit\" vient de l'anglais puisque \"free\" veut \u00e0 la fois dire \"libre\", mais aussi gratuit.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 993, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0055ea2-53ce-431c-a188-402ecffd3e45": {"__data__": {"id_": "b0055ea2-53ce-431c-a188-402ecffd3e45", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "84fde963-f8c6-46f0-9780-457227dfc42c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "938960198a59af1cacb32849d5fed01e78d190726ced3e630e5eec76dbd9ad47", "class_name": "RelatedNodeInfo"}}, "text": "b) Linux\n\nEn 1991, un \u00e9tudiant finlandais, Linus Torvalds, d\u00e9cide de cr\u00e9er un clone libre d'UNIX en ne partant de rien (on dit \"from scratch\" en anglais) puisque le code source d'UNIX n'est pas public. Ce clone d'UNIX va s'appeler Linux (Linus+UNIX). Linux est aujourd'hui le syst\u00e8me d'exploitation le plus utilis\u00e9 au monde si on tient compte des serveurs et des smartphones (Android est d\u00e9riv\u00e9 d'un syst\u00e8me Linux)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 416, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f96a88c1-313b-4d6d-b0c7-4e52c6798d0e": {"__data__": {"id_": "f96a88c1-313b-4d6d-b0c7-4e52c6798d0e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2085ea9e-3dc9-4291-90db-e2b48fbac488", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3db495e8dbd0fbce94584ca61e46cd84044b4be18443d7f720138746344916f8", "class_name": "RelatedNodeInfo"}}, "text": "4) Microsoft\n\nDifficile de parler des syst\u00e8mes d'exploitation sans parler de Microsoft !\n\nMicrosoft a \u00e9t\u00e9 cr\u00e9\u00e9e par Bill Gates et Paul Allen en 1975. Microsoft est surtout connue pour son syst\u00e8me d'exploitation Windows. Windows est un syst\u00e8me d'exploitation \"propri\u00e9taire\", la premi\u00e8re version de Windows date 1983, mais \u00e0 cette date Windows n'est qu'un ajout sur un autre syst\u00e8me d'exploitation nomm\u00e9 MS-DOS. Aujourd'hui Windows reste le syst\u00e8me d'exploitation le plus utilis\u00e9 au monde sur les ordinateurs grand public (ordinateurs personnels), il faut dire que l'achat de Windows est quasiment impos\u00e9 lorsque l'on ach\u00e8te un ordinateur dans le commerce, car oui, quand vous achetez un ordinateur neuf, une partie de la somme que vous versez termine dans les poches de Microsoft. Il est possible de se faire rembourser la licence Windows, mais cette op\u00e9ration est relativement complexe.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 888, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30f32655-06d2-457b-89c8-65cb624ca0a9": {"__data__": {"id_": "30f32655-06d2-457b-89c8-65cb624ca0a9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2ab6a43-ea4e-4850-853c-c55ec8b462a1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "64f91868882ae110d684ac4706c3eb48739f4b2c441c685ca20a83517aa313e9", "class_name": "RelatedNodeInfo"}}, "text": "5) Apple\n\nEnfin pour terminer, quelques mots sur le syst\u00e8me d'exploitation des ordinateurs de marque Apple : tous les ordinateurs d'Apple sont livr\u00e9s avec le syst\u00e8me d'exploitation macOS. Ce syst\u00e8me macOS est un syst\u00e8me d'exploitation UNIX, c'est donc un syst\u00e8me d'exploitation propri\u00e9taire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44d89d83-d4f5-4207-a1da-8093c70199fd": {"__data__": {"id_": "44d89d83-d4f5-4207-a1da-8093c70199fd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13r.md", "file_name": "termc13r.md", "file_size": 1262, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "478c5ff1-78dc-4a4f-a8d5-4562791bbd52", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13r.md", "file_name": "termc13r.md", "file_size": 1262, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "66614bcf8369024ea2136cced844b82a5cdb5b5d52d63f75bb0c7f9a200378a2", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Un syst\u00e8me d\u2019exploitation (OS : Operating System) est un un ensemble de programme permettant de faire fonctionner les logiciels sur un ordinateur donn\u00e9. L\u2019OS r\u00e9partit les ressources d\u2019un ordinateur (CPU, RAM\u2026) entre les diff\u00e9rents logiciels qui tournent sur cet ordinateur.\n\n- Il existe des syst\u00e8mes d\u2019exploitation libres (GNU/Linux) et des syst\u00e8mes d\u2019exploitation propri\u00e9taires (Unix, Windows, macOS (qui est un d\u00e9riv\u00e9 d\u2019UNIX),\niOS...).\n\n- Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et\nl\u00e9galement, ceci afin de garantir certaines libert\u00e9s induites, dont le contr\u00f4le du programme par l'utilisateur et la possibilit\u00e9 de partage entre individus (d\u2019apr\u00e8s Wikip\u00e9dia)\n\n- En 1991, un \u00e9tudiant finlandais, Linus Torvalds, d\u00e9cide de cr\u00e9er un clone libre d'UNIX en ne partant de rien puisque le code source d'UNIX n'est pas public. Ce\nclone d'UNIX va s'appeler Linux (Linus+UNIX). Ce noyau d\u2019OS (le noyau assure uniquement les fonctions de base de l\u2019OS) sera compl\u00e9t\u00e9 par des logiciels libres issus du projet GNU (GNU\u2019s Not UNIX) fond\u00e9 par Richard Stallman, pour donner GNU/Linux.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1214, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6bd6335-f4e7-45a4-8e4f-c2604090f002": {"__data__": {"id_": "f6bd6335-f4e7-45a4-8e4f-c2604090f002", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1eafff6d-a911-4ad0-87c5-e3eb6b1edfdf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "44f6d80ed72675e6449f8164e480c4a4f4e3bd4160847d4fb176a959c9f0649d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 14.1\n\nEn utilisant l'arborescence ci-dessous, quelle est la commande \u00e0 saisir si le r\u00e9pertoire courant est le r\u00e9pertoire \"home\" et que vous \"voulez vous rendre\" dans le r\u00e9pertoire \"boulot\" (vous utiliserez d'abord un chemin absolu puis un chemin relatif). Il faudra recopier la liste des commandes saisies dans votre cahier d'activit\u00e9s\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 349, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2fd1a9cf-ac2f-4dc1-8dc2-a88f4c9b36d3": {"__data__": {"id_": "2fd1a9cf-ac2f-4dc1-8dc2-a88f4c9b36d3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4b234fc8-05a8-4203-a6b8-ac03721d4cc0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "366a72afb37d9c9087bd7e29c7343cece3f6f427c326fb0e638222aa6f07aeb0", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 14.2\n\nFaites les actions suivantes en utilisant des lignes de commande (en partant de votre r\u00e9pertoire de travail). Il faudra recopier la liste des commandes saisies dans votre cahier d'activit\u00e9s :\n\n- cr\u00e9ez un r\u00e9pertoire *doc*\n\n- placez-vous dans le r\u00e9pertoire *doc*\n\n- cr\u00e9ez un r\u00e9pertoire *texte*\n\n- cr\u00e9ez un r\u00e9pertoire *mesDoc*\n\n- placez-vous dans le r\u00e9pertoire *texte*\n\n- cr\u00e9ez un fichier *toto.txt*\n\n- placez-vous dans le  r\u00e9pertoire *doc*\n\n- copiez le fichier *toto.txt* dans le r\u00e9pertoire *mesDoc*\n\n- placez-vous dans le r\u00e9pertoire *mesDoc* et v\u00e9rifiez que le fichier *toto.txt* est bien pr\u00e9sent dans ce r\u00e9pertoire\n\n- placez-vous dans le r\u00e9pertoire *doc*  \n\n- effacez le fichier *toto.txt* du r\u00e9pertoire *texte*\n\n- d\u00e9placez le fichier *toto.txt* du r\u00e9pertoire *mesDoc* vers le r\u00e9pertoire *doc*\n\n- effacez le r\u00e9pertoire *mesDoc*\n\n- effacez le r\u00e9pertoire *texte*\n\n- effacez le fichier *toto.txt*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 910, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e13cab70-b017-4d85-9a41-e758fd32ac07": {"__data__": {"id_": "e13cab70-b017-4d85-9a41-e758fd32ac07", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3499306-1091-4802-9da0-bf7637a7ec21", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "887f976f2111779c9e08ba8e1f4825c135f786c7652b7ebc91b7a45e23b4e5b3", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 14.3\n\nFaites les actions suivantes en utilisant des lignes de commande (en partant de votre r\u00e9pertoire de travail). Il faudra recopier la liste des commandes saisies dans votre cahier d'activit\u00e9s :\n\n- cr\u00e9ez un r\u00e9pertoire *doc*\n\n- placez-vous dans le r\u00e9pertoire *doc* et cr\u00e9ez un fichier *toto.txt*\n\n- listez les droits (r, w et x) pour les diff\u00e9rents utilisateurs (u, g et o) sur le fichier *toto.txt*\n\n- supprimez le droit en lecture pour les utilisateurs *g* sur le fichier *toto.txt*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b7004f00-09b0-4347-ba0b-fb56fce05aae": {"__data__": {"id_": "b7004f00-09b0-4347-ba0b-fb56fce05aae", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb335aa1-8c48-4133-a75a-95e256028064", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b5d1d50d1344586411dcd0e1947adb83c0728e5a9dcdb07120e0b5a39a5ce753", "class_name": "RelatedNodeInfo"}}, "text": "1) la ligne de commande\n\n\u00c0 la \"pr\u00e9histoire\" des syst\u00e8mes d'exploitation, ces derniers \u00e9taient d\u00e9pourvus d'interface graphique (syst\u00e8me de fen\u00eatres \"pilotables\" \u00e0 la souris), toutes les interactions \"syst\u00e8me d'exploitation - utilisateur\" se faisaient par l'interm\u00e9diaire de \"lignes de commandes\" (suites de caract\u00e8res, souvent \u00e9sot\u00e9riques, saisies par l'utilisateur). Aujourd'hui, m\u00eame si les interfaces graphiques modernes permettent d'effectuer la plupart des op\u00e9rations, il est important de connaitre quelques-unes de ces lignes de commandes.\n\nPour saisir des lignes de commandes, nous allons utiliser une console (aussi appel\u00e9 terminal m\u00eame si ce n'est pas exactement la m\u00eame chose).\n\n!\n\nNous avons ci-dessus la console de l'utilisateur \"david\" qui utilise un ordinateur qui se nomme \"PC-Bureau\" (\"david@PC-Bureau\").", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 821, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90364b52-1e97-404c-9b25-3004d2dbff1e": {"__data__": {"id_": "90364b52-1e97-404c-9b25-3004d2dbff1e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "53dd30a4-3b16-4418-b6d1-d9913771a732", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "49838575165f145dc52f1b3189d0c9bec80c5763fc27d57774d0a110f087c1bb", "class_name": "RelatedNodeInfo"}}, "text": "2) arborescence du syst\u00e8me de fichier", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 39, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d848ca4d-6da4-4068-9952-23f49563d816": {"__data__": {"id_": "d848ca4d-6da4-4068-9952-23f49563d816", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bccced0e-d233-476b-ae13-be305bee43b0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "002b73d5368eab9c8b470deb9bb237f8b7226c1c208ceb7fff8970ef91868bb9", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nPrincipalement nous allons, gr\u00e2ce \u00e0 la ligne de commande, travailler sur les fichiers et les r\u00e9pertoires. Dans les syst\u00e8mes de type \"UNIX\" (par exemple GNU/Linux ou macOS), nous avons un syst\u00e8me de fichier en arborescence :\n\n!\n\nDans le sch\u00e9ma ci-dessus on trouve des r\u00e9pertoires (noms entour\u00e9s d'un rectangle, exemple : \"home\") et des fichiers (uniquement des noms \"grub.cfg\"). \u00c0 noter : les extensions des noms de fichiers, par exemple le \"cfg\" de \"grub.cfg\", ne sont pas obligatoires dans les syst\u00e8mes de type \"UNIX\", par exemple, \"bash\" est bien un nom de fichier et il n'a pas d'extension.\n\nOn parle d'arborescence, car ce syst\u00e8me de fichier ressemble \u00e0 un arbre \u00e0 l'envers.\n\nComme vous pouvez le constater, la base de l'arbre s'appelle la racine de l'arborescence et se repr\u00e9sente par un \"/\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ecdeabb2-7ae2-4907-baca-91c34483dd87": {"__data__": {"id_": "ecdeabb2-7ae2-4907-baca-91c34483dd87", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55916d8a-8083-457a-8ae3-0c9f43c81e10", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "4da690aff63edb1c4f95dbe399c1ffffb0656fdcc314548c4bdf8ef599b3f3ff", "class_name": "RelatedNodeInfo"}}, "text": "b) chemin absolu ou chemin relatif ?\n\nPour indiquer la position d'un fichier (ou d'un r\u00e9pertoire) dans l'arborescence, il existe 2 m\u00e9thodes : indiquer un chemin absolu ou indiquer un chemin relatif. Le chemin absolu doit indiquer \"le chemin\" depuis la racine. Par exemple le chemin absolu du fichier fiche.ods sera : /home/elsa/documents/fiche.ods\n\nRemarquez que nous d\u00e9marrons bien de la racine / (attention les symboles de s\u00e9paration sont aussi des /)\n\nIl est possible d'indiquer le chemin non pas depuis la racine, mais depuis un r\u00e9pertoire quelconque, nous parlerons alors de chemin relatif :\n\nLe chemin relatif permettant d'acc\u00e9der au fichier \"photo_1.jpg\" depuis le r\u00e9pertoire \"max\" est : \"images/photo_vac/photo_1.jpg\"\n\nRemarquez l\u2019absence du / au d\u00e9but du chemin (c'est cela qui nous permettra de distinguer un chemin relatif et un chemin absolu).\n\nImaginons maintenant que nous d\u00e9sirions indiquer le chemin relatif pour acc\u00e9der au fichier \"gdbd_3.jpg\" depuis le r\u00e9pertoire \"photos_vac\".\n\nComment faire ?\n\nIl faut \"remonter\" d'un \"niveau\" dans l'arborescence pour se retrouver dans le r\u00e9pertoire \"images\" et ainsi pouvoir repartir vers la bonne \"branche\". Pour ce faire il faut utiliser 2 points : ..\n\n\"../ski/gdbd_3.jpg\"\n\nIl est tout \u00e0 fait possible de remonter de plusieurs \"crans\" : \"../../\" depuis le r\u00e9pertoire \"photos_vac\" permet de \"remonter\" dans le r\u00e9pertoire \"max\"\n\nComme d\u00e9j\u00e0 \u00e9voqu\u00e9 plus haut, les syst\u00e8mes de type \"UNIX\" sont des syst\u00e8mes \"multi-utilisateurs\" : chaque utilisateur poss\u00e8de son propre compte. Chaque utilisateur poss\u00e8de un r\u00e9pertoire \u00e0 son nom, ces r\u00e9pertoires personnels se situent traditionnellement dans le r\u00e9pertoire \"home\". Dans l'arborescence ci-dessus, nous avons 2 utilisateurs : \"max\" et \"elsa\". Par d\u00e9faut, quand un utilisateur ouvre une console, il se trouve dans son r\u00e9pertoire personnel. Dans l'image de la console ci-dessus, nous avons un *david@PC-Bureau ~ $* (au passage, on appelle cela \"l'invite de commande\"), le \"~\" (caract\u00e8re \"tilde\") signifie que l'on se trouve actuellement dans le r\u00e9pertoire personnel de l'utilisateur courant, autrement dit dans le r\u00e9pertoire de chemin absolu \"/home/david\" (puisque l'utilisateur courant est \"david\"). Le r\u00e9pertoire \"o\u00f9 l'on se trouve actuellement\" est appel\u00e9 \"r\u00e9pertoire courant\". L'invite de commande vous indique \u00e0 tout moment le r\u00e9pertoire courant : *david@PC-Bureau ~/Documents $* vous indique que vous \u00eates dans le r\u00e9pertoire \"Documents\" qui se trouve dans le r\u00e9pertoire \"david\" qui se trouve dans le r\u00e9pertoire \"home\" (chemin absolu : \"/home/david/Documents\")\n\nAttention : les syst\u00e8mes de type \"UNIX\" sont \"sensibles \u00e0 la casse\" (il faut diff\u00e9rencier les caract\u00e8res majuscules et les caract\u00e8res minuscules) : le r\u00e9pertoire \"Documents\" et le r\u00e9pertoire \"documents\" sont 2 r\u00e9pertoires diff\u00e9rents.\n\nIl est important de savoir que si le double point (\"../\") permet de remonter d'un cran dans l'arborescence, le simple point \"./\" repr\u00e9sente le r\u00e9pertoire courant. Si vous vous trouvez dans le r\u00e9pertoire \"home\" un \"./document\" repr\u00e9sente le r\u00e9pertoire \"document\" qui se trouve dans le r\u00e9pertoire \"home\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0090978a-cb27-4586-b011-ed018cf718f1": {"__data__": {"id_": "0090978a-cb27-4586-b011-ed018cf718f1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e05f3392-1cb0-4615-82cf-3c8bd3018d81", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "3689b562a106658248ce21243fda18abcf82a9fcded59f49377484901d0b32ec", "class_name": "RelatedNodeInfo"}}, "text": "3) les commandes pour manipuler les fichiers et les r\u00e9pertoires", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7168469d-0a38-4506-8125-d873b136b1c2": {"__data__": {"id_": "7168469d-0a38-4506-8125-d873b136b1c2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24007bcf-1528-49b8-a8d1-712f8a18f387", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "bc56577588c10e6110234b7842ed807f481fbd7a2f75bc07e3cc7148c79e4825", "class_name": "RelatedNodeInfo"}}, "text": "a) la commande cd\n\nLa commande *cd* permet de changer le r\u00e9pertoire courant (cd => change directory). Il suffit d'indiquer le chemin (relatif ou absolu) qui permet d'atteindre le nouveau r\u00e9pertoire.\n\nPar exemple (en utilisant l'arborescence ci-dessous) :\n\n!\n\n- si le r\u00e9pertoire courant est le r\u00e9pertoire \"elsa\" et que vous \"voulez vous rendre\" dans le r\u00e9pertoire \"documents\", il faudra saisir la commande : *cd documents* (relatif) ou *cd /home/elsa/documents* (absolu)\n\n- si le r\u00e9pertoire courant est le r\u00e9pertoire *photos_vac* et que vous \"voulez vous rendre\" dans le r\u00e9pertoire *ski*, il faudra saisir la commande : *cd ../ski* (relatif) ou *cd /home/max/images/ski* (absolu)\n\n- si le r\u00e9pertoire courant est le r\u00e9pertoire *boulot* et que vous \"voulez vous rendre\" dans le r\u00e9pertoire *documents*, il faudra saisir la commande : *cd ..* (relatif) ou *cd /home/elsa/documents* (absolu)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 887, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6960241c-2a3e-4602-a3f1-a57066aef5f6": {"__data__": {"id_": "6960241c-2a3e-4602-a3f1-a57066aef5f6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3201d5f3-3963-4645-bcfd-b7cdc238418e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c6d4a14e5c4f33c69b3644b459873d3d7d7fe58419762ed9008ca4ffb44a23bb", "class_name": "RelatedNodeInfo"}}, "text": "b) la commande ls\n\nLa commande *ls* permet de lister le contenu du r\u00e9pertoire courant.\n\n!\n\nDans l'exemple ci-dessus, depuis le r\u00e9pertoire personnel de l'utilisateur *david*, nous passons dans le r\u00e9pertoire *nsi* \u00e0 l'aide d'un *cd nsi*, puis nous affichons le contenu de ce r\u00e9pertoire *nsi* \u00e0 l'aide de la commande *ls*. Nous trouvons dans le r\u00e9pertoire *nsi* : 2 fichiers (*fiche1.odt* et *photo.jpg*) et un r\u00e9pertoire (*test*).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 430, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79a3f1f8-eba1-4798-9518-ce015a976390": {"__data__": {"id_": "79a3f1f8-eba1-4798-9518-ce015a976390", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bcca076-b41a-42cd-b690-b24da056a1ef", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "03e6219e74a1cbe39620c230a9b3acebaf75b3aa1cbd72ece981e6b5a8334b6e", "class_name": "RelatedNodeInfo"}}, "text": "c) la commande pwd\n\nLa commande pwd permet de connaitre le r\u00e9pertoire courant (permet d'afficher le chemin d'acc\u00e8s vers le r\u00e9pertoire courant depuis la racine)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2edda8d-c5bd-4442-817e-12fe77e361b6": {"__data__": {"id_": "a2edda8d-c5bd-4442-817e-12fe77e361b6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02803c86-e434-4c97-9e8d-fb8c051aa222", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "26c28b90dc70d609a8acde320f4db30eb3ad155d7ac2144042555627045cbfa7", "class_name": "RelatedNodeInfo"}}, "text": "d) La commande mkdir\n\nLa commande *mkdir* permet de cr\u00e9er un r\u00e9pertoire dans le r\u00e9pertoire courant. La commande est de la forme *mkdir nom_du_r\u00e9pertoire*\n\n!\n\nRemarque : il est pr\u00e9f\u00e9rable de ne pas utiliser de caract\u00e8res accentu\u00e9s dans les noms de r\u00e9pertoire (ou de fichier). Il en est de m\u00eame pour les espaces (\u00e0 remplacer par des caract\u00e8res tirets bas \"_\")", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e94f6fe9-c2ec-4027-9313-a980a2c42966": {"__data__": {"id_": "e94f6fe9-c2ec-4027-9313-a980a2c42966", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e96ba817-aa44-4e31-ac55-f30ebabe5a1f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "8053ebb74c99f3e1edac7dbe67c886c6ef9e8552560d6aa92114dbd27f051581", "class_name": "RelatedNodeInfo"}}, "text": "e) La commande rm\n\nLa commande *rm* permet de supprimer un fichier ou un r\u00e9pertoire. La commande est de la forme *rm nom_du_r\u00e9pertoire_ou_nom_du_fichier*\n\n!\n\nLa plupart des commandes UNIX peuvent \u00eatre utilis\u00e9es avec une ou des options. Par exemple, pour supprimer un r\u00e9pertoire non vide, il est n\u00e9cessaire d'utiliser la commande *rm* avec l'option *-r* : *rm -r nom_du_r\u00e9pertoire*\n\n!\n\nEn fait l'option -r permet de supprimer un r\u00e9pertoire et ses sous r\u00e9pertoire.\n\n**ATTENTION** : cette commande est relativement \"dangereuse\", il faut donc la manipuler prudemment. Par exemple la commande *rm ** efface tous les fichiers du r\u00e9pertoire courant (le * signifie tous les fichiers et tous les r\u00e9pertoires). Pour effacer tous les fichiers et tous les r\u00e9pertoires pr\u00e9sents dans le r\u00e9pertoire courant il faut donc utiliser *rm -r **", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 825, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27d91b71-43c7-4e02-b948-dc54e58c125b": {"__data__": {"id_": "27d91b71-43c7-4e02-b948-dc54e58c125b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66ac0ee0-d9a5-4d11-8e2c-85536772ba12", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c3bb2b4221b4d7998fed0b801e93777f9db8a84537e727d32157f6b05b4c0d1e", "class_name": "RelatedNodeInfo"}}, "text": "f) La commande touch\n\nLa commande *touch* permet de cr\u00e9er un fichier vide. La commande est de la forme *touch nom_du_fichier_\u00e0_cr\u00e9er*\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f0118a5-cdb1-4c2b-b7c3-30fb943979bf": {"__data__": {"id_": "3f0118a5-cdb1-4c2b-b7c3-30fb943979bf", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2eaba87-a230-4da8-8c24-6cffb852c16f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "765c202290942c9f3731bb6064220b6b56f672c58155573099d8a0a078f94d95", "class_name": "RelatedNodeInfo"}}, "text": "g) La commande cat\n\nLa commande *cat* permet d'afficher dans la console le contenu d'un fichier.\n\nSoit un fichier *toto.txt*. Si \u00e0 l'aide d'un \u00e9diteur de texte vous avez saisi *coucou* dans le fichier *toto.txt*, la commande *cat toto.txt* affichera *coucou* dans la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d10bd74-e7a3-4d4c-90d2-27db6b46f845": {"__data__": {"id_": "2d10bd74-e7a3-4d4c-90d2-27db6b46f845", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe5dc0b-b4fe-4df1-8fde-f464b81e8720", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a08f0b1501c1a780997b3c9c5a4ddefd73ca0dea13296fac6e121c3dbf4d2480", "class_name": "RelatedNodeInfo"}}, "text": "h) La commande cp\n\nLa commande *cp* permet de copier un fichier. La commande est de la forme *cp /r\u00e9pertoire_source/nom_fichier_\u00e0_copier /r\u00e9pertoire_destination/nom_fichier*\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04dad0dd-298a-4f4d-b23b-65fe78b04d4c": {"__data__": {"id_": "04dad0dd-298a-4f4d-b23b-65fe78b04d4c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e02ffae-4c71-4422-8658-c79f666d2cb2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a777b48918a2dee3cfb68b65ed68efa1d2caea1ba5ef1800c352a846b905c900", "class_name": "RelatedNodeInfo"}}, "text": "i) La commande mv\n\nLa commande *mv* (move) permet de d\u00e9placer un fichier dans un dossier. Par exemple un *mv toto.txt titi* d\u00e9placera le fichier *toto.txt* dans le r\u00e9pertoire *titi* (attention on parle bien de d\u00e9placement pas de copie).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 238, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d70984a3-f7e6-4fa1-9d46-fa8b3a4105c9": {"__data__": {"id_": "d70984a3-f7e6-4fa1-9d46-fa8b3a4105c9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce2da1fb-65b5-4670-b0f0-7703a92d1e94", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "be0abd52c48ca0c46cf3fc3283532f4f4dc3e1af1bb1a4056ff0c23aea6ad24e", "class_name": "RelatedNodeInfo"}}, "text": "j) La commande man\n\nLa commande *man* permet d'obtenir la documentation d'une autre commande. Par exemple, *man ls* vous donnera la documentation de la commande *ls*.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db78575e-5cb9-4fcb-be77-1d3e69b0f14a": {"__data__": {"id_": "db78575e-5cb9-4fcb-be77-1d3e69b0f14a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f78e2cfe-c481-42da-b980-6f24ca6a940d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "aaa9ec772768170f1c5b968954f7cb35461dba0974b2e604aa2354c230482f77", "class_name": "RelatedNodeInfo"}}, "text": "4) Gestion des utilisateurs et des groupes\n\nLes syst\u00e8mes de type \"UNIX\" sont des syst\u00e8mes multi-utilisateurs, plusieurs utilisateurs peuvent donc partager un m\u00eame ordinateur, chaque utilisateur poss\u00e9dant un environnement de travail qui lui est propre.\n\nChaque utilisateur poss\u00e8de certains droits lui permettant d'effectuer certaines op\u00e9rations et pas d'autres. Le syst\u00e8me d'exploitation permet de g\u00e9rer ces droits tr\u00e8s finement. Un utilisateur un peu particulier est autoris\u00e9 \u00e0 modifier tous les droits : ce \"super utilisateur\" est appel\u00e9 \"administrateur\" ou \"root\". L'administrateur pourra donc attribuer ou retirer des droits aux autres utilisateurs. Au lieu de g\u00e9rer les utilisateurs un par un, il est possible de cr\u00e9er des groupes d'utilisateurs. L'administrateur attribue des droits \u00e0 un groupe au lieu d'attribuer des droits particuliers \u00e0 chaque utilisateur.\n\nComme nous venons de le voir, chaque utilisateur poss\u00e8de des droits qui lui ont \u00e9t\u00e9 octroy\u00e9s par le \"super utilisateur\". Nous nous int\u00e9resserons ici uniquement aux droits li\u00e9s aux fichiers, mais vous devez savoir qu'il existe d'autres droits li\u00e9s aux autres \u00e9l\u00e9ments du syst\u00e8me d'exploitation ((imprimante, installation de logiciels...).\n\nLes fichiers et les r\u00e9pertoires poss\u00e8dent 3 types de droits :\n\n- les droits en lecture (symbolis\u00e9s par la lettre r) : est-il possible de lire le contenu de ce fichier\n\n- les droits en \u00e9criture (symbolis\u00e9s par la lettre w) : est-il possible de modifier le contenu de ce fichier\n\n- les droits en ex\u00e9cution (symbolis\u00e9s par la lettre x) : est-il possible d'ex\u00e9cuter le contenu de ce fichier (quand le fichier du code ex\u00e9cutable)\n\nIl existe 3 types d'utilisateurs pour un fichier ou un r\u00e9pertoire :\n\n- le propri\u00e9taire du fichier (par d\u00e9faut c'est la personne qui a cr\u00e9\u00e9 le fichier), il est symbolis\u00e9 par la lettre u\n\n- un fichier est associ\u00e9 \u00e0 un groupe, tous les utilisateurs appartenant \u00e0 ce groupe poss\u00e8dent des droits particuliers sur ce fichier. Le groupe est symbolis\u00e9 par la lettre g\n\n- tous les autres utilisateurs (ceux qui ne sont pas le propri\u00e9taire du fichier et qui n'appartiennent pas au groupe associ\u00e9 au fichier). Ces utilisateurs sont symbolis\u00e9s la lettre \"o\"\n\nIl est possible d'utiliser la commande *ls* avec l'option *-l* afin d'avoir des informations suppl\u00e9mentaires.\n\n!\n\nPrenons la premi\u00e8re ligne :\n\n```\n-rw-r--r-- 1 david david 0 avril 13 19:58 fic.txt\n```\n\nLisons cette ligne de gauche \u00e0 droite :\n\n- le premier symbole \"-\" signifie que l'on a affaire \u00e0 un fichier, dans le cas d'un r\u00e9pertoire, nous aurions un \"d\" (voir la 2e ligne)\n\n- les 3 symboles suivants \"rw-\"donnent les droits du propri\u00e9taire du fichier : lecture autoris\u00e9e (r), \u00e9criture autoris\u00e9e (w), ex\u00e9cution interdite (- \u00e0 la place de x)\n\n- les 3 symboles suivants \"r--\"donnent les droits du groupe li\u00e9 au fichier : lecture autoris\u00e9e (r), \u00e9criture interdite (- \u00e0 la place de w), ex\u00e9cution interdite (- \u00e0 la place de x)\n\n- les 3 symboles suivants \"r--\"donnent les droits des autres utilisateurs : lecture autoris\u00e9e (r), \u00e9criture interdite (- \u00e0 la place de w), ex\u00e9cution interdite (- \u00e0 la place de x)\n\n- le caract\u00e8re suivant \"1\" donne le nombre de liens (nous n'\u00e9tudierons pas cette notion ici)\n\n- le premier \"david\" repr\u00e9sente le nom du propri\u00e9taire du fichier\n\n- le second \"david\" repr\u00e9sente le nom du groupe li\u00e9 au fichier\n\n- le \"0\" repr\u00e9sente la taille du fichier en octet (ici notre fichier est vide)\n\n- \"avril 13 19:58\" donne la date et l'heure de la derni\u00e8re modification du fichier\n\n- \"fic.txt\" est le nom du fichier\n\nPrenons la deuxi\u00e8me ligne :\n\n```\ndrwxr-xr-x 2 david david 4096 avril 13 20:05 info\n```\n\nLisons cette ligne de gauche \u00e0 droite :\n\n- le premier symbole \"d\" signifie que l'on a un r\u00e9pertoire\n\n- les 3 symboles suivants \"rwx\"donnent les droits du propri\u00e9taire du r\u00e9pertoire : lecture du contenu du r\u00e9pertoire autoris\u00e9e (r), modification du contenu du r\u00e9pertoire autoris\u00e9e (w), il est possible de parcourir le r\u00e9pertoire (voir le contenu du r\u00e9pertoire) (x)\n\n- les 3 symboles suivants \"r-x\"donnent les droits du groupe li\u00e9 au r\u00e9pertoire : modification du contenu du r\u00e9pertoire interdite (- \u00e0 la place de w)\n\n- les 3 symboles suivants \"r-x\"donnent les droits des autres utilisateurs : modification du contenu du r\u00e9pertoire interdite (- \u00e0 la place de w)\n\n- le caract\u00e8re suivant \"2\" donne le nombre de liens (nous n'\u00e9tudierons pas cette notion ici)\n\n- le premier \"david\" repr\u00e9sente le nom du propri\u00e9taire du r\u00e9pertoire\n\n- le second \"david\" repr\u00e9sente le nom du groupe li\u00e9 au r\u00e9pertoire\n\n- le \"4096\" repr\u00e9sente la taille du r\u00e9pertoire en octets\n\n- \"avril 13 20:05\" donne la date et l'heure de la derni\u00e8re modification du contenu du r\u00e9pertoire\n\n- \"info\" est le nom du r\u00e9pertoire\n\nIl est important de ne pas perdre de vu que l'utilisateur *root* a la possibilit\u00e9 de modifier les droits de tous les utilisateurs.\n\nLe propri\u00e9taire d'un fichier peut modifier les permissions d'un fichier ou d'un r\u00e9pertoire \u00e0 l'aide de la commande *chmod*. Pour utiliser cette commande, il est n\u00e9cessaire de connaitre certains symboles :\n\n- les symboles li\u00e9s aux utilisateurs : \"u\" correspond au propri\u00e9taire, \"g\" correspond au groupe li\u00e9 au fichier (ou au r\u00e9pertoire), \"o\" correspond aux autres utilisateurs et \"a\" correspond \u00e0 \"tout le monde\" (permet de modifier \"u\", \"g\" et \"o\" en m\u00eame temps)\n\n- les symboles li\u00e9s \u00e0 l'ajout ou la suppression des permissions : \"+\" on ajoute une permission, \"-\" on supprime une permission, \"=\" les permissions sont r\u00e9initialis\u00e9es (permissions par d\u00e9faut)\n\n- les symboles li\u00e9s aux permissions : \"r\" : lecture, \"w\" : \u00e9criture, \"x\" : ex\u00e9cution.\n\nLa commande *chmod* \u00e0 cette forme :\n\n```\nchmod [u g o a] [+ - =] [r w x] nom_du_fichier\n```\n\npar exemple\n\n```\nchmod o+w toto.txt\n```\n\nattribuera la permission \"\u00e9criture\" pour le fichier \"toto.txt\" \"aux autres utilisateurs\"\n\nIl est possible de combiner les symboles :\n\n```\nchmod g-wx toto.txt\n```\n\nLa commande *chmod* ci-dessus permet de supprimer la permission \"\u00e9criture\" et la permission \"ex\u00e9cution\" pour le fichier *toto.txt* \"au groupe li\u00e9 au fichier\"\n\nUne fois de plus, \"root\" a tous les droits sur l'ensemble des fichiers et des r\u00e9pertoires, il peut donc utiliser la commande *chmod* sur tous les r\u00e9pertoires et tous les fichiers.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 6192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a66c001-1f04-4055-9d9f-9c7e220cac68": {"__data__": {"id_": "9a66c001-1f04-4055-9d9f-9c7e220cac68", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14r.md", "file_name": "termc14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f25bc85-d357-4e43-9066-17f2531dd6ff", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14r.md", "file_name": "termc14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "87fe46bd2bffdfc728364cfba12acf0ab91bd8894baf11ca434361e3400fcbfb", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Linux (plus g\u00e9n\u00e9ralement les syst\u00e8mes de type Unix) propose un syst\u00e8me de fichier en arborescence.\n\n- Pour indiquer la position d'un fichier (ou d'un r\u00e9pertoire) dans l'arborescence, il existe\n2 m\u00e9thodes : indiquer un chemin absolu ou indiquer un chemin relatif (vous devez \u00eatre capable de donner un chemin relatif et un chemin absolu pour un fichier donn\u00e9 dans une arborescence donn\u00e9e)\n\n- Voici une liste de commandes Unix (donc utilisable sous Linux et macOS) que vous devez conna\u00eetre :\n\n\t- cd permet de changer le r\u00e9pertoire courant\n\n\t- ls permet de lister le contenu du r\u00e9pertoire courant\n\n\t- pwd permet de connaitre le r\u00e9pertoire courant\n\n\t- mkdir permet de cr\u00e9er un r\u00e9pertoire dans le r\u00e9pertoire courant\n\n\t- rm permet de supprimer un fichier ou un r\u00e9pertoire\n\n\t- touch permet de cr\u00e9er un fichier vide\n\n\t- cat permet d'afficher dans la console le contenu d'un fichier\n\n\t- cp permet de copier un fichier\n\n\t- mv permet de d\u00e9placer un fichier\n\n\t- man permet d'obtenir la documentation d'une autre commande\n\n- Les syst\u00e8mes de type \"UNIX\" sont des syst\u00e8mes multi-utilisateurs, plusieurs utilisateurs peuvent donc partager un m\u00eame ordinateur, chaque utilisateur poss\u00e9dant un environnement de travail qui lui est propre. Chaque utilisateur poss\u00e8de certains\ndroits lui permettant d'effectuer certaines op\u00e9rations et pas d'autres.\n\n- Un utilisateur un peu particulier est autoris\u00e9 \u00e0 modifier tous les droits : ce \"super utilisateur\" est appel\u00e9 \"administrateur\" ou \"root\". L'administrateur pourra donc attribuer ou retirer des droits aux autres utilisateurs.\n\n- Au lieu de g\u00e9rer les utilisateurs un par un, il est possible de cr\u00e9er des groupes d'utilisateurs. L'administrateur attribue des droits \u00e0 un groupe au lieu d'attribuer des droits particuliers \u00e0 chaque utilisateur.\n\n- Les fichiers et les r\u00e9pertoires poss\u00e8dent 3 types de droits :\n\n\t- les droits en lecture (symbolis\u00e9s par la lettre r) : est-il possible de lire le contenu de ce fichier ?\n\n\t- les droits en \u00e9criture (symbolis\u00e9s par la lettre w) : est-il possible de modifier le contenu de ce fichier ?\n\n\t- les droits en ex\u00e9cution (symbolis\u00e9s par la lettre x) : est-il possible d'ex\u00e9cuter le contenu de ce fichier (quand le fichier du code ex\u00e9cutable) ?\n\n- Il existe 3 types d'utilisateurs pour un fichier ou un r\u00e9pertoire :\n\n\t- le propri\u00e9taire du fichier (par d\u00e9faut c'est la personne qui a cr\u00e9\u00e9 le fichier), il est symbolis\u00e9 par la lettre u\n\n\t- un fichier est associ\u00e9 \u00e0 un groupe, tous les utilisateurs appartenant \u00e0 ce groupe poss\u00e8dent des droits particuliers sur ce fichier. Le groupe est\nsymbolis\u00e9 par la lettre g\n\n\t- tous les autres utilisateurs (ceux qui ne sont pas le propri\u00e9taire du fichier et qui n'appartiennent pas au groupe associ\u00e9 au fichier). Ces utilisateurs sont symbolis\u00e9s la lettre \"o\"\n\n- Le propri\u00e9taire d'un fichier (ou root) peut modifier les permissions d'un fichier ou d'un r\u00e9pertoire \u00e0 l'aide de la commande chmod", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2918, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "925ee79c-fe3f-44e9-9a1d-1caa503fa5e8": {"__data__": {"id_": "925ee79c-fe3f-44e9-9a1d-1caa503fa5e8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14r.md", "file_name": "termc14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "481a1677-d315-4773-99ec-7623e5c08337", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14r.md", "file_name": "termc14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2c5e237dac833e2209a5492615d053bfd52e772881c40932072edae60fe7cb71", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nVous devez \u00eatre capable d\u2019utiliser toutes les commandes list\u00e9es ci-dessus (y compris chmod)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3840be18-cd46-4b8a-8868-a743592e4d4f": {"__data__": {"id_": "3840be18-cd46-4b8a-8868-a743592e4d4f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "378963a1-6086-4e3b-8882-061613d98104", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "050808e009fed1b2f4397f3f1489d98ad0ef5df8f2530a1709528197235aea64", "class_name": "RelatedNodeInfo"}}, "text": "Activit\u00e9 15.1\n\nNous allons \u00e9crire quelques programmes en langage C, mais afin de faciliter cette premi\u00e8re approche, nous n'allons pas directement manipuler un compilateur, nous allons utiliser un \"service en ligne qui s'occupe de tout\" (compilation puis ex\u00e9cution du code machine) : Online C compiler, Online C IDE\n\nTestez le programme C suivant :\n\n```c\n#include \n\nint main(void) {\n\tprintf(\"Hello C\\n\");\n\treturn 0;\n}\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 422, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0dbda18d-aefa-4040-ab4a-e80033203ced": {"__data__": {"id_": "0dbda18d-aefa-4040-ab4a-e80033203ced", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1fa7c3c8-a08f-497c-8baa-5151a8f98ee6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "df99f6e7381469b0582b07e643ce5384857dbfd1803a55d93de6d72c650b7b57", "class_name": "RelatedNodeInfo"}}, "text": "Activit\u00e9 15.2\n\n\u00c9crivez en C une fonction *estMajeur* qui prend en param\u00e8tre un *age* et qui renvoie 1 si *age* est sup\u00e9rieure ou \u00e9gal \u00e0 18 et 0 dans le cas contraire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82177585-caa6-4a30-9370-27f2f8e71fb1": {"__data__": {"id_": "82177585-caa6-4a30-9370-27f2f8e71fb1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "401274ab-6f05-44a3-8861-4225db8cd977", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0110eb87a0e5018b2fb8a6b0c5209b4e848fa505b532c30000546ccd1e53b372", "class_name": "RelatedNodeInfo"}}, "text": "Activit\u00e9 15.3\n\nVous \u00eates g\u00e9rant d'un magasin et vous d\u00e9sirez \u00e9crire un programme C qui calculera automatiquement le montant de la facture des clients. Tout client qui ach\u00e8te au moins 5 fois le m\u00eame article se voit octroyer une remise de 5 % (uniquement sur le montant de l'achat de cet article). Afin de simplifier le probl\u00e8me, on consid\u00e8re qu'un client n'ach\u00e8te qu'un seul type d'article. \u00c9crivez une fonction *facture* qui prend en param\u00e8tre le prix unitaire de l'article et le nombre d'articles achet\u00e9s. Cette fonction doit renvoyer le montant de la facture.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 563, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "908f86bf-c500-403a-9506-20699ac929fa": {"__data__": {"id_": "908f86bf-c500-403a-9506-20699ac929fa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ea414d4d-040b-45c9-a310-f2d6ddb79bde", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e14f2f605e0a0dc3d53bb7fa08f3fc004b4aeb0c36529b045187f6b0f0cf95d9", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 15.4\n\nLa fonction *distance* prend en param\u00e8tres 2 points et renvoie la distance entre ces 2 points :\n\n```python\nfrom math import sqrt\n\ndef distance(point1, point2):\n    return sqrt((point1[0]-point2[0])**2 + (point1[1]-point2[1])**2)\n```\n\nProposez une s\u00e9rie de tests unitaires pour la fonction *distance* (on utilisera des assertions)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 346, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "00cc3bf8-5ed0-4d73-8cfc-1b5e6e097f08": {"__data__": {"id_": "00cc3bf8-5ed0-4d73-8cfc-1b5e6e097f08", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d30d7d0-3d07-4a3c-8542-996842025093", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "04b26712763f8e0fbfc423082fffde75432b0f33172c49ee1136dbf29665cb5d", "class_name": "RelatedNodeInfo"}}, "text": "1) Il n'y a pas que Python dans la vie !", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 42, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39e5347a-6ed0-4700-8423-746b0a314e8b": {"__data__": {"id_": "39e5347a-6ed0-4700-8423-746b0a314e8b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5347ef8-ce86-4f2b-a937-e9d8dc7e01a7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3a4ec86f1deae6b1d856f0b584e1bafb0d62913cbe649006e4fbe1d334386bbd", "class_name": "RelatedNodeInfo"}}, "text": "a) Pr\u00e9sentation du langage C\n\n\nJusqu'\u00e0 pr\u00e9sent, nous avons surtout utilis\u00e9 le langage de programmation Python. Il existe beaucoup d'autres langages de programmation : Java, C++, Ruby, PHP, JavaScript... Tous ces langages sont diff\u00e9rents, mais ils ont aussi des points communs, on peut m\u00eame dire qu'ils ont plus de points communs que de diff\u00e9rences. Afin d'entrer un peu dans les d\u00e9tails, nous allons nous int\u00e9resser \u00e0 un langage qui tient une place \u00e0 part dans l'histoire de l'informatique, le langage C. Le but n'est pas de faire de vous des \"programmeurs C\", mais de vous montrer que m\u00eame si le langage Python et le langage C ont des diff\u00e9rences, ils ont aussi de nombreux points communs.\n\nLe langage C a \u00e9t\u00e9 cr\u00e9\u00e9 par Dennis Ritchie (1941-2011) et Ken Thompson (1943- ) en 1972 (oui, les m\u00eames Ritchie et Thompson qu'UNIX). Le langage C est une \u00e9volution du langage B (langage B a \u00e9t\u00e9 cr\u00e9\u00e9 par Ken Thompson \u00e0 la fin des ann\u00e9es 60). Le langage C est encore tr\u00e8s utilis\u00e9 aujourd'hui (dans le top 10 des langages de programmation les plus utilis\u00e9s), par exemple, le noyau du syst\u00e8me d'exploitation Linux est \u00e9crit en C. Tout informaticien qui se respecte doit avoir, un jour ou l'autre (au moins pendant ses \u00e9tudes), \u00e9crit des programmes en C.\n\nKen Thompson et Dennis Ritchie :\n\n!\n\n\nLe C est un langage compil\u00e9, c'est-\u00e0-dire qu'un programme appel\u00e9 \"compilateur\" transforme le code source (le code \u00e9crit par le programmeur) en langage machine. Cette op\u00e9ration, appel\u00e9e \"compilation\", doit \u00eatre effectu\u00e9e \u00e0 chaque fois que le programmeur modifie le code source, cette phase de compilation peut prendre des dizaines de minutes pour de tr\u00e8s gros programmes. Il existe une autre m\u00e9thode pour passer du code source au langage machine : l'interpr\u00e9tation. En simplifiant \u00e0 l'extr\u00eame, l'interpr\u00e9teur assure une traduction \"\u00e0 la vol\u00e9e\" des instructions. (une ligne est traduite en langage machine puis imm\u00e9diatement ex\u00e9cut\u00e9e), alors que dans le cas de la compilation l'ensemble du code source est transform\u00e9 en langage machine avant le d\u00e9but de l'ex\u00e9cution du programme. Les langages compil\u00e9s (comme le langage C) sont r\u00e9put\u00e9s plus rapides \u00e0 l'ex\u00e9cution que les langages interpr\u00e9t\u00e9s. Il existe une troisi\u00e8me voie qui a le vent en poupe : le code source est compil\u00e9 en pseudocode (appel\u00e9 bytecode) qui n'est pas encore du langage machine, mais s'en rapproche par rapport au code source de d\u00e9part. Ce bytecode est ensuite interpr\u00e9t\u00e9 (l'interpr\u00e9tation est beaucoup plus rapide que pour des langages 100% interpr\u00e9t\u00e9s). Python utilise cette technique.\n\nVoici un programme (tr\u00e8s simple) \u00e9crit en C :\n\n```c\n#include \n\nint main(void) {\n\tprintf(\"Hello World\\n\");\n\treturn 0;\n}\n```\n\nLa premi\u00e8re ligne du programme :\n\n```c\n#include \n```\n\nn'est pas une instruction \u00e0 proprement parl\u00e9, c'est une \"directives de pr\u00e9processeur\", cette ligne est lue au d\u00e9but de la phase de compilation. Nous aurons l'occasion de revenir sur cette ligne plus tard, pour le moment, vous devez juste savoir que cette ligne est obligatoire si vous voulez utiliser \"printf\" (voir quelques lignes plus loin).\n\nLe programme commence r\u00e9ellement avec la ligne :\n\n```c\nint main(void) {\n```\n\nNous avons ici une fonction (\u00e9quivalent \u00e0 un \"def main():\" en Python), comme vous l'avez sans doute d\u00e9j\u00e0 compris, tout le code compris entre l'accolade ouvrante \"{\" et l'accolade fermante \"}\" constitue la fonction nomm\u00e9e \"main\". Voici donc une premi\u00e8re diff\u00e9rence avec Python, le code constituant une fonction n'est pas d\u00e9fini gr\u00e2ce \u00e0 une indentation, mais gr\u00e2ce \u00e0 des accolades (vous remarquerez que l'on utilise tout de m\u00eame une indentation, mais cette derni\u00e8re n'est pas obligatoire en C mais seulement fortement conseill\u00e9e afin de rendre le code plus lisible).\n\nLe \"int\" situ\u00e9 avant le nom de la fonction (\"main\" dans cet exemple), signifie que la fonction doit renvoyer un entier. Le \"void\" situ\u00e9 entre parenth\u00e8ses signifie que notre fonction ne prend aucun param\u00e8tre. Nous aurons l'occasion de revenir sur ce \"int\" et ce \"void\" un peu plus loin.\n\nLa ligne :\n\n```c\nprintf(\"Hello World\\n\");\n```\n\npermet d'afficher le message \"Hello World\" dans la console (le \"\\n\" permet de passer \u00e0 la ligne suivante).\n\nLe\n\n```c\nreturn 0;\n```\n\npermet de renvoyer l'entier 0. Pourquoi renvoie-t-on 0 ? Tout simplement pour signifier que la fonction \"main\" a bien \u00e9t\u00e9 ex\u00e9cut\u00e9e jusqu'au bout. Si cette fonction renvoie autre chose que 0 cela signifiera qu'il y a eu un probl\u00e8me lors de l'ex\u00e9cution de cette derni\u00e8re.\n\nVous avez d\u00fb remarquer que la plupart des lignes se terminent par un point-virgule. Ce point virgule indique au compilateur que la ligne est termin\u00e9e, il est obligatoire.\n\nSi on omet un point virgule comme ici :\n\n```c\n#include \n\nint main(void) {\n\tprintf(\"Hello World\\n\")\n\treturn 0;\n}\n```\n\nOn aura une erreur durant la phase de compilation :\n\n```\nexit status 1\nmain.c:4:24: error: expected ';' after expression\nprintf(\"Hello World\\n\")\n                       ^\n                       ;\n1 error generated.\n```\n\nLa premi\u00e8re ligne (\"exit status 1\") vous indique que la fonction \"main\" n'a pas renvoy\u00e9e l'entier 0 : il y a donc eu un probl\u00e8me lors de la compilation.\n\nLe message d'erreur qui suit est tr\u00e8s explicite puisqu'il indique clairement qu'il manque un point-virgule \u00e0 la fin de la ligne *printf(\"Hello World\\n\")*\n\nLe programme Python permettant d'obtenir le m\u00eame r\u00e9sultat que le programme ci-dessus est tr\u00e8s simple puisqu'il est constitu\u00e9 d'une seule ligne :\n\n```c\nprint(\"Hello World\")\n```\n\nEn C, c'est un petit plus complexe, car la fonction \"main\" est obligatoire. En effet, au moment de l'ex\u00e9cution du programme, le syst\u00e8me recherche la fonction \"main\" afin d'ex\u00e9cuter les instructions qui se trouvent \"\u00e0 l'int\u00e9rieur\" de cette fonction (le nom \"main\" est obligatoire).\n\nIl est bien s\u00fbr possible d'utiliser des variables en C :\n\n```c\n#include \n\nint main(void) {\n\tint i;\n\ti=15;\n\tprintf(\"La valeur de i est %d\\n\",i);\n\treturn 0;\n}\n```\n\nVoici le programme \u00e9quivalent en Python :\n\n```python\ni=15\nprint(f\"La valeur de i est {i}\")\n```\n\nDans le programme en C, on s'attardera particuli\u00e8rement sur la ligne :\n\n```c\nint i;\n```\n\nCette ligne permet de d\u00e9clarer la variable *i* et de pr\u00e9ciser que cette variable \"i\" \"contiendra\" un nombre de type entier (cette variable sera de type entier). En C, cette d\u00e9claration est obligatoire, afin de, au moment de la compilation, r\u00e9server la place n\u00e9cessaire en m\u00e9moire pour la valeur de la variable *i*. Dans notre cas, le compilateur r\u00e9servera pour *i*, une certaine quantit\u00e9 de m\u00e9moire (la quantit\u00e9 de m\u00e9moire n\u00e9cessaire pour \"accueillir\" un entier).\n\nIl existe d'autres types de variables en C : \"long\", \"float\", \"char\"... mais, encore une fois, notre but n'\u00e9tant pas d'apprendre \u00e0 programmer en C, nous en resterons l\u00e0.\n\nEn Python les variables ont aussi un type, mais le typage est dit dynamique : une variable peut changer de type au cours de l'ex\u00e9cution d'un programme, il n'est donc pas n\u00e9cessaire de d\u00e9clarer le type d'une variable en Python (le syst\u00e8me s'occupe de d\u00e9finir le type d'une variable par lui-m\u00eame).\n\nInt\u00e9ressons-nous maintenant aux boucles en C :\n\n```c\n#include \n\nint main(void) {\n\tint i;\n\ti=0;\n\twhile (i<10){\n\t    printf(\"La valeur de i est %d\\n\",i);\n\t    i=i+1;\n\t}\n\treturn 0;\n}\n```\n\nvoici le programme \u00e9quivalent en Python :\n\n```python\ni=0\nwhile i<10:\n    print(f\"La valeur de i est {i}\")\n    i=i+1\n```\n\nComme vous pouvez le constater, les 2 programmes diff\u00e8rent peu, on retrouve les accolades qui d\u00e9finissent le d\u00e9but et la fin de la boucle.\n\nLes conditions en C :\n\n```c\n#include \n\nint main(void) {\n\tint i;\n\ti=19;\n\tif (i<18){\n\t    printf(\"Vous \u00eates mineur\");\n\t}\n\telse {\n\t    printf(\"Vous \u00eates majeur\");\n\t}\n\treturn 0;\n}\n```\n\nEncore quelques diff\u00e9rences avec le m\u00eame programme en Python, mais rien de tr\u00e8s complexe.\n\nNous avons d\u00e9j\u00e0 eu l'occasion de parler des fonctions en C avec la fonction \"main\", il est bien \u00e9videmment possible d'\u00e9crire d'autres fonctions en C :\n\nvoici un programme Python qui utilise une fonction :\n\n```python\ndef somme(x,y):\n    s=x+y\n    return s\na=5\nb=4\nres=somme(a,b)\nprint(f\"La somme de {a} et de {b} vaut {res}\")\n```\n\net voici l'\u00e9quivalent en C :\n\n```c\n#include \n\nint somme(int x, int y){\n\tint s;\n\ts=x+y;\n\treturn s;\n}\n\nint main(void) {\n\tint res;\n\tint a;\n\tint b;\n\ta=5;\n\tb=4;\n\tres=somme(a,b);\n\tprintf(\"La somme de %d et de %d vaut %d\\n\",a,b,res);\n\treturn 0;\n}\n```\n\nNous constatons comme pour la fonction \"main\" qu'il est n\u00e9cessaire d'indiquer le type de la valeur renvoy\u00e9e par la fonction (ici \"int\" car notre fonction \"somme\" renvoie bien un entier). \u00c0 la diff\u00e9rence de notre fonction \"main\", la fonction \"somme\" prend deux param\u00e8tres : x et y (tous les deux de type entier). Il est n\u00e9cessaire d'indiquer le type des param\u00e8tres, ici \"int\" pour x et y. Si vous omettez le type d'un param\u00e8tre, vous aurez le droit \u00e0 une erreur au moment de la compilation.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 8780, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd57b6f2-293f-4b55-96ea-c9cba0c33b91": {"__data__": {"id_": "dd57b6f2-293f-4b55-96ea-c9cba0c33b91", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8cac0e9b-358c-405a-8723-b647d143e5fa", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f65514bc84cc4f4ab42988d512d9e1d594e4bd0c1fa0992ca0c532147c72ad8c", "class_name": "RelatedNodeInfo"}}, "text": "b) Prototype d'une fonction\n\nVous avez sans doute remarqu\u00e9 que la fonction \"somme\" du programme ci-dessus se trouve dans le code avant la fonction \"main\", si vous placez la fonction \"somme\" apr\u00e8s la fonction \"main\" cela ne fonctionnera pas, car le compilateur ne \"comprendra\" pas la ligne \"res=somme(a,b);\", en effet \u00e0 ce stade le compilateur n'aura pas encore \"rencontr\u00e9\" une fonction d\u00e9nomm\u00e9e \"somme\". Cependant, il est tout de m\u00eame possible de placer la fonction \"somme\" apr\u00e8s la fonction \"main\" \u00e0 condition de fournir au compilateur le prototype de la fonction \"somme\". Le prototype d'une fonction permet \"d'annoncer\" au compilateur qu'une fonction X renvoyant une valeur d'un certain type et qui poss\u00e8de un (ou des) param\u00e8tre(s) d'un certain type va \u00eatre d\u00e9finie \"un peu plus loin\" dans le programme.\n\nN.B : certains compilateurs C ne renvoient pas d'erreur dans la situation d\u00e9crite ci-dessus, juste un avertissement (\"warning\")\n\nPour \u00e9viter les erreurs (et les \"warning\"), il faut \u00e9crire :\n\n```c\n#include \n\nint somme(int x, int y);\n\nint main(void) {\n\tint res;\n\tint a;\n\tint b;\n\ta=5;\n\tb=4;\n\tres=somme(a,b);\n\tprintf(\"La somme de %d et de %d vaut %d\\n\",a,b,res);\n\treturn 0;\n}\nint somme(int x, int y){\n\tint s;\n\ts=x+y;\n\treturn s;\n}\n```\n\nLa ligne\n\n```c\nint somme(int x, int y);\n```\n\ncorrespond au prototype de la fonction \"somme\". \u00c0 noter qu'il est aussi possible d'omettre les noms des param\u00e8tres au niveau du prototype et d'uniquement indiquer le type des arguments : \"int somme(int, int);\"\n\nL'utilisation des prototypes est une \"bonne pratique\" de programmation, il est donc tr\u00e8s vivement recommand\u00e9 d'utiliser les prototypes en C.\n\nQuand les programmes C comportent de nombreuses fonctions, il est judicieux de placer les prototypes des fonctions dans un fichier \u00e0 part. Ces fichiers portent l'extension \"h\" (exemple : \"stdio.h\"), ils sont appel\u00e9s \"header\" (\"en t\u00eate\" en fran\u00e7ais). Le \"#include \" indique au compilateur qu'il doit inclure dans le fichier courant les prototypes se trouvant dans le fichier \"stdio.h\". Dans nos exemples, nous utilisons la fonction syst\u00e8me \"printf\", le fichier \"stdio.h\" contient le prototype de cette fonction \"printf\", d'o\u00f9 le \"#include \" pr\u00e9sent dans tous les exemples.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2209, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b7546a4-7233-48b9-893d-21aafc033c79": {"__data__": {"id_": "9b7546a4-7233-48b9-893d-21aafc033c79", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29fa8b25-95a7-42da-aeac-878e296777ab", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5ad41143b1f79f5ec9a684513de3fbb3b6d1f95082cdf0437bb7cd71db7f60e3", "class_name": "RelatedNodeInfo"}}, "text": "2) d\u00e9bogage d'un programme", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 28, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "510cd246-9688-4cf7-88b1-36acae61f406": {"__data__": {"id_": "510cd246-9688-4cf7-88b1-36acae61f406", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9435875f-9fd1-4244-8f08-b520514c0018", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c155fe348d094a37d07f82f205740445400a89d497c23e87f5a2c9f7314c4070", "class_name": "RelatedNodeInfo"}}, "text": "a) Python trop \"laxiste\" ?\n\nOn pourrait penser que toutes les contraintes impos\u00e9es par le C par rapport au Python (indiquer le type des variables, le type des param\u00e8tres d'une fonction, le type de la valeur renvoy\u00e9e par une fonction) est un handicape pour le programmeur. En fait, pas du tout, car ces exigences obligent le programmeur \u00e0 une plus grande rigueur et permettent de d\u00e9tecter beaucoup plus facilement certaines erreurs. Certains programmeurs n'aiment pas programmer en Python parce qu'ils le trouvent trop \"laxiste\" avec le type des variables.\n\nPrenons un exemple avec la  fonction Python suivante :\n\n```python\ndef somme(x,y):\n  s=x+y\n  return s\n```\n\nSi on utilise cette fonction avec les arguments 2 et 5, aucun probl\u00e8me la fonction renvoie bien 7.\n\nEn revanche, si on ex\u00e9cute cette fonction avec les arguments \"2\" et \"5\" (chaines  de caract\u00e8re \u00e0 la  place des entiers), la fonction renvoie la cha\u00eene de caract\u00e8res \"25\", ce qui est logique (le signe + est aussi le signe de concat\u00e9nation), mais cela peut poser d'\u00e9normes probl\u00e8mes dans un programme : le concepteur du programme a \"pens\u00e9\" la fonction \"somme\" comme une fonction qui renvoie la somme de 2 nombres et pas comme une fonction qui renvoie la concat\u00e9nation de 2 cha\u00eenes de caract\u00e8res. Le gros probl\u00e8me est que Python ne renvoie aucun avertissement, aucune erreur. Le programmeur n'aura aucun moyen de savoir que sa fonction \"somme\" a \u00e9t\u00e9 \"mal\" utilis\u00e9e et qu'elle ne renvoie pas du tout le r\u00e9sultat attendu.\n\nSi maintenant nous \u00e9crivons le m\u00eame programme en C :\n\n```c\n#include \n\nint somme(int x, int y);\n\nint main(void) {\n  int res;\n  res=somme(2,5);\n  printf(\"La somme vaut %d\\n\",res);\n  return 0;\n}\nint somme(int x, int y){\n  int s;\n  s=x+y;\n  return s;\n}\n```\n\nCe programme fonctionne parfaitement\n\nSi maintenant nous \u00e9crivons  : \n\n```c\n#include \n\nint somme(int x, int y);\n\nint main(void) {\n  int res;\n  res=somme(\"2\",\"5\");\n  printf(\"La somme vaut %d\\n\",res);\n  return 0;\n}\nint somme(int x, int y){\n  int s;\n  s=x+y;\n  return s;\n}\n```\n\nLe programme \"fonctionne\", on obtient d'ailleurs un r\u00e9sultat totalement inattendu : *La somme vaut 8391658*.\n\nMais le plus important n'est pas l\u00e0, le compilateur nous informe aussi de certains probl\u00e8mes :\n\n!\n\nSans trop entrer dans les d\u00e9tails, le compilateur nous informe qu'il attend des entiers pour les param\u00e8tres de la fonction \"somme\" et que nous lui fournissons des caract\u00e8res.\n\nLe programmeur est donc averti du probl\u00e8me, il pourra donc prendre les mesures qui s'imposent pour le r\u00e9soudre.\n\n\u00c9videmment le compilateur a pu informer le programmeur du probl\u00e8me parce que le prototype de la fonction pr\u00e9cise que les param\u00e8tres attendus sont des entiers. Ce qui, au d\u00e9part, aurait pu paraitre comme une contrainte inutile peut rendre de grand service au programmeur au cours du d\u00e9bogage du programme, alors qu'en Python, l'erreur pourrait passer inaper\u00e7ue.\n\nIl existe un moyen en Python d'\u00e9viter ce genre de probl\u00e8me : l'utilisation des assertions.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2962, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b97697a-a627-4402-bf1f-f5796f859320": {"__data__": {"id_": "8b97697a-a627-4402-bf1f-f5796f859320", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f13d732-2938-4233-8a9b-698601cbf148", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3f782f3a3bc1aa9724e3131f22e5493e94f7e0fba8e7ecbc67fcf345b5708678", "class_name": "RelatedNodeInfo"}}, "text": "b) les assertions en Python\n\nConsid\u00e9rons la fonction suivante :\n\n```python\ndef somme(x,y):\n  assert isinstance(x,int) \n  assert isinstance(y,int) \n  s=x+y\n  return s\n```\n\nSi nous testons cette fonction avec les 2 appels suivants :\n\n- *somme(2,5)*\n\n- *somme(\"2\",\"5\")*\n\nNous pouvons constater que dans le premier cas, tout se passe normalement :\n\n!\n\nDans le second cas (*somme(\"2\",\"5\")*), nous obtenons le r\u00e9sultat suivant :\n\n!\n\n*isinstance* permet de v\u00e9rifier le type d'une variable, dans l'exemple ci-dessus *isinstance(x,int)* renvoie True si x est de type entier (int) et False si x n'est pas de type entier. Si ce qui se trouve juste apr\u00e8s le mot-cl\u00e9 *assert* est False, le syst\u00e8me l\u00e8ve une exception et le programme s'arr\u00eate. En r\u00e9sum\u00e9, le *assert isinstance(x,int)* permet de lever une exception si la variable x n'est pas de type entier.\n\nCes assertions permettent de pallier, au moins en partie, aux insuffisances de Python en termes de typage des param\u00e8tres d'une fonction (donner le type des param\u00e8tres d'une fonction).\n\nL'exemple donn\u00e9 ici est volontairement tr\u00e8s simple (voire m\u00eame simpliste), mais ce genre de probl\u00e8mes peut se poser dans des programmes extr\u00eamement complexes, ou parfois, il peut se passer des choses inexplicables, tr\u00e8s difficiles \u00e0 comprendre, durant l'ex\u00e9cution. Alors que les erreurs qui entrainent ces comportements erratiques auraient \u00e9t\u00e9 facilement identifi\u00e9es si une exception avait \u00e9t\u00e9 lev\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88b2dbdf-fa2f-4d41-92fc-97ab11fe3b95": {"__data__": {"id_": "88b2dbdf-fa2f-4d41-92fc-97ab11fe3b95", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6f31b5c-3fab-4c0b-8113-f83ffb8b7658", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bd50b317d712c8cfd9681b26b18643632946e9c683c718569f43358de42900ab", "class_name": "RelatedNodeInfo"}}, "text": "c) Tester ses programmes en Python\n\nLes assertions vues ci-dessus  vont aussi nous permettre de tester nos fonctions. Par tester, j'entends : \"v\u00e9rifier que la fonction renvoie bien la valeur attendue\".\n\nPrenons tout de suite un exemple avec notre fonction *somme* :\n\n```python\ndef somme(x,y):\n  s=x+y\n  return s\n```\n\nNous pouvons mettre en place des tests pour cette fonction (on parle de \"tests unitaires\") \u00e0 l'aide d'assertions :\n\n```python\ndef somme(x,y):\n  s=x+y\n  return s\n  \nassert somme(5,2)==7\nassert somme(0,0)==0\nassert somme(5,-2)==3\nassert somme(-5,2)==-3\nassert somme(-5,-2)==-7\n```\n\nNous avons mis en place 5 tests :\n\n- nous allons tester que *somme(5,2)* renvoie bien 7\n\n- nous allons tester que *somme(0,0)* renvoie bien 0\n\n- nous allons tester que *somme(5,-2)* renvoie bien 3\n\n- nous allons tester que *somme(-5,2)* renvoie bien -3\n\n- nous allons tester que *somme(-5,-2)* renvoie bien -7\n\nIl ne faut pas perdre de vue que *assert* prend  en param\u00e8tre une expression qui renvoie donc True ou False. Si l'expression renvoie False, une exception est lev\u00e9e et le d\u00e9veloppeur sait alors que sa fonction n'a pas pass\u00e9 au moins un des tests, il y a donc un probl\u00e8me.\n\nIl est possible de personnaliser le message d'erreur que l'on souhaite afficher en cas d'\u00e9chec au test :\n\n```python\nassert somme(5,2)==7, \"erreur de calcul\"\n``` \n\nIl est \u00e9videmment impossible de tester tous les cas possibles, il est donc n\u00e9cessaire de choisir judicieusement les tests \u00e0 effectuer (le choix des tests est souvent une partie d\u00e9licate du d\u00e9veloppement d'une fonction)\n\nAttention, les tests unitaires n'apportent pas la preuve qu'une fonction est correcte (il se peut tr\u00e8s bien que le d\u00e9veloppeur ait \"oubli\u00e9\" un cas critique), pour obtenir une v\u00e9ritable preuve de correction (au sens math\u00e9matique du terme), il  faut utiliser des outils bien plus \u00e9labor\u00e9s.\n\nLa mise en place de tests unitaires est une \u00e9tape fondamentale dans le d\u00e9veloppement d'un logiciel, il est tr\u00e8s important de ne surtout pas la n\u00e9gliger.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94d941a3-460e-44cd-a2ab-b46941670709": {"__data__": {"id_": "94d941a3-460e-44cd-a2ab-b46941670709", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15r.md", "file_name": "termc15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49ba5ce4-a6ef-4ff5-b1d6-3dba032bc08b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15r.md", "file_name": "termc15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a9322fc4ab3b048d6c67b43ad666f916075a3c1371c09ba25f4ea7793f5523b7", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Python est tr\u00e8s loin d\u2019\u00eatre le seul langage de programmation, voici une liste non exhaustive des langages de programmation : Java, C, C++, JavaScript, PHP, Go, Rust, OCaml\u2026\n\n- Il existe quelques diff\u00e9rences entre ces diff\u00e9rents langages de programmation, mais il existe aussi beaucoup de points communs\n\n- Donner le prototype d\u2019une fonction consiste \u00e0 donner le type des param\u00e8tres de la fonction (entier, cha\u00eene de caract\u00e8res\u2026) et le type de la valeur renvoy\u00e9e par cette\nfonction (exemple de prototype d\u2019une fonction en C : int somme(int x, int y); => la fonction somme prendra 2 entiers en param\u00e8tres (x et y) et devra renvoyer un entier)\n\n- Dans certains langages (par exemple Python) il n\u2019est pas n\u00e9cessaire de pr\u00e9ciser le type des param\u00e8tres pass\u00e9s \u00e0 une fonction et le type de la valeur renvoy\u00e9e par une fonction. Dans d\u2019autres langages (par exemple C ou Java) c\u2019est une obligation.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 914, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a9cba74-1145-45b3-8867-c523e12bef1f": {"__data__": {"id_": "4a9cba74-1145-45b3-8867-c523e12bef1f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15r.md", "file_name": "termc15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "35762924-ed8c-45d9-b69b-52a4bfcff22e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15r.md", "file_name": "termc15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7bd2258bcc48c8dac549b9f397460623868ee861a12b0c978df153da2e1c3428", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nVous devez savoir utiliser les assertions (*assert*) en Python afin de pouvoir effectuer des tests unitaires simples.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d29f859d-5cce-480e-9c2f-0da141aa8414": {"__data__": {"id_": "d29f859d-5cce-480e-9c2f-0da141aa8414", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4fa3200-75c1-422f-8ccf-b677da1d0f3a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "17486bdf92f99e17a6ce9cc01132b2cda1999ee759777063646903651731204f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.1\n\nCompl\u00e9tez le sch\u00e9ma ci-dessous avec les termes suivants : \n\nordinateur 1, ordinateur 2, switch, ordinateur 3\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c48f56c1-abab-400f-9184-85c6bacbd2fb": {"__data__": {"id_": "c48f56c1-abab-400f-9184-85c6bacbd2fb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86b3a169-a44b-44f3-9390-4a3b6c5c60a4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "09688dbbfce82ac5719a0e4952a46e5564258aed61e2d50be1f496a45ba80bbf", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.2\n\nD\u00e9terminez les adresses r\u00e9seaux \u00e0 partir des adresses IP suivantes :\n\n- 147.12.1.24/16\n- 192.168.2.45/24\n- 5.23.65.87/8\n- 25.8.254.253/20", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 154, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77833b70-6766-45d9-bf92-bafd7d395cf6": {"__data__": {"id_": "77833b70-6766-45d9-bf92-bafd7d395cf6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d884034b-b6a7-454f-be08-95f95d4d6a90", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "a5665b9ea32fe3101a143a18db43e473d05708af372627a394f2116dd1135b99", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.3\n\nD\u00e9terminez les adresses de broadcast \u00e0 partir des adresses IP suivantes :\n\n- 147.12.1.24/16\n- 192.168.2.45/24\n- 5.23.65.87/8\n- 25.8.254.253/20", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cf597e2-fb88-4de5-9299-17e4f169cd74": {"__data__": {"id_": "0cf597e2-fb88-4de5-9299-17e4f169cd74", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3a3843eb-a6ad-4d8d-a579-7d267064a61d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "69c22abdbb42c03a0ee687e50c66ae90f930eca38b75c3fca5bfce878aca72cd", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.4\n\nSoit 2 machines A et B connect\u00e9es \u00e0 un switch, dites dans quels cas ces 2 machines pourront communiquer ensemble :\n\n- adresse IP de A : 172.23.4.7/16 ; adresse IP de B : 172.23.5.8/16\n\n- adresse IP de A : 24.2.8.127/8 ; adresse IP de B : 24.23.5.52/8\n\n- adresse IP de A : 193.28.7.2/24 ; adresse IP de B : 193.28.8.3/24", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 336, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9147d69-a468-47f7-b50e-7fc5ed0588fd": {"__data__": {"id_": "d9147d69-a468-47f7-b50e-7fc5ed0588fd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "866b26a6-0b3e-460e-8113-400ead72ae68", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "d6d4d9fba6d22a8ea4ff4fd36b927616c075faa43ae4a6dca4b89258cd05bb4a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 16.5\n\nCombien de machines peut-on trouver au maximum :\n\n- dans un r\u00e9seau d'adresse r\u00e9seau 192.168.2.0/24 ?\n\n- dans un r\u00e9seau d'adresse r\u00e9seau 176.24.0.0/16 ?\n\n- dans un r\u00e9seau d'adresse r\u00e9seau 10.0.0.0/8 ?\n\n- dans un r\u00e9seau d'adresse r\u00e9seau 2.28.5.244/30 ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 267, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4addacd1-6522-4376-bcc3-0db3ce3afb10": {"__data__": {"id_": "4addacd1-6522-4376-bcc3-0db3ce3afb10", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "270b62ed-debc-4dc5-b857-332b513e43f4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "e756a75043ff2f7f895f451dfccabdd9bf0bbfc853942c2b038a43ca2e01227f", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nIl est possible de faire communiquer deux ordinateurs en les reliant par un simple c\u00e2ble. On dit alors que ces deux ordinateurs sont en r\u00e9seau.\n\n2 ordinateurs en r\u00e9seau :\n\n!\n\nDans la plupart des cas, le c\u00e2ble reliant les 2 ordinateurs est un c\u00e2ble Ethernet. Ce type de c\u00e2ble poss\u00e8de \u00e0 ses 2 extr\u00e9mit\u00e9s des prises RJ45 (il existe d'autres types de c\u00e2bles qui permettent de mettre 2 ordinateurs en r\u00e9seau, mais l'utilisation de c\u00e2bles Ethernet est tellement majoritaire que nous ne nous int\u00e9resserons pas aux autres types de c\u00e2bles).\n\nc\u00e2ble Ethernet avec prises RJ45 :\n\n!\n\nUn ordinateur reli\u00e9 \u00e0 un r\u00e9seau doit poss\u00e9der une carte r\u00e9seau, on identifie cette carte r\u00e9seau de type Ethernet gr\u00e2ce \u00e0 la prise RJ45 femelle situ\u00e9e souvent \u00e0 l'arri\u00e8re de l'ordinateur.\n\ncarte r\u00e9seau de type Ethernet :\n\n!\n\nRelier 2 ordinateurs peut avoir un int\u00e9r\u00eat, mais dans la plupart des cas, un r\u00e9seau sera constitu\u00e9 d'un plus grand nombre d'ordinateurs. Dans ce cas, il est n\u00e9cessaire d'utiliser un commutateur r\u00e9seau, souvent appel\u00e9 switch (m\u00eame en fran\u00e7ais). Un switch est constitu\u00e9 de plusieurs prises RJ45.\n\nplusieurs switchs :\n\n!\n\nComme nous le montre la photo ci-dessus, il existe des switchs de diff\u00e9rentes tailles, certains switchs poss\u00e8dent 8 prises RJ45 alors que d'autres peuvent en poss\u00e9der 24.\n\nChaque ordinateur doit \u00eatre reli\u00e9 au switch par l'interm\u00e9diaire d'un c\u00e2ble Ethernet.\n\nr\u00e9seau de 4 ordinateurs :\n\n!\n\nDans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C et D sont en r\u00e9seau, chaque ordinateur peut communiquer avec les 3 autres.\n\nLes switchs ayant un nombre de prises RJ45 limit\u00e9, il peut \u00eatre n\u00e9cessaire d'utiliser plusieurs switchs dans un m\u00eame r\u00e9seau.\n\nr\u00e9seau de 5 ordinateurs :\n\n!\n\nDans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C, D et E sont en r\u00e9seau. A, B et C sont reli\u00e9s \u00e0 un switch, D et E sont reli\u00e9s \u00e0 un autre switch. Les 2 switchs \u00e9tant reli\u00e9s ensemble.\n\nDepuis le d\u00e9but nous avons uniquement parl\u00e9 de r\u00e9seaux filaires (les diff\u00e9rents composants du r\u00e9seau sont reli\u00e9s par des c\u00e2bles), il est aussi possible de mettre plusieurs machines en r\u00e9seau gr\u00e2ce \u00e0 des technologies sans fil (utilisation des ondes radio pour transmettre l'information entre les diff\u00e9rents composants du r\u00e9seau), par exemple, le wifi (il existe d'autres technologies sans fil que le wifi, mais elles ne seront abord\u00e9es ici). Chaque ordinateur appartenant au r\u00e9seau sans fil devra poss\u00e9der une carte r\u00e9seau wifi (aujourd'hui tous les ordinateurs portables vendus sont par d\u00e9faut \u00e9quip\u00e9s d'une telle carte). Il sera n\u00e9cessaire d'utiliser un concentrateur wifi (\u00e9quivalent du switch en filaire) si l'on d\u00e9sire mettre en r\u00e9seau plus de deux ordinateurs.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2673, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d40443ae-5347-435b-b6e8-fd35068364e9": {"__data__": {"id_": "d40443ae-5347-435b-b6e8-fd35068364e9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1616fb55-9234-4cb2-a62a-b9d1e88dc468", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "e29659b54e3dcb02c760a5d1f2c28b311c3531f2e0e1d6c2162ca81cab3aaadf", "class_name": "RelatedNodeInfo"}}, "text": "2) les adresses IP", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 20, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03db6947-f555-464a-a802-f879d3a5d098": {"__data__": {"id_": "03db6947-f555-464a-a802-f879d3a5d098", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5aa314f9-47ab-4b28-9aad-ef7628083d4c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "33db2b8acfd807ad35c210d7aefe47a3238db058aea64ba97b829d6e194621b8", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nMaintenant que nos ordinateurs sont reli\u00e9s par l'interm\u00e9diaire d'un switch (ou d'un concentrateur wifi), imaginons que l'ordinateur A \"souhaite\" entrer en communication avec l'ordinateur C. Quand vous d\u00e9sirez communiquer avec quelqu'un par voie postale, il est n\u00e9cessaire d'\u00e9crire l'adresse de cette personne sur une enveloppe, \u00e0 chaque habitation correspond donc une adresse postale. Et bien, c'est un peu la m\u00eame chose pour les ordinateurs en r\u00e9seau, chaque machine poss\u00e8de une adresse. Pendant tr\u00e8s longtemps, diff\u00e9rentes technologies de r\u00e9seau, et donc diff\u00e9rents types d'adresse, ont coexist\u00e9. Aujourd'hui, on trouve presque exclusivement qu'un seul type d'adresse : les adresses IP.\n\nLes adresses IP sont de la forme : \"a.b.c.d\", avec a, b, c et d compris entre 0 et 255 (a, b, c et d sont cod\u00e9s sur 1 octet). Voici un exemple d'adresse IP : 192.168.0.1\n\nUne partie de l\u2019adresse IP permet d\u2019identifier le r\u00e9seau auquel appartient la machine et l\u2019autre partie de l\u2019adresse IP permet d\u2019identifier la machine sur ce r\u00e9seau.\n\nExemple : Soit un ordinateur A ayant pour adresse IP 192.168.2.1 Dans cette adresse IP \"192.168.2\" permet d\u2019identifier le r\u00e9seau (on dit que la machine A appartient au r\u00e9seau ayant pour adresse r\u00e9seau 192.168.2.0, pour trouver l'adresse r\u00e9seau, il suffit de remplacer la partie \"machine\" de cette adresse IP par un ou des 0) et \"1\" permet d\u2019identifier la machine sur le r\u00e9seau.\n\nToutes les machines appartenant au m\u00eame r\u00e9seau devront poss\u00e9der la m\u00eame adresse r\u00e9seau (sinon elles ne pourront pas communiquer, m\u00eame si elles sont bien physiquement reli\u00e9es).\n\nPrenons 2 exemples, soit 2 machines A et B en r\u00e9seau :\n\n- la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP 192.168.2.8. Les 3 premiers octets sont bien identiques (\"192.168.2\"), A et B ont donc la m\u00eame adresse r\u00e9seau \"192.168.2.0\". Ces 2 machines pourront donc communiquer\n\n- la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP 192.168.3.8. Les 3 premiers octets ne sont pas identiques (\"192.168.2\" pour A et \"192.168.3\" pour B), A et B n'ont pas la m\u00eame adresse r\u00e9seau (\"192.168.2.0\" pour A et \"192.168.3.0\" pour B). Ces 2 machines ne pourront donc pas communiquer\n\n**Attention**, les adresses IP (a.b.c.d) n\u2019ont forc\u00e9ment pas les parties a, b et c consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et la partie d consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau. Entrons un peu dans les d\u00e9tails", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2450, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fe40b60-7581-4f36-b8b4-db19e7b324b0": {"__data__": {"id_": "5fe40b60-7581-4f36-b8b4-db19e7b324b0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91344d28-3724-4bfc-ac36-16ad3ee65bcb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "477de4f26cdbdeae36f2b82076ca050141b688a9f44827f9e05687b0693cf79c", "class_name": "RelatedNodeInfo"}}, "text": "b) les masques de sous-r\u00e9seaux", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 32, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9d9e1ab-796a-4273-addf-224d5a0bfa7e": {"__data__": {"id_": "b9d9e1ab-796a-4273-addf-224d5a0bfa7e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "276506c8-2f98-4eb0-95c2-922253ff9e9f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "3f44982a7f2b56c7aff2f080e1fada9866ba017b15abe6aec19bc4b9a5ced80f", "class_name": "RelatedNodeInfo"}}, "text": "i) Principes\n\n\u00c0 chaque adresse IP on associe un masque de sous-r\u00e9seau. Un masque de sous-r\u00e9seau est, comme les adresses IP, compos\u00e9 de 4 nombres a.b.c.d. Comme pour les adresses IP, chaque nombre est compris entre 0 et 255 (chaque nombre est cod\u00e9 sur un octet). Voici un exemple de masque de sous-r\u00e9seau : 255.255.255.0. Pour obtenir une adresse r\u00e9seau \u00e0 partir de l'adresse IP d'une machine, il est n\u00e9cessaire de connaitre le masque de sous-r\u00e9seau associ\u00e9 \u00e0 cette adresse IP.\n\nPour aller plus loin, il va \u00eatre n\u00e9cessaire de travailler sur les repr\u00e9sentations binaires des adresses IP et des masques de sous-r\u00e9seau, prenons tout de suite un exemple :\n\nsoit l'adresse IP suivante : 192.168.2.1 et le masque de sous-r\u00e9seau suivant : 255.255.255.0. Ce qui nous donne en binaire 11000000.10101000.00000010.00000001 pour l'adresse IP et 11111111.11111111.11111111.00000000 pour le masque de sous-r\u00e9seaux (si n\u00e9cessaire, n'h\u00e9sitez pas \u00e0 consulter le chapitre consacr\u00e9 \u00e0 la conversion base 10 - base 2).\n\nPour d\u00e9terminer l'adresse r\u00e9seau correspondant \u00e0 l'adresse IP 192.168.2.1, il suffit de faire un \"et logique bit \u00e0 bit\" entre l'adresse IP (en binaire) et le masque de sous-r\u00e9seau (en binaire) : pour chaque bit, si le bit de l'adresse IP est 1 et si le bit du masque de sous-r\u00e9seau est 1 alors le bit correspondant de l'adresse r\u00e9seau sera 1. Dans tous les autres cas, le bit du r\u00e9sultat sera \u00e0 0 :\n\n!\n\nComme vous pouvez le constater, une adresse IP 11000000.10101000.00000010.00000001 associ\u00e9e \u00e0 une masque de sous-r\u00e9seau 11111111.11111111.11111111.00000000 donne une adresse r\u00e9seau 11000000.10101000.00000010.00000000. Ce qui traduit en base 10 donne : une adresse IP 192.168.2.1 associ\u00e9e \u00e0 un masque de sous-r\u00e9seau 255.255.255.0 donne une adresse r\u00e9seau 192.168.2.0 (exactement le r\u00e9sultat d\u00e9j\u00e0 obtenu ci-dessus dans le 2a).\n\nEnvisageons un autre cas : adresse IP 172.16.28.44 avec un masque de sous-r\u00e9seau 255.255.0.0. Ce qui nous donne en binaire : adresse IP 10101100.00010000.00011100.00101100 avec un masque de sous-r\u00e9seau 11111111.11111111.000000000.00000000. En appliquant un \"et logique bit \u00e0 bit\", nous obtenons l'adresse r\u00e9seau suivante : 10101100.00010000.00000000.00000000, soit en base 10 : 172.16.0.0\n\nUn dernier cas : adresse IP 10.5.23.247 avec un masque de sous-r\u00e9seau 255.0.0.0. Ce qui nous donne en binaire : adresse IP 00001010.00000101.00010111.11110111 avec un masque de sous-r\u00e9seau 11111111.00000000.00000000.00000000. En appliquant un \"et logique bit \u00e0 bit\", nous obtenons l'adresse r\u00e9seau suivante : 00001010.00000000.00000000.00000000, soit en base 10 : 10.0.0.0\n\nNous pouvons r\u00e9sumer les 3 exemples ci-dessus comme suit :\n\n- quand le masque de sous-r\u00e9seau est 255.255.255.0 pour une adresse IP a.b.c.d, les parties a, b et c sont consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et la partie d est consacr\u00e9e \u00e0 l\u2019identification des machines sur le r\u00e9seau (l'adresse r\u00e9seau sera a.b.c.0)\n- quand le masque de sous-r\u00e9seau est 255.255.0.0 pour une adresse IP a.b.c.d, les parties a, b sont consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et les parties c et d sont consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau (l'adresse r\u00e9seau sera a.b.0.0)\n- quand le masque de sous-r\u00e9seau est 255.0.0.0 pour une adresse IP a.b.c.d, la partie a est consacr\u00e9e \u00e0 l\u2019identification du r\u00e9seau et les parties b, c et d sont consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau (l'adresse r\u00e9seau sera a.0.0.0)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "376c1e79-b5a4-43d1-8d70-301a10656fcb": {"__data__": {"id_": "376c1e79-b5a4-43d1-8d70-301a10656fcb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "197945d0-edd0-45e7-86d3-9c0665664f62", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "ac4b2e09764a9f2e0c1c72951c3a51fc4c4bb64de5257f8f2e5cd0aec03e356c", "class_name": "RelatedNodeInfo"}}, "text": "ii) Notation CIDR\n\nIl peut \u00eatre parfois un peu long d'\u00e9crire les masques de sous-r\u00e9seau sous forme de 4 octets (m\u00eame en base 10). La notation CIDR (Classless Inter-Domain Routing) permet de raccourcir cette notation :\n\n- au lieu d'\u00e9crire adresse IP 192.168.2.1 associ\u00e9e \u00e0 un masque de sous-r\u00e9seau 255.255.255.0, on pourra directement \u00e9crire adresse IP 192.168.2.1/24\n- au lieu d'\u00e9crire adresse IP 172.16.28.44 associ\u00e9e \u00e0 un masque de sous-r\u00e9seau 255.255.0.0, on pourra directement \u00e9crire adresse IP 172.16.28.44/16\n- au lieu d'\u00e9crire adresse IP 10.5.23.247 associ\u00e9e \u00e0 un masque de sous-r\u00e9seau 255.0.0.0, on pourra directement \u00e9crire adresse IP 10.5.23.247/8\n\nComme vous l'avez sans doute d\u00e9j\u00e0 remarqu\u00e9, le nombre situ\u00e9 apr\u00e8s le / correspond au nombre de bits \u00e0 1 dans le masque de sous-r\u00e9seau :\n\n- pour le masque de sous-r\u00e9seau 255.255.255.0 qui correspond \u00e0 11111111.11111111.11111111.00000000 en binaire, on a 24 bits \u00e0 1, d'o\u00f9 le /24\n- pour le masque de sous-r\u00e9seau 255.255.0.0 qui correspond \u00e0 11111111.11111111.00000000.00000000 en binaire, on a 16 bits \u00e0 1, d'o\u00f9 le /16\n- pour le masque de sous-r\u00e9seau 255.0.0.0 qui correspond \u00e0 11111111.00000000.00000000.00000000 en binaire, on a 8 bits \u00e0 1, d'o\u00f9 le /8", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1212, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4cad8408-585b-4035-bc5a-56f41135c614": {"__data__": {"id_": "4cad8408-585b-4035-bc5a-56f41135c614", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd65bde8-51f4-4b3c-86ee-c8e5ef7c132f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "089e0d1e051beb15532b3a105e8882036df154975f4ba4f5dbb3c321abcd5315", "class_name": "RelatedNodeInfo"}}, "text": "iii) Des cas plus complexes\n\nDans la plupart des cas, vous rencontrerez des cas \"simples\" avec des /8, /16 ou /24, mais vous devez aussi savoir que dans certaines situations il est possible de rencontrer des cas plus complexes.\n\nIl est, par exemple, possible de voir des /18 ! Comment faire dans ce cas ?\n\nImaginons l'adresse IP 172.24.82.47/18 quelle est l'adresse r\u00e9seau ?\n\nNous devons obligatoirement travailler en binaire :\n\n- adresse IP 172.24.82.47 en binaire : 10101100.00011000.01010010.00101111\n- masque de sous-r\u00e9seau /18 : 11111111.11111111.11000000.00000000 (on a bien 18 bits \u00e0 1) ce qui donne en base 10 : 255.255.192.0\n\nLe \"et logique bit \u00e0 bit\" donne : \n\n!\n\nD'o\u00f9 une adresse r\u00e9seau : 10101100.00011000.01000000.00000000 soit en base 10 : 172.24.64.0\n\nDans le cas d'un masque sous r\u00e9seau 255.255.192.0 (/18), les 18 bits les plus \u00e0 gauche permettront d'identifier le r\u00e9seau, le reste (32-18 = 14 bits) permettra d'identifier la machine. Ici, impossible de raisonner sur les octets (comme en /8, /16 ou /24), pas le choix, il faut raisonner sur les bits.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1070, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a988c693-1444-4f3d-a5eb-72f4a83ad895": {"__data__": {"id_": "a988c693-1444-4f3d-a5eb-72f4a83ad895", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bea2041-1507-4622-b496-e657a93bdb43", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "4e973f47b60d400713f8806065257b45d597f77a78ffcb752e081fd5cc4ce897", "class_name": "RelatedNodeInfo"}}, "text": "c) L'adresse de broadcast\n\nIl existe une adresse IP un peu particuli\u00e8re dans un r\u00e9seau puisque cette adresse IP permet de contacter toutes les machines du r\u00e9seau en m\u00eame temps : c'est l'adresse de broadcast.\n\nObtenir une adresse de broadcast est relativement simple : il suffit de mettre tous les bits de la partie machine \u00e0 1.\n\nCommen\u00e7ons par des exemples simples :\n\n- 192.168.22.33/24 ; la partie machine correspond au dernier octet (puisque 32-24 = 8 bits = 1 octet), pour obtenir l'adresse de broadcast, il suffit donc de mettre tous les bits du dernier octet \u00e0 1 : 192.168.22.255\n- 172.43.28.12/16 ; la partie machine correspond aux 2 derniers octets (puisque 32-16 = 16 bits = 2 octets), pour obtenir l'adresse de broadcast, il suffit donc de mettre tous les bits des deux derniers octets \u00e0 1 : 172.43.255.255\n- 19.68.221.23/8 ; la partie machine correspond aux derniers octets (puisque 32-8 = 24 bits = 3 octets), pour obtenir l'adresse de broadcast, il suffit donc de mettre tous les bits des trois derniers octets \u00e0 1 : 19.255.255.255\n\n\u00c9videmment, la situation se complique un peu avec un masque de sous-r\u00e9seau un peu plus exotique :\n\nPrenons un exemple avec le masque 255.255.255.240 qui donne en binaire 11111111.11111111.11111111.11110000, soit un /28 (28 bits \u00e0 1) et l'adresse IP 195.32.12.22/28. Quelle est dans ce cas l'adresse de broadcast (et pendant que nous y sommes, nous rechercherons aussi l'adresse r\u00e9seau) ?\n\nL'adresse IP donne en binaire : 11000011.00100000.00001100.00010110, dans cette adresse, seuls les 4 bits les plus \u00e0 droite sont consacr\u00e9s \u00e0 la partie machine de l'adresse IP. \n\nPour avoir l'adresse de broadcast, il faut mettre \u00e0 1 les 4 bits les plus \u00e0 droite : 11000011.00100000.00001100.0001**1111**, soit en d\u00e9cimal : 195.32.12.31. L'adresse de broadcast est donc de 195.32.12.31\n\nPour avoir l'adresse r\u00e9seau, il faut mettre \u00e0 0 les 4 bits les plus \u00e0 droite : 11000011.00100000.00001100.0001**0000**, soit en d\u00e9cimal : 195.32.12.16. L'adresse de r\u00e9seau est donc de 195.32.12.16\n\nConclusion : Si une machine M1 d'adresse IP 195.32.12.22/28 appartient \u00e0 un r\u00e9seau R1, le r\u00e9seau R1 a une adresse r\u00e9seau 195.32.12.16 et une adresse de broadcast 195.32.12.31", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2193, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "048f02ce-f57a-4c72-b659-ca7a312bec9c": {"__data__": {"id_": "048f02ce-f57a-4c72-b659-ca7a312bec9c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ed05a20-9baa-45bb-b00f-163efb636f96", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "5e173aa63d3c05ac4492a03810255087fe075fbb89d8205f9bce7e7449440cfc", "class_name": "RelatedNodeInfo"}}, "text": "3) Nombre de machines adressables dans un r\u00e9seau\n\nSelon le masque de sous-r\u00e9seau, le nombre de machines qui peuvent appartenir \u00e0 un r\u00e9seau varie grandement :\n\nAvec un masque 255.255.255.0, nous avons \u00e0 notre disposition un octet pour la partie machine. Avec un octet, il est possible de coder 256 valeurs (28 = 256). Mais, il ne faut pas oublier que l'adresse r\u00e9seau (tous les bits de la partie machine \u00e0 0) ne peut pas \u00eatre utilis\u00e9e par une machine. De la m\u00eame fa\u00e7on, l'adresse de broadcast (tous les bits de la partie machine \u00e0 1) ne peut pas non plus \u00eatre utilis\u00e9 par une machine. En conclusion, dans le cas o\u00f9 nous utilisons un masque 255.255.255.0 nous pouvons adresser 256 - 2 = 254 machines\n\nAvec un masque de 255.255.0.0, nous avons 2 octets (16 bits) \u00e0 consacrer \u00e0 la partie machine. Avec 2 octets, il est possible de coder 216 = 65536 valeurs. Nous devons ensuite enlever l'adresse r\u00e9seau et l'adresse de broadcast, d'o\u00f9 65536 - 2 = 65534 machines\n\nAvec un masque de 255.0.0.0, nous avons 3 octets (24 bits) \u00e0 consacrer \u00e0 la partie machine. Avec 3 octets, il est possible de coder 224 = 16777216 valeurs. Nous devons ensuite enlever l'adresse r\u00e9seau et l'adresse de broadcast, d'o\u00f9 16777216 - 2 = 16777214 machines\n\nUn dernier exemple avec un masque de sous-r\u00e9seau un peu \"exotique\" : reprenons notre exemple avec le masque 255.255.255.240. En convertissant ce masque en binaire (11111111.11111111.11111111.11110000), nous pouvons constater qu'il y a uniquement 4 bits r\u00e9serv\u00e9s \u00e0 la machine. Avec 4 bits, il est possible de coder 24 = 16 valeurs. Il nous faut ensuite retrancher l'adresse r\u00e9seau (195.32.12.16) et l'adresse de broadcast (195.32.12.31), d'o\u00f9 16 - 2 = 14 machines. Comme dans ce cas il n'y a pas trop d'adresses possibles, nous pouvons toutes les \u00e9num\u00e9rer : 195.32.12.17, 195.32.12.18, 195.32.12.19, 195.32.12.20, 195.32.12.21, 195.32.12.22, 195.32.12.23, 195.32.12.24, 195.32.12.25, 195.32.12.26, 195.32.12.27, 195.32.12.28, 195.32.12.29, 195.32.12.30, comme vous pouvez le constater, nous avons bien 14 adresses IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2044, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b474ce02-ec25-42aa-8274-52e9ad5ce9e6": {"__data__": {"id_": "b474ce02-ec25-42aa-8274-52e9ad5ce9e6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b56043a-83c0-4120-89a7-a1fdafeb857a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}, "hash": "8fe8ad5f6a677be562fb21827ed3546529036807a6ed9724e3aad62dac99cfad", "class_name": "RelatedNodeInfo"}}, "text": "4) Les adresses IPv6\n\nLes adresses IP que nous avons \u00e9tudi\u00e9es ci-dessus sont appel\u00e9es *adresse IPv4* (adresse IP version 4). Une nouvelle norme est en train de remplacer progressivement les adresses IPv4 : les adresses IPv6 (adresse IP version 6). Nous n'\u00e9tudierons pas cette nouvelle norme ici, mais voici tout de m\u00eame un exemple d'adresse IPv6 : *2001:0db8:0000:85a3:0000:0000:ac1f:8001*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 391, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc94a43d-2472-4bab-9b4a-333bc3521ed0": {"__data__": {"id_": "cc94a43d-2472-4bab-9b4a-333bc3521ed0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16r.md", "file_name": "termc16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1310810-58d7-46e3-be63-2901bb50b75f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16r.md", "file_name": "termc16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "ffb0a2aec61c17ecb019b3ccc7836e5dc22395ea0c477189b853b2b1ec8a2fb6", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Des ordinateurs sont dits \u201cen r\u00e9seaux\u201d quand ils sont capables de communiquer entre eux soit par l'interm\u00e9diaire d\u2019un c\u00e2ble (ex : c\u00e2ble Ethernet avec prises RJ45) ou d\u2019une connexion radio (ex : Wifi)\n\n- Pour relier plus de 2 ordinateurs, il est n\u00e9cessaire d\u2019utiliser un switch\n\n- Pour identifier un ordinateur sur un r\u00e9seau, on utilise une adresse IP. Les adresses IP sont de la forme : \"a.b.c.d\", avec a, b, c et d compris entre 0 et 255 (a, b, c et d sont cod\u00e9s sur 1 octet).\n\n- Une partie de l\u2019adresse IP permet d\u2019identifier le r\u00e9seau auquel appartient la machine et l\u2019autre partie de l\u2019adresse IP permet d\u2019identifier la machine sur ce r\u00e9seau (exemple : soit l\u2019adresse IP d\u2019un ordinateur : 192.168.3.1/24, 192.168.3 correspond \u00e0 la partie\nr\u00e9seau de l\u2019adresse IP et 1 correspond \u00e0 la partie machine de l\u2019adresse IP)\n\n- l'adresse r\u00e9seau peut \u00eatre obtenu en mettant toute la partie machine d'une adresse IP \u00e9crite en binaire \u00e0 0 \n\n- Toutes les machines appartenant au m\u00eame r\u00e9seau devront poss\u00e9der la m\u00eame adresse r\u00e9seau (sinon elles ne pourront pas communiquer, m\u00eame si elles\nsont bien physiquement reli\u00e9es).\n\n- l'adresse de broadcast est une adresse IP qui permet de contacter toutes les machines d'un r\u00e9seau en m\u00eame temps. Pour obtenir l'adresse de broadcast, il suffit de mettre toute la partie machine de l'adresse IP \u00e9crite en binaire \u00e0 1\n\n- Pour d\u00e9terminer l'adresse r\u00e9seau et l'adresse de broadcast d'un r\u00e9seau il est n\u00e9cessaire de connaitre le masque de sous-r\u00e9seau (exemple : 255.255.255.0). Il est aussi possible d'\u00e9crire le masque de sous-r\u00e9seau en utilisant la notation CIDR (/8, /16, /32, ...)\n\n\t- si la notation CIDR est 8 (exemple : 192.168.2.1/8), cela signifie que pour une adresse a.b.c.d/8, la partie a est consacr\u00e9e \u00e0 l'adresse r\u00e9seau, le reste (b, c,\nd) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.0.0.0 et une adresse de broadcast de la forme a.255.255.255\n\n\t- si la notation CIDR est 16 (exemple : 192.168.2.1/16), cela signifie que pour une adresse a.b.c.d/16, les parties a et b sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le\nreste (c, d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.0.0 et une adresse de broadcast de la forme a.b.255.255\n\n\t- si la notation CIDR est 24 (exemple : 192.168.2.1/24), cela signifie que pour une adresse a.b.c.d/24, les parties a, b et c sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le reste (d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.c.0 et une adresse de broadcast de la forme a.b.c.255\n\n\t- si la notation CIDR est diff\u00e9rente de /8, /16 ou /24, le cas est plus complexe \u00e0 traiter (voir le cours)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2725, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83b2d1ee-abba-4997-b4ea-9e893b3c18bb": {"__data__": {"id_": "83b2d1ee-abba-4997-b4ea-9e893b3c18bb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16r.md", "file_name": "termc16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2c58793-ea85-4121-930c-c9a266084a7a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16r.md", "file_name": "termc16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}, "hash": "76cafa46d45dd7c2806186e19111a12764f5d2f80dedab3b0fd760929eff633b", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable d'attribuer des adresses IP \u00e0 des ordinateurs\n- vous devez \u00eatre capable, connaissant l'adresse IP d'une machine et le masque de sous-r\u00e9seau, de trouver l'adresse r\u00e9seau (dans des cas simples comme par exemple /16, mais aussi dans des cas plus complexes, par exemple /28)\n- vous devez \u00eatre capable, connaissant l'adresse IP d'une machine et le masque de sous-r\u00e9seau, de trouver l'adresse de broadcast (dans des cas simples comme par exemple /16, mais aussi dans des cas plus complexes, par exemple /28)\n- vous devez \u00eatre capable, connaissant l'adresse IP d'une machine et le masque de sous-r\u00e9seau, de d\u00e9terminer le nombre de machines qui peut composer le r\u00e9seau (dans des cas simples comme par exemple /16, mais aussi dans des cas plus complexes, par exemple /28)\n- vous devez \u00eatre capable de trouver un masque de sous-r\u00e9seau correspondant \u00e0 une notation CIDR et vis versa.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f41991fd-36db-42d2-aa1f-b7f686c0ed08": {"__data__": {"id_": "f41991fd-36db-42d2-aa1f-b7f686c0ed08", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17a.md", "file_name": "termc17a.md", "file_size": 321, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12db3546-073c-4e64-a34c-8886d803bbff", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17a.md", "file_name": "termc17a.md", "file_size": 321, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "668630ab0cdfe1f5e0f16abc611459f6df81af4f0967ba2335982228bff9dbb9", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 17.1\n\n1) Expliquez en quelques lignes  ce  qu'est un protocole.\n\n2) Expliquez en quelques lignes le principe d'encapsulation des donn\u00e9es\n\n3) Expliquez en quelques lignes le principe des accus\u00e9s de r\u00e9ception au  niveau du protocole TCP  \n\n4) Expliquez en quelques lignes la notion de paquets de donn\u00e9es", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 312, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e450b4d-717d-4550-b6d1-72345ab48343": {"__data__": {"id_": "2e450b4d-717d-4550-b6d1-72345ab48343", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b44b9e93-d979-4f82-b02d-8430c5b1ccdb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "65f4f75e5c3aa3341c453ce856c4ef514f652eff71bf7e5f357931295d62a8b5", "class_name": "RelatedNodeInfo"}}, "text": "1) Notion de protocole\n\nPour communiquer ensemble, 2 ordinateurs en r\u00e9seau doivent utiliser des r\u00e8gles communes, l'ensemble de ces r\u00e8gles qui permettent \u00e0 2 ordinateurs de communiquer ensemble s'appelle un protocole.\n\nIl existe de nombreux protocoles r\u00e9seau, nous allons en \u00e9tudier 2 : le protocole TCP et le protocole IP. Ces 2 protocoles sont tellement li\u00e9s l'un \u00e0 l'autre que l'on parle souvent du protocole TCP/IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17c88e39-02f3-4b57-af71-a7157aa6be57": {"__data__": {"id_": "17c88e39-02f3-4b57-af71-a7157aa6be57", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9324825-633c-4c27-9e23-781247991b8b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "f968e5cd0b9048130b0681aa3fbc06ba0e2259b10f3f50af633093accc10bc03", "class_name": "RelatedNodeInfo"}}, "text": "2) Un peu d'histoire\n\nAvant d'entrer dans le vif du sujet, un peu d'histoire :\n\nLa DARPA (Defense Advanced Research Projects Agency) voit le jour en 1958, cette agence gouvernementale am\u00e9ricaine a pour but de veiller \u00e0 la constante supr\u00e9matie des \u00c9tats unis en mati\u00e8re technologique et scientifique. En 1962 la DARPA soutient le projet du professeur Licklider qui a pour but de mettre en r\u00e9seau les ordinateurs des universit\u00e9s am\u00e9ricaines afin que ces derni\u00e8res puissent \u00e9changer des informations plus rapidement (m\u00eame \u00e0 des milliers de kilom\u00e8tres de distance). En 1968, ARPAnet, 1er r\u00e9seau informatique \u00e0 grande \u00e9chelle de l'histoire voit le jour. Le 29 octobre 1969, le 1er message (le mot \"login\") est envoy\u00e9 depuis l'universit\u00e9 de Californie \u00e0 Los Angeles vers l'universit\u00e9 de Stanford via le r\u00e9seau ARPAnet (les 2 universit\u00e9s sont environ distantes de 500 Km). C'est un demi-succ\u00e8s, puisque seules les lettres \"l\" et \"o\" arriveront \u00e0 bon port. En 1972, 23 ordinateurs sont connect\u00e9s \u00e0 ARPAnet (on trouve m\u00eame des ordinateurs en dehors des \u00c9tats unis). En parall\u00e8le au projet ARPAnet, d'autres r\u00e9seaux voient le jour, probl\u00e8me, ils utilisent des protocoles de communication h\u00e9t\u00e9roclite (UUCP, NCP ou encore X.25) et 2 ordinateurs appartenant \u00e0 2 r\u00e9seaux diff\u00e9rents sont incapables de communiquer entre eux puisqu'ils n'utilisent les m\u00eames protocoles. En 1974 Vint Cerf et Bob Khan vont mettre au point le protocole TCP qui sera tr\u00e8s rapidement coupl\u00e9 au protocole IP pour donner TCP/IP. TCP/IP, gr\u00e2ce \u00e0 sa simplicit\u00e9, va tr\u00e8s rapidement s'imposer comme un standard : les diff\u00e9rents r\u00e9seaux (ARPAnet et les autres) vont adopter TCP/IP. Cette adoption va permettre d'interconnecter tous ces r\u00e9seaux (2 machines appartenant \u00e0 2 r\u00e9seaux diff\u00e9rents vont pouvoir communiquer gr\u00e2ce \u00e0 cette interconnexion). Internet \u00e9tait n\u00e9 (le terme Internet vient de \"internetting\" qui signifie \"Connexion entre plusieurs r\u00e9seaux\"). TCP/IP est donc au coeur d'Internet, voil\u00e0 pourquoi aujourd'hui, la plupart des machines utilisent TCP/IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2024, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "861ee9f2-5578-43cf-a806-c7d27426c515": {"__data__": {"id_": "861ee9f2-5578-43cf-a806-c7d27426c515", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c445e71e-24f0-442e-bc58-1290b154a2f2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "2b9689f9365078306215a0cd891f9fc68cb1fb5cbb6d29e7116813b59cbafc50", "class_name": "RelatedNodeInfo"}}, "text": "3) Les protocoles TCP et IP", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 29, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "191b8f57-77de-4487-865a-b9d42c5ff7ac": {"__data__": {"id_": "191b8f57-77de-4487-865a-b9d42c5ff7ac", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c136f413-ccfe-4233-abad-1755a2692758", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b3b5d7283d6ec091a443bcc388c7f7a27d30ff28cfd04844cd475fb229efd419", "class_name": "RelatedNodeInfo"}}, "text": "a) notion d'encapsulation\n\nApr\u00e8s ce petit rappel historique, essayons de comprendre le principe de base des protocoles TCP (Transmission Control Protocol) et IP (Internet Protocol)\n\nQuand un ordinateur A \"d\u00e9sire\" envoyer des donn\u00e9es \u00e0 un ordinateur B, l'ordinateur A \"utilise\" le protocole TCP pour mettre en forme les donn\u00e9es \u00e0 envoyer.\n\nEnsuite le protocole IP prend le relai et utilise les donn\u00e9es mises en forme par le protocole TCP afin de cr\u00e9er des paquets des donn\u00e9es. Apr\u00e8s quelques autres op\u00e9rations qui ne seront pas \u00e9voqu\u00e9es ici, les paquets de donn\u00e9es pourront commencer leur voyage sur le r\u00e9seau jusqu'\u00e0 l'ordinateur B. Il est important de bien comprendre que le protocole IP \"encapsule\" les donn\u00e9es issues du protocole TCP afin de constituer des paquets de donn\u00e9es.\n\n!\n\nUne fois arriv\u00e9es \u00e0 destination (ordinateur B), les donn\u00e9es sont \"d\u00e9sencapsul\u00e9es\" : on r\u00e9cup\u00e8re les donn\u00e9es TCP contenues dans les paquets afin de pouvoir les utiliser.\n\n\n!\n\nLe protocole IP s'occupe uniquement de faire arriver \u00e0 destination les paquets en utilisant l'adresse IP de l'ordinateur de destination. Les adresses IP de l'ordinateur de d\u00e9part (ordinateur A) et de l'ordinateur destination (ordinateur B) sont ajout\u00e9es aux paquets de donn\u00e9es.\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1240, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b18b82d3-5001-44e7-9f9f-9febfa5f7e15": {"__data__": {"id_": "b18b82d3-5001-44e7-9f9f-9febfa5f7e15", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "703a3a37-e273-4325-a518-b4654744e863", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "57135dccd6a9c9fa31ab3e06f939e2f8ca3f3da17bb28ddc8e064f295ea0566c", "class_name": "RelatedNodeInfo"}}, "text": "b) accus\u00e9 de r\u00e9ception\n\nLe protocole TCP permet de s'assurer qu'un paquet est bien arriv\u00e9 \u00e0 destination. En effet quand l'ordinateur B re\u00e7oit un paquet de donn\u00e9es en provenance de l'ordinateur A, l'ordinateur B envoie un accus\u00e9 de r\u00e9ception \u00e0 l'ordinateur A (un peu dans le genre \"OK, j'ai bien re\u00e7u le paquet\"). Si l'ordinateur A ne re\u00e7oit pas cet accus\u00e9 de r\u00e9ception en provenance de B, apr\u00e8s un temps pr\u00e9d\u00e9fini, l'ordinateur A renverra le paquet de donn\u00e9es vers l'ordinateur B.\n\nNous pouvons donc r\u00e9sumer le processus d'envoi d'un paquet de donn\u00e9es comme suit :\n\n!\n\n\u00c0 noter qu'il existe aussi le protocole UDP qui ressemble beaucoup au protocole TCP. La grande diff\u00e9rence entre UDP et TCP est que le protocole UDP ne g\u00e8re pas les accus\u00e9s de r\u00e9ception. Les \u00e9changes de donn\u00e9es avec UDP sont donc moins fiables qu'avec TCP (un paquet \"perdu\" est d\u00e9finitivement \"perdu\" et ne sera pas renvoy\u00e9) mais beaucoup plus rapides (puisqu' il n'y a pas d'accus\u00e9 de r\u00e9ception \u00e0 transmettre). UDP est donc tr\u00e8s souvent utilis\u00e9 pour les \u00e9changes de donn\u00e9es qui doivent \u00eatre rapides, mais o\u00f9 la perte d'un paquet de donn\u00e9es de temps en temps n'est pas un gros probl\u00e8me (par exemple le streaming vid\u00e9o).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1190, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e82cccbe-2b4d-458c-9e1d-cb31ad2061ff": {"__data__": {"id_": "e82cccbe-2b4d-458c-9e1d-cb31ad2061ff", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40ff4c5a-fcaf-46ec-af27-c219e5262ac6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "159e543b30bc00c23470bce823053293dba267ad133bbcfa54aead70fba32025", "class_name": "RelatedNodeInfo"}}, "text": "c) notion de paquet\n\nIl est tr\u00e8s important de bien comprendre que TCP/IP repose sur la notion de paquets de donn\u00e9es. Si par exemple on d\u00e9sire envoyer un fichier (son, photo, vid\u00e9o ou texte, peu importe, dans tous les cas on envoie une succession de bits) en utilisant TCP/IP, les donn\u00e9es qui constituent ce fichier ne seront pas envoy\u00e9es d'un seul tenant, ces donn\u00e9es vont \u00eatre \"d\u00e9coup\u00e9es\" en plusieurs morceaux et chaque morceau sera envoy\u00e9 dans un paquet diff\u00e9rent. Une fois tous les paquets arriv\u00e9s \u00e0 destination, le fichier d'origine pourra \u00eatre reconstitu\u00e9. Pour aller d'un ordinateur A \u00e0 un ordinateur B, les diff\u00e9rents paquets contenant les donn\u00e9es qui constituent notre fichier, ne passeront pas forcement par la m\u00eame route (cette notion de route sera abord\u00e9e plus tard), ils pourront emprunter des chemins tr\u00e8s diff\u00e9rents : en exag\u00e9rant \u00e0 peine, pour faire le trajet Paris-Los Angeles, certains paquets pourront passer par l'atlantique alors que d'autres passeront par le pacifique. Si un des paquets n'arrive pas \u00e0 destination, le fichier ne pourra pas \u00eatre reconstitu\u00e9, le paquet \"perdu\" devra \u00eatre renvoy\u00e9 par l'\u00e9metteur (voir le syst\u00e8me d'accus\u00e9 de r\u00e9ception d\u00e9crit ci-dessus).\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b861b2d-5d25-482a-9422-3c315812b116": {"__data__": {"id_": "5b861b2d-5d25-482a-9422-3c315812b116", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17r.md", "file_name": "termc17r.md", "file_size": 1859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69f7330f-837d-4cfa-87ee-8b2237da04d2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17r.md", "file_name": "termc17r.md", "file_size": 1859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "547b551dd9e67ef8e6f6770b2e3063218be24eb468700fd8d562b0bbd3ff1000", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Au d\u00e9but des ann\u00e9es 70, le projet ARPAnet (\u201canc\u00eatre d\u2019Internet\u201d) avait pour but de relier plusieurs r\u00e9seaux informatiques entre eux.\n\n- les protocoles TCP et IP s\u2019imposent comme des standards au niveau du projet ARPAnet\n\n- Pour transf\u00e9rer des donn\u00e9es entre 2 ordinateurs, le protocole TCP encapsule ces donn\u00e9es. Les donn\u00e9es issues de l\u2019encapsulation de TCP sont elles-m\u00eames encapsul\u00e9es par le protocole IP. On obtient alors un paquet IP qui pourra \u00eatre\ntransmis sur le r\u00e9seau. Une fois arriv\u00e9es \u00e0 destination, les donn\u00e9es seront d\u00e9sencapsul\u00e9es.\n\n- Le protocole IP s'occupe uniquement de faire arriver \u00e0 destination les paquets en utilisant l'adresse IP de l'ordinateur de destination. Les adresses IP de l'ordinateur de d\u00e9part (ordinateur A) et de l'ordinateur destination (ordinateur B) sont ajout\u00e9es aux paquets de\ndonn\u00e9es.\n\n- Le protocole TCP permet de s'assurer qu'un paquet est bien arriv\u00e9 \u00e0 destination gr\u00e2ce \u00e0 un syst\u00e8me d\u2019accus\u00e9 de r\u00e9ception. Si l'ordinateur A ne re\u00e7oit pas cet accus\u00e9 de r\u00e9ception en provenance de B, apr\u00e8s un temps pr\u00e9d\u00e9fini, l'ordinateur A renverra le paquet de donn\u00e9es vers l'ordinateur B.\n\n- Le protocole UDP ressemble beaucoup au protocole TCP (IP peut encapsuler UDP \u00e0 la place de TCP), seule diff\u00e9rence notable : le protocole UDP ne propose pas de syst\u00e8me d\u2019accus\u00e9 de r\u00e9ception.\n\n- TCP/IP repose sur la notion de paquets de donn\u00e9es : un fichier n\u2019est pas envoy\u00e9 en une seule fois, les donn\u00e9es (bits) sont \u201cd\u00e9coup\u00e9es\u201d en petits paquets. Ces paquets de donn\u00e9es n\u2019empruntant pas forc\u00e9ment tous le m\u00eame \u201cchemin\u201d sur le r\u00e9seau, l\u2019ordinateur devra les remettre dans l\u2019ordre avant de pouvoir reconstituer le fichier d\u2019origine. Si un paquet se perd, le fichier ne pourra pas \u00eatre\nreconstitu\u00e9, il devra donc \u00eatre renvoy\u00e9", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "075291aa-fe02-43a8-a09e-139140fbd040": {"__data__": {"id_": "075291aa-fe02-43a8-a09e-139140fbd040", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18a.md", "file_name": "termc18a.md", "file_size": 193, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62deabfe-cdf4-4c56-9744-164421f87fa0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18a.md", "file_name": "termc18a.md", "file_size": 193, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a27aed557e798d238e535e945ce4361dd0f190d866aca025238e9ba9ddb1be3e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 18.1\n\ncompl\u00e9tez le sch\u00e9ma  ci-dessous avec les termes  suivants :\n\nHTTP, APPLICATION, INTERNET, FTP, TCP, ACC\u00c8S R\u00c9SEAU, UDP, WIFI, TRANSPORT, IP, ETHERNET\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6316c96-d9dc-41e1-8f93-3cfde2eaadd5": {"__data__": {"id_": "f6316c96-d9dc-41e1-8f93-3cfde2eaadd5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a14cc0b-4e0d-4899-ab25-897f9d85dfdd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "0b7703147fbecc2cef2c972d9e84bf7101ec5a4118cd5867ca0d08efd6d47333", "class_name": "RelatedNodeInfo"}}, "text": "1) Trame Ethernet\n\nNous avons eu l'occasion de voir avec les protocoles TCP et IP le processus d'encapsulation des donn\u00e9es : \"IP encapsule TCP\". Les paquets IP ne peuvent pas transiter sur un r\u00e9seau tel quel, ils vont eux aussi \u00eatre encapsul\u00e9s avant de pouvoir \"voyager\" sur le r\u00e9seau. L'encapsulation des paquets IP produit ce que l'on appelle une trame. Il n'est pas question d'\u00e9tudier en d\u00e9tail ce qu'est une trame, vous devez juste savoir qu'il existe de nombreux types de trames : ATM, token ring, PPP, Ethernet, Wifi... Nous allons uniquement \u00e9voquer les 2 derni\u00e8res : la trame Ethernet et la trame Wifi.\n\nSi vous utilisez un r\u00e9seau filaire avec des c\u00e2bles Ethernet (avec des prises RJ45), la trame sera de type Ethernet (ce qui est le cas pour le r\u00e9seau du lyc\u00e9e). Si vous utilisez un r\u00e9seau sans fil Wifi, la trame sera de type Wifi. En faite, la trame Wifi ressemble beaucoup \u00e0 la trame Ethernet, on peut m\u00eame dire que la trame Wifi est la variante sans-fil de la trame Ethernet, afin de simplifier les choses, dans la suite, nous \u00e9voquerons uniquement la trame Ethernet en ayant \u00e0 l'esprit que ce qui est dit sur la trame Ethernet et aussi valable pour la trame Wifi.\n\nNous avons vu que le paquet IP contient les adresses IP de l'\u00e9metteur et du r\u00e9cepteur :\n\n!\n\nLe paquet IP \u00e9tant encapsul\u00e9 par la trame Ethernet, les adresses IP ne sont plus directement disponibles (il faut d\u00e9sencapsuler le paquet IP pour pouvoir lire ces adresses IP), nous allons donc trouver un autre type d'adresse qui permet d'identifier l'\u00e9metteur et le r\u00e9cepteur : l'adresse MAC (Media Access Control) aussi appel\u00e9e adresse physique.\n\n!\n\nUne adresse MAC est cod\u00e9e sur 6 octets. on \u00e9crit traditionnellement les adresses MAC en hexad\u00e9cimal, chaque octet \u00e9tant s\u00e9par\u00e9s par 2 points (exemple d'adresse MAC : 00:E0:4C:68:02:11)\n\nL'adresse MAC est li\u00e9e au mat\u00e9riel, chaque carte r\u00e9seau (Ethernet ou Wifi) poss\u00e8de sa propre adresse MAC, il n'existe pas dans le monde, 2 cartes r\u00e9seau (Ethernet ou Wifi) qui poss\u00e8dent la m\u00eame adresse MAC. Les 3 premiers octets d'une adresse MAC (\"00:E0:4C\" dans l'exemple ci-dessus) d\u00e9signent le constructeur du mat\u00e9riel, par exemple, \"00:E0:4C\" d\u00e9signe le constructeur \"realtek semiconductor corp\".\n\nAu moment de l'encapsulation d'un paquet IP, l'ordinateur \"\u00e9metteur\" va utiliser un protocole nomm\u00e9 ARP (Address Resolution Protocol) qui va permettre de d\u00e9terminer l'adresse MAC de l'ordinateur \"destination\", en effectuant une requ\u00eate \"broadcast\" (requ\u00eate destin\u00e9e \u00e0 tous les ordinateurs du r\u00e9seau) du type : \"j'aimerais connaitre l'adresse MAC de l'ordinateur ayant pour IP XXX.XXX.XXX.XXX\". Une fois qu'il a obtenu une r\u00e9ponse \u00e0 cette requ\u00eate ARP, l'ordinateur \"\u00e9metteur\" encapsule le paquet IP dans une trame Ethernet et envoie cette trame sur le r\u00e9seau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d94bce9-0de3-4ef1-bd37-081a51d9d872": {"__data__": {"id_": "8d94bce9-0de3-4ef1-bd37-081a51d9d872", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f0b68a28-e9e0-41b7-8ba0-bcfefa8e2d00", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "7a00a69397722c4f8f3351f2c418d27225798a5c3e5c0c08a0fd821a4fca0a0c", "class_name": "RelatedNodeInfo"}}, "text": "2) La couche application\n\nNous avons vu que le protocole TCP permet de mettre en forme les donn\u00e9es \u00e0 envoyer :\n\n!\n\nQuelle est la nature de ces donn\u00e9es mises en forme par TCP ?\n\nEn faite, TCP effectue lui aussi une encapsulation, les donn\u00e9es encapsul\u00e9es par TCP peuvent \u00eatre de plusieurs natures :\n\nNous allons tr\u00e8s prochainement \u00e9tudier le protocole HTTP. Les requ\u00eates et les r\u00e9ponses HTTP sont encapsul\u00e9s par TCP, au bout du compte et en r\u00e9sum\u00e9, nous avons donc :\n\n!\n\nTCP encapsule aussi d'autres types de requ\u00eates (et r\u00e9ponses), par exemple FTP (File Transfer Protocol) qui permet d'envoyer sur un r\u00e9seau des fichiers (texte, son, image...), SMTP (Simple Mail Transfer Protocol) qui permet d'envoyer des emails, DNS (Domain Name Server) qui permet d'avoir la correspondance entre une adresse IP et une URL,...\n\nIl est donc aussi possible d'avoir :\n\n!\n\nOn dit que tous ces protocoles (HTTP, FTP, SMTP, DNS,...) appartiennent \u00e0 la couche \"Application\" du mod\u00e8le TCP/IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 971, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5831fc0d-0730-48f6-a48a-a8f02b74f7ac": {"__data__": {"id_": "5831fc0d-0730-48f6-a48a-a8f02b74f7ac", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66dbf239-b85f-490c-ba87-a44df04e321c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "4ba1c739037a938a1259fca766edbebaf642e34608ab7e594510aa6e30c53d6b", "class_name": "RelatedNodeInfo"}}, "text": "3) Le mod\u00e8le des couches TCP/IP\n\nEn effet, \u00e0 chaque phase d'encapsulation on associe ce que l'on appelle une couche :\n\n- comme nous l'avons vu les protocoles HTTP, FTP, SMTP, DNS,... sont associ\u00e9s \u00e0 la couche \"Application\"\n\n- les protocoles TCP et UDP sont associ\u00e9s \u00e0 la couche \"Transport\"\n\n- le protocole IP est associ\u00e9 \u00e0 la couche \"Internet\"\n\n- les trames Ethernet (ou Wifi) sont associ\u00e9es \u00e0 la couche \"Acc\u00e8s r\u00e9seau\"\n\nOn pr\u00e9sente souvent ces diff\u00e9rentes couchent sur ce type de sch\u00e9ma :\n\n\n!\n\nLa couche du \"dessous\" encapsule la couche situ\u00e9e \"au dessus\"\n\nOn nomme ce syst\u00e8me de couche \"mod\u00e8le de couches TCP/IP\" (car ce mod\u00e8le repose principalement sur TCP et IP)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e017c295-84d4-492d-b48e-2567546323fe": {"__data__": {"id_": "e017c295-84d4-492d-b48e-2567546323fe", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f728099c-6791-44a3-a87c-8a6c3aafff97", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "55f7c4877580ec90203011d21c2ca4687b74505a32d118c1ff7bf32689b703d9", "class_name": "RelatedNodeInfo"}}, "text": "4) Le mod\u00e8le des couches OSI\n\nIl existe un autre mod\u00e8le de couche, le mod\u00e8le OSI (Open Systems Interconnection), ce syst\u00e8me est ant\u00e9rieur au mod\u00e8le TCP/IP puisqu'il date des ann\u00e9es 1970. Ce mod\u00e8le est principalement th\u00e9orique et \u00e0 permis de poser les bases des communications r\u00e9seau. Ce mod\u00e8le est compos\u00e9 de 7 couches (alors que le mod\u00e8le TCP/IP est compos\u00e9 de 4 couches).\n\n!\n\nIl existe des liens entre le mod\u00e8le OSI et le mod\u00e8le TCP/IP (par exemple on retrouve le protocole IP dans la couche 3 du mod\u00e8le OSI et TCP dans la couche 4), mais parfois comparer les 2 mod\u00e8les peut \u00eatre d\u00e9licat.\n\nCe mod\u00e8le est donn\u00e9 ici \u00e0 titre d'information (pour le cas o\u00f9 vous le rencontriez pendant vos recherches sur Internet), mais le principal est de retenir ce qui a \u00e9t\u00e9 vu sur le mod\u00e8le TCP/IP.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 784, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d49b13e2-49bf-41d3-b6ec-74d3f4822234": {"__data__": {"id_": "d49b13e2-49bf-41d3-b6ec-74d3f4822234", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18r.md", "file_name": "termc18r.md", "file_size": 784, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c49c581-caa6-4391-9dc2-edce75451803", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18r.md", "file_name": "termc18r.md", "file_size": 784, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "7dcaafe6ee01704e6c7f16816d55727d8701116610566288d92596ac5d5d40e6", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nLes communications r\u00e9seau sont bas\u00e9es sur des syst\u00e8mes de couches.\nLe mod\u00e8le des couches TCP/IP :\n\n!\n\nDans ce mod\u00e8le un protocole de la couche application est encapsul\u00e9 par un des protocoles de la couche transport qui est lui-m\u00eame encapsul\u00e9 par le protocole de la couche internet qui est lui-m\u00eame encapsul\u00e9 par un des protocoles de la couche acc\u00e8s r\u00e9seau.\n\nPar exemple, si une personne consulte une page web depuis un ordinateur reli\u00e9 au r\u00e9seau par l\u2019interm\u00e9diaire d\u2019un c\u00e2ble Ethernet, on aura :\n\n!\n\nSi une personne consulte une page web depuis un ordinateur reli\u00e9 au r\u00e9seau par le wifi, le  sch\u00e9ma restera identique \u00e0 une exception pr\u00e8s : la Trame Ethernet sera remplac\u00e9e par une  trame wifi.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 717, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d80ed1f-0250-44ec-9012-aa0f965b6979": {"__data__": {"id_": "1d80ed1f-0250-44ec-9012-aa0f965b6979", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "760c1161-2d01-4f0c-9d49-e19405a310b0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6b36ed6e4251d4156f2bca20006b9ff7f79bb1a17afbd3d8ff49344d8c20d5de", "class_name": "RelatedNodeInfo"}}, "text": "Apr\u00e8s la th\u00e9orie, passons maintenant \u00e0 la pratique. Il est un peu difficile de mettre en place un r\u00e9seau pour effectuer quelques tests. \u00c0 la place, nous allons utiliser un simulateur de r\u00e9seau. Il existe diff\u00e9rents types de simulateurs : du plus simple au plus \"professionnel\". Nous allons utiliser un simulateur relativement simple \u00e0 prendre en main, mais suffisamment performant : Filius\n\nAvant de visionner une petite vid\u00e9o qui devrait vous aider \u00e0 prendre en main Filius, quelques petites indications\n\nNous allons utiliser deux commandes dans la vid\u00e9o :\n\n- *ipconfig* qui permet de connaitre la configuration r\u00e9seau de la machine (adresse IP, adresse MAC...) sur laquelle est ex\u00e9cut\u00e9e cette commande (\"ipconfig\" est une v\u00e9ritable commande sous Windows de Microsoft, sous les syst\u00e8mes de type Unix (Linux ou macOS par exemple), la commande \u00e9quivalente est \"ifconfig\")\n\n- *ping* qui permet d'envoyer des paquets de donn\u00e9es d'une machine A vers une machine B. Si la commande est ex\u00e9cut\u00e9e sur la machine A, le *ping* devra \u00eatre suivi par l'adresse IP de la machine B (par exemple, si l'adresse IP de B est \"192.168.0.2\", on aura *ping 192.168.0.2*)\n\nAutre chose \u00e0 retenir, vous allez peut-\u00eatre apercevoir dans cette vid\u00e9o un \"netmask\" (masque de r\u00e9seau en fran\u00e7ais), vous devez juste savoir que :\n\n- pour une adresse du type a.b.c.d/8, on a un netmask qui est \"255.0.0.0\"\n\n- pour une adresse du type a.b.c.d/16, on a un netmask qui est \"255.255.0.0\"\n\n- pour une adresse du type a.b.c.d/24, on a un netmask qui est \"255.255.255.0\"", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1529, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5923f12d-8ebe-4235-98ec-4474505f86fc": {"__data__": {"id_": "5923f12d-8ebe-4235-98ec-4474505f86fc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "769cc34d-1fb2-4e38-9825-45f893d6d96c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2abafcc660401421918fbd7f8fbffebe18d3396b2ead2b4c7932385b0d33f1d8", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 19.1\n\nVous pouvez maintenant visionner la vid\u00e9o :\n\nhttps://www.youtube.com/watch?v=nzuRSOwdF5I", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 105, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b70fb096-7b33-45ea-bad7-ae800f2f23c3": {"__data__": {"id_": "b70fb096-7b33-45ea-bad7-ae800f2f23c3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f0383d59-be21-4b91-8546-879eeb492feb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "dd4b1f5be9a13457f7755053d6ab90d34176b7bd2835f4d59fee57939961de97", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 19.2\n\nEn utilisant Filius, cr\u00e9ez un r\u00e9seau de 4 machines (M1, M2, M3 et M4). L'adresse IP de la machine M1 est *192.168.1.1/24*, choisissez les adresses IP des machines M2, M3 et M4.\n\nEffectuez un *ipconfig* sur la machine *M1* afin de v\u00e9rifier son adresse IP et de d\u00e9terminer son adresse MAC (adresse physique)\n\nEffectuez un *ping* de la machine M2 vers la machine M4.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 380, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85cd62dc-1c0e-4645-bb8a-4e1ac3af6185": {"__data__": {"id_": "85cd62dc-1c0e-4645-bb8a-4e1ac3af6185", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a9043a0-0701-4c07-9b8d-5f4c3daf8d26", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "aed17a81d627faff508bb8dd11a670468c25d3ace552cb0ba4df3202d66f9bca", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.1\n\nPour \u00e9crire nos programmes en Python, nous utiliserons le logiciel Spyder.\n\nUne fois Spyder lanc\u00e9 (attention de bien choisir Spyder3 ou sup\u00e9rieur et surtout pas Spyder2.7), vous devriez obtenir quelque chose qui ressemble \u00e0 cela :\n\n!\n\nSpyder se divise en plusieurs fen\u00eatres, deux fen\u00eatres vont principalement nous int\u00e9resser : la fen\u00eatre \"\u00e9diteur\" et la fen\u00eatre \"console\".\n\nDans la fen\u00eatre \"\u00e9diteur\", saisissez le programme suivante :\n\n```\nprint(\"hello world !\")\n```\n\nCliquez sur le \"triangle vert\" afin d'ex\u00e9cuter le programme qui vient d'\u00eatre saisi.\n\n!\n\nSpyder va vous demander d'enregistrer le programme, enregistrez-le dans un dossier qui vous servira de dossier de travail\n\nVous devez voir le message \"hello world !\" appara\u00eetre dans la console\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab6a841c-63ae-40ec-852b-346e8931cd33": {"__data__": {"id_": "ab6a841c-63ae-40ec-852b-346e8931cd33", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5138633f-ff54-4b70-8070-cb8f9b06ed5e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "b50e21c5e9a2e37492691a85d96bfa52b0c3028ccdc4d90aa646e8d987d68cc7", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.2\n\nDans la partie \"\u00e9diteur\" de Spyder, saisissez le code suivant :\n\n```\npoint_de_vie = 15\n```\n\n!\n\nApr\u00e8s avoir ex\u00e9cut\u00e9 le programme en cliquant sur le triangle vert, il est possible de connaitre la valeur de la variable *point_de_vie*  en tapant le nom de la variable dans la \"console\" de Spyder.\n\nTapez *point_de_vie* dans la partie console\n\n!\n\nApr\u00e8s avoir appuy\u00e9 sur la touche \"Entr\u00e9e\", vous devriez voir la valeur associ\u00e9e au nom point_de_vie s'afficher dans la console.\n\n!\n\nN.B. : Dans la suite la proc\u00e9dure sera toujours la m\u00eame :\n\n- Vous utiliserez la partie \"\u00e9diteur\" pour saisir votre programme\n- vous utiliserez la partie \"console\" pour afficher la valeur d'une variable", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e45c9212-ae33-4419-a49b-2aedd69002d2": {"__data__": {"id_": "e45c9212-ae33-4419-a49b-2aedd69002d2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e7ebabc-4efc-4e3a-a10f-f7be75c54a39", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "a1187ec86fe4e2943f649e923f11d1f4e7ce50938e0f2aa1d9831cbf4cba1cec", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.3\n\nSi vous n'avez pas la possibilit\u00e9 d'utiliser Spyder (ou tout autres \u00e9diteurs), vous pouvez utiliser l'outil en ligne basthon \u00e0 l'adresse https://basthon.fr/\n\nVoici la page d\u2019accueil de basthon :\n\n!\n\nUne fois sur cette page d'accueil, cliquez sur *Console*, vous devriez alors avoir ceci :\n\n!\n\nVous allez retrouvez ce que nous avons d\u00e9j\u00e0 vu avec Spyder : \u00e0 gauche vous avez l'\u00e9diteur et \u00e0 droite la console.\n\nDans la partie \"\u00e9diteur\" de Basthon, saisissez le code suivant :\n\n```\npoint_de_vie = 15\n```\nCliquez ensuite sur le bouton *Ex\u00e9cuter*\n\nVous pouvez ici aussi utiliser la console pour conna\u00eetre la valeur d'une variable :\n\nTapez *point_de_vie* dans la partie console de Basthon et appuyez sur \"Entr\u00e9e\"\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 724, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e51d4b0-d474-488a-876f-3f3df674883b": {"__data__": {"id_": "1e51d4b0-d474-488a-876f-3f3df674883b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c9e937c0-1483-4cd3-a4d9-711199bf0803", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "70676a80f282869b9d41ecf2d6f3407e5116cb6e4148508441a111dab97e62f9", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.4\n\nTestez le programme suivant :\n\n```python\na = 5.2\nb = 12\n```\n\napr\u00e8s  avoir ex\u00e9cut\u00e9 ce programme, tapez type(a) puis type(b) dans la console.\n\nV\u00e9rifiez que le type de la variable *a* est float et le type de la variable *b* est *int*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 246, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62b98b2d-1d02-4887-8572-f2a8a21c7aa1": {"__data__": {"id_": "62b98b2d-1d02-4887-8572-f2a8a21c7aa1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5313cf3-f8e4-4c43-aad6-d8547e1ddd06", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "6162741041d93aa40d042a9f981d05c8f410dd44e51602063f18e491de4bc383", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.5\n\nQuelles sont les valeurs des variables suivantes : d, e, f, g, h et i apr\u00e8s l'ex\u00e9cution du programme ci-dessous\n\n```python\nimport math\na = 5\nb = 16\nc = 3.14 / 2\nd = b / a\ne = b // a\nf = b % a\ng = math.pow(a,2)\nh = math.sqrt(b)\ni = math.sin(c)\n```\nV\u00e9rifiez vos r\u00e9ponses \u00e0 l'aide de la console", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b74c4004-c62f-4ffd-a6db-6abf7108ac15": {"__data__": {"id_": "b74c4004-c62f-4ffd-a6db-6abf7108ac15", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e333cd8e-9045-4480-a0a2-259f14a27359", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "8b296c90b9bd9ea7aed26bf74750734ca135f9c47d9b78dc458715d7c6fadf08", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.6\n\nSoit le programme suivant :\n\n\n```python\na = \"Hello\"\nb = \"World\"\nmon_expression = a + b\n```\nV\u00e9rifiez \u00e0 l'aide de la console que la variable *mon_expression* a bien pour valeur *HelloWorld*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 203, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88a71a14-61ed-4599-8b35-021b5f79072a": {"__data__": {"id_": "88a71a14-61ed-4599-8b35-021b5f79072a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c43777d8-ac4c-48b9-af70-d7c5f6721041", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "7dfb38305cae4cc0257756e85f9f6db7a07b3c2380dee47bfb77e8259ced41d2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.7\n\nSoit le programme suivant :\n\n\n```python\nmon_nombre = 5\nres = f\"Nombre de personnes : {mon_nombre}\"\n```\nV\u00e9rifiez \u00e0 l'aide de la console que la variable *res* a bien pour valeur la cha\u00eene de  caract\u00e8res *Nombre de personnes : 5*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 242, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30d70dce-2b90-42a7-b3ee-9ce107a3b60a": {"__data__": {"id_": "30d70dce-2b90-42a7-b3ee-9ce107a3b60a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "289e05fb-5414-40af-b528-2d69d16fd16a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "854ff29a391b887f7bb5c510ac94fe0350ca4871cd8dd5c670a665b9c789c387", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.8\n\nSoit la fonction suivante :\n\n```python\ndef ma_fonction(x):\n\ty = 3 * x + 2\n\treturn y \n```\nIl est possible d'utiliser la console pour \u00e9valuer une fonction pour une valeur de param\u00e8tre donn\u00e9e.\n\nApr\u00e8s avoir ex\u00e9cut\u00e9 le programme ci-dessus, tapez dans la console *ma_fonction(4)*. Vous devriez obtenir ceci :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "682698c1-f4ac-4ca8-978d-93edf96d74ad": {"__data__": {"id_": "682698c1-f4ac-4ca8-978d-93edf96d74ad", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00c259de-9b40-49a1-80c8-ba39ad23f253", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "d1eb231f717ca046923680e38f977f53d47dd9ac9e142e407fc302c6ffbdf3e8", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.9\n\nSoit la fonction suivante :\n\n```python\ndef ma_fonction(x,b):\n\ty = 4 * x + b\n\treturn y \n```\n\nQuelle est la valeur renvoy\u00e9e par cette fonction si on prend x = 3 et b = 3 ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 234, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e3c4538-e8d3-4ca1-91e0-dec38fcf6424": {"__data__": {"id_": "8e3c4538-e8d3-4ca1-91e0-dec38fcf6424", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "94d3c802-ac58-42bb-84dd-33d0da502ced", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "40475ca1e9ba77529f8e47555ba96ba5e30527c2eeb73f6b32c0ceba49c33db3", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.10\n\nSoit la fonction suivante :\n\n```python\ndef annonce(num, prov, dest):\n\tif dest != \"0\":\n\t\tmsg = f\"le train n\u00b0 {num} en provenance de {prov} et \u00e0 destination de {dest}, entre en gare.\"\n\telse:\n\t\tmsg = f\"le train n\u00b0 {num} en provenance de {prov} entre en gare. Ce train est terminus Triffouillis-les-Oies.\"\n\treturn msg\n\nmon_msg = annonce(4242, \"Paris\", \"0\")\n```\n\nQuelle est la valeur de la variable  *mon_msg* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2dad6f7f-3d66-491b-965b-8e2bd3e537eb": {"__data__": {"id_": "2dad6f7f-3d66-491b-965b-8e2bd3e537eb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e30ab401-e15e-4a9d-8a56-82296d0f1729", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "c80e35de56f3d8dd69afbef3688dfd75e9e385364256877b625a5a283aecb73a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.11\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a,b):\n\tif a  2 :\n\t\treturn 42\n\telse :\n\t\treturn 24\n\nval = ma_fct(6, 3)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83f319fc-d0f6-455e-adf6-a238f9c5bf03": {"__data__": {"id_": "83f319fc-d0f6-455e-adf6-a238f9c5bf03", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "530811c5-4885-445f-86de-f011449fc5f2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "4b224a0a60649e91ffc49feef0e1ae341d7983badd1f94e6333f4091bbfed24c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.12\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a,b):\n\tif a  2 :\n\t\treturn 42\n\telse :\n\t\treturn 24\n\nval = ma_fct(6, 3)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6dcb8c6b-53ef-48bf-95cb-b048f0846095": {"__data__": {"id_": "6dcb8c6b-53ef-48bf-95cb-b048f0846095", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a41ae902-8570-46a3-9025-83d4169ddfa7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "1161f90a5eae072708d491c3fb13407569910b1023353a02b3ce34305263d32a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.13\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a,b):\n\tif a < 2 or b < 2 :\n\t\treturn 42\n\telse :\n\t\treturn 24\n\nval = ma_fct(6, 3)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7dde9c1e-41a9-4027-acc2-4ef76dc2c8fe": {"__data__": {"id_": "7dde9c1e-41a9-4027-acc2-4ef76dc2c8fe", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e3a75b65-cf89-4f2a-98fe-bffa91725b66", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "41477d16a3e74910422463898166be3ab6a51bdc4ab5b4d6d43c7930e87cd2de", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.14\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a):\n\tb = 0\n\twhile a > 2:\n\t\tb = b + 1\n\t\ta = a - 2\n\treturn b\n\t\t\nval = ma_fct(6)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8308ba50-daae-42b3-95d2-867b939e590d": {"__data__": {"id_": "8308ba50-daae-42b3-95d2-867b939e590d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056873e6-a9e8-4737-9d4c-0ecb0ba7d3a2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "2118c87520c1c15c7a4257b4177454e90f98cfa3cd23180d6e6856535b4c8058", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.15\n\nSoit la fonction suivante :\n\n```python\ndef ma_fct(a):\n\tb = 3\n\twhile a > 0:\n\t\tb = b + a\n\t\ta = a - 2\n\treturn b\n\t\t\nval = ma_fct(6)\n```\n\nQuelle est la valeur de la variable  *val* apr\u00e8s l'ex\u00e9cution de ce programme ?\n\nV\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide  de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3a9a803-51a5-43fa-98e3-a5bf229ea144": {"__data__": {"id_": "b3a9a803-51a5-43fa-98e3-a5bf229ea144", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da63397b-9c6a-4683-916f-7e7105a46b5f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "685c00aeec0b08c5a3b699a8508e3d3a46ab97ce90ae99bb3575c3997578fff1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.16\n\nOn d\u00e9sire programmer une fonction qui prend en param\u00e8tre  le rayon d'un cercle et renvoie son aire :\n\n```python\nimport math\n\ndef aire_cercle(...):\n\taire = math.pi*r**2\n\treturn ...\n```\n\nCompl\u00e9tez la fonction *aire_cercle* ci-dessus (remplacez les ...), puis \u00e9crivez la documentation de cette fonction sous forme de docstring.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a424a2d-388d-4d9a-a348-eba2a28a60fe": {"__data__": {"id_": "0a424a2d-388d-4d9a-a348-eba2a28a60fe", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "71ec611a-85b5-438d-ae37-dd9372cb412a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "831bf5a839729fd232e046a7b14c436e9c8d14a40d2a262f7aafa322183b33cc", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.17\n\nOn d\u00e9sire programmer une fonction qui prend en param\u00e8tre un nombre et qui renvoie la cha\u00eene de caract\u00e8res \"pair\" si le nombre est pair et \"impair\" dans le cas contraire \n\n```python\nimport math\n\ndef pair_impair(n):\n\tif ... % 2 == 0:\n\t\treturn ...\n\telse :\n\t\treturn \"impair\"\n```\n\nCompl\u00e9tez la fonction *pair_impair* ci-dessus (remplacez les ...), puis \u00e9crivez la documentation de cette fonction sous forme de docstring.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12298c41-815b-4e44-9169-1c6b27a68d9b": {"__data__": {"id_": "12298c41-815b-4e44-9169-1c6b27a68d9b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "448ba8a7-9a0c-4917-96b0-230c24af7d74", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "c859e95483154f11119fdc53eb5117b8d1fcabf4411a45cf6b400bd740c677fe", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.18\n\nOn d\u00e9sire \u00e9crire une fonction *rebours* qui permet d'afficher un compte \u00e0 rebours \u00e0 l'\u00e9cran. Cette fonction prend en param\u00e8tre la valeur de d\u00e9part.\n\nExemple  : si on  tape dans la console *rebours(5)*, on doit obtenir :\n\n```\n5\n4\n3\n2\n1\n0\n```\n \nCompl\u00e9tez la fonction *rebours* suivante :\n\n```python\ndef rebours(n):\n\twhile ...:\n\t\tprint(n)\n\t\t...\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 362, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94210e8f-b16b-4ab4-bbf0-3f33813cfa0f": {"__data__": {"id_": "94210e8f-b16b-4ab4-bbf0-3f33813cfa0f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07cd42e0-b3e0-4320-8abf-9f27704b4aab", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "ddfdbf5081ac1020fab83454e420fd309475c54746540a86207e210deaffff97", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.19\n\nVous \u00eates g\u00e9rant d'un magasin et vous d\u00e9sirez \u00e9crire un programme Python qui calculera automatiquement le montant de la facture des clients.\n\nTout client qui ach\u00e8te au moins 5 fois le m\u00eame article se voit octroyer une remise de 5 % (uniquement sur le montant de l'achat de cet article). \n\nAfin de simplifier le probl\u00e8me, on consid\u00e8re qu'un client n'ach\u00e8te qu'un seul type d'article.\n\n\u00c9crivez une fonction *facture* qui prend en param\u00e8tre le prix unitaire de l'article et le nombre d'articles achet\u00e9s. Cette fonction doit renvoyer le montant de la facture.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "688a2abf-0c93-4ede-9500-016e0515e36c": {"__data__": {"id_": "688a2abf-0c93-4ede-9500-016e0515e36c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c77e8498-dcb5-462f-b835-e8357a02666e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "f685cb124622d47511b117a676b739f69f8c25b2f8a4beffd623c516f656b6a2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.20\n\nVous allez cr\u00e9er \"un g\u00e9n\u00e9rateur automatique de punition\" :\n\n\u00c9crivez une fonction *punition* qui prendra 2 param\u00e8tres : une cha\u00eene de caract\u00e8re et un nombre entier\n\nPar exemple :\n\nSi on passe comme param\u00e8tres \u00e0 notre fonction : \"Je ne dois pas discuter en classe\" et 3\n\nLa fonction devra permettre d'afficher :\n\nJe ne dois pas discuter en classe\n\nJe ne dois pas discuter en classe\n\nJe ne dois pas discuter en classe", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 431, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bb310e5-9ceb-4905-89a5-f2f53c153b53": {"__data__": {"id_": "5bb310e5-9ceb-4905-89a5-f2f53c153b53", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3112eaee-1991-4296-ba67-70383612d741", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}, "hash": "bee3e5528446a0a12fc4eda242d4bd65e211d4b853f18d8052917f951e0dd604", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 1.21\n\n\u00c9crivez une fonction *multi* permettant d'afficher une table de multiplication. Cette fonction devra prendre en param\u00e8tre la table d\u00e9sir\u00e9e.\n\nPar exemple si l'on passe le param\u00e8tre 3 \u00e0 la fonction, la fonction devra permettre d'afficher :\n\n```\n1 x 3 = 3\n\n2 x 3 = 6\n\n...\n\n...\n\n10 x 3 = 30\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d6e063a-76fe-4040-b374-906ab12f5e7e": {"__data__": {"id_": "0d6e063a-76fe-4040-b374-906ab12f5e7e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9473ff4e-8879-4b2f-9670-136a0cb1cb32", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "9cf8f755ef66ae455808a90c2a322e10ce1a5813a057d4f4459eff56e875f326", "class_name": "RelatedNodeInfo"}}, "text": "1) Programmer un ordinateur, c'est quoi ?\n\nProgrammer un ordinateur, c'est quoi ?\nProgrammer, c'est cr\u00e9er des programmes (suite d'instructions donn\u00e9es \u00e0 l'ordinateur) ! Un ordinateur sans programme ne sait rien faire. Il existe diff\u00e9rents langages qui permettent de programmer un ordinateur, mais le seul directement utilisable par le processeur est le langage machine (suite de 1 et de 0). Aujourd'hui (presque) plus personne ne programme en langage machine (trop compliqu\u00e9).\n\nLes informaticiens utilisent des instructions (mots souvent en anglais) en lieu et place de la suite de 0 et de 1. Ces instructions, une fois \u00e9crites par le programmeur, sont \"traduites\" en langage machine. Un programme sp\u00e9cialis\u00e9 assure cette traduction. Ce syst\u00e8me de traduction s'appellera interpr\u00e9teur ou bien compilateur, suivant la m\u00e9thode utilis\u00e9e pour effectuer la traduction.\n\nIl existe 2 grandes familles de langages de programmation :\n\n- Les langages de bas niveau sont tr\u00e8s complexes \u00e0 utiliser, car tr\u00e8s \u00e9loign\u00e9s du langage naturel, on dit que ce sont des langages \u00ab proches de la machine \u00bb, en contrepartie ils permettent de faire des programmes tr\u00e8s rapides \u00e0 l'ex\u00e9cution. L'assembleur est le langage de bas niveau. Certains \"morceaux\" de programmes sont \u00e9crits en assembleur encore aujourd'hui.\n\n- Les langages de haut niveau sont eux plus \"faciles\" \u00e0 utiliser, car plus proches du langage naturel (exemple : si a=3 alors b=c). Exemples de langages de haut niveau : C, C++ , Java, Python...\n\nEn NSI, notre langage de pr\u00e9dilection sera Python.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "470f0b16-91c1-4c5a-8f05-0c8440472c96": {"__data__": {"id_": "470f0b16-91c1-4c5a-8f05-0c8440472c96", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f6eea53-2283-4bc3-a14c-99242537fe26", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "c21a3f607b74df47feebff0f6fb823a008b6fe6fa618824497a10253aa0a1b03", "class_name": "RelatedNodeInfo"}}, "text": "2) Notion de variable\n\nD\u00e9finition du mot ordinateur d'apr\u00e8s \"Le Petit Larousse\" :\n\n\"Machine automatique de traitement de l'information, ob\u00e9issant \u00e0 des programmes form\u00e9s par des suites d'op\u00e9rations arithm\u00e9tiques et logiques.\"\n\nQui dit \"traitement de l'information\", dit donc donn\u00e9es \u00e0 manipuler. Un programme \"passe\" donc son temps \u00e0 traiter des donn\u00e9es. Pour pouvoir traiter ces donn\u00e9es, l'ordinateur doit les ranger dans sa m\u00e9moire (RAM - Random Access Memory). La RAM se compose de cases dans lesquelles nous allons ranger ces donn\u00e9es (une donn\u00e9e dans une case). Chaque case a une adresse (ce qui permet au processeur de savoir o\u00f9 sont rang\u00e9es les donn\u00e9es).\n\nAlors, qu'est-ce qu'une variable ?\n\nEh bien, c'est une petite information (une donn\u00e9e) temporaire que l'on stocke dans une case de la RAM. On dit qu'elle est \"variable\", car c'est une valeur qui peut changer pendant le d\u00e9roulement du programme.\n\nUne variable est constitu\u00e9e de 2 choses :\n\n- une valeur pr\u00e9sente en m\u00e9moire (par exemple le nombre entier 5)\n\n- un nom\n\nOn dira donc qu'une variable est l'association d'un nom et d'une valeur\n\n```python\ni = 12\n```\nGr\u00e2ce \u00e0 cette ligne, nous avons d\u00e9fini une variable qui porte le nom i. Ce nom i est associ\u00e9 \u00e0 la valeur 12.\n\nIl est aussi possible d'associer un nom \u00e0 un nombre \u00e0 virgule  :\n\n```python\ni = 5.2\n```\nJ'attire votre  attention que nous utilisons un point \u00e0 la place d'une virgule (convention anglo-saxonne).\n\nUn nom peut donc \u00eatre associ\u00e9 \u00e0 plusieurs types d'entit\u00e9s (pour l'instant nous n'en avons vu que deux, mais nous en verrons d'autres plus loin) : les nombres entiers (\"integer\" en anglais, abr\u00e9g\u00e9 en \"int\") et les nombres \u00e0 virgule (\"float\" en anglais). Il est possible de connaitre le type de l'entit\u00e9 \u00e0 l'aide de l'instruction \"type\".\n\n```python\na = 5\nb = 5.4\n```\nun *type(a)* donnera comme r\u00e9sultat *int* alors qu'un *type(b)* donnera *float*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd3b96e5-5647-4aea-b6a3-3ce0ccd8ae0c": {"__data__": {"id_": "cd3b96e5-5647-4aea-b6a3-3ce0ccd8ae0c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a49b6f26-4756-4d55-bf3a-04e952d8256c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "503721b74113d1308c4502273ab8b530f60a5cfa03d43a664b02cb9c9482348f", "class_name": "RelatedNodeInfo"}}, "text": "3) un peu de calculs\n\nUn ordinateur est bien \u00e9videmment capable d'effectuer des op\u00e9rations math\u00e9matiques (arithm\u00e9tiques).\n\nLes signes utilis\u00e9s sont classiques : +, - , * (multiplication), / (division), // (division euclidienne) ou encore % (modulo : reste d'une division euclidienne).\n\nIl est tout \u00e0 fait possible d'effectuer des op\u00e9rations directement avec des nombres, mais il est aussi possible d'utiliser des variables.\n\n```python\na = 5\nb = 16\nc = 3.14 / 2\nd = b / a\ne = b // a\nf = b % a\ng = a + b\nh = a\n```\n\nConsid\u00e9rons maintenant le programme suivant :\n\n```python\na = 11\na = a + 1\n```\nD'apr\u00e8s  vous, quelle est la valeur de la variable *a* apr\u00e8s l'ex\u00e9cution du programme ci-dessus ?\n\nLa r\u00e9ponse est 12.\n\nD\u00e9taillons ce qui se passe dans ce programme :\n\nNous cr\u00e9ons une variable : le nom a est associ\u00e9 \u00e0 l'entier 11. La suite est un peu plus complexe, mais tr\u00e8s importante \u00e0 comprendre. Il va falloir lire la ligne a = a + 1 de droite \u00e0 gauche, d\u00e9cortiquons cette ligne :\n\n- a + 1 : nous prenons la valeur actuelle associ\u00e9e au nom a (c'est-\u00e0-dire 11) et nous ajoutons 1 \u00e0 11, \u00e0 droite de l'\u00e9galit\u00e9 nous avons donc maintenant la valeur 12\n- nous associons la valeur qui vient d'\u00eatre calcul\u00e9e au nom a\n\nDonc la valeur de a est bien 12\n\nCe raisonnement peut \u00eatre g\u00e9n\u00e9ralis\u00e9 pour \u00e9viter des erreurs parfois difficiles \u00e0 corriger : dans une \u00e9galit\u00e9, commencer toujours par \u00e9valuer l'expression se trouvant \u00e0 droite du signe \u00e9gal.\n\nL'op\u00e9ration \n```python\na = a + 1\n```\nse nomme une incr\u00e9mentation.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8cdf9ef3-f664-43ce-bb5b-f865f49a7136": {"__data__": {"id_": "8cdf9ef3-f664-43ce-bb5b-f865f49a7136", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "733bb046-b01e-47c1-9ee4-2d971a759ccd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "7b17fa1671a0aa05b22e315c3869bf0c899e18294d3d38936889da48a2151d77", "class_name": "RelatedNodeInfo"}}, "text": "4)  cha\u00eenes de caract\u00e8res", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 27, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8140ac75-f6ca-4b5a-a49f-c65aef429436": {"__data__": {"id_": "8140ac75-f6ca-4b5a-a49f-c65aef429436", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda818bb-2d46-44b1-a1ad-8f138fb911a0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "c21d8264fa5f92c474a1a374029f7a48eb7ae3865023d410d54d87ab2f20460c", "class_name": "RelatedNodeInfo"}}, "text": "a) notion de cha\u00eene de caract\u00e8res\n\n\nOn peut aussi associer des noms \u00e0 des suites de caract\u00e8res que l'on appelle \"cha\u00eene de caract\u00e8res\".\n\n```python\nma_chaine = \"Bonjour le monde !\"\n```\n\nLe contenu de la variable *ma_chaine* est de type *string* et donc un *type(ma_chaine)* donnera un *str* (abr\u00e9viation de string en Python)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 325, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fca97eb-4639-4d89-93b7-f7cb7073b44a": {"__data__": {"id_": "1fca97eb-4639-4d89-93b7-f7cb7073b44a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "96a150f9-2433-429c-b2ef-4010af523d1f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "676218b64068b832ef526051ac437acc6498e80886cce0c939bc06012faabf80", "class_name": "RelatedNodeInfo"}}, "text": "b)  le signe + et les cha\u00eenes de caract\u00e8res\n\nL'utilisation du signe + ne se limite pas \u00e0 l'addition. Il est aussi utilis\u00e9 pour la concat\u00e9nation.\n\nD'apr\u00e8s Wikip\u00e9dia :\n\n\u00ab Le terme concat\u00e9nation (substantif f\u00e9minin), du latin cum (\u00abavec\u00bb) et catena(\u00abcha\u00eene, liaison\u00bb), d\u00e9signe l'action de mettre bout \u00e0 bout au moins deux cha\u00eenes. \u00bb\n\nSi on consid\u00e8re le programme suivant :\n\n```python\na = \"Hello\"\nb = \"World\"\nmon_expression = a + b\n```\napr\u00e8s l'ex\u00e9cution de ce programme, la variable *mon_expression* aura pour valeur  *HelloWorld*\n\nIl est aussi possible de concat\u00e9ner une cha\u00eene de caract\u00e8res et une ou plusieurs variables :\n\n```python\nma_chaine_1 = \"Bonjour \"\nma_chaine_2 = \"le \"\nres = ma_chaine_1 + ma_chaine_2 + \"monde!\"\n```\nApr\u00e8s l'ex\u00e9cution de ce programme, la variable  *res*  aura pour valeur *Bonjour le  monde!*\n\nLes 2 noms ma_chaine_1 et ma_chaine_2 sont associ\u00e9s \u00e0 2 cha\u00eenes de caract\u00e8res, nous avons donc bien ici une concat\u00e9nation.\n\nQue se passe-t-il si nous avons ce cas de figure :\n\n```python\na = \"Nombre de pommes : \"\nb = 4 \nc = a + b\n```\na est de type *str* alors que b est de type *int*. Le signe plus repr\u00e9sente une addition ou une concat\u00e9nation ? Ni l'un, ni l'autre, puisque Python vous renverra une erreur : il ne peut pas concat\u00e9ner un entier et une cha\u00eene de caract\u00e8re.\n\nLa solution : transformer le nombre 4 en caract\u00e8re 4 \u00e0 l'aide du mot cl\u00e9 *str*:\n\n```python\na = \"Nombre de pommes : \"\nb = 4 \nc = a + str(b)\n```\nnous avons maintenant une concat\u00e9nation, car *str(4)* est de type string.\n\nAutre solution pour faire cohabiter des variables de type *int* ou *float* avec des variables de type *str* : les *fstring* (attention les *fstring* sont uniquement disponible \u00e0 partir de Python 3.5)\n\nIl est possible d'\u00e9crire :\n\n```python\na = \"Nombre de pommes :\"\nb = 4 \nc = f\"{a} {b}\"\n```\napr\u00e8s l'ex\u00e9cution du programme ci-dessus, la variable *c* aura pour valeur \"Nombre de pommes : 4\"\n\nDans la cha\u00eene de caract\u00e8re, *{a}* sera remplac\u00e9 par la valeur de la variable *a*, c'est \u00e0 dire *Nombre de pommes :*. M\u00eame chose avec *{b}* qui sera remplac\u00e9 par la valeur de b, c'est \u00e0 dire 4.\n\nautre exemple d'utilisation des fstring :\n\n```python\nnum_train = 4232\ndest = \"Paris\" \nc = f\"Le train n\u00b0{num_train} \u00e0 destination de {dest} entre en gare\" \n```\n\napr\u00e8s l'ex\u00e9cution du programme ci-dessus, la variable *c* aura pour valeur \"Le train n\u00b04232 \u00e0 destination de Paris entre en gare\"\n\nNotez la pr\u00e9sence du \"f\" juste avant le guillemet et des accolades qui encadrent le nom de la variable. Il est n\u00e9cessaire d'ajouter ce \"f\" pour avoir une fstring.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75cd5f53-888f-4914-93a0-f148237ce916": {"__data__": {"id_": "75cd5f53-888f-4914-93a0-f148237ce916", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "900585ce-9bfe-46c8-a4ff-d983a9c265df", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "4c298a40fea364ba680e7f68269dec479ad22fb2dee4861aa8cb3836a228f744", "class_name": "RelatedNodeInfo"}}, "text": "5) les  fonctions", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 19, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "260021e9-0e1c-4af7-a8f1-99dca1802dd6": {"__data__": {"id_": "260021e9-0e1c-4af7-a8f1-99dca1802dd6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5d0592f-175e-4c56-86a4-8f8f4a60de19", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "c9aa24289c8a00bca639b7d97be85681bf038c022e94cfe958f05fb3ae46c6da", "class_name": "RelatedNodeInfo"}}, "text": "a) notion de fonction\n\nLes fonctions permettent de d\u00e9composer un programme complexe en une s\u00e9rie de sous-programmes plus simples. De plus, les fonctions sont r\u00e9utilisables : si nous disposons d'une fonction capable de calculer une racine carr\u00e9e, par exemple, nous pouvons l'utiliser un peu partout dans notre programme sans avoir \u00e0 la r\u00e9\u00e9crire \u00e0 chaque fois (on parle de factorisation du code)\n\nLa notion de fonction en informatique est comparable \u00e0 la notion de fonction en math\u00e9matiques.\n\n!\n\nSi nous avons y = 3x+2, pour une valeur donn\u00e9e de x, nous aurons une valeur de y.\n\nExemple : x=4 donc y= 14 (y = 3.4+2=14, attention ici le point correspond au signe \"multipli\u00e9\").\n\nLa fonction en informatique est bas\u00e9e sur la m\u00eame id\u00e9e :\n\n!\n\nVoici la syntaxe employ\u00e9e en Python pour d\u00e9finir une fonction :\n\n```\ndef nom_de_la_fonction(parametre):\n\tinstruction_1\n\tinstruction_2\n\treturn y\nsuite programme\n```\n\nLa fonction renvoie la valeur associ\u00e9e \u00e0 y.\n\nATTENTION : Notez bien la pr\u00e9sence du d\u00e9calage entre la premi\u00e8re ligne et les lignes suivantes. Ce d\u00e9calage est appel\u00e9 indentation, l'indentation permet de d\u00e9finir un bloc de code. Dans l'exemple ci-dessus, l'indentation nous permet de savoir que \"instruction_1\", \"instruction_2\" et \"return y\" constituent un bloc de code, ce bloc correspond au contenu de la fonction. \"suite programme\" ne fait pas partie de la fonction, car il n'est pas indent\u00e9. Pour indenter du code, il y a 2 solutions : mettre 4 espaces ou utiliser une tabulation. En Python il est conseill\u00e9 d'utiliser les 4 espaces, mais ce n'est pas une obligation. Une chose est s\u00fbre, une fois que vous avez choisi une m\u00e9thode, n'en chang\u00e9 surtout pas au cours d'un m\u00eame programme !\n\nCodons notre exemple (y=3x+2) en cr\u00e9ant une fonction ma_fonction :\n\n```python\ndef ma_fonction(x):\n\ty = 3 * x + 2\n\treturn y\n```\nPour \"utiliser\" la fonction ma_fonction, il suffit d'\u00e9crire : ma_fonction (4) (dans ce cas pr\u00e9cis, notre fonction renverra le nombre 14 : x sera \u00e9gale \u00e0 4 dans la fonction on aura donc le calcul 3 . 4 + 2 = 12  + 2 = 14)\n\n\nSi on consid\u00e8re cet exemple  :\n\n```python\ndef ma_fonction(x):\n\ty = 3 * x + 2\n\treturn y\nsolution = ma_fonction(4)\n```\n\nApr\u00e8s l'ex\u00e9cution de ce programme, la valeur de la variable *solution* sera 14. En effet, au moment de l'ex\u00e9cution de notre programme le code *ma_fonction(4)* sera syst\u00e9matiquement remplac\u00e9 par la valeur renvoy\u00e9e par la fonction. Dans notre exemple le *ma_fonction(4)* sera remplac\u00e9 par le nombre 14, d'o\u00f9 la  valeur 14 pour la variable *solution*.\n\nIl est possible de passer plusieurs param\u00e8tres \u00e0 une fonction :\n\n```python\ndef ma_fonction(x, b):\n\ty = 2 * x + b\n\treturn y\nsolution = ma_fonction(4, 3)\n```\nDans  ce cas,  dans  la fonction, le param\u00e8tre *x* sera \u00e9gal \u00e0 4 et le param\u00e8tre *b* \u00e0 3 (attention \u00e0 l'ordre des param\u00e8tres). On a aura donc la variable *solution* qui aura pour valeur  11 (2.4 + 3 = 11) apr\u00e8s l'ex\u00e9cution de ce programme.\n\nLes param\u00e8tres peuvent \u00eatre des cha\u00eenes de caract\u00e8res (ainsi que la valeur retourn\u00e9e)\n\n```python\ndef dit_bonjour(nom, age):\n\tphrase = f\"Bonjour {nom}, vous avez {age} ans.\"\n\treturn phrase\np = dit_bonjour(\"toto\", 16) \n```\nApr\u00e8s l'ex\u00e9cution de ce programme, la variable p aura  pour valeur la cha\u00eene de caract\u00e8res \"Bonjour toto, vous avez 16 ans\"\n\n**Attention** : remarquez bien les guillemets autour du param\u00e8tre \"toto\" (c'est une cha\u00eene de caract\u00e8res)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8cf7c35-bcd6-4478-9320-5e4d578392d6": {"__data__": {"id_": "a8cf7c35-bcd6-4478-9320-5e4d578392d6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e77d932-6849-493e-a024-0dca677def30", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "ee14303c0a1ecd5d6a2e2a8a94bc28af1dcc2ff6f57fdb3a81f8aba8dcc70ec8", "class_name": "RelatedNodeInfo"}}, "text": "b) les fonctions natives de python\n\nPython propose des fonction pr\u00eates \u00e0 \u00eatre utilis\u00e9es par le programmeur : les fonctions natives (built-in function en anglais). Nous avons d\u00e9j\u00e0 eu l'occasion d'en voir deux avec *type* (qui renvoie le type d'une variable) et *str* qui renvoie la cha\u00eene de caract\u00e8re obtenue \u00e0 partir d'un nombre (*str(4)* renvoie le caract\u00e8re 4). Il existe beaucoup d'autres fonctions natives Python (il en existe plus de 50). Dans l'imm\u00e9diat, nous allons en \u00e9tudier deux autres :\n\n- la fonction *len* prend en param\u00e8tre une cha\u00eene de caract\u00e8res et renvoie le nombre de caract\u00e8res pr\u00e9sents dans cette cha\u00eene de caract\u00e8res (par exemple *len(\"azerty\")* renvoie 6)\n\n- la fonction *print* permet d'afficher \u00e0 l'\u00e9cran la valeur qui lui est pass\u00e9e en param\u00e8tre.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e532bb9-4396-4129-a3b2-7531439fb258": {"__data__": {"id_": "8e532bb9-4396-4129-a3b2-7531439fb258", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8cb4f4ea-5913-49cc-936a-f8e445fdeea4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "b37cd260b49694cd526301ccebf553e49698ed18f132a06e0cfe883d499b90dc", "class_name": "RelatedNodeInfo"}}, "text": "c) les modules en Python\n\nIl est possible d'utiliser d'autres fonctions \"pr\u00eates \u00e0 l'emploi\" en important des modules. Un module est un fichier contenant des fonctions qui pourront \u00eatre utilis\u00e9es dans d'autres programmes. Le module *math* est un module tr\u00e8s important puisqu'il comporte toutes les fonctions math\u00e9matiques classiques : cosinus, sinus, exposant, racine carr\u00e9e...\n\nPour utiliser les fonctions pr\u00e9sentes dans un module, il est n\u00e9cessaire d'importer le module dans notre programme. Par exemple, pour pouvoir utiliser les fonctions du module *math* il faudra \u00e9crire :\n\n```python\nimport math\n```\nau d\u00e9but de son programme.\n\nPour utiliser une fonction d'un module import\u00e9, il faudra pr\u00e9ciser le nom du module qui propose cette fonction. Par exemple, pour d\u00e9terminer le sinus de 3.14, il faudra \u00e9crire :\n```python\nmath.sin(3.14)\n```    \nVoici une s\u00e9rie de calculs qui fait appel \u00e0 des fonctions issues du module maths :\n\n```python\nimport math\n\na = 5\nb = 16\nc = 3.14\npuis = math.pow(a,3)\nracine = math.sqrt(b)\ns = math.sin(c)\n```\nApr\u00e8s l'ex\u00e9cution de ce programme :\n\n- la variable *puis* aura pour valeur 53 = 125\n- la variable *racine* aura pour valeur 4 (racine carr\u00e9e de 16)\n- la variable *s* aura pour valeur 0.05 (le sinus de 3.14 est 0.05)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1253, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "abbd7847-4df8-4d41-84f4-02963c88d426": {"__data__": {"id_": "abbd7847-4df8-4d41-84f4-02963c88d426", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "af8f5283-941e-4778-ad50-4aa0d7a1575b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "4b907719129d2ba01b8e40030cd1c03f3aab9357c1cefe196272388add5bb3bb", "class_name": "RelatedNodeInfo"}}, "text": "d) les fonctions et le mot cl\u00e9 return\n\nIl est possible d'\u00e9crire une fonction sans utiliser le mot cl\u00e9 *return*, cette pratique est souvent consid\u00e9r\u00e9e comme une \"mauvaise pratique\", mais Python ne renverra pas d'erreur si vous le faites. Le code suivant est tout \u00e0 fait correct :\n\n```python\ndef ma_fonction(i):\n\td = 5\n\tz = i + d\n```\n\nPour information, m\u00eame en l'absence de *return*, une fonction Python renvoie quand m\u00eame \"quelque chose\", puisqu'elle renvoie *None* qui veut dire rien...\nDans le cas ci-dessus nous aurons donc :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f24d551-de2c-4041-839e-327fdf91c998": {"__data__": {"id_": "9f24d551-de2c-4041-839e-327fdf91c998", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2797d01b-9b8a-4cbc-beec-ae4683b529f4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "75157f5caa4d9b534edb385b69ec7d0dff4fce7dce3fe2196c7023635d2f5c3e", "class_name": "RelatedNodeInfo"}}, "text": "7) Variables locales et variables globales", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 44, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e30d4ab7-020a-425c-8d7a-74588f445efc": {"__data__": {"id_": "e30d4ab7-020a-425c-8d7a-74588f445efc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01952fa2-ec09-49ed-9688-7583e31991c6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "7bdf0a4315b26271efbddaf9df09d31e8b1f20cbbc880323033bd77f31e24a7a", "class_name": "RelatedNodeInfo"}}, "text": "a) variables et fonctions\n\nConsid\u00e9rons le programme suivant:\n\n```python\ndef ma_fonc():\n\ti = 5\nma_fonc()\nprint (i)\n```\nNous commen\u00e7ons par d\u00e9finir une fonction *ma_fonc* qui ne prend aucun param\u00e8tre et qui ne renvoie aucune valeur (absence du mot cl\u00e9 *return*). Cette fonction attribue juste la valeur 5 a la variable ayant pour nom *i*.\n\nA la 3e ligne du programme, nous ex\u00e9cutons la fonction *ma_fonc*. \n\nRappelons que la fonction *print* permet d'afficher \u00e0 l'\u00e9cran la valeur qui lui est pass\u00e9e en param\u00e8tre. La 4e ligne de ce programme permet donc d'afficher la valeur de la variable *i* \u00e0 l'\u00e9cran.\n\nOn pourrait penser que ce programme va donc afficher 5 ! Pas du tout, nous avons le droit \u00e0 l'erreur suivante :\n\n```\nNameError: name 'i' is not defined\n```\n\nLe message d'erreur est suffisamment parlant, inutile de s'attarder dessus : la variable i n'est pas d\u00e9finie. A noter que cette erreur est d\u00e9clench\u00e9e par la 4e ligne (le *print*).\n\nPourquoi cette erreur, la variable i est bien d\u00e9finie dans la fonction *ma_fonc* et la fonction *ma_fonc* est bien ex\u00e9cut\u00e9e, o\u00f9 est donc le probl\u00e8me ?\n\nEn fait, la variable i est une variable dite locale : elle a \u00e9t\u00e9 d\u00e9finie dans une fonction et elle \"restera\" dans cette fonction. Une fois que l'ex\u00e9cution de la fonction sera termin\u00e9e, la variable i sera \"d\u00e9truite\" (supprim\u00e9e de la m\u00e9moire). Elle n'est donc pas accessible depuis \"l'ext\u00e9rieur\" de la fonction (ce qui explique le message d'erreur que nous obtenons, car le *print* est en dehors la fonction *ma_fonc*, la variable *i* n'est donc plus accessible).\n\n\u00c9tudions maintenant un cas un peu plus complexe :\n\n```python\ni = 3\ndef ma_fonc():\n\ti = 5\nma_fonc()\nprint (i)  \n```\nOn pourrait s'attendre \u00e0 voir s'afficher la valeur 5 \u00e0 l'\u00e9cran. Pas du tout, nous ne rencontrons pas d'erreur cette fois, mais c'est la valeur 3 qui s'affiche \u00e0 l'\u00e9cran.\n\nEn fait dans cet exemple nous avons 2 variables i diff\u00e9rentes : la variable i \"globale\" (celle qui a \u00e9t\u00e9 d\u00e9finie en dehors de toute fonction) et la variable i \"locale\" (celle qui a \u00e9t\u00e9 d\u00e9finie dans la fonction). Ces 2 variables portent le m\u00eame nom, mais sont diff\u00e9rentes (elles correspondent \u00e0 des cases m\u00e9moire diff\u00e9rentes). Au moment de l'ex\u00e9cution du *print* \u00e0 la 5e ligne seule la variable globale existe encore (celle d\u00e9finie \u00e0 la premi\u00e8re ligne du programme), d'o\u00f9 l'affichage du 3.\n\nUne variable globale peut \u00eatre \"utilis\u00e9e\" \u00e0 l'int\u00e9rieur d'une fonction :\n\n```python\ni = 3\ndef ma_fonc():\n\tprint (i)\nma_fonc()\n```\nAttention, le *print* se situe dans la fonction (la ligne du *print* est bien indent\u00e9e)\n\nCe programme permet d'afficher la valeur 3 \u00e0 l'\u00e9cran.\n\nQuand on cherche \u00e0 utiliser une variable dans une fonction, le syst\u00e8me va d'abord chercher si cette variable se \"trouve\" dans l'espace local de la fonction, puis, s'il ne la trouve pas dans cet espace local, le syst\u00e8me va aller rechercher la variable dans l'espace global. Pour le *print(i)* situ\u00e9 dans la fonction le syst\u00e8me ne trouve pas de variable i dans l'espace local de la fonction *ma_fonc*, il passe donc \u00e0 l'espace global et trouve la variable i (nous avons donc 3 qui s'affiche). \n\nIl est important de bien comprendre que dans la programme ci-dessous le syst\u00e8me trouve une variable i dans l'espace local de la fonction, la \"recherche\" de la variable i se serait arr\u00eat\u00e9e l\u00e0 :\n\n```python\ni = 3\ndef ma_fonc():\n\ti = 5\n\tprint (i)\nma_fonc()\n```\net ce programme affiche la valeur 5 \u00e0 l'\u00e9cran. *i* a \u00e9t\u00e9 trouv\u00e9e dans l'espace local de la fonction *ma_fonc*, la recherche ne va donc pas plus loin (inutile de remonter jusqu'\u00e0 l'espace global)\n\nEn revanche le programme ci-dessous g\u00e9n\u00e8re une erreur : \"UnboundLocalError: local variable 'i' referenced before assignment\"\n\n```python\ni = 3\ndef ma_fonc():\n\ti = i + 1\nma_fonc()\nprint(i)\n```\n\nIl n'est \u00e0 priori pas possible de modifier une variable globale (ici la variable *i*) dans une fonction.\n\nPour pouvoir modifier une variable globale dans une fonction, il faut utiliser le mot cl\u00e9 *global* :\n\n```python\ni = 3\ndef ma_fonc():\n\tglobal i\n\ti = i + 1\nma_fonc()\nprint(i)\n```\nIci, aucune erreur la valeur 4 est bien affich\u00e9e \u00e0 l'\u00e9cran.\n\nJe ne vais pas m'\u00e9tendre sur l'utilisation du mot cl\u00e9 *global* car comme  nous allons le voir maintenant, c'est une (tr\u00e8s) mauvaise pratique, car cette utilisation peut entra\u00eener des \"effets de bord\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 4290, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47c84d0f-5801-4bdf-826e-e038ea45ecf8": {"__data__": {"id_": "47c84d0f-5801-4bdf-826e-e038ea45ecf8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c03434ce-2b61-4300-b8ab-95a2c6a4e4e4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "d87fd87d63b4047099f99ca331e6005d002a39b207ba3c0b8b70c6712263d74e", "class_name": "RelatedNodeInfo"}}, "text": "b) les effets de bord\n\nOn parle d'effet de bord quand une fonction modifie l'\u00e9tat d'une variable globale. Dans notre exemple ci-dessus, la fonction *ma_fonc* modifie bien la valeur de *i* : avant l'ex\u00e9cution de *ma_fonc*, *i* a la valeur 3, apr\u00e8s l'ex\u00e9cution de la fonction *ma_fonc*, *i* est associ\u00e9 \u00e0 la valeur 4. Nous avons donc bien un effet de bord.\n\nLes effets de bord c'est \"mal\" ! Mais pourquoi est-ce \"mal\" ?\n\nLes effets de bords provoquent parfois des comportements non d\u00e9sir\u00e9s par le programmeur (\u00e9videmment dans des programmes tr\u00e8s complexes, pas dans des cas simplistes comme celui que nous venons de voir). Ils rendent aussi parfois les programmes difficilement lisibles (difficilement compr\u00e9hensibles). \u00c0 cause des effets de bord, on risque de se retrouver avec des variables qui auront des valeurs qui n'\u00e9taient pas pr\u00e9vues par le programmeur. On dit aussi qu'\u00e0 un instant donn\u00e9, l'\u00e9tat futur des variables est difficilement pr\u00e9visible \u00e0 cause des effets de bord. En r\u00e9sum\u00e9, on \u00e9vitera autant que possible l'utilisation du \"global\".\n\nUn paradigme de programmation se propose d'\u00e9viter au maximum les effets de bords : la programmation fonctionnelle. Nous \u00e9tudierons ce paradigme de programmation en terminale.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb13f382-8649-410e-83fa-bda0d9502e9c": {"__data__": {"id_": "eb13f382-8649-410e-83fa-bda0d9502e9c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6000c060-f449-4632-bf5e-9709571d91e5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "4a84259d467c08e1dfec96f9281938ba4ecdf4281483a06c5b2a828627c97b25", "class_name": "RelatedNodeInfo"}}, "text": "8) les expressions et les bool\u00e9ens", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 36, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e424665-aafd-4d16-b641-4047306a0ba8": {"__data__": {"id_": "0e424665-aafd-4d16-b641-4047306a0ba8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0f34c68-2bc4-4c95-9aa8-ad1ebd0478ce", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "a3e0cf0d5e5f22c79c4a659f929e7e53bdec47590bc06aef95dd1d9030b17508", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nSi quelqu'un vous dit que \"4 est \u00e9gal \u00e0 5\", vous lui r\u00e9pondez quoi ? \"c'est faux\". Si maintenant la m\u00eame personne vous dit que \"7 est \u00e9gal \u00e0 7\", vous lui r\u00e9pondrez bien \u00e9videmment que \"c'est vrai\".\n\nEn Python, ces deux \"affirmations\" (\"4 est \u00e9gal \u00e0 5\" et \"7 est \u00e9gal \u00e0 7\") s'\u00e9criront *4 == 5* et *7 == 7* (notez bien le double signe \u00e9gal). \n\n*4 == 5* est appel\u00e9 une expression, une expression est soit vraie (*True* comme *7 == 7*), soit fausse (*False* comme *4 == 5*).\n\nPour l'instant nous avons vu deux grands types de donn\u00e9es : les nombres (entier ou flottant) et les cha\u00eenes de caract\u00e8res, il existe un troisi\u00e8me type tout aussi important que les deux premiers : les bool\u00e9ens. Un bool\u00e9en est un type de donn\u00e9es qui ne peut prendre que deux valeurs : vrai (*True*) ou faux (*False*). Une expression est soit *True*, soit *False*.\n\nATTENTION : notez le double \u00e9gal \"==\" qui permet de distinguer une expression et une affectation (association d'une valeur \u00e0 un nom (variable)). Le fait de confondre le \"simple \u00e9gal\" et le \"double \u00e9gal\" est une erreur classique qu'il faut \u00e9viter.\n\nIl est possible d'utiliser des variables dans une expression, par exemple avec :\n\n```python\na = 5\nb = 7\n```\non aura *a == b* qui sera *False*\n\nA la place de l'op\u00e9rateur \"==\" il est possible d'utiliser l'op\u00e9rateur \"!=\" qui signifie \"diff\u00e9rent de\".\n\nPar exemple *7 != 7* est *False* alors que *5 != 4* est *True*.\n\nNotez aussi l'existence des op\u00e9rateurs :\n\n- \"strictement inf\u00e9rieur \u00e0\" <\n- \"strictement sup\u00e9rieur \u00e0\" >\n- \"inf\u00e9rieur ou \u00e9gal \u00e0\" <=\n- \"sup\u00e9rieur ou \u00e9gal \u00e0\" >=\n\npar exemple *5  5* est *False*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1602, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d734aa2-679d-47d3-93e7-fb63a156b5ca": {"__data__": {"id_": "6d734aa2-679d-47d3-93e7-fb63a156b5ca", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f1d17858-ef80-4f33-b665-5cde1969353b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "69396705d746cea72a660f5326a9721282c953e20e0cc2a1571751ce20869cbd", "class_name": "RelatedNodeInfo"}}, "text": "b) le \"or\", le \"and\" et le \"not\"\n\nIl est aussi de combiner plusieurs expressions gr\u00e2ce aux op\u00e9rateurs logiques *or* et *and*. Une combinaison d'expression est aussi une  expression (une combinaison d'expression est donc aussi soit *True* soit *False*)\n\nPar exemple si nous avons 2 expressions *exp1* et *exp2* il est possible de les combiner \u00e0 l'aide de l'op\u00e9rateur logique *or* : *exp1 or exp2* est *False* uniquement si *exp1* et *exp2* sont *False*, elle est *True* dans tous les autres cas.\n\nLes r\u00e9sultats peuvent \u00eatre regroup\u00e9s dans ce que l'on appelle une table de v\u00e9rit\u00e9 :\n\ntable de v\u00e9rit\u00e9 pour le *or*\n\n| exp1 | exp2  | exp1  or  exp2 |\n| --- | --- | --- |\n| True  | True | True |\n| True  | False | True |\n| False  | True | True |\n| False  | False | False |\n\n\ntable de v\u00e9rit\u00e9 pour le *and*\n\n| exp1 | exp2  | exp1  and  exp2 |\n| --- | --- | --- |\n| True  | True | True |\n| True  | False | False |\n| False  | True | False |\n| False  | False | False |\n\n\nOn trouve aussi le *not* comme op\u00e9rateur logique avec la table de v\u00e9rit\u00e9 suivante :\n\n| exp | not (exp) |\n| --- | --- |\n| True | False |\n| False | True |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25e5814e-90ce-4094-b9f3-9b16a07f29b5": {"__data__": {"id_": "25e5814e-90ce-4094-b9f3-9b16a07f29b5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4802f069-2c3e-4c4d-a51b-f9866bf6153b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "af2dff0fc6f2aa03d9591b10e83fc5fad839ff419c1a1e44905c9d4ea0b51a8b", "class_name": "RelatedNodeInfo"}}, "text": "9) les conditions\n\nNous allons maintenant \u00e9tudier une structure fondamentale en programmation le \" si ...... alors.......sinon........\".\n\nL'id\u00e9e de base est la suivante :\n\n```\nsi expression:\n\tsuite_instruction1\nsinon:\n\tsuite_instruction2\n```\nSi \"expression\" est True alors \"suite_instruction1\" est ex\u00e9cut\u00e9 et \"suite_instruction2\" est ignor\u00e9.\n\nSinon (sous-entendu que \"expression\" est False) \"suite_instruction2\" est ex\u00e9cut\u00e9 et \"suite_instruction1\" est ignor\u00e9.\n\nNotez l'indentation \"suite_instruction1\" et de \"suite_instruction2\"\n\nSi on consid\u00e8re le programme suivant :\n\n```python\na = 4\nb = 7\nif a < b:\n\tprint(\"Je suis toto.\");\n\tprint(\"Je n'aime pas titi.\")\nelse:\n\tprint(\"Je suis titi.\")\n\tprint(\"Je n'aime pas toto.\")\nprint(\"En revanche, j'aime le Python.\")\n```\nnous avons *a < b* qui est True, nous allons donc ex\u00e9cuter les  2 lignes \n\n```python\nprint(\"Je suis toto.\");\nprint(\"Je n'aime pas titi.\")\n```\nles lignes \n\n```python\nprint(\"Je suis titi.\")\nprint(\"Je n'aime pas toto.\")\n```\nseront ignor\u00e9es.\n\nEn revanche la ligne \n```python\nprint(\"En revanche, j'aime le Python.\")\n```\nsera syst\u00e9matiquement ex\u00e9cut\u00e9e.\n\nL'ex\u00e9cution de ce programme permettra d'afficher \u00e0 l'\u00e9cran :\n\n```\nJe suis toto.\nJe n'aime pas titi.\nEn revanche, j'aime le Python.\n```\n\nSi maintenant on consid\u00e8re ce programme :\n\n```python\na = 8\nb = 7\nif a < b:\n\tprint(\"Je suis toto.\");\n\tprint(\"Je n'aime pas titi.\")\nelse:\n\tprint(\"Je suis titi.\")\n\tprint(\"Je n'aime pas toto.\")\nprint(\"En revanche, j'aime le Python.\")\n```\nL'ex\u00e9cution de ce programme entra\u00eenera l'affichage suivant  :\n```\nJe suis titi.\nJe n'aime pas toto.\nEn revanche, j'aime le Python.\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a2d2e88-1e80-40dc-a66c-d59a7e7605df": {"__data__": {"id_": "0a2d2e88-1e80-40dc-a66c-d59a7e7605df", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "72a0b795-1e99-44e2-af08-58f806b496a3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "c2f919b64c21490d792fca8a49b99f201be44fe0215f347779f180d62a6f1b8a", "class_name": "RelatedNodeInfo"}}, "text": "10) la boucle *while*\n\nLa notion de boucle est fondamentale en informatique. Une boucle permet d'ex\u00e9cuter plusieurs fois des instructions qui ne sont pr\u00e9sentes qu'une seule fois dans le code.\n\nLa structure de la boucle while est la suivante :\n\n```\nwhile expression:\n\tinstruction1\n\tinstruction2\nsuite programme\n```\nTant que *expression* sera True, on ex\u00e9cutera encore et encore *instruction1* et *instruction2*. Apr\u00e8s chaque ex\u00e9cution de *instruction1* et *instruction2* (on dit souvent \"apr\u00e8s chaque tour de boucle\"), *expression* sera de nouveau \u00e9valu\u00e9e (pour savoir si elle est toujours *True* ou si elle est devenue *False*)\n\nQuand *expression* deviendra *False* on passera directement \u00e0 *suite programme* (sans entrer de nouveau dans la boucle),  la  boucle sera termin\u00e9e.\n\nQue se passe-t-il si *expression* ne devient jamais *False*  ?  On entre alors dans  une boucle \"infinie\" : c'est une erreur classique en programmation (aucun programme \"bien fait\" ne tombe dans une boucle infinie, s'il y a une boucle infinie, c'est qu'il y a forcement une erreur dans votre programme).\n\nConsid\u00e9rons le programme suivant :\n\n```python\ni = 0\nwhile i < 3  :\n\tprint(i)\n\ti = i + 1\nprint(\"FIN\")\n```\nVoici comment analyser ce programme :\n\nAu d\u00e9but de l'ex\u00e9cution de ce programme nous avons la variable i qui a pour valeur 0. \n\nNous arrivons ensuite au niveau du while :  l'expression i < 3  est True, on \"entre\" donc dans la boucle : on  affiche la valeur de i : 0 et on incr\u00e9mente  i de 1 (i a maintenant pour valeur 1)\n\nNous passons au  2e tour de boucle : l'expression i < 3  est True, on \"entre\" donc dans la boucle : on affiche la valeur de i : 1 et on incr\u00e9mente  i de 1 (i a maintenant pour valeur 2).\n\nNous passons au  3e tour de boucle : l'expression i < 3  est True, on \"entre\" donc dans la boucle : on affiche la valeur de i :  2 et on incr\u00e9mente  i de 1 (i a maintenant pour valeur 3).\n\nNous passons au  4e tour de boucle : l'expression i < 3  est False (3 n'est pas strictement inf\u00e9rieur \u00e0 3), on n'entre pas dans la  boucle et on passe \u00e0 l'instruction qui suit imm\u00e9diatement la boucle : on ex\u00e9cute *print(\"FIN\")* et le programme s'arr\u00eate (il n'y a plus d'instruction apr\u00e8s)\n\nApr\u00e8s l'ex\u00e9cution de ce programme, nous aurons \u00e0 l'\u00e9cran :\n\n```\n0\n1\n2\nFIN\n```\n\nIl est tr\u00e8s important que vous soyez capable d'effectuer l'analyse d'un programme comme nous venons de la faire ci-dessus, cela vous permettra d'\u00e9viter beaucoup d'erreurs", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2428, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e805bcb-748f-448a-a244-31602d344733": {"__data__": {"id_": "9e805bcb-748f-448a-a244-31602d344733", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22f6eab6-d6e0-4310-bea0-65194528b7ea", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "41eb537e768e60a99d71d6e1b6f665b2a7d9e9ef8c492a77e8d57c9d6a396cae", "class_name": "RelatedNodeInfo"}}, "text": "11) commentaires et documentation", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 35, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10a0f740-2b88-4030-b3d3-e9bb51848ead": {"__data__": {"id_": "10a0f740-2b88-4030-b3d3-e9bb51848ead", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9065bad5-29a9-4329-b2e9-09937893068f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "cf59792b6ab34fb29bc7ddae119f79ed3584294de757589a082dc50af00adb88", "class_name": "RelatedNodeInfo"}}, "text": "a) Les commentaires\n\nAfin de rendre votre programme plus clair, il est n\u00e9cessaire, d\u00e8s que votre code d\u00e9passe une dizaine de lignes, d'introduire des commentaires. Bien s\u00fbr, cela peut permettre \u00e0 une personne qui n'a pas \u00e9crit le programme de comprendre ce que vous avez voulu faire, mais cela peut aussi vous permettre, quelques mois apr\u00e8s avoir termin\u00e9 d'\u00e9crire votre code, de vous \"rafra\u00eechir la m\u00e9moire\".\n\nEn Python, toute ligne commen\u00e7ant par le caract\u00e8re di\u00e8se (#) sera consid\u00e9r\u00e9e comme un commentaire par le syst\u00e8me interpr\u00e9teur/compilateur.\n\nVoici un exemple de programme comment\u00e9 :\n\n```python\ndef multiplication(a,b):\n\tres = 0\n\t# on boucle a fois\n\twhile a>0:\n\t\t#on ajoute b \u00e0 res\n\t\tres = res + b\n\t\t#on d\u00e9cr\u00e9mente a\n\t\ta = a - 1\n\treturn res\n# La variable x est \u00e9gale \u00e0 la valeur renvoy\u00e9e par la fonction multiplication pour a = 5 et b = 3\nx = multiplication(5,3)\n# on affiche la valeur de x\nprint(x)\n```\n\nAttention, dans l'exemple ci-dessus j'ai volontairement alourdi le programme avec des commentaires inutiles vu la simplicit\u00e9 de ce dernier.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1053, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7aba2d9-74cc-4992-880c-76d9b29914c8": {"__data__": {"id_": "f7aba2d9-74cc-4992-880c-76d9b29914c8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "afa7a914-4925-4c03-8c66-2de6760e2af8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}, "hash": "9dc42f8aa4cc9ad77cfa336544ce45315fe38e8828228052a267ba97920230e7", "class_name": "RelatedNodeInfo"}}, "text": "b) La documentation d'une fonction\n\nToujours dans l'id\u00e9e de rendre vos programmes plus clairs, il est important de proposer une documentation pour vos fonctions.\nCette documentation doit donner des informations sur le comportement de votre fonction, plus pr\u00e9cis\u00e9ment, votre documentation doit :\n\n- d\u00e9crire votre fonction\n- donner le type des param\u00e8tres de votre fonction\n- donner le type de la valeur renvoy\u00e9e par votre fonction\n\n\nLa documentation doit se trouver au tout d\u00e9but de votre fonction, elle commence par 3 guillemets \"\"\" et se termine aussi par 3 guillemets. Il est possible d'utiliser plusieurs lignes. Voici un exemple avec la fonction multiplication :\n\n```python\ndef multiplication(a,b):\n\t\"\"\"Cette fonction multiplie 2 nombres a et b sans utiliser l'op\u00e9rateur *\n\t- les param\u00e8tres sont a et b, tous les 2 de type number (int ou float)\n\t- la valeur renvoy\u00e9e par la fonction est aussi de type number (int ou float)\n\t\"\"\"\n\tres = 0\n\twhile a>0:\n\t\tres = res + b\n\t\ta = a - 1\n\treturn res\n```\nOn utilise le terme de docstring pour d\u00e9signer cette fa\u00e7on de rediger la documentation d'une fonction (on r\u00e9dige la documentation sous forme de docstring).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1153, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "546e50f1-f501-46f9-b04d-ccc37a4a5737": {"__data__": {"id_": "546e50f1-f501-46f9-b04d-ccc37a4a5737", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22522b76-d98c-4773-a1eb-7a156425205d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e8f6d0503c4304d609c03f3a6b049e162f476739ee83955070c3c66deb620184", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe054fc1-811c-4985-a401-55341b429453": {"__data__": {"id_": "fe054fc1-811c-4985-a401-55341b429453", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d2d3d38-d0aa-456d-977a-4beae4accc89", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "779e6bcc9480f4d1bc68280d23ffb2a996478bd9888b992128ecc6b1dc7842eb", "class_name": "RelatedNodeInfo"}}, "text": "Notion de variable\n\n- on associe une valeur pr\u00e9sente en m\u00e9moire \u00e0 un nom. C\u2019est cette association \u201cvaleur - nom\u201d que l\u2019on appelle variable.\n\n- Plusieurs types de valeurs peuvent \u00eatre associ\u00e9 \u00e0 un nom : les entiers (int), les\nnombres \u00e0 virgule (float), les cha\u00eenes de caract\u00e8res (string), les bool\u00e9ens (bool)...", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 312, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68d66666-b425-456a-931b-f40cd455b533": {"__data__": {"id_": "68d66666-b425-456a-931b-f40cd455b533", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e594ec53-46cd-4ff0-bb91-0a353f13a486", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c7595e02dd084ae0ee912f1711791952de00f727150ea61fb214a92e56102505", "class_name": "RelatedNodeInfo"}}, "text": "Op\u00e9rations arithm\u00e9tiques\n\nIl est possible d\u2019effectuer des op\u00e9rations arithm\u00e9tiques : + addition ; - soustraction ; *\nmultiplication ; % modulo (reste de la division euclidienne)... Ces op\u00e9rations peuvent \u00eatre\ndirectement effectu\u00e9es sur des valeurs (int ou float) ou sur des variables.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59e04764-b497-4ad2-89e1-536dc238cf64": {"__data__": {"id_": "59e04764-b497-4ad2-89e1-536dc238cf64", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "25a333f8-7174-4558-bb27-058574218f55", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f215198252713136a48b0774f340fb7e084d2a2bb90f7da1d0b96ea32526e07c", "class_name": "RelatedNodeInfo"}}, "text": "Concat\u00e9nation des cha\u00eenes de caract\u00e8res\n\nLe signe + est aussi utilis\u00e9 pour effectuer une concat\u00e9nation (mettre bout \u00e0 bout au moins\ndeux cha\u00eenes de caract\u00e8res)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "202c4cb6-36c3-4363-b2c3-7acf736089a5": {"__data__": {"id_": "202c4cb6-36c3-4363-b2c3-7acf736089a5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d9f8552-66c4-4b39-80cd-291dcab917f9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "34f67864d0415323fd9db6f5cfb65b126339a228cac8423b04e391688533a3cc", "class_name": "RelatedNodeInfo"}}, "text": "Les fonctions\n\nLes fonctions permettent de d\u00e9composer un programme complexe en une s\u00e9rie de\nsous-programmes plus simples. Les fonctions sont r\u00e9utilisables et \u00e9vitent de se \u201cr\u00e9p\u00e9ter\u201d dans un programme", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 201, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b88d3da-2305-4893-98a9-d600e3292417": {"__data__": {"id_": "7b88d3da-2305-4893-98a9-d600e3292417", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "768c92cc-7fc5-4e46-b624-84a7ebadc488", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "613e7f877d080665fcb8409e7f26bbff365398e85db33e8d1bd7c725732ea65e", "class_name": "RelatedNodeInfo"}}, "text": "Les conditions\n\n```\nif expression :\n\tsuite_instruction1\nelse :\n\tsuite_instruction2\n```\n\nSi \"expression\" est True alors \"suite_instruction1\" est ex\u00e9cut\u00e9 et\"suite_instruction2\" est\nignor\u00e9. Sinon (sous-entendu que \"expression\" est False) \"suite_instruction2\" est ex\u00e9cut\u00e9 et\n\"suite_instruction1\" est ignor\u00e9.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 305, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12d1b19d-2795-4093-92d0-fffdfb798fd3": {"__data__": {"id_": "12d1b19d-2795-4093-92d0-fffdfb798fd3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91a3b2a3-72d7-4d37-abb7-d673e4f51c7e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cb02cd90e7099d5b35467d51228398598a012cece2374ff44b0294abed011d8d", "class_name": "RelatedNodeInfo"}}, "text": "La boucle while\n\nUne boucle permet d'ex\u00e9cuter plusieurs fois des instructions qui ne sont pr\u00e9sentes qu'une\nseule fois dans le code.\n\nLa structure de la boucle while est la suivante :\n\n```\nwhile expression:\n\tinstruction1\n\tinstruction2\nsuite programme\n```\n\nTant que l'expression s'\u00e9value \u00e0 \"True\", les instructions \u00e0 l'int\u00e9rieur du bloc (partie indent\u00e9e) seront ex\u00e9cut\u00e9es.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "763d4f26-dfe8-4b2e-9c1a-6404f74e28d8": {"__data__": {"id_": "763d4f26-dfe8-4b2e-9c1a-6404f74e28d8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8dea4496-94c2-4e32-b95e-3abc969490d8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8002d56a7cee2964b704515afb31b7051f2a613dfb1893b7100503fe72fb2530", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- savoir cr\u00e9er et utiliser des variables\n\n- savoir effectuer des op\u00e9rations arithm\u00e9tiques\n\n- savoir effectuer une concat\u00e9nation\n\n- savoir \u00e9crire et utiliser des fonctions avec et sans param\u00e8tre ; avec et sans valeur de\nretour (mot cl\u00e9 \u201creturn\u201d)\n\n- savoir \u00e9crire et lire une condition (if / else)\n\n- savoir \u00e9crire et lire une boucle while", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98e4e4a9-bcc0-4584-8b46-e52301729334": {"__data__": {"id_": "98e4e4a9-bcc0-4584-8b46-e52301729334", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20a.md", "file_name": "termc20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39283707-3e95-452a-b70f-6b8368c9887b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20a.md", "file_name": "termc20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ca18104260d373078ed2ee893c8868c9d03b91be9acd2417e40dfc0235e7c0ea", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 20.1\n\nExpliquez en quelques lignes le principe du protocole du bit altern\u00e9", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e937eeb-3e5a-42ca-b361-81ea6a93d439": {"__data__": {"id_": "7e937eeb-3e5a-42ca-b361-81ea6a93d439", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20a.md", "file_name": "termc20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "84ab5dcc-55a0-4567-8856-4db3502c7934", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20a.md", "file_name": "termc20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c1985075ed6d93762f697716078db16a6da04bcda3a7e6e7ee4eb9f3e9cabdcb", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 20.2\n\nD\u00e9terminer une ou plusieurs situations o\u00f9 le protocole du bit altern\u00e9 est inefficace.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41065fba-680f-45bb-88a7-b59226e3dbf3": {"__data__": {"id_": "41065fba-680f-45bb-88a7-b59226e3dbf3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "713d2924-999e-42f5-af8b-a4f03f2d2262", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "3120a3936ef5c706187af75951e8fc782d7af15106adbfc4694c0c81c1734a6c", "class_name": "RelatedNodeInfo"}}, "text": "1) Principe\n\nNous avons vu que le protocole TCP propose un m\u00e9canisme d'accus\u00e9 de r\u00e9ception afin de s'assurer qu'un paquet est bien arriv\u00e9 \u00e0 destination. On parle plus g\u00e9n\u00e9ralement de processus d'acquittement. Ces processus d'acquittement permettent de d\u00e9tecter les pertes de paquets au sein d'un r\u00e9seau, l'id\u00e9e \u00e9tant qu'en cas de perte, l'\u00e9metteur du paquet renvoie le paquet perdu au destinataire. Nous allons ici \u00e9tudier un protocole simple de r\u00e9cup\u00e9ration de perte de paquet : le protocole de bit altern\u00e9.\n\nLe protocole de bit altern\u00e9 est impl\u00e9ment\u00e9 au niveau de la couche de \"liaison de donn\u00e9es\" du mod\u00e8le OSI (couche n\u00b02), il ne concerne donc pas les paquets, mais les trames (on parle de paquets uniquement \u00e0 partir de la couche \"R\u00e9seau\" (couche 3) du mod\u00e8le OSI). Le principe de ce protocole est simple, consid\u00e9rons 2 ordinateurs en r\u00e9seau : un ordinateur A qui sera l'\u00e9metteur des trames et un ordinateur B qui sera le destinataire des trames. Au moment d'\u00e9mettre une trame, A va ajouter \u00e0 cette trame un bit (1 ou 0) appel\u00e9 drapeau (flag en anglais). B va envoyer un accus\u00e9 de r\u00e9ception (acknowledge en anglais souvent not\u00e9 ACK) \u00e0 destination de A d\u00e8s qu'il a re\u00e7u une trame en provenance de A. \u00c0 cet accus\u00e9 de r\u00e9ception on associe aussi un bit drapeau (1 ou 0).\n\nLa r\u00e8gle est relativement simple : la premi\u00e8re trame envoy\u00e9e par A aura pour drapeau 0, d\u00e8s cette trame re\u00e7ue par B, ce dernier va envoyer un accus\u00e9 de r\u00e9ception avec le drapeau 1 (ce 1 signifie \"la prochaine trame que A va m'envoyer devra avoir son drapeau \u00e0 1\"). D\u00e8s que A re\u00e7oit l'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1, il envoie la 2e trame avec un drapeau \u00e0 1, et ainsi de suite...\n\n!\n\nLe syst\u00e8me de drapeau est compl\u00e9t\u00e9 avec un syst\u00e8me d'horloge c\u00f4t\u00e9 \u00e9metteur. Un \"chronom\u00e8tre\" est d\u00e9clench\u00e9 \u00e0 chaque envoi de trame, si au bout d'un certain temps, l'\u00e9metteur n'a pas re\u00e7u un acquittement correct (avec le bon drapeau), la trame pr\u00e9c\u00e9demment envoy\u00e9e par l'\u00e9metteur est consid\u00e9r\u00e9e comme perdue et est de nouveau envoy\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2001, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0f80b2d-2d33-46e5-8e4f-017f7f7b5b33": {"__data__": {"id_": "d0f80b2d-2d33-46e5-8e4f-017f7f7b5b33", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92bdccb3-680b-461b-a1bb-abe428617e3b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b3ec15bf8098086a58526731cc01f2838ec8cb3c0dbb7f96ea0b871a0b305077", "class_name": "RelatedNodeInfo"}}, "text": "2) perte de donn\u00e9es", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 21, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d86e03fc-3d91-4e91-8064-6e258540d902": {"__data__": {"id_": "d86e03fc-3d91-4e91-8064-6e258540d902", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f1f468b2-1587-4481-be65-889a76897f59", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "01f25ae8357077cdc79ec4d595e78fffb757690136471048398eee06519cae50", "class_name": "RelatedNodeInfo"}}, "text": "a) perte de la trame\n\n!\n\nAu bout d'un certain temps (\"TIME OUT\") A n'a pas re\u00e7u d'accus\u00e9 de r\u00e9ception, la trame est consid\u00e9r\u00e9e comme perdue, elle est donc renvoy\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "422f3bf7-b76a-4f38-8ba8-ba7a3dd6a58f": {"__data__": {"id_": "422f3bf7-b76a-4f38-8ba8-ba7a3dd6a58f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed14587e-e7ee-4888-bf9d-8b14f38ff1dc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ccc33c4da78ffc9a996eeff92e6577aa98e9f4f250323d784f65e2b092ef6408", "class_name": "RelatedNodeInfo"}}, "text": "b) perte de l'accus\u00e9 de r\u00e9ception\n\n!\n\nA ne re\u00e7oit pas d'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1, il renvoie donc la trame 1 avec le drapeau 0. B re\u00e7oit donc cette trame avec un drapeau \u00e0 0 alors qu'il attend une trame avec un drapeau \u00e0 1 (puisqu'il a envoy\u00e9 un accus\u00e9 de r\u00e9ception avec un drapeau 1), il \"en d\u00e9duit\" que l'accus\u00e9 de r\u00e9ception pr\u00e9c\u00e9dent n'est pas arriv\u00e9 \u00e0 destination : il ne tient pas compte de la trame re\u00e7ue et renvoie l'accus\u00e9 de r\u00e9ception avec le drapeau \u00e0 1. Ensuite, le processus peut se poursuivre normalement.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c642af3-412c-4fa1-9968-3b2f8e3393fa": {"__data__": {"id_": "3c642af3-412c-4fa1-9968-3b2f8e3393fa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9d26179-24b7-4b67-9169-0d73b5ef1c67", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "cb610b255bc1a3d0e52a555a58fc3db16c35fc5a67075fc643e9544d87b15880", "class_name": "RelatedNodeInfo"}}, "text": "3) un protocole obsol\u00e8te\n\nDans certaines situations, le protocole de bit altern\u00e9 ne permet pas de r\u00e9cup\u00e9rer les trames perdues, c'est pour cela que ce protocole est aujourd'hui remplac\u00e9 par des protocoles plus efficaces, mais aussi plus complexes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 249, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09df3911-34ee-4369-bcbf-8ad33206650b": {"__data__": {"id_": "09df3911-34ee-4369-bcbf-8ad33206650b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20r.md", "file_name": "termc20r.md", "file_size": 296, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4174063-abe6-463d-baf8-937c6a6141da", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20r.md", "file_name": "termc20r.md", "file_size": 296, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2a91eed93e95beb6bbb8f8bae72c5e4eaa9b49795185c88c3a7291a2ddef04ff", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nLe protocole du bit altern\u00e9 permet de s\u2019assurer qu\u2019une trame r\u00e9seau (donn\u00e9es) est bien arriv\u00e9e \u00e0 son destinataire (syst\u00e8me d\u2019accus\u00e9 de r\u00e9ception). Ce protocole est impl\u00e9ment\u00e9 au niveau de la couche de \"liaison de donn\u00e9es\" du mod\u00e8le OSI (couche n\u00b02).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d944723-3f1e-465a-bbfc-fc5e21299c7b": {"__data__": {"id_": "3d944723-3f1e-465a-bbfc-fc5e21299c7b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d246bc0-ade2-4b7b-ada9-abc71bdde9f2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ba59eeb2f3b943bd93176dd84caafddf093953308783e43ca19b8859945a4cf7", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 21.1\n\nFaites un r\u00e9sum\u00e9 de cette vid\u00e9o :\n\nhttps://www.youtube.com/watch?v=dW9Wi_ksoWI", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 95, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2c6f778-f4bd-4909-8e4b-d07d9a7c7332": {"__data__": {"id_": "a2c6f778-f4bd-4909-8e4b-d07d9a7c7332", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2308a07-edf7-497d-96b9-1c6fee198ac9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "191b8d81d933823deb4fa51d5932f6e1da3605535242876e93dc74a7f9b85a8b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 21.2\n\n1) Faites une courte biographie de Tim Berners-Lee\n\n2) Faites une courte biographie Robert Cailliau", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 116, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a01539c0-ebd4-445a-ba31-ca55719fd547": {"__data__": {"id_": "a01539c0-ebd4-445a-ba31-ca55719fd547", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88c53b02-3b70-4acf-8b16-5795f4df971d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4cc5bcb65a3ad8b84dd62f91d5967d4b679f65e6a823dcd293a032fc97ee3940", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 21.3\n\nSur quelles bases techniques repose le Web ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33202e46-1f0c-4989-858e-840cd26c8ea8": {"__data__": {"id_": "33202e46-1f0c-4989-858e-840cd26c8ea8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f32918a4-17ed-438b-8c99-d3db6bafb4c9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7c5ac7bfa53b7dba5c6bc0f6ebf0811bff8a2dddccbc355b794ac49424f6ca49", "class_name": "RelatedNodeInfo"}}, "text": "1) historique\n\nLe \"World Wide Web\", plus commun\u00e9ment appel\u00e9 \"Web\" a \u00e9t\u00e9 d\u00e9velopp\u00e9 au CERN (Conseil Europ\u00e9en pour la Recherche Nucl\u00e9aire) par le Britannique Sir Timothy John Berners-Lee et le Belge Robert Cailliau au d\u00e9but des ann\u00e9es 90. \u00c0 cette \u00e9poque les principaux centres de recherche mondiaux \u00e9taient d\u00e9j\u00e0 connect\u00e9s les uns aux autres, mais pour faciliter les \u00e9changes d'information Tim Berners-Lee met au point le syst\u00e8me hypertexte. Le syst\u00e8me hypertexte permet, \u00e0 partir d'un document, de consulter d'autres documents en cliquant sur des mots cl\u00e9s. Ces mots \"cliquables\" sont appel\u00e9s hyperliens et sont souvent soulign\u00e9s et en bleu. Ces hyperliens sont plut\u00f4t connus aujourd'hui sous le simple terme de \"liens\".\n\n!\n\nCette premi\u00e8re page web est toujours consultable \u00e0 l'adresse suivante : http://info.cern.ch/hypertext/WWW/TheProject.html\n\nTim Berners-Lee d\u00e9veloppe le premier navigateur web (logiciel permettant de lire des pages contenant des hypertextes), il l'appelle simplement \"WorldWideWeb\". Il faudra attendre 1993 et l'arriv\u00e9e du navigateur web \"NCSA Mosaic\" pour que le web commence \u00e0 devenir populaire en dehors du petit monde de la recherche.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1162, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba9a635a-327d-4f39-a087-0dd3cdcbac7c": {"__data__": {"id_": "ba9a635a-327d-4f39-a087-0dd3cdcbac7c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "faf4a0da-d878-48c5-9152-10614b788aa1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "37aa03031c01a00ee331b2322dcdeee236a931dd38b17b67011d6e18509e665f", "class_name": "RelatedNodeInfo"}}, "text": "2) principes de base\n\nTechniquement le web se base sur trois choses : le protocole HTTP (HyperText Transfert Protocol), les URL (Uniform Resource Locator) et le langage de description HTML (HyperText Markup Language). Nous aurons, tr\u00e8s prochainement l'occasion de revenir sur ces trois \u00e9l\u00e9ments.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c2534fe-847d-4e08-9163-6596ca00455b": {"__data__": {"id_": "8c2534fe-847d-4e08-9163-6596ca00455b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c45ba4cb-a4b1-4030-ba76-af8803a2aa45", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "49a1ca2372bbc495c09ffc1a48789b9b98e6a9b1ea54adfc6688ab61171c339d", "class_name": "RelatedNodeInfo"}}, "text": "3) confusion Web - Internet\n\nUne chose tr\u00e8s importante \u00e0 bien avoir \u00e0 l'esprit : beaucoup de personnes confondent \"web\" et \"internet\". M\u00eame si le \"web\" \"s'appuie\" sur internet, les deux choses n'ont rien \u00e0 voir puisqu'\"internet\" est un \"r\u00e9seau de r\u00e9seaux\" s'appuyant sur le protocole IP alors que, comme nous venons de le voir, le web est la combinaison de trois technologies : HTTP, URL et HTML. D'ailleurs on trouve autre chose que le \"web\" sur internet, par exemple, les emails avec le protocole SMTP (Simple Mail Transfert Protocol) et les transferts de fichiers avec le protocole FTP (File Transfert Protocol).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 617, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1aaa806f-3efc-4f52-adee-bcbb94a1983f": {"__data__": {"id_": "1aaa806f-3efc-4f52-adee-bcbb94a1983f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21r.md", "file_name": "termc21r.md", "file_size": 645, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0e8ed61-8fe2-413d-a658-84bbaaf5f2af", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21r.md", "file_name": "termc21r.md", "file_size": 645, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a05a8002bd3f85206351e79a9b75c70d7d54ec4b0b0796b20fb84b843bc7f4ed", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- le \"World Wide Web\", plus commun\u00e9ment appel\u00e9 \"Web\" a \u00e9t\u00e9 d\u00e9velopp\u00e9 au d\u00e9but des ann\u00e9es 90\n\n- le web se base sur trois choses : le protocole HTTP (HyperText Transfert Protocol), les URL (Uniform Resource Locator) et le langage de description HTML (HyperText\nMarkup Language).\n\n- il ne faut pas confondre Internet et le Web : Internet est un \"r\u00e9seau de r\u00e9seaux\" s'appuyant sur le protocole IP alors que le web est la combinaison de trois technologies : HTTP, URL et HTML. Le Web \u201cutilise\u201d Internet (sans Internet le Web n\u2019aurait sans doute jamais vu le jour, alors qu\u2019Internet existait avant le Web)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9894d4d9-d013-4c8d-85ee-f9202e7f1342": {"__data__": {"id_": "9894d4d9-d013-4c8d-85ee-f9202e7f1342", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22a.md", "file_name": "termc22a.md", "file_size": 271, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "36dbcee3-c221-4f1f-814f-8bb862fc882a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22a.md", "file_name": "termc22a.md", "file_size": 271, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "14e483992c877dfb65b788a2f9c8ee7b4347720a71a7d4224fda70e86f5c068b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 22.1\n\nSoit la structure en arborescence suivante:\n\n!\n\n1) Donnez le chemin relatif permettant d'atteindre le fichier \"fichier5.svg\" depuis le dossier \"dossier4\".\n\n2) Donnez le chemin absolu permettant d'atteindre le fichier \"fichier6.html\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c81b557-d034-4871-a9ff-bc97d4db2eb5": {"__data__": {"id_": "4c81b557-d034-4871-a9ff-bc97d4db2eb5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5abf8ce-0ce4-4709-90ca-a2e684ef939e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "741cb3c9c1b292f8e0a7142f3fe6dca24b07ccc8a6c5eff5e3ac1d45901a8112", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nDans la barre d'adresse de votre navigateur web vous trouverez, quand vous visitez un site, des choses du genre : \"https://pixees.fr/informatiquelycee/prem/c22c.html\". Nous aurons l'occasion de reparler du \"https\" et du \"pixees.fr\" plus tard. La partie \"/informatiquelycee/prem/c22c.html\" s'appelle une URL.\n\nUne URL (Uniform Resource Locator) permet d'identifier une ressource (par exemple un fichier) sur un r\u00e9seau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 436, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c03093d1-1b7e-4db1-bde2-75d673592f31": {"__data__": {"id_": "c03093d1-1b7e-4db1-bde2-75d673592f31", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15ecb09b-1333-4c51-8133-1f123edc09fd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "e0bb73a5596d1d795f8b9a710a4ba1e304baa7c8365d679a8282ac920331d9b5", "class_name": "RelatedNodeInfo"}}, "text": "2) arborescence\n\nL'URL indique \u00ab l'endroit \u00bb o\u00f9 se trouve une ressource sur un ordinateur. Un fichier peut se trouver dans un dossier qui peut lui-m\u00eame se trouver dans un autre dossier... On parle d'une structure en arborescence, car elle ressemble \u00e0 un arbre \u00e0 l'envers :\n\n!\n\nComme vous pouvez le constater, la base de l'arbre s'appelle la racine de l'arborescence et se repr\u00e9sente par un /\n\nAutre repr\u00e9sentation un peu plus \"jolie\" :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21e4ce11-ba74-442a-8fd8-a6698e0cf877": {"__data__": {"id_": "21e4ce11-ba74-442a-8fd8-a6698e0cf877", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a94ae319-bc6b-4dc4-897d-930530dad686", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "fafb8fcc269724a99ef7bc38ea9fb0796eb0d16e1bd03efaccc19aa211d5e8b2", "class_name": "RelatedNodeInfo"}}, "text": "3) Chemin absolu et chemin relatif\n\nPour indiquer la position d'un fichier (ou d'un dossier) dans l'arborescence, il existe 2 m\u00e9thodes : indiquer un chemin absolu ou indiquer un chemin relatif. Le chemin absolu doit indiquer \u00ab le chemin \u00bb depuis la racine. Par exemple l'URL du fichier fichier3.jpg sera (voir l'arborescence ci-dessus): \n\n/dossier2/dossier3/fichier3.jpg \n\nRemarquez que nous d\u00e9marrons bien de la racine / (attention les symboles de s\u00e9paration sont aussi des /)\n\nImaginons maintenant que le fichier fichier1.css fasse appel au fichier fichier3.jpg (comme un fichier HTML peut faire appel \u00e0 un fichier CSS). Il est possible d'indiquer le chemin non pas depuis la racine, mais depuis le dossier (dossier2) qui accueille le fichier1.css, nous parlerons alors de chemin relatif :\n\ndossier3/fichier3.jpg\n\nRemarquez l\u2019absence du / au d\u00e9but du chemin (c'est cela qui nous permettra de distinguer un chemin relatif et un chemin absolu).\n\nImaginons maintenant que nous d\u00e9sirions indiquer le chemin relatif du fichier fichier5.svg depuis l'int\u00e9rieur du dossier dossier4.\n\nComment faire ?\n\nIl faut \"remonter\" d'un \"niveau\" dans l'arborescence pour se retrouver dans le dossier dossier2 et ainsi pouvoir repartir vers la bonne \"branche\" (vers le dossier3). Pour ce faire il faut utiliser 2 points : ..\n\n../dossier3/fichier5.svg\n\nIl est tout \u00e0 fait possible de remonter de plusieurs \"crans\" : ../../ depuis le dossier dossier4 permet de \"retourner\" \u00e0 la racine.\n\nRemarque : la fa\u00e7on d'\u00e9crire les chemins (avec des slash (/) comme s\u00e9parateurs) est propre aux syst\u00e8mes dits \u00ab UNIX \u00bb, par exemple GNU/Linux ou encore Mac OS. Sous Windows, ce n'est pas le slash qui est utilis\u00e9, mais l'antislash (\\). Pour ce qui nous concerne ici, les chemins r\u00e9seau (et donc le web), pas de probl\u00e8me, c'est le slash qui est utilis\u00e9.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1818, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "805807a5-28bc-4567-b187-e080b061d8d2": {"__data__": {"id_": "805807a5-28bc-4567-b187-e080b061d8d2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22r.md", "file_name": "termc22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e7774e0-582e-405f-b86e-9981789a2c11", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22r.md", "file_name": "termc22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1834a80b297f52105ebd22c145131ac71d22b0376d7aabc71edeff52b3e54e08", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- une URL (Uniform Resource Locator) permet d'identifier une ressource (par exemple un fichier) sur un r\u00e9seau.\n- pour indiquer la position d'un fichier (ou d'un dossier) dans une arborescence, il existe 2 m\u00e9thodes : indiquer un chemin absolu ou indiquer un chemin relatif.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e40e46a4-d4ea-407c-9bc3-03604d23bfa7": {"__data__": {"id_": "e40e46a4-d4ea-407c-9bc3-03604d23bfa7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22r.md", "file_name": "termc22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "926de581-fde0-49c1-aa9f-b7b2767cb2e3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22r.md", "file_name": "termc22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e2ffe7727b281fdf58140eb6683f2c080c8f1712bc72cc63177912934fab3e0c", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n\u00catre capable de donner le chemin permettant d\u2019atteindre un fichier (chemin absolu et chemin relatif) pour une arborescence donn\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 160, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0cb2a19-5787-450a-8420-5e53b5cde6c2": {"__data__": {"id_": "c0cb2a19-5787-450a-8420-5e53b5cde6c2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23a.md", "file_name": "termc23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "abbdd940-ab74-40f9-8c0b-d2b6abd5a0dd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23a.md", "file_name": "termc23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "78a7964c0233dff3ea7502ee477a66d50dcab0d42b2517d64a8bbbaddd5ada23", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 23.1\n\n- cr\u00e9ez un r\u00e9pertoire nomm\u00e9 *site_web*  dans votre r\u00e9pertoire de travail\n \n- cr\u00e9ez un fichier *index.html* dans le r\u00e9pertoire *site_web*\n\n- cr\u00e9ez un fichier *style.css* dans le r\u00e9pertoire *site_web*\n\n- cr\u00e9ez  un r\u00e9pertoire *image* dans le r\u00e9pertoire *site_web*\n\n- copiez-collez l'image que vous t\u00e9l\u00e9chargerez ici dans le r\u00e9pertoire *image* que vous venez de cr\u00e9ez\n\n- copiez-collez le code HTML suivant dans le fichier *index.html*\n\n```html\n\n\n\n\n    \n    \n    Informatique lyc\u00e9e\n\n\n\n    \n        \n            SNT\n            NSI PREMI\u00c8RE\n            NSI TERMINALE\n        \n    \n    \n        INFORMATIQUE LYC\u00c9E\n        \n        SNT - NSI\n    \n\n\n\n```\n\n- copiez-collez le code CSS suivant dans le fichier *style.css*\n\n```css\n@font-face {\n    font-family: \"cormorant\";\n    src: url(\"url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond&display=swap');\");\n}\n* {\n    margin: 0;\n    padding: 0;\n    font-family: Helvetica, Georgia, sans-serif;\n}\n\n/*************************************header****************************************/\nheader {\n    background-color: rgb(42, 42, 42, 0.4);\n    position: fixed;\n    width: 100%;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n\nheader h2 {\n    color: white;\n    margin-right: 40px;\n}\n\n\nheader nav {\n    margin-left: 40px;\n    width: 30%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\nheader nav a {\n    list-style: none;\n    text-decoration: none;\n    color: white;\n\n}\n\n/*************************************content****************************************/\n\n.content {\n    height: 100vh;\n    background: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url(\"image/bg.jpg\") center;\n}\n\n.content h1 {\n    color: white;\n    text-align: center;\n    padding-top: 250px;\n    margin-bottom: 90px;\n    letter-spacing: 1.4rem;\n    font-size: 6rem;\n    font-family: 'cormorant';\n    font-weight: 100;\n}\n\n.content h2 {\n    color: white;\n    text-align: center;\n    letter-spacing: 2rem;\n    font-size: 4rem;\n    font-family: 'cormorant';\n    margin-top: 100px;\n    font-weight: 100;\n}\n\n.content hr {\n    margin: 0 auto;\n    width: 20%;\n}\n```\n\nCliquez sur le fichier *index.html* afin de pouvoir visualiser le r\u00e9sultat dans votre navigateur Web\n\nIl n'est pas question de comprendre l'ensemble du code ci-dessus, mais vous pouvez apporter des modifications \u00e0 ce code (HTML et/ou CSS) afin de visualiser les effets de ces modifications. Vous pouvez aussi carr\u00e9ment supprimer le fichier CSS et visualiser les effets de cette suppression.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2583, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e21d47f-4f14-4531-baa8-85f926975338": {"__data__": {"id_": "9e21d47f-4f14-4531-baa8-85f926975338", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23a.md", "file_name": "termc23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33468806-538e-4a1c-aff3-bc0f1219c15c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23a.md", "file_name": "termc23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6667afe53a4b2062ee4e1aaff7d270ba8321188421034848af9d59b072699abd", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 23.2\n\n\u00c9laborez une page HTML en utilisant les balises obligatoirement les balises suivantes :\n\n- h1\n- h2\n- p\n- img\n- a\n- form\n- label\n- input\n- button\n\nIl faudra styliser votre page avec du CSS", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f8f91a2a-5897-496d-ae71-a5e48da520bb": {"__data__": {"id_": "f8f91a2a-5897-496d-ae71-a5e48da520bb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6085e6d9-6a45-4ec3-9e83-b3d8dc8d0bf3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "fbc1d6c1ab6139d08625bad8d494e90548bf974b6e69d5cb96fd6779a2667b51", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous allons nous int\u00e9resser \u00e0 un acteur fondamental du d\u00e9veloppement web, le couple HTML+CSS (Hyper Text Markup Langage et Cascading Style Sheets).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec89af8c-9858-4540-a47e-f8fdfe605569": {"__data__": {"id_": "ec89af8c-9858-4540-a47e-f8fdfe605569", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e19ac5aa-eaa0-477b-acd2-afade241a075", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "bf3473542c4a1032020e428c90916bc808fd32686ef7c2948055d59696cc2fc0", "class_name": "RelatedNodeInfo"}}, "text": "2) le HTML\n\nL\u2019Hypertext Markup Language, g\u00e9n\u00e9ralement abr\u00e9g\u00e9 HTML, est le format de donn\u00e9es con\u00e7u pour repr\u00e9senter les pages web. C\u2019est un langage de balisage permettant d\u2019\u00e9crire de l\u2019hypertexte, d\u2019o\u00f9 son nom. HTML permet \u00e9galement de structurer s\u00e9mantiquement et de mettre en forme le contenu des pages, d\u2019inclure des ressources multim\u00e9dias, dont des images, des formulaires de saisie, et des programmes informatiques. Il permet de cr\u00e9er des documents interop\u00e9rables avec des \u00e9quipements tr\u00e8s vari\u00e9s de mani\u00e8re conforme aux exigences de l\u2019accessibilit\u00e9 du web. Il est souvent utilis\u00e9 conjointement avec des langages de programmation (JavaScript) et des formats de pr\u00e9sentation (feuilles de style en cascade).\n\nPour l'instant, nous allons retenir deux \u00e9l\u00e9ments de cette d\u00e9finition \u00abcon\u00e7u pour repr\u00e9senter les pages web\u00bb et \u00abun langage de balisage\u00bb.\n\nGr\u00e2ce au HTML vous allez pouvoir, dans votre navigateur (Firefox, Chrome, Opera,....), afficher du texte, afficher des images, proposer des hyperliens (liens vers d'autres pages web), afficher des formulaires et m\u00eame maintenant afficher des vid\u00e9os (gr\u00e2ce \u00e0 la derni\u00e8re version du HTML, l'HTML5).\n\nHTML n'est pas un langage de programmation (comme le Python par exemple), ici, pas question de conditions, de boucles....c'est un langage de description.\n\nVoici un exemple de code HTML :\n\n```html\nHello World! Ceci est un titre\nCeci est un paragraphe. Avez-vous bien compris ?\n```\n\nComme d\u00e9j\u00e0 \u00e9voqu\u00e9 ci-dessus, en HTML tout est une histoire de balise que l'on ouvre et que l'on ferme. Une balise ouvrante est de la forme ``````, les balises fermantes sont de la forme ``````.\n\nEn observant attentivement le code, vous devriez forc\u00e9ment remarquer que toute balise ouverte doit \u00eatre referm\u00e9e \u00e0 un moment ou un autre. La balise ouvrante et la balise fermante peuvent \u00eatre sur la m\u00eame ligne ou pas, cela n'a aucune esp\u00e8ce d'importance, la seule question \u00e0 se poser ici est : ai-je bien referm\u00e9 toutes les balises que j'ai ouvertes ?\n\nEnfin pour terminer avec les g\u00e9n\u00e9ralit\u00e9s sur les balises, il est important de savoir qu'une structure du type :\n\n```\n\n\n\n\n```\n\nest interdite, la balise2 a \u00e9t\u00e9 ouverte apr\u00e8s la balise1, elle devra donc \u00eatre referm\u00e9e avant la balise1.\n\nEn revanche, l'encha\u00eenement suivant est correct :\n\n```\n\n\n\n\n```\n\nNotez que dans notre exemple nous respectons bien cette r\u00e8gle \u00ab d'imbrication \u00bb des balises avec la balise `````` et la balise ``````.\n\nIl est important de comprendre que chaque balise a une signification qu'il faut bien respecter (on parle de la s\u00e9mantique des balises). Par exemple le texte situ\u00e9 entre la balise ouvrante et fermante `````` est obligatoirement un titre important (il existe des balises ``````, ``````......qui sont aussi des titres, mais des titres moins importants (sous-titre)). La balise `````` permet de d\u00e9finir des paragraphes, enfin, la balise `````` permet de mettre en \u00e9vidence un \u00e9l\u00e9ment important.\n\nVous devez aussi savoir qu'il existe des balises qui sont \u00e0 la fois ouvrantes et fermantes (``````) : un exemple, la balise permettant de sauter une ligne, la balise `````` (balise qu'il faut d'ailleurs \u00e9viter d'utiliser par diff\u00e9rentes raisons que nous n'aborderons pas ici).\n\nIl est possible d'ajouter des \u00e9l\u00e9ments \u00e0 une balise ouvrante, on parle d'attribut. Une balise peut contenir plusieurs attributs :\n\n```\n\n```\n\nIl existe beaucoup d'attributs diff\u00e9rents, nous allons nous contenter de 2 exemples avec l'attribut id (id pour identifiant) et class. Nous verrons l\u2019int\u00e9r\u00eat de ces attributs prochainement\n\ncode HTML avec une balise `````` poss\u00e9dant un attribut id :\n\n```html\nCeci est un titre\nCeci est un sous titre\nCeci est un paragraphe. Avez-vous bien compris ?\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3674, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb45183e-784e-48d4-88e9-1869e98c78eb": {"__data__": {"id_": "cb45183e-784e-48d4-88e9-1869e98c78eb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "906ce262-f921-4ca6-9bf4-8eed3ad03609", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "6be62219db011c63fc9913f593fc6bedda398e79e2f90ffd02f158e7773488bc", "class_name": "RelatedNodeInfo"}}, "text": "3) le CSS\n\nLe HTML n'a pas \u00e9t\u00e9 con\u00e7u pour g\u00e9rer la mise en page (c'est possible, mais c'est une mauvaise pratique). Le HTML s'occupe uniquement du contenu et de la s\u00e9mantique, pour tout ce qui concerne la mise en page et l'aspect \"d\u00e9coratif\" (on parle du \u00ab style \u00bb de la page), on utilisera le CSS (Cascading Style Sheets).\n\nVoici un exemple de code CSS :\n\n```css\nh1\n{\n\ttext-align: center;\n\tbackground-color: red;\n}\nh2\n{\n\tfont-family: Verdana;\n\tfont-style: italic;\n\tcolor: green;\n}\n```\n\nDans l'exemple ci-dessus, les propri\u00e9t\u00e9s *text-align* (permet de choisir l'alignement d'un texte) et *background-color* (permet de modifier la couleur de fond) seront appliqu\u00e9es au contenu de toutes les balises de type h1 (avec respectivement les valeurs *center* et *red* : les textes contenus dans les balises *h1* seront centr\u00e9s et la couleur de fond sera rouge).\n\nLe contenu des balises *h2* sera \u00e9crit avec la police de caract\u00e8re *Verdana*, en italique et en vert.\n\nSi on d\u00e9sire cibler seulement certaines balises et pas les autres, il est possible d'utiliser les attributs *id* et *class*:\n\nvoici du code HTML :\n\n```html\nCeci est un titre\nBonjour\nVous allez bien ?\n```\n\net le code CSS correspondant :\n\n```css\n#para_1\n{\n\tfont-style: italic;\n\tcolor: green;\n}\n```\n\nIci seul le second paragraphe (*Vous allez bien ?*) sera concern\u00e9 par le CSS ci-dessus. Le premier paragraphe (*Bonjour*) et le titre *h1* ne seront pas concern\u00e9s\n\nIl est donc possible de cibler un paragraphe et pas un autre en utilisant l'id du paragraphe (en CSS l'id se traduisant par le signe #).\n\nIl est aussi possible d'utiliser l'attribut class \u00e0 la place de l'id. Dans le CSS on utilisera le point . \u00e0 la place du #.\n\nLa diff\u00e9rence entre \"id\" et \"class\" n'est pas tr\u00e8s importante.\n\nL'attribut \"class\" permet de donner le m\u00eame nom \u00e0 plusieurs reprises dans une m\u00eame page, ce qui n'est pas possible avec l'attribut *id*\n\nSi nous avions eu un 3e paragraphe, nous aurions pu avoir : ```Voici un 3e paragraphe```, mais nous n'aurions pas pu avoir : ``` Voici un 3e paragraphe ```, car le nom para_1 a d\u00e9j\u00e0 \u00e9t\u00e9 utilis\u00e9 pour le 1er paragraphe.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e842c546-8e6f-4692-a69d-0612add3817a": {"__data__": {"id_": "e842c546-8e6f-4692-a69d-0612add3817a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a335ee2c-7c1b-45f3-bc72-8aff45335927", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "2f366be9054fbd2e56a46f318e8cf45abc82de8af712a785da173f8001ccbcdd", "class_name": "RelatedNodeInfo"}}, "text": "4) quelques balises \u00e0 conna\u00eetre", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 33, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7758fa99-8b85-421e-8746-f272c88a0c52": {"__data__": {"id_": "7758fa99-8b85-421e-8746-f272c88a0c52", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "437b10b5-84a1-406d-a288-9995e157f18c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "2de27e2362da413ec0dda9df30968ebac113c23150377097e4d78e49c1945038", "class_name": "RelatedNodeInfo"}}, "text": "a) la balise *a*\n\nLa balise *a* permet de cr\u00e9er des liens hypertextes, ce sont ces liens hypertextes qui vous permettent de \"voyager\" entre les pages d'un site ou entre les sites. Les liens hypertextes sont par d\u00e9faut soulign\u00e9s et de couleur bleue (modifiable gr\u00e2ce au CSS). La balise a poss\u00e8de un attribut *href* qui a pour valeur le chemin du fichier que l'on cherche \u00e0 atteindre ou l'adresse du site cible : \n\n```html\nCliquez ici pour vous rendre sur le site pixees\n```\n\nEntre la balise ouvrante et fermante, on trouve le texte qui s'affichera \u00e0 l'\u00e9cran (c'est ce texte qui est soulign\u00e9 et de couleur bleue).La balise peut sans probl\u00e8me se trouver en plein milieu d'un paragraphe.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 685, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6738ea06-f2ed-4659-99a7-7ba2354231fb": {"__data__": {"id_": "6738ea06-f2ed-4659-99a7-7ba2354231fb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e77bbafa-2d4b-4023-87ee-dc3a2187ca4f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "609cff6b835c0f2d3b31aa263b307dea120e75c8582fe8db9b1c9248be9ef071", "class_name": "RelatedNodeInfo"}}, "text": "b) la balise *image*\n\nComme vous devez d\u00e9j\u00e0 vous en douter, la balise image sert \u00e0 ins\u00e9rer des...images :\n\n```html\n\n```\n\nla balise img est \u00e0 la fois ouvrante et fermante comme la balise br. Elle poss\u00e8de 2 attributs :\n\nsrc qui doit \u00eatre \u00e9gal au nom du fichier image (ou au chemin si le fichier image se trouve dans un autre dossier).\nalt qui doit \u00eatre \u00e9gal \u00e0 une description de votre image (cet attribut est utilis\u00e9 notamment par les syst\u00e8mes de description des pages web utilis\u00e9es par les non-voyants), il faut donc syst\u00e9matiquement renseigner cet attribut.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c59d0f8-012c-4d84-9766-bee669ab41cd": {"__data__": {"id_": "4c59d0f8-012c-4d84-9766-bee669ab41cd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f68eeb1b-307c-4d7a-883e-fa9f56e70e79", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "da16ed4456127220662095837010aa8effda187e92524694825dccf9c388213b", "class_name": "RelatedNodeInfo"}}, "text": "c) les balises form, label, input et button\n\nLes formulaires sont des \u00e9l\u00e9ments importants des sites internet, ils permettent \u00e0 l'utilisateur de transmettre des informations. Un formulaire devra \u00eatre d\u00e9limit\u00e9 par une balise form (m\u00eame si ce n'est pas une obligation) :\n\n```\n\n....\n\n```\n\nIl existe diff\u00e9rentes balises permettant de construire un formulaire, notamment la balise *input*. Cette balise poss\u00e8de un attribut type qui lui permet de jouer des r\u00f4les tr\u00e8s diff\u00e9rents.\n\nLes balises *button* et *label* nous seront aussi d'une grande utilit\u00e9  :\n\n```html\n\n\tvoici un champ de texte : \n\tCliquez ici !\n\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 607, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d04012da-3ed7-46a7-b5da-1aa5419cd291": {"__data__": {"id_": "d04012da-3ed7-46a7-b5da-1aa5419cd291", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba4c8ae0-6fdd-44fa-a780-1b6c41453d3e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "66b04fd30990615fc3bb0a37025010f93746136132ba70ec136b0d0e9044f6e7", "class_name": "RelatedNodeInfo"}}, "text": "d) les balises *div* et *span*\n\nCes 2 balises sont tr\u00e8s utilis\u00e9es (surtout la balise div). Pourtant, il faudrait, autant que possible, les \u00e9viter, pourquoi ?\n\nParce qu'elles n'ont aucune signification particuli\u00e8re, ce sont des balises dites \u201cg\u00e9n\u00e9riques\u201d.\n\n\u00c0 quoi servent-elles alors ?\n\n\u00c0 organiser la page, \u00e0 regrouper plusieurs balises dans une m\u00eame entit\u00e9 :\n\n```html\n\n\t Mon en-t\u00eate \n\tHello, comment \u00e7a va ?\n\n\n\tmon bas de page\n\tAu  revoir !\n\n```\n\nPourquoi 2 balises g\u00e9n\u00e9riques ?\n\nParce que div est une balise de type \u201cblock\u201d et que span est une balise de type \u201cinline\u201d !", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 573, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "863ecc99-1924-4bca-b121-c4ee41d83ac3": {"__data__": {"id_": "863ecc99-1924-4bca-b121-c4ee41d83ac3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0401f8c1-4ee0-4473-95ab-00f5ed4fe24d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "4eb5da339850a61d57a572b6935925503cf1770460dd44cbb00aaf19f9520f59", "class_name": "RelatedNodeInfo"}}, "text": "5) les balises de type *block* et les balises de type *inline*\n\nSans trop entrer dans les d\u00e9tails, il faut bien comprendre que l'ordre des balises dans le code HTML a une grande importance. Les balises sont affich\u00e9es les unes apr\u00e8s les autres, on parle du flux normal de la page.\n\nC'est ici qu'entrent en jeu les balises de type \"block\" et les balises de type \"inline\".\n\nLes contenus des balises de type \"block\" (p, div,h1,...) se placent sur la page web les uns en dessous des autres.\nLes contenus des balises de type \"inline\" (strong, img, span, a) se placent sur la page web les uns \u00e0 c\u00f4t\u00e9 des autres.\nCela revient \u00e0 dire qu'une balise de type \u201cblock\u201d prend toute la largeur de la page alors qu'une balise de type \u201cinline\u201d prend juste la largeur qui lui est n\u00e9cessaire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 774, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b55f3385-ad91-4506-82c4-78c7c89deeec": {"__data__": {"id_": "b55f3385-ad91-4506-82c4-78c7c89deeec", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49caf084-88c1-4f97-9469-150af80b1b20", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "877e7c9db9253c13b03cfe26ebc17efad054e0d755e0f133c35e064520dc4966", "class_name": "RelatedNodeInfo"}}, "text": "6) \u00e9crire une page HTML\n\nPour \u00e9criture une page HTML compl\u00e8te, il est n\u00e9cessaire de rajouter quelques balises :\n\n```html\n\n\n\t\n\t\t\n\t\tVoici mon site\n\t\t\n\t\n\t\n\t\t\n\t\n\n```\n\nNous n'allons pas nous attarder sur ce squelette de page HTML, mais voici ce que vous devez savoir :\n\n- la premi\u00e8re ligne (``````) permet d'indiquer au navigateur que nous utiliserons du HTML\n\n- la balise *html* est obligatoire, l'attribut lang=\"fr\" permet d'indiquer au navigateur que nous utiliserons le fran\u00e7ais pour \u00e9crire notre page.\n\n- la balise *head* d\u00e9limite ce que l'on appelle l'en-t\u00eate. L'en-t\u00eate contient, dans notre exemple, 3 balises : \n\t- la balise *meta* poss\u00e8de l'attribut *charset=\"utf-8* qui permet de d\u00e9finir l'encodage des caract\u00e8res (ici utf-8)\n\t\n\t- la balise *title* qui d\u00e9finit le titre de la page (attention ce titre ne s'affiche pas dans le navigateur, ne pas confondre avec la balise *h1*, on retrouve le contenu  de cette balise au niveau des  onglets du navigateur)\n\t\n\t- la balise *link va permettre de relier votre HTML et votre CSS. Votre CSS se trouvera dans un fichier ind\u00e9pendant (ici *style.css*), l'attribut *href* correspond au chemin (relatif ou absolu) vers ce fichier\n\n- toutes les balises qui composeront votre page (p, h1, img...) devront se trouver entre la balise *body* ouvrante et la balise *body* fermante.\n\nPour cr\u00e9er une nouvelle page, il suffira de copier-coller ce squelette de page HTML dans un nouveau fichier et de le compl\u00e9ter avec votre code HTML (entre les balises *body*)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "932ce0c2-f9cf-463b-9578-f1ec5aa6e353": {"__data__": {"id_": "932ce0c2-f9cf-463b-9578-f1ec5aa6e353", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23r.md", "file_name": "termc23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ed34c19-ca42-4875-945d-8da987396111", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23r.md", "file_name": "termc23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2e671545f5eeaf70ef75e93b9944f0bb4deeb477c92a5fdbe2bf0654bd13d339", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Le HTML (HyperText Markup Language) est un langage de balisage con\u00e7u pour repr\u00e9senter des pages web.\n\n- Dans une page HTML on trouve uniquement des balises ouvrantes (exemple ``````) et fermantes (exemple ``````) ou des balises \u00e0 la fois ouvrantes et fermantes (exemple ``````)\n\n- Les navigateurs web (Firefox, Chrome...) sont des logiciels capables d\u2019interpr\u00e9ter du HTML et d\u2019afficher la page web correspondante.\n\n- Chaque balise a une signification qu'il faut bien respecter (on parle de la s\u00e9mantique des balises).\n\n- Le HTML n'a pas \u00e9t\u00e9 con\u00e7u pour g\u00e9rer la mise en page. Le HTML s'occupe uniquement du contenu et de la s\u00e9mantique, pour tout ce qui concerne la mise en page et l'aspect \u201cd\u00e9coratif\u201d (on parle du \u201cstyle\u201d de la page), on utilisera un autre langage, le CSS (Cascading Style Sheets).\n\n- il est possible d\u2019ajouter des attributs dans les balises", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 884, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad7ad8e8-d455-4318-8d0a-eab249b09608": {"__data__": {"id_": "ad7ad8e8-d455-4318-8d0a-eab249b09608", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23r.md", "file_name": "termc23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dbb67749-2568-4831-a578-36cd163d3285", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23r.md", "file_name": "termc23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7686419dcdb488e4caaf4cbd692470a3e658d7ab2d4ffadc531e784160d829cc", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- Vous devez savoir utiliser un certain nombre de balises : la balise \u201cparagraphe\u201d `````` , les balises titre ``````, ``````,..., la balise lien ``````, la balise image ``````, la balise formulaire ``````, la balise ``````, la balise `````` et les balises g\u00e9n\u00e9riques `````` et ``````\n\n- Vous devez \u00e0 partir d\u2019un code HTML et d\u2019un code CSS (associ\u00e9 au code HTML) \u00eatre capable de \u201cdeviner\u201d l\u2019aspect d\u2019une page web (couleur d\u2019un texte, police de caract\u00e8re,\u2026)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0aa85417-9969-49ba-b670-58f307c692dc": {"__data__": {"id_": "0aa85417-9969-49ba-b670-58f307c692dc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45f6d0ce-f5fb-49c2-8aae-d206a91d7e75", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "997e271e06796466701c26aaf36e1056cf3cc11a5cd7530326bb6543b564338b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 24.1\n\n- dans votre r\u00e9pertoire de travail, cr\u00e9ez un fichier *index.html*, un fichier *style.css* et un fichier *script.js*\n\n- copiez-collez le code suivant dans le fichier *index.html* qui vient d'\u00eatre cr\u00e9\u00e9\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\tLe trio : HTML, CSS et JavaScript\n\t\tVoici une page web qui ne fait pas grand-chose\n\t\tRouge\n\t\tVert\n\t\n\t\n\n``` \n\n- copiez-collez le code suivant dans le fichier *style.css* qui vient d'\u00eatre cr\u00e9\u00e9\n\n```css\nh1{\n\ttext-align: center;\n}\n.rouge {\n\tcolor:red;\n\tfont-size:20px;\n}\n.vert {\n\tcolor:green;\n\tfont-size:30px;\n}\n``` \n\n- copiez-collez le code suivant dans le fichier *script.js* qui vient d'\u00eatre cr\u00e9\u00e9\n\n```js\nfunction foncRouge() {\n\tlet balp= document.querySelector(\"#monPara\")\n\tbalp.classList.remove(\"vert\");\n\tbalp.classList.add(\"rouge\");\n}\nfunction foncVert() {\n\tlet balp= document.querySelector(\"#monPara\")\n\tbalp.classList.remove(\"rouge\");\n\tbalp.classList.add(\"vert\");\n}\n``` \n\nApr\u00e8s avoir test\u00e9 l'exemple ci-dessus en cliquant sur fichier *index.html*, apportez les modifications n\u00e9cessaires pour que les  boutons *rouge* et *vert* permettent de modifier la couleur du  titre *h1*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29e35374-b261-458e-907d-4e083ca39dd5": {"__data__": {"id_": "29e35374-b261-458e-907d-4e083ca39dd5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b3f4b4a-5bf3-4dbc-a8a9-33664072d25c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "162067d990a158a8bf9876666d55dac536e522f8c6120f48555805665b0fd917", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 24.2\n\nCr\u00e9ez la page web suivante :\n\n!\n\nsi l'utilisateur clique sur le bouton *Changer*, le texte *COUCOU !* devient rouge, si on appuie de nouveau sur le bouton *Changer*, le bouton redevient noir (si on appuie de nouveau sur le bouton, COUCOU ! redevient rouge...)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f8c78c3f-d5f3-4392-9009-0d127b8f5ead": {"__data__": {"id_": "f8c78c3f-d5f3-4392-9009-0d127b8f5ead", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "484e7f39-bcf4-4559-84fe-e91fa8522bfc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8c759c70a4da555e2bd30bc30577857aeb23585ea57a12925966cedc619580d4", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 24.3\n\nSoit la page HTML suivante :\n\nindex.html\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\t\n\t\n\t\n\n```\n\nstyle.css\n\n```css\ndiv {\n\twidth : 200px;\n\theight : 100px;\n\tbackground-color : black;\t\n}\n```\n\nModifiez le code ci-dessus pour que le survole de la *div* avec le curseur de la souris modifie la couleur de fond de la div (*background-color*)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c990cf0-a24d-40e1-84aa-3c2b847f06aa": {"__data__": {"id_": "2c990cf0-a24d-40e1-84aa-3c2b847f06aa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74eb25db-32c0-4c96-8266-50e1bbde876c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a991425d7411d21bb3750478a3db5f21c8df643b1b0da60533ec8ee185b8429c", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous avons d\u00e9j\u00e0 pu nous familiariser avec le couple HTML-CSS, en fait, le couple est plut\u00f4t un trio, car aujourd'hui un d\u00e9veloppeur web ne peut pas faire l'impasse sur le JavaScript .\n\nNotre but ici n'est pas d'apprendre un nouveau langage de programmation, mais juste d'\u00e9tudier quelques exemples d'utilisation du JavaScript, notamment dans le cas des interactions entre un utilisateur et une page web.\n\nAvant d'entrer dans le vif du sujet, un petit rappel historique : JavaScript a \u00e9t\u00e9 cr\u00e9\u00e9 en dix jours par Brendan Eich en 1995. Malgr\u00e9 son nom, JavaScript n'a rien \u00e0 voir avec le langage Java, m\u00eame si Brendan Eich affirme s'\u00eatre inspir\u00e9 de nombreux langage, dont Java, pour mettre au point JavaScript. Apr\u00e8s des d\u00e9buts chaotiques, il est, comme d\u00e9j\u00e0 dit plus haut, devenu incontournable dans le d\u00e9veloppement web.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "78211e94-0db4-4458-9c86-a0271e064b68": {"__data__": {"id_": "78211e94-0db4-4458-9c86-a0271e064b68", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1ceb7c0-0e94-411b-b9d6-17e97bf01948", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b03c33f411a38701827d8d7d0d165763817a25a9d80d8eb22721570759b1e75c", "class_name": "RelatedNodeInfo"}}, "text": "2) int\u00e9grer le JavaScript\n\nPour \u00eatre ex\u00e9cut\u00e9, le JavaScript doit \u00eatre int\u00e9gr\u00e9 \u00e0 la page HTML. Il existe diff\u00e9rentes m\u00e9thodes pour int\u00e9grer le JavaScript, nous allons en \u00e9tudier une : le code JavaScript est \u00e9crit dans un fichier avec l'extension .js (par exemple script.js). Il faut ensuite ajouter une ligne dans le code HTML afin de lier ce dernier au fichier *script.js* :\n\n```html\n\n```\n\nl'attribut *src* de la balise *script* doit \u00eatre \u00e9gal au chemin vers le fichier qui contient le JavaScript.\n\nVoici un exemple de fichier HTML associ\u00e9 avec un fichier *script.js* :\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\t...\n\t\n\t\n\n```\n\nComme vous pouvez le constater ci-dessus la balise *script* est plac\u00e9e apr\u00e8s la balise *body* fermante (il est aussi possible de placer la balise *script* dans la partie *head*, mais ce choix peut entra\u00eener certains probl\u00e8mes si on ne prend pas certaines pr\u00e9cautions, on pr\u00e9f\u00e9rera donc placer la balise *script* apr\u00e8s le *body*).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 950, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10dccc30-363d-4d14-ab66-0b70c1e526f5": {"__data__": {"id_": "10dccc30-363d-4d14-ab66-0b70c1e526f5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d4a531ec-30e3-48ce-9941-742703002290", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "101a56f17339f841f754cccf7299235cea9bf5f5d9e15dbe46bff22fdc7131d0", "class_name": "RelatedNodeInfo"}}, "text": "3) le JavaScript pour r\u00e9pondre \u00e0 des \u00e9v\u00e9nements", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48b0e85e-7e14-4838-ae8a-b9260b223073": {"__data__": {"id_": "48b0e85e-7e14-4838-ae8a-b9260b223073", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "737d7789-acfa-4305-9be2-14fd66d75af4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "9c49bea4dc48c797c698ee97e14e7a45c0f1b90245c8a0f2a4e282d0d5075a14", "class_name": "RelatedNodeInfo"}}, "text": "a) notion d'\u00e9v\u00e9nements\n\nIl est possible d'associer des \u00e9v\u00e9nements aux diff\u00e9rentes balises HTML, ces \u00e9v\u00e9nements sont tr\u00e8s souvent des actions r\u00e9alis\u00e9es pour l'utilisateur de la page :\n\n- l'\u00e9v\u00e9nement *onclik* correspond \u00e0 un clic de souris (bouton gauche) sur un \u00e9l\u00e9ment HTML donn\u00e9\n- l'\u00e9v\u00e9nement *onmouseover* correspond au survol d'un \u00e9l\u00e9ment HTML par le curseur de la souris\n\nIl existe beaucoup d'autres \u00e9v\u00e9nements, dans le cadre de ce cours nous utiliserons uniquement les deux cit\u00e9s ci-dessus.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d73e1441-ffc6-4cc6-985e-617a90a98d23": {"__data__": {"id_": "d73e1441-ffc6-4cc6-985e-617a90a98d23", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4d00e990-65b8-42c0-ad0e-6bf4374665ad", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4f76b5b8a7c97854608ba1d105ac9014d7596e839894d4b5abf1c6b9fd390666", "class_name": "RelatedNodeInfo"}}, "text": "b) r\u00e9ponse \u00e0 un \u00e9v\u00e9nement\n\nUn clic de souris vient d'\u00eatre effectu\u00e9 sur un \u00e9l\u00e9ment HTML, que va-t-il se passer ?\n\nDans la plupart des cas rien...si le d\u00e9veloppeur n'a pas pr\u00e9vu de g\u00e9rer cet \u00e9v\u00e9nement, il ne se passera rien.\n\nComment g\u00e9rer un \u00e9v\u00e9nement ?\n\nIl suffit d'ajouter un attribut \u00e0 la balise HTML concern\u00e9e, prenons un exemple :\n\n```html \nCliquer ici\n```\n\nNous avons ici une balise *button* qui poss\u00e8de un attribut *onclick*. Cet attribut *onclick* est \u00e9gal \u00e0 *maFonction()*. *maFonction* est une fonction d\u00e9fini dans le fichier JavaScript qui est associ\u00e9 \u00e0 la page HTML (par exemple le fichier *script.js*). En cas de clic sur le bouton d\u00e9fini ci-dessus, la fonction JavaScript *maFonction* sera ex\u00e9cut\u00e9e.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 714, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2be2af5c-fa4f-4847-b9cb-cae2cbfc998c": {"__data__": {"id_": "2be2af5c-fa4f-4847-b9cb-cae2cbfc998c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69556ae6-974d-45ee-bcb7-7e2b4e8909da", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a57108440d03c5502143f3d40b2939e4d233ab5d9f8ef1d77306a257ff917cc3", "class_name": "RelatedNodeInfo"}}, "text": "c) les fonctions en JavaScript\n\nComment \u00e9crire une fonction en JavaScript ?\n\nIl suffit d'utiliser le mot cl\u00e9 *function* suivi du nom de la fonction :\n\n```js\nfunction Mafonction(){\n\t.....\n}\n```\nLes limites de la fonction sont d\u00e9finies par l'accolade ouvrante et l'accolade fermante.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a1fc3a2f-6363-49cc-8314-ac012690f7b1": {"__data__": {"id_": "a1fc3a2f-6363-49cc-8314-ac012690f7b1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "36902781-d638-4455-ac7c-72824df897b5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d258733cd1c2ccef9786b3d7529ad004f15b878b323d2bc037ab044555b073fa", "class_name": "RelatedNodeInfo"}}, "text": "4) Modifier un \u00e9l\u00e9ment HTML avec le JavaScript\n\nEn cas de clic sur le bouton d\u00e9fini ci-dessus, la fonction JavaScript *maFonction* sera ex\u00e9cut\u00e9e, mais qu'est-il possible de faire avec le JavaScript ?\n\nAujourd'hui, presque tout : il est possible de coder des applications extr\u00eamement complexes en JavaScript. Nous allons rester modestes, nous allons uniquement modifier un \u00e9l\u00e9ment HTML.\n\nPour modifier un \u00e9l\u00e9ment HTML il est tout d'abord n\u00e9cessaire de le s\u00e9lectionner : c'est le r\u00f4le des *querySelector*.\n\nConsid\u00e9rons le code HTML suivant :\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\tLe trio : HTML, CSS et JavaScript\n\t\tVoici une page web qui ne fait pas grand chose\n\t\tCliquer ici\n\t\n\t\n\n```\n\net le code JavaScript suivant (fichier *script.js*) :\n\n```js\nfunction maFonction() {\n\tlet maBalise = document.querySelector(\"#monPara\");\n}\n```\n\nLe mot cl\u00e9 *let* permet de d\u00e9finir une variable, dans l'exemple ci-dessus, la variable a pour nom *maBalise* (on aurait \u00e9videmment pu choisir un autre nom). Cette variable *maBalise* va nous permettre de manipuler l'\u00e9l\u00e9ment HTML qui a pour *id* *monPara* (c'est-\u00e0-dire la balise *p* pr\u00e9sente dans le code HTML ci-dessus).\n\nMaintenant que nous avons \"acc\u00e8s\" \u00e0 une balise HTML depuis le code JavaScript, il est possible de modifier le contenu de cette balise ou encore le style associ\u00e9 \u00e0 cette balise comme bon nous semble :\n\n```js\nfunction maFonction() {\n\tlet maBalise = document.querySelector(\"#monPara\");\n\tmaBalise.innerHTML=\"coucou\"\n}\n``` \n\ndans le cas ci-dessus nous remplacerons le texte pr\u00e9sent dans la balise *p* (\"Voici une page web qui ne fait pas grand chose\") par \"coucou\".\n\nAutre exemple :\n\n```js\nfunction maFonction() {\n\tlet maBalise = document.querySelector(\"#monPara\");\n\tmaBalise.style.color=\"red\";\n}\n``` \ndans le cas ci-dessus, le texte du paragraphe sera \u00e9crit en rouge.\n\nIl est aussi possible de modifier les classes CSS associ\u00e9es \u00e0 une balise HTML, prenons un exemple :\n\nsoit le code HTML :\n\n```html\n\n\n\t\n\t\t\n\t\tLe trio\n\t\t\n\t\n\t\n\t\tLe trio : HTML, CSS et JavaScript\n\t\tVoici une page web qui ne fait pas grand-chose\n\t\tRouge\n\t\n\t\n\n```\n\nsoit le code CSS (fichier \"style.css\") :\n\n```css\nh1{\n\ttext-align: center;\n}\n.rou {\n\tcolor: red;\n}\n```\n\nsoit le code JavaScript (fichier \"script.js\") :\n\n```js\nfunction foncRouge() {\n\tlet maBalise = document.querySelector(\"#monPara\");\n\tmaBalise.classList.add(\"rou\");\n}\n```\n\nR\u00e9sumons ce qui peut se passer avec la page HTML ci-dessus :\n\n- un utilisateur clique sur le bouton *Rouge*, comme un \u00e9v\u00e9nement *onclick* est associ\u00e9 \u00e0 ce bouton, la fonction JavaScript *foncRouge* est donc ex\u00e9cut\u00e9e\n\n- la variable *maBalise* correspond \u00e0 la balise *p* du code HTML (*let maBalise = document.querySelector(\"#monPara\");*)\n\n- on associe ensuite cette balise *p* \u00e0 la classe CSS *rouge* : le texte contenu dans la balise *p* devient donc rouge (*maBalise.classList.add(\"rou\");*)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2836, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0cdd922-62d4-4dd2-b5bb-f8782ee5821e": {"__data__": {"id_": "c0cdd922-62d4-4dd2-b5bb-f8782ee5821e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24r.md", "file_name": "termc24r.md", "file_size": 681, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2573abb7-634c-4f32-819b-5c15d4e96b5a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24r.md", "file_name": "termc24r.md", "file_size": 681, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "53be620bfa5daef421b13b45c8a0965137b067035293bd5ad8823f243c39374f", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nEn fait, le d\u00e9veloppement de page web se base sur 3 langages :\n\n- HTML\n\n- CSS\n\n- JavaScript\n\nSeul JavaScript est un v\u00e9ritable langage de programmation (utilisation des conditions, des\nboucles, des variables\u2026). JavaScript permet, entre autres, de g\u00e9rer les \u00e9v\u00e9nements (clic sur\nles boutons\u2026) au niveau d\u2019une page web. Par exemple :\n ```html\n Rouge\\\n ```\n est une balise HTML qui affichera un bouton sur la page. En cas de clic sur ce bouton, la fonction JavaScript foncRouge() sera ex\u00e9cut\u00e9e. Cette fonction JavaScript pourra, par exemple, permettre de modifier le contenu ou le style d'une balise HTML.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 625, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fcfa1f10-15ed-464b-b559-f4b645f4ac53": {"__data__": {"id_": "fcfa1f10-15ed-464b-b559-f4b645f4ac53", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25a.md", "file_name": "termc25a.md", "file_size": 96, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6b25234e-d1d8-4f05-aa3e-fed65a2dc443", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25a.md", "file_name": "termc25a.md", "file_size": 96, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "76bca73d1adecc384dabed363fb07be28554ec1d9e5fe5364612461e710505e7", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 25.1\n\nExpliquez en quelques lignes la notion de client et la notion de serveur.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 90, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e79f4fd-d168-4596-b491-8505633925f6": {"__data__": {"id_": "4e79f4fd-d168-4596-b491-8505633925f6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25c.md", "file_name": "termc25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9546f2ce-292f-4b71-85e3-aee383a18a05", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25c.md", "file_name": "termc25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3bbe596257c7a1cfa0d01ccbef96f3d478cb53897590a44ee491e7e859e87438", "class_name": "RelatedNodeInfo"}}, "text": "1) Notion de client-serveur\n\nDeux ordinateurs en r\u00e9seau peuvent s'\u00e9changer des donn\u00e9es. Dans la plupart des cas ces \u00e9changes ne sont pas \"sym\u00e9triques\" : en effet un ordinateur A va souvent se contenter de demander des ressources (fichiers contenant du texte, photos, vid\u00e9os, sons...) \u00e0 un ordinateur B. L'ordinateur B va lui se contenter de fournir des ressources \u00e0 tous les ordinateurs qui lui en feront la demande. On dira alors que l'ordinateur A (celui qui demande des ressources) est un client alors que l'ordinateur B (celui qui fournit les ressources) sera qualifi\u00e9 de serveur.\n\nEn tapant \u00abhttp://www.google.fr\u00bb, votre machine va chercher \u00e0 entrer en communication avec le serveur portant le nom \u00abwww.google.fr\u00bb (en fait c'est plus compliqu\u00e9, pour les puristes nous diront donc que la communication va \u00eatre \u00e9tablie avec le serveur www du domaine google.fr, mais bon, pour la suite nous pourrons nous contenter de l'explication \u00ab simplifi\u00e9e \u00bb).\n\nUne fois la liaison \u00e9tablie, le client et le serveur vont \u00e9changer des informations en dialoguant :\n\nclient : bonjour www.google.fr (ou bonjour www se trouvant dans le domaine google.fr), pourrais-tu m'envoyer le fichier index.html\n\nserveur : OK client, voici le fichier index.html\n\nclient : je constate que des images, du code css sont utilis\u00e9s, peux-tu me les envoyer\n\nserveur : OK, les voici\n\n\u00c9videmment ce dialogue est tr\u00e8s imag\u00e9, mais il porte tout de m\u00eame une part de \u00ab v\u00e9rit\u00e9 \u00bb.\n\nSur internet, ce mod\u00e8le client/serveur domine assez largement, m\u00eame s'il existe des cas o\u00f9 un ordinateur pourra jouer tour \u00e0 tour le r\u00f4le de client et le r\u00f4le de serveur, tr\u00e8s souvent, des ordinateurs (les clients) passeront leur temps \u00e0 demander des ressources \u00e0 d'autres ordinateurs (les serveurs) . Par exemple, comme expliqu\u00e9 dans l'exemple ci-dessus on retrouve cet \u00e9change client/serveur \u00e0 chaque fois que l'on visite une page web. Il y a de fortes chances pour que votre ordinateur personnel joue quasi exclusivement le r\u00f4le de client (sauf si vous \u00eates un adepte du \"peer to peer\").\n\nN'importe quel type d'ordinateur peut jouer le r\u00f4le de serveur, mais dans le monde professionnel les serveurs sont des machines sp\u00e9cialis\u00e9es con\u00e7ues pour fonctionner 24h sur 24h. Ils peuvent aussi avoir une grosse capacit\u00e9 de stockage afin de stocker un grand nombre de ressources (vid\u00e9os, sons,...).\n\n!\n\nAfin d'assurer une continuit\u00e9 de service, dans les soci\u00e9t\u00e9s, plusieurs serveurs assurent exactement le m\u00eame r\u00f4le (on parle de redondance). Vous vous doutez bien que Google ne poss\u00e8de pas qu'un seul serveur, en effet, en moyenne, chaque seconde, c'est environ 65000 clients qui se connectent aux serveurs du moteur de recherche de Google. Aucun serveur, m\u00eame extr\u00eamement performant, ne serait capable de r\u00e9pondre \u00e0 toutes ces requ\u00eates. Google, Amazon ou encore Facebook poss\u00e8dent un tr\u00e8s grand nombre de serveurs afin de pouvoir satisfaire les demandes des utilisateurs en permanence. Ces entreprises poss\u00e8dent d'immenses salles contenant chacune des centaines ou des milliers de serveurs (ces serveurs sont rang\u00e9s dans des armoires appel\u00e9es \"baie serveur\").\n\n!\n\nSouvent les serveurs sont sp\u00e9cialis\u00e9s dans certaines t\u00e2ches, par exemple, les serveurs qui envoient aux clients des pages au format HTML sont appel\u00e9s \"serveur web\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3264, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc816998-e1b1-47d5-8c43-bead2a28419e": {"__data__": {"id_": "cc816998-e1b1-47d5-8c43-bead2a28419e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25c.md", "file_name": "termc25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eb59ceaf-e326-46d1-8be1-b70ce6a93cf0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25c.md", "file_name": "termc25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c0c90ab8bef3cee4f7dbfb3618cf2ed900b9015bacbd7beb8575e251588f855e", "class_name": "RelatedNodeInfo"}}, "text": "2) du Web statique au  Web dynamique\n\nIl y a quelques ann\u00e9es, le web \u00e9tait dit \u00ab statique \u00bb : le concepteur de site web \u00e9crivait son code HTML et ce code \u00e9tait simplement envoy\u00e9 par le serveur web au client. Les personnes qui consultaient le site avaient toutes le droit \u00e0 la m\u00eame page, le web \u00e9tait purement \u00ab consultatif \u00bb.\n\nLes choses ont ensuite \u00e9volu\u00e9 : les serveurs sont aujourd'hui capables de g\u00e9n\u00e9rer eux-m\u00eames du code HTML. Les r\u00e9sultats qui s'afficheront \u00e0 l'\u00e9cran d\u00e9pendront donc des demandes effectu\u00e9es par l'utilisateur du site : le web est devenu dynamique.\n\nDiff\u00e9rents langages de programmation peuvent \u00eatre utilis\u00e9s \u00ab c\u00f4t\u00e9 serveur \u00bb afin de permettre au serveur de g\u00e9n\u00e9rer lui-m\u00eame le code HTML \u00e0 envoyer. Le plus utilis\u00e9 encore aujourd'hui se nomme PHP. D'autres langages sont utilisables c\u00f4t\u00e9 serveur (pour permettre la g\u00e9n\u00e9ration dynamique de code HTML) : Java, Python...\n\nVoici un exemple tr\u00e8s simple de code en PHP :\n\n```php\n<?php\n$heure = date(\"H:i\");\necho 'Bienvenue sur mon site\n      Il est '.$heure.'';\n?>\n```\n\nSans entrer dans les d\u00e9tails, si un client se connecte \u00e0 un serveur web qui ex\u00e9cute ce code \u00e0 18h23, le serveur enverra au client le code HTML ci-dessous :\n\n```html\nBienvenue sur mon site\nIl est 18h23\n```\n\nEn revanche si un client se connecte \u00e0 ce m\u00eame serveur \u00e0 9h12, le serveur enverra au client le code HTML ci-dessous :\n\n```html\nBienvenue sur mon site\nIl est 9h12\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5afd1d10-6b30-4107-ba2e-8d52b63803b8": {"__data__": {"id_": "5afd1d10-6b30-4107-ba2e-8d52b63803b8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25r.md", "file_name": "termc25r.md", "file_size": 995, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27d1f2e1-c9c4-48b0-9186-35024006a76f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25r.md", "file_name": "termc25r.md", "file_size": 995, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e4477b0f97f01b18e35ec02e229ac29507e071f6a1349e167397361da811b0d4", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- Dans la plupart des \u00e9changes au niveau d\u2019un r\u00e9seau (Internet par exemple), les ordinateurs qui communiquent ne jouent pas le m\u00eame r\u00f4le. Un des ordinateurs est un client tandis que l\u2019autre est un serveur. Un client va demander des ressources \u00e0\nun serveur alors qu\u2019un serveur va passer son temps \u00e0 fournir des ressources \u00e0 une multitude de clients.\n\n- N'importe quel type d'ordinateur peut jouer le r\u00f4le de serveur, mais dans le monde professionnel les serveurs sont des machines sp\u00e9cialis\u00e9es con\u00e7ues pour fonctionner 24h sur 24h (il faut \u00eatre capable de fournir des ressources \u00e0 un client 24h/24h)\n\n- Afin de pr\u00e9venir un \u201cembouteillage\u201d (trop de clients qui se connecteraient en m\u00eame temps), un m\u00eame service est souvent assur\u00e9 par plusieurs serveurs qui vont jouer exactement le m\u00eame r\u00f4le, on parle alors de redondance des serveurs.\n\n- La redondance permet aussi d\u2019assurer la continuit\u00e9 du service en cas de panne d\u2019un des serveurs.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 957, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59771a2a-e6b6-4971-af8a-69baad2b22ce": {"__data__": {"id_": "59771a2a-e6b6-4971-af8a-69baad2b22ce", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26a.md", "file_name": "termc26a.md", "file_size": 103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb827e9c-00b6-4922-8e19-6302f2f0cc79", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26a.md", "file_name": "termc26a.md", "file_size": 103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5e32a76e289030330412ca59c3a5f43b24389a6e9f3c669b261a0b13e82b9b76", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 26.1\n\n1) Expliquez la notion de requ\u00eate HTTP\n\n2) Expliquez la notion de r\u00e9ponse HTTP", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 95, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8f3900c3-d792-4997-9958-eaf571c6d17e": {"__data__": {"id_": "8f3900c3-d792-4997-9958-eaf571c6d17e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3dde8e6a-6b7b-46c3-95af-071e201796a8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "27f986c5c89598d081c96d348810c1a4e97b2a1fb4a46073c36c6daaf54353cd", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nRevenons sur l'adresse qui s'affiche dans la barre d'adresse d'un navigateur web et plus pr\u00e9cis\u00e9ment sur le d\u00e9but de cette adresse c'est-\u00e0-dire le \"http\"\n\nSelon les cas cette adresse commencera par http ou https (nous verrons ce deuxi\u00e8me cas \u00e0 la fin de cette activit\u00e9).\n\nLe protocole (un protocole est ensemble de r\u00e8gles qui permettent \u00e0 2 ordinateurs de communiquer ensemble) HTTP (HyperText Transfert Protocol) va permettre au client d'effectuer des requ\u00eates \u00e0 destination d'un serveur web. En retour, le serveur web va envoyer une r\u00e9ponse.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a8f01c3-55e2-4a90-a7eb-3b6505df0f7a": {"__data__": {"id_": "2a8f01c3-55e2-4a90-a7eb-3b6505df0f7a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e3361c89-ceaf-4c38-b78a-792182625a63", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "cc3a11d67631060299a82d88c326d6039d4aec8f0e84227427f51aa56c05d683", "class_name": "RelatedNodeInfo"}}, "text": "2) requ\u00eate HTTP", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 17, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "904f1bf5-4948-40b0-9fda-e998102604ba": {"__data__": {"id_": "904f1bf5-4948-40b0-9fda-e998102604ba", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ad925bc-876c-447b-9bab-8e33961507eb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "92bca9453870b07e4f5737bcd2000c36605edd3cabbef1522530216428dc0a2d", "class_name": "RelatedNodeInfo"}}, "text": "a) exemple\n\nVoici une version simplifi\u00e9e de la composition d'une requ\u00eate HTTP (client vers serveur) :\n\n- la m\u00e9thode employ\u00e9e pour effectuer la requ\u00eate\n\n- l'URL de la ressource\n\n- la version du protocole utilis\u00e9 par le client (souvent HTTP 1.1)\n\n- le navigateur employ\u00e9 (Firefox, Chrome) et sa version\n\n- le type du document demand\u00e9 (par exemple HTML)\n\n...\n\nCertaines de ces lignes sont optionnelles.\n\nVoici un exemple de requ\u00eate HTTP :\n\n```\nGET /mondossier/monFichier.html HTTP/1.1\nUser-Agent : Mozilla/5.0\nAccept : text/html\n```\n\nNous avons ici plusieurs informations :\n\n- GET\" est la m\u00e9thode employ\u00e9e (voir ci-dessous)\n\n- \"/mondossier/monFichier.html\" correspond \u00e0 l'URL de la ressource demand\u00e9e\n\n- \"HTTP/1.1\" : la version du protocole est la 1.1\n\n- \"Mozilla/5.0\" : le navigateur web employ\u00e9 est Firefox de la soci\u00e9t\u00e9 Mozilla\n\n- \"text/html\" : le client s'attend \u00e0 recevoir du HTML", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 884, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05456885-dbe2-442e-8408-68839855f91b": {"__data__": {"id_": "05456885-dbe2-442e-8408-68839855f91b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e1895f7-a6bf-4bae-8555-a4b4bb920675", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "88a6b1d1d7f883b0cbad3df2dcb9b156a9547be8f8b2822d4ca22d73acfeacba", "class_name": "RelatedNodeInfo"}}, "text": "b) m\u00e9thodes de requ\u00eate HTTP\n\nUne requ\u00eate HTTP  utilise une m\u00e9thode (c'est une commande qui demande au serveur d'effectuer une certaine action). Voici la liste des m\u00e9thodes disponibles :\n\nGET, HEAD, POST, OPTIONS, CONNECT, TRACE, PUT, PATCH, DELETE\n\nD\u00e9taillons 4 de ces m\u00e9thodes :\n\n- GET : C'est la m\u00e9thode la plus courante pour demander une ressource. Elle est sans effet sur la ressource.\n\n- POST : Cette m\u00e9thode est utilis\u00e9e pour soumettre des donn\u00e9es en vue d'un traitement (c\u00f4t\u00e9 serveur). Typiquement c'est la m\u00e9thode employ\u00e9e lorsque l'on envoie au serveur les donn\u00e9es issues d'un formulaire.\n\n- DELETE : Cette m\u00e9thode permet de supprimer une ressource sur le serveur.\n\n- PUT : Cette m\u00e9thode permet de modifier une ressource sur le serveur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 746, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "58ebff5e-afa0-4dc2-bd8f-a33fb0e5bf8e": {"__data__": {"id_": "58ebff5e-afa0-4dc2-bd8f-a33fb0e5bf8e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6b62f94f-45e2-4bcc-899b-95055f1f9622", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "c611340500861c8f99400090ab4693e3ba5ba20ad61e85bb835d888c9946aec3", "class_name": "RelatedNodeInfo"}}, "text": "3) R\u00e9ponse du serveur \u00e0 une requ\u00eate HTTP\n\nUne fois la requ\u00eate re\u00e7ue, le serveur va renvoyer une r\u00e9ponse, voici un exemple de r\u00e9ponse du serveur :\n\n```\nHTTP/1.1 200 OK\nDate: Thu, 15 feb 2019 12:02:32 GMT\nServer: Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4\nConnection: close\nTransfer-Encoding: chunked\nContent-Type: text/html; charset=ISO-8859-1\n\n\n\n\nVoici mon site\n\n\n Hello World! Ceci est un titre\nCeci est un paragraphe. Avez-vous bien compris ?\n\n\n```\n\nNous n'allons pas d\u00e9tailler cette r\u00e9ponse, voici quelques explications sur les \u00e9l\u00e9ments qui nous seront indispensables par la suite :\n\nCommen\u00e7ons par la fin : le serveur renvoie du code HTML, une fois ce code re\u00e7u par le client, il est interpr\u00e9t\u00e9 par le navigateur qui affiche le r\u00e9sultat \u00e0 l'\u00e9cran. Cette partie correspond au corps de la r\u00e9ponse.\n\nLa 1re ligne se nomme la ligne de statut :\n\n- HTTP/1.1 : version de HTTP utilis\u00e9 par le serveur\n\n- 200 : code indiquant que le document recherch\u00e9 par le client a bien \u00e9t\u00e9 trouv\u00e9 par le serveur. Il existe d'autres codes dont un que vous connaissez peut-\u00eatre d\u00e9j\u00e0 : le code 404 (qui signifie  \u00abLe document recherch\u00e9 n'a pu \u00eatre trouv\u00e9\u00bb).\n\nLes 5 lignes suivantes constituent l'en-t\u00eate de la r\u00e9ponse, une ligne nous int\u00e9resse plus particuli\u00e8rement :\n\nServer: Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4\n\nLe serveur web qui a fourni la r\u00e9ponse http ci-dessus a comme syst\u00e8me d'exploitation une distribution GNU/Linux nomm\u00e9e \"Debian\" (pour en savoir plus sur GNU/Linux, n'h\u00e9sitez pas \u00e0 faire vos propres recherches). \"Apache\" est le coeur du serveur web puisque c'est ce logiciel qui va g\u00e9rer les requ\u00eates http (recevoir les requ\u00eates http en provenance des clients et renvoyer les r\u00e9ponses http). Il existe d'autres logiciels capables de g\u00e9rer les requ\u00eates http (nginx, lighttpd...) mais, aux derni\u00e8res nouvelles, Apache est toujours le plus populaire puisqu'il est install\u00e9 sur environ la moiti\u00e9 des serveurs web mondiaux !", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1932, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1eabf559-0b42-4565-90d3-3ca115d0cc0a": {"__data__": {"id_": "1eabf559-0b42-4565-90d3-3ca115d0cc0a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b041c317-5f75-4620-baea-3c76c91e68f4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "2342bd13b0439a87ba3f8d913b3d440dde0a40f471fe2b802143b67d88260b60", "class_name": "RelatedNodeInfo"}}, "text": "4) Protocole HTTPS\n\nLe \"HTTPS\" est la version \"s\u00e9curis\u00e9e\" du protocole HTTP. Par \"s\u00e9curis\u00e9\" on entend que les donn\u00e9es sont chiffr\u00e9es avant d'\u00eatre transmises sur le r\u00e9seau.\n\nVoici les diff\u00e9rentes \u00e9tapes d'une communication client - serveur utilisant le protocole HTTPS :\n\n- le client demande au serveur une connexion s\u00e9curis\u00e9e (en utilisant \"https\" \u00e0 la place de \"http\" dans la barre d'adresse du navigateur web)\n\n- le serveur r\u00e9pond au client qu'il est OK pour l'\u00e9tablissement d'une connexion s\u00e9curis\u00e9e. Afin de prouver au client qu'il est bien celui qu'il pr\u00e9tend \u00eatre, le serveur fournit au client un certificat prouvant son \"identit\u00e9\". En effet, il existe des attaques dites \"man in the middle\", o\u00f9 un serveur \"pirate\" essaye de se faire passer, par exemple, pour le serveur d'une banque : le client, pensant \u00eatre en communication avec le serveur de sa banque, va saisir son identifiant et son mot de passe, identifiant et mot de passe qui seront r\u00e9cup\u00e9r\u00e9s par le serveur pirate. Afin d'\u00e9viter ce genre d'attaque, des organismes d\u00e9livrent donc des certificats prouvant l'identit\u00e9 des sites qui proposent des connexions \"https\".\n\n- \u00e0 partir de ce moment-l\u00e0, les \u00e9changes entre le client et le serveur seront chiffr\u00e9s gr\u00e2ce \u00e0 un syst\u00e8me de cl\u00e9 de chiffrement (nous aborderons cette notion de cl\u00e9 de chiffrement l'ann\u00e9e prochaine, en terminale). M\u00eame si un pirate arrivait \u00e0 intercepter les donn\u00e9es circulant entre le client et le serveur, ces derni\u00e8res ne lui seraient d'aucune utilit\u00e9, car totalement incompr\u00e9hensible \u00e0 cause du chiffrement (seuls le client et le serveur sont aptes \u00e0 d\u00e9chiffrer ces donn\u00e9es)\n\nD'un point vu strictement pratique il est n\u00e9cessaire de bien v\u00e9rifier que le protocole est bien utilis\u00e9 (l'adresse commence par \"https\") avant de transmettre des donn\u00e9es sensibles (coordonn\u00e9es bancaires...). Si ce n'est pas le cas, passez votre chemin, car toute personne qui interceptera les paquets de donn\u00e9es sera en mesure de lire vos donn\u00e9es sensibles.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1971, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4eef32b-3d29-4115-a6e3-16341ac55dec": {"__data__": {"id_": "c4eef32b-3d29-4115-a6e3-16341ac55dec", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c50d83b6-9d58-44c7-94cc-fb5c5bb9e806", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c4c79d267f91cf3aef3701049741775748e2f4c3da8ae405689e73d5f0282a05", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nLe protocole (un protocole est ensemble de r\u00e8gles qui permettent \u00e0 2 ordinateurs de communiquer ensemble) HTTP (HyperText Transfert Protocol) va permettre au client d'effectuer des requ\u00eates \u00e0 destination d'un serveur web. En retour, le serveur web va envoyer une r\u00e9ponse.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 295, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "353e1ad6-4b2e-4477-b298-5e53a2780dff": {"__data__": {"id_": "353e1ad6-4b2e-4477-b298-5e53a2780dff", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7bda674c-b110-4f5d-a7ee-5f3531f25b09", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "511ba6c5e66bec5001b90540a07a9cd362492090bf884653e07cac2e880bb2a6", "class_name": "RelatedNodeInfo"}}, "text": "requ\u00eate du client\n\nUne requ\u00eate HTTP utilise une m\u00e9thode (c'est une commande qui demande au serveur d'effectuer une certaine action). A chaque requ\u00eate faite par un client vers un serveur, on associe une des m\u00e9thodes ci-dessous : GET, HEAD, POST, OPTIONS, CONNECT, TRACE, PUT, PATCH, DELETE\n\nD\u00e9taillons 4 de ces m\u00e9thodes :\n\n- GET : C'est la m\u00e9thode la plus courante pour demander une ressource. Elle est sans effet sur la ressource.\n \n- POST : Cette m\u00e9thode est utilis\u00e9e pour soumettre des donn\u00e9es en vue d'un traitement (c\u00f4t\u00e9 serveur). Typiquement c'est la m\u00e9thode employ\u00e9e lorsque l'on\nenvoie au serveur les donn\u00e9es issues d'un formulaire.\n\n- DELETE : Cette m\u00e9thode permet de supprimer une ressource sur le serveur.\n \n- PUT : Cette m\u00e9thode permet de modifier une ressource sur le serveur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 789, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4265cc44-f041-4c86-a166-7c14b122dd74": {"__data__": {"id_": "4265cc44-f041-4c86-a166-7c14b122dd74", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8042ad5-8fc9-4a57-b3ad-2f67adc83f9d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3a58e79ec8255846f92b6911fa3951d776611ad94cf7e96ee9cd8c5d71298dd1", "class_name": "RelatedNodeInfo"}}, "text": "r\u00e9ponse du serveur\n\nSuite \u00e0 une requ\u00eate d\u2019un client, le serveur envoie une r\u00e9ponse \u00e0 ce client. Dans la r\u00e9ponse du serveur on trouve beaucoup de choses (voir le cours), mais on n\u2019en retiendra deux :\n\n- un code : par exemple 200 si tout est OK ou 404 si la ressource demand\u00e9e n\u2019a pas \u00e9t\u00e9 trouv\u00e9e\u2026\n\n- du code HTML", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c43d9496-3c1c-4e30-af86-5e11c5b41d0a": {"__data__": {"id_": "c43d9496-3c1c-4e30-af86-5e11c5b41d0a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10d31d09-d2de-45bb-a2d8-5c21f3e31df9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f8140672a831c27ce6794b1590af2894dfa351ccb7db7ec75140f0751b26dad9", "class_name": "RelatedNodeInfo"}}, "text": "HTTPS\n\nLe \"HTTPS\" est la version \"s\u00e9curis\u00e9e\" du protocole HTTP : les donn\u00e9es sont chiffr\u00e9es avant d'\u00eatre transmises sur le r\u00e9seau. Seul le possesseur de la cl\u00e9 de d\u00e9chiffrement sera en mesure de lire les donn\u00e9es transmises sur le r\u00e9seau (dans le cas du HTTP toutes les informations transmises sur le r\u00e9seau sont \u201clisibles\u201d par n\u2019importe qui).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 344, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c69a5dd-167b-40a4-9493-666792d23b29": {"__data__": {"id_": "4c69a5dd-167b-40a4-9493-666792d23b29", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc27a.md", "file_name": "termc27a.md", "file_size": 1775, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a03df38-a3e5-4de8-9a4b-cc65f9b88c37", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc27a.md", "file_name": "termc27a.md", "file_size": 1775, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0f38ea4c1f990f3c19b1cf1a4a51c197662765ae87854b611179b501fcc793e1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 27.1\n\nEn utilisant Filius, nous allons maintenant mettre en place un serveur Web afin de pouvoir faire des requ\u00eates HTTP. Il sera possible d'analyser les donn\u00e9es \u00e9chang\u00e9es entre les machines gr\u00e2ce \u00e0 l'outil \"data exchange\". Pour afficher cet outil, il suffit de faire un clic droit sur la machine concern\u00e9e et de choisir \"show data exchange\". Commencez par visionner la vid\u00e9o ci-dessous :\n\nhttps://www.youtube.com/watch?v=fY2yiRXMdS8\n\nUne fois la vid\u00e9o visionn\u00e9e, en utilisant le logiciel Filius, mettez en place un r\u00e9seau compos\u00e9 de 2 clients et d'un serveur Web, cr\u00e9ez ensuite une page HTML toute simple et activez le serveur Web (comme indiqu\u00e9 dans la vid\u00e9o). Choisissez un client et par l'interm\u00e9diaire d'un navigateur Web (que vous aurez au pr\u00e9alable install\u00e9 sur le client), effectuez une requ\u00eate HTTP. Analysez les donn\u00e9es \u00e9chang\u00e9es entre le client et le serveur \u00e0 l'aide de l'outil \"data exchange\".\n\nComme vous pouvez le constater on retrouve :\n\n- le protocole TCP au niveau de la couche \"Transport\" (\"ACK\" signifie acknowledgement, ce sont les accus\u00e9s de r\u00e9ception aussi appel\u00e9s acquittement)\n\n- le protocole HTTP au niveau de la couche \"Application\" (en cliquant sur les requ\u00eates et r\u00e9ponses HTTP on retrouve ce que l'on a vu pr\u00e9c\u00e9demment dans le cours \"Protocole HTTP\")\n\n- le protocole ARP qui permet de trouver une adresse MAC \u00e0 partir d'une adresse IP (l'\u00e9change entre les 2 machines commence d'ailleurs avec ce protocole ARP, sinon, impossible d'envoyer les trames)\n\nOn notera que les trames et les paquets IP ne sont pas directement visibles avec cet outil \"data exchange\" : il faut cliquer sur une ligne \"TCP\" pour \"voir\" les couches \"Internet\" et \"acc\u00e8s r\u00e9seau\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1690, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "027698e3-39b0-49a2-9ff7-c3acc1e83103": {"__data__": {"id_": "027698e3-39b0-49a2-9ff7-c3acc1e83103", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd7e076c-7674-482e-aab0-961a9cbc8a3c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "10f0ad4ecc0874df79f3c4f2ed448b838f0336b0c9863d84689840f0303db32a", "class_name": "RelatedNodeInfo"}}, "text": "Comme d\u00e9j\u00e0 \u00e9voqu\u00e9 dans la partie consacr\u00e9e au mod\u00e8le client-serveur, un serveur web (aussi appel\u00e9 serveur HTTP) permet de r\u00e9pondre \u00e0 une requ\u00eate HTTP effectu\u00e9e par un client (tr\u00e8s souvent un navigateur web). Nous allons travailler avec le serveur web qui est install\u00e9 sur votre ordinateur. Nous allons donc avoir une configuration un peu particuli\u00e8re puisque le client et le serveur vont se trouver sur la m\u00eame machine. Cette configuration est classique lorsque l'on d\u00e9sire effectuer de simples tests. Nous aurons donc 2 logiciels sur le m\u00eame ordinateur : le client (navigateur web) et le serveur (serveur web), ces 2 logiciels vont communiquer en utilisant le protocole HTTP. Il existe de nombreux serveurs web, mais le plus utilis\u00e9 se nomme Apache. Nous n'allons pas utiliser Apache, car nous allons travailler avec le framework Python Flask. Ce framework va nous permettre de g\u00e9n\u00e9rer des pages web c\u00f4t\u00e9 serveur, il poss\u00e8de son propre serveur web. \u00c0 noter qu'il est aussi possible d'utiliser d'autres langages c\u00f4t\u00e9 serveur : Java, C# et surtout PHP (pour ceux qui sont int\u00e9ress\u00e9s, vous trouverez ici l'\u00e9quivalent de la pr\u00e9sente activit\u00e9 en PHP \u00e0 la place de Python).\n\nNous allons commencer par un cas tr\u00e8s simple o\u00f9 le serveur va renvoyer au client une simple page HTML statique (ne pas h\u00e9siter \u00e0 consulter la partie consacr\u00e9e au mod\u00e8le client-serveur pour plus de pr\u00e9cision sur ce terme \"statique\").", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c8fc79d-25e5-4d75-9974-d905d29a80a0": {"__data__": {"id_": "7c8fc79d-25e5-4d75-9974-d905d29a80a0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62ccd455-d585-4617-9d1f-5932e96e78c4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b89223f05adb8051ce6cf2b806df0f1269bf210bae84dd9ac0799427340c1d29", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.1\n\nDans votre r\u00e9pertoire de travail, cr\u00e9ez un r\u00e9pertoire nomm\u00e9 \"flask\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfec1f06-245c-4c33-be72-2893cbaea6c0": {"__data__": {"id_": "bfec1f06-245c-4c33-be72-2893cbaea6c0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e23c10cf-0f62-48cc-adbb-cdaad84128a7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "dc0272625710f3c277784eac9e0ba14f0475461f7cd8af46198022b42d79e89d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.2\n\n\u00c0 l'aide de Spyder, cr\u00e9ez un fichier Python \"views.py\" (ce fichier devra \u00eatre sauvegard\u00e9 dans le r\u00e9pertoire \"flask\" pr\u00e9c\u00e9demment cr\u00e9\u00e9). Saisissez le code suivant dans le fichier \"views.py\"\n\n```python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  return \"Tout fonctionne parfaitement\"\n\napp.run(debug=True)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16ff98ab-90fa-458d-9bd4-0bba90766f6a": {"__data__": {"id_": "16ff98ab-90fa-458d-9bd4-0bba90766f6a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc255c09-7dd3-4c52-ba3b-2d2e2462cfa3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "166c45848b32b4ccb0e80de369b7abb454af81302f198d9e097f2095a2f36a49", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.3\n\nApr\u00e8s avoir ex\u00e9cut\u00e9 le programme ci-dessus, ouvrez votre navigateur web et tapez dans la barre d'adresse \"localhost:5000\".\n\nVous devriez voir la phrase \"Tout fonctionne parfaitement\" s'afficher dans votre navigateur.\n\nUne petite explication s'impose \u00e0 propos du \"localhost:5000\" : comme nous l'avons d\u00e9j\u00e0 dit, notre serveur et notre client se trouvent sur la m\u00eame machine, avec le \"localhost\", on indique au navigateur que le serveur web se trouve sur le m\u00eame ordinateur que lui (on parle de machine locale). Dans un cas normal, la barre d'adresse devrait \u00eatre renseign\u00e9e avec l'adresse du serveur web. Le \"5000\" indique le port, nous n'\u00e9tudierons pas cet aspect des choses ici, vous devez juste savoir que le \"5000\" doit suivre le \"localhost\".\n\nStoppez l'ex\u00e9cution du programme dans Spyder.\n\nEssayons de comprendre en d\u00e9tail ce qui s'est pass\u00e9 :\n\nEn ex\u00e9cutant le programme Python ci-dessus, le framework Flask a lanc\u00e9 un serveur web. Ce serveur web attend des requ\u00eates HTTP sur le port 5000. En ouvrant un navigateur web et en tapant \"localhost:5000\", nous faisons une requ\u00eate HTTP, le serveur web fourni avec Flask r\u00e9pond \u00e0 cette requ\u00eate HTTP en envoyant une page web contenant uniquement \"Tout fonctionne parfaitement\".\n\nReprenons le programme Python ligne par ligne :\n\n```python\nfrom flask import Flask\n```\n\nNous importons la biblioth\u00e8que Flask\n\n```python\napp = Flask(__name__)\n```\n\t\t\t\nNous cr\u00e9ons un objet app : cette ligne est syst\u00e9matique n\u00e9cessaire.\n\n```python\n@app.route('/')\n```\n\nNous utilisons ici un d\u00e9corateur (cette notion de d\u00e9corateur ne sera pas trait\u00e9e en NSI). Vous devez juste comprendre la fonction qui suit ce d\u00e9corateur (\"index\"), sera ex\u00e9cut\u00e9e dans le cas o\u00f9 le serveur web recevra une requ\u00eate HTTP avec une URL correspondant \u00e0 la racine du site ('/'), c'est \u00e0 dire, dans notre exemple, le cas o\u00f9 on saisie dans la barre d'adresse \"localhost:5000/\" (ou simplement \"localhost:5000\") Nous verrons ci-dessous un exemple avec une URL autre que '/'.\n\n```python\ndef index():\n    return \"Tout fonctionne parfaitement\"\n```\n\nEn cas de requ\u00eate HTTP d'un client avec l'URL \"/\", le serveur renvoie vers le client une page HTML contenant uniquement la ligne \"\\Tout fonctionne parfaitement\\\".\n\n```python\napp.run(debug=True)\n```\n\nCette ligne permet de lancer le serveur, elle sera syst\u00e9matiquement pr\u00e9sente.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2333, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed406b47-42c8-4811-8d6a-f839d6ff8334": {"__data__": {"id_": "ed406b47-42c8-4811-8d6a-f839d6ff8334", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3495b2ea-55db-45c9-b082-e47c06144128", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2855149db1bc3cd7c9afc212d4f6c8e8aac01559b6bac5b410d8acc5e06318c2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.4\n\n\u00c0 l'aide de Spyder, modifiez le fichier Python \"views.py\" :\n\n```python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  return \"Tout fonctionne parfaitement\"\n@app.route('/about')\ndef about():\n  return \"Une autre page\"\napp.run(debug=True)\n```\n\nApr\u00e8s avoir ex\u00e9cut\u00e9 le programme ci-dessus, saisissez \"localhost:5000/about\" dans la barre d'adresse de votre navigateur.\n\nComme vous pouvez le constater, le serveur nous renvoie dans ce cas une autre page. \u00c9videmment l'URL racine (\"/\") reste disponible, vous pouvez passer d'une page \u00e0 l'autre en modifiant l'URL dans la barre d'adresse (\"localhost:5000\" ou \"localhost:5000/about\")\n\n\u00c9crire le code HTML qui devra \u00eatre renvoy\u00e9 au client dans le programme Python n'est pas tr\u00e8s pratique, Flask propose une autre solution bien plus satisfaisante :", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e77231c4-dbdf-40c5-a541-b331cee5cf66": {"__data__": {"id_": "e77231c4-dbdf-40c5-a541-b331cee5cf66", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "573cade4-8026-4df6-9de9-0554c8ac74a4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1282a804db72e8c348fa622dee1419971268f465b2c30abbe20db07df52c0fec", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.5\n\nDans votre r\u00e9pertoire \"Flask\", cr\u00e9ez un r\u00e9pertoire \"templates\". Dans ce r\u00e9pertoire templates, cr\u00e9ez un fichier index.html. Saisissez le code HTML ci-dessous dans ce fichier index.html\n\n```html\n\n\n\t\n\t\t\n\t\tMa page\n\t\n\t\n\t  Mon super site\n\t  Tout fonctionne parfaitement\n\t\n\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 287, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "305079f9-4a22-4517-823e-04239ed9cbc3": {"__data__": {"id_": "305079f9-4a22-4517-823e-04239ed9cbc3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "893f53f8-9a48-4e76-9d31-86bd9f5fdc45", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "51e540c662e09377bd773f4e55cb9505d72acc127526ef1e84b2ff75428ce88a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.6\n\nModifiez le programme views.py comme suit :\n\n```python\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return render_template(\"index.html\")\n\napp.run(debug=True)\n```\n\nRelancez le programme Python et tapez \"localhost:5000\" dans la barre d'adresse de votre navigateur\n\nLe serveur renvoie maintenant au client la page HTML correspondant au fichier \"index.html\" qui a \u00e9t\u00e9 cr\u00e9\u00e9 dans le r\u00e9pertoire \"templates\". Attention, les fichiers HTML devront syst\u00e9matiquement se trouver dans un r\u00e9pertoire nomm\u00e9 \"templates\".\n\nN. B. le \"debug=True\" de la derni\u00e8re ligne permet de modifier les fichiers HTML sans \u00eatre oblig\u00e9 de red\u00e9marrer le programme \"views.py\".\n\nPour l'instant notre site est statique : la page reste identique, quelles que soient les actions des visiteurs. Flask permet de cr\u00e9er des pages dynamiques :\n\n- le client (le navigateur web) envoie une requ\u00eate HTTP vers un serveur web\n\n- en fonction de la requ\u00eate re\u00e7ue et de diff\u00e9rents param\u00e8tres, Flask \"fabrique\" une page HTML diff\u00e9rente\n\n- le serveur web associ\u00e9 \u00e0 Flask envoie la page nouvellement cr\u00e9\u00e9e au client\n\n- une fois re\u00e7ue, la page HTML est affich\u00e9e dans le navigateur web", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec441796-2184-466b-b8e9-15dbf4364ee6": {"__data__": {"id_": "ec441796-2184-466b-b8e9-15dbf4364ee6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ee4ee89-a573-4375-9607-97966a57f63d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d236414423f6d29046fdd8e149d6e97c71dc0fe805449df3666539db38fbc97e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.7\n\nModifiez le fichier views.py comme suit :\n\n```python\nfrom flask import Flask, render_template\nimport datetime\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  date = datetime.datetime.now()\n  h = date.hour\n  m = date.minute\n  s = date.second\n  return render_template(\"index.html\", heure = h, minute = m, seconde = s)\n\napp.run(debug=True)\n```\n\nDans le programme ci-dessous nous importons le module \"datetime\" afin de pouvoir d\u00e9terminer la date et l'heure courante. Le\n\n```python\ndate = datetime.datetime.now()\n```\n\nnous permet de r\u00e9cup\u00e9rer la date et l'heure courante\n\n```\nh = date.hour\nm = date.minute\ns = date.second\n```\n\nApr\u00e8s l'ex\u00e9cution des 3 lignes ci-dessus, les variables h, m et s contiennent l'heure courante.\n\nLa fonction \"render_template\"\n\n```python\nreturn render_template(\"index.html\", heure = h, minute = m, seconde = s)\n```\n\ncontient 3 param\u00e8tres de plus par rapport \u00e0 l'exemple du \"\u00c0 faire vous-m\u00eame 6\" : le param\u00e8tre \"heure\", le param\u00e8tre \"minute\" et le param\u00e8tre \"seconde\", nous allons retrouver ces 3 param\u00e8tres dans le fichier HTML.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1074, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eee31948-5ab5-4f75-b055-3ae82a41dd40": {"__data__": {"id_": "eee31948-5ab5-4f75-b055-3ae82a41dd40", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f553c45-bc60-4899-8894-2ca0e808e802", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1e10ef2cac6e25903a76011612722e38e055867f13f419765617e040ffbd58ea", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.8\n\nModifiez le fichier \"index.html\" comme suit :\n\n```html\n\n\n\t\n\t\t\n\t\tUtilisation de Flask\n\t\n\t\n\t  Mon super site\n\t  Le serveur fonctionne parfaitement, il est {{heure}} h {{minute}} minutes et {{seconde}} secondes\n\t\n\n```\n\t\t\t\nTestez ces modifications en saisissant \"localhost:5000\" dans la barre de votre navigateur web.\n\nNous avons bien une page dynamique, puisqu'\u00e0 chaque fois que vous actualisez la page dans votre navigateur, l'heure courante s'affiche : \u00e0 chaque fois que vous actualisez la page, vous effectuez une nouvelle requ\u00eate et en r\u00e9ponse \u00e0 cette requ\u00eate, le serveur envoie une nouvelle page HTML.\n\nAttention, il est bien important de comprendre que la page HTML envoy\u00e9e par le serveur au client ne contient plus les param\u00e8tres {{heure}}, {{minute}} et {{seconde}}. Au moment de cr\u00e9er la page, le serveur remplace ces param\u00e8tres par les valeurs pass\u00e9es en param\u00e8tres de la fonction \"render_template\" (s'il est 14 h 45 minutes et 31 secondes, le serveur remplacera \"Le serveur fonctionne parfaitement, il est {{heure}} h {{minute}} minutes et {{seconde}} secondes\" par \"Le serveur fonctionne parfaitement, il est 15 h 45 minutes et 31 secondes\").\n\nLe fichier \"index.html\" ne contient donc pas du HTML (m\u00eame si cela ressemble beaucoup \u00e0 du HTML), car les param\u00e8tres {{heure}}, {{minute}} et {{seconde}} n'existent pas en HTML. Le fichier \"index.html\" contient en fait un langage de template nomm\u00e9 Jinja. Jinja ressemble beaucoup au HTML, mais il rajoute beaucoup de fonctionnalit\u00e9s par rapport au HTML (notamment les param\u00e8tres entour\u00e9s d'une double accolade comme {{heure}}). Si vous utilisez Jinja seul (sans un framework comme Flask), les param\u00e8tres ne seront pas remplac\u00e9s et votre navigateur affichera \"Le serveur fonctionne parfaitement, il est {{heure}} h {{minute}} minutes et {{seconde}} secondes\".\n\nNous allons maintenant nous int\u00e9resser \u00e0 la gestion des formulaires.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1898, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdedd3d4-fa89-488c-b135-41d0cf56a2ed": {"__data__": {"id_": "fdedd3d4-fa89-488c-b135-41d0cf56a2ed", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "307b8c55-07e7-4a11-91e9-9cec4ceeea6e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "52c6f0e30b400557289912bd493ace955bf93090d81bd7e6793037594a3ff0eb", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.9\n\nModifiez le fichier \"index.html\" comme suit :\n\n```html\n\n\n\n\n    \n    Le formulaire\n\n\n\n    \n        Nom : \n        Pr\u00e9nom : \n        \n    \n\n\n\n```\n\net cr\u00e9ez un fichier \"resultat.html\" (dans le r\u00e9pertoire \"templates\"), ce fichier devra contenir le code suivant :\n\n```html\n\n\n\n\n    \n    R\u00e9sultat\n\n\n\n    Bonjour {{prenom}} {{nom}}, j'esp\u00e8re que vous allez bien.\n\n\n\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 378, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9294e819-ebe4-4262-9845-d75cdf62bbd2": {"__data__": {"id_": "9294e819-ebe4-4262-9845-d75cdf62bbd2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "721d238d-5f8f-401e-9423-906a07897fc2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a162691a1a204038b060dd9e74591a6b03aeb8ce999ae198dbedd4dd1215f8c9", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.10\n\nModifiez le fichier views.py comme suit :\n\n```python\nfrom flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  return render_template('index.html')\n\n@app.route('/resultat',methods = ['POST'])\ndef resultat():\n  result = request.form\n  n = result['nom']\n  p = result['prenom']\n  return render_template(\"resultat.html\", nom=n, prenom=p)\n\napp.run(debug=True)\n```\n\nApr\u00e8s avoir relanc\u00e9 \"views.py\", testez cet exemple en saisissant \"localhost:5000\" dans la barre d'adresse de votre navigateur web.\n\nSi vous saisissez, par exemple, \"Martin\" et \"Sophie\" dans les champs \"Nom\" et \"Pr\u00e9nom\" du formulaire, vous devriez obtenir le r\u00e9sultat suivant apr\u00e8s avoir appuy\u00e9 sur le bouton \"Envoyer\" :\n\n!\n\nReprenons un par un les \u00e9v\u00e9nements qui nous ont amen\u00e9s \u00e0 ce r\u00e9sultat :\n\nNous effectuons une requ\u00eate HTTP avec l'URL \"/\", le serveur g\u00e9n\u00e8re une page web \u00e0 partir du fichier \"index.html\", cette page, qui contient un formulaire (balise \\) est envoy\u00e9e vers le client. On remarque 2 attributs dans cette balise form : action=\"http://localhost:5000/resultat\" et method=\"post\". Ces 2 attributs indiquent que le client devra effectuer une requ\u00eate de type POST (la m\u00e9thode POST a d\u00e9j\u00e0 \u00e9t\u00e9 vue dans la partie consacr\u00e9e au protocole HTTP) d\u00e8s que l'utilisateur appuiera sur le bouton \"Envoyer\". Cette requ\u00eate POST sera envoy\u00e9e \u00e0 l'URL \"http://localhost:5000/resultat\" (voir l'attribut \"action\"). Les donn\u00e9es saisies dans le formulaire seront envoy\u00e9es au serveur par l'interm\u00e9diaire de cette requ\u00eate.\n\nN.B Vous avez sans doute remarqu\u00e9 que la m\u00e9thode \u00e0 employer pour effectuer la requ\u00eate HTTP n'est pas pr\u00e9cis\u00e9e dans le \"@app.route('/')\". Si rien n'est pr\u00e9cis\u00e9, par d\u00e9faut, c'est la m\u00e9thode GET qui est utilis\u00e9e.\n\nInt\u00e9ressons-nous \u00e0 la fonction \"resultat\", puisque c'est cette fonction qui sera ex\u00e9cut\u00e9e c\u00f4t\u00e9 serveur pour traiter la requ\u00eate POST :\n\n```python\ndef resultat():\n result = request.form\n n = result['nom']\n p = result['prenom']\n return render_template(\"resultat.html\", nom=n, prenom=p)\n```\n\n\"request.form\" est un dictionnaire Python qui a pour cl\u00e9s les attributs \"name\" des balises \"input\" du formulaire (dans notre cas les cl\u00e9s sont donc \"nom\" et \"prenom\") et comme valeurs ce qui a \u00e9t\u00e9 saisi par l'utilisateur. Si l'utilisateur saisit \"Martin\" et \"Sophie\", le dictionnaire \"request.form\" sera :\n\n```\n{'nom':'Martin', 'prenom':'Sophie'}\n```\n\nLe reste du code ne devrait pas vous poser de probl\u00e8me.\n\nLe template \"resultat.html\" utilise des param\u00e8tres \"nom\" et \"prenom\".\n\nEn r\u00e9ponse \u00e0 la requ\u00eate POST, le serveur renvoie une page HTML cr\u00e9\u00e9e \u00e0 partir du template \"resultat.html\" et des param\u00e8tres \"nom\" et \"prenom\". Si l'utilisateur a saisi \"Martin\" et \"Sophie\", le navigateur affichera \"Bonjour Sophie Martin, j'esp\u00e8re que vous allez bien.\"\n\nPour g\u00e9rer le formulaire, il est possible d'utiliser une m\u00e9thode HTTP \"GET\" \u00e0 la place de la m\u00e9thode \"POST\" :", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2898, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6e7cfee-f157-4a44-8ccc-d3020d4da940": {"__data__": {"id_": "d6e7cfee-f157-4a44-8ccc-d3020d4da940", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "480ab0c4-9912-4893-a7fe-3cb94e3d76e8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ff000e5b20b8c285866748dcd0426c12c9aa58803cdcce45e070203270aaf14e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.11\n\nModifiez les fichiers comme suit :\n\nindex.html\n\n```html\n\n\n\n\n    \n    Le formulaire\n\n\n\n    \n        Nom : \n        Pr\u00e9nom : \n        \n    \n\n\n\n```\n\nresultat.html (le fichier est inchang\u00e9)\n\n```html\n\n\n\n\n    \n    R\u00e9sultat\n\n\n\n    Bonjour {{prenom}} {{nom}}, j'esp\u00e8re que vous allez bien.\n\n\n\n```\n\nviews.py\n\n```python\nfrom flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n return render_template('index.html')\n\n@app.route('/resultat',methods = ['GET'])\ndef resultat():\n  result=request.args\n  n = result['nom']\n  p = result['prenom']\n  return render_template(\"resultat.html\", nom=n, prenom=p)\n\napp.run(debug=True)\n```\n\nDans \"index.html\", la m\u00e9thode POST a \u00e9t\u00e9 remplac\u00e9e par la m\u00e9thode GET. Dans le fichier \"views.py\" nous avons aussi remplac\u00e9 POST par GET, et on utilise \"request.args\" \u00e0 la place de \"request.form\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8dc2f43-c7ce-49f2-8226-c426211be337": {"__data__": {"id_": "c8dc2f43-c7ce-49f2-8226-c426211be337", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "884fbf18-abb8-40d7-9f61-d711bfc0ee7c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5b6d9f073d12ed31ce7a817be77c892b18c39437f8c08c40c403cd3c30e14fd6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.12\n\nRelancez l'ex\u00e9cution de \"views.py\" et saisissez \"localhost:5000\" dans la barre d'adresse d'un navigateur web. Une fois la page web affich\u00e9e dans votre navigateur, Saisissez \"Sophie\" pour le pr\u00e9nom et \"Martin\" pour le nom puis validez en cliquant sur le bouton \"Envoyer\". Une fois que vous avez cliqu\u00e9 sur le bouton \"Envoyer\", observez attentivement la barre d'adresse de votre navigateur. Vous devriez obtenir quelque chose qui ressemble \u00e0 cela :\n\n!\n\nVous avez d\u00fb remarquer que cette fois-ci, les informations du formulaire sont transmises au serveur par l'interm\u00e9diaire de l'URL : localhost:5000/resultat?nom=Martin&prenom=Sophie\n\nDans le cas de l'utilisation d'une m\u00e9thode \"POST\" les donn\u00e9es issues d'un formulaire sont envoy\u00e9es au serveur sans \u00eatre directement visibles, alors que dans le cas de l'utilisation d'une m\u00e9thode \"GET\", les donn\u00e9es sont visibles (et accessibles) puisqu'elles sont envoy\u00e9es par l'interm\u00e9diaire de l'URL.\n\nLes donn\u00e9es envoy\u00e9es par l'interm\u00e9diaire d'une m\u00e9thode \"GET\" peuvent \u00eatre modifi\u00e9es directement dans l'URL :", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1061, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd159aae-4ee9-431b-97a6-5312463f8718": {"__data__": {"id_": "fd159aae-4ee9-431b-97a6-5312463f8718", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc020827-60bd-4600-af6f-c3097b74b789", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f8caf1c4a7f467562fdac4b221c4750e8a29610652a066fc5b521937ddd934c1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 28.13\n\nOuvrez votre navigateur Web et tapez dans la barre d'adresse \"localhost:5000\". Une fois la page web affich\u00e9e dans votre navigateur, Saisissez \"Sophie\" pour le pr\u00e9nom et \"Martin\" pour le nom puis validez en cliquant sur le bouton \"Envoyer\". Une fois que le message \"Bonjour Sophie Martin, j'esp\u00e8re que vous allez bien.\" apparait, modifier l'URL : passez de \"localhost:5000/resultat?nom=Martin&prenom=Sophie\" \u00e0 \"localhost:5000/resultat?nom=Martin&prenom=Jean-Pierre\", validez votre modification en appuyant sur la touche \"Entr\u00e9e\".\n\nComme vous pouvez le constater, la page a bien \u00e9t\u00e9 modifi\u00e9e : \"Bonjour Jean-Pierre Martin, j'esp\u00e8re que vous allez bien.\"\n\nM\u00eame si dans notre cas cette op\u00e9ration de modification d'URL est inoffensive, vous devez bien vous douter que dans des situations plus complexes, une telle modification pourrait entrainer des cons\u00e9quences plus probl\u00e9matiques (piratage). Il faut donc \u00e9viter d'utiliser la m\u00e9thode \"GET\" pour transmettre les donn\u00e9es issues d'un formulaire vers un serveur.\n\nIl est important de bien comprendre que la m\u00e9thode \"POST\" n'offre pas non plus une s\u00e9curit\u00e9 absolue puisque toute personne ayant un bagage technique minimum sera capable de lire les donn\u00e9es transmises \u00e0 l'aide de la m\u00e9thode \"POST\" en analysant la requ\u00eate HTTP, m\u00eame si ces donn\u00e9es ne sont pas directement visibles dans l'URL. Seule l'utilisation du protocole s\u00e9curis\u00e9 HTTPS garantit un transfert s\u00e9curis\u00e9 des donn\u00e9es entre le client et le serveur (les donn\u00e9es sont chiffr\u00e9es et donc illisibles pour une personne ne poss\u00e9dant pas la cl\u00e9 de d\u00e9chiffrement).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1580, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6ebd18a-32bd-4b90-947f-d50f62c77c41": {"__data__": {"id_": "a6ebd18a-32bd-4b90-947f-d50f62c77c41", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7e8b70eb-ea46-456c-b565-c515c795115c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "98b961aaa8e4d2076c761fc3aad6d2d65b1d84428cde8c29181e8766af37911a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.1\n\nPour nos premiers pas avec Pandas, nous allons utiliser des donn\u00e9es tr\u00e8s simples au format CSV, ces donn\u00e9es sont contenues dans le fichier ident_virgule.csv.\n\n- cr\u00e9ez un r\u00e9pertoire *nsi_pandas* dans votre r\u00e9pertoire de travail\n\n- t\u00e9l\u00e9chargez le fichier ident_virgule.csv et placez-le dans le dossier *nsi_pandas*\n\n- cr\u00e9ez un fichier *nsi_p.py* et placez-le dans le dossier *nsi_pandas*\n\n- ouvrez le fichier *nsi_p.py* avec Spyder et saisissez le code suivant dans la partie  \"\u00c9diteur\" de Spyder :\n\n```\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\n```\n\nApr\u00e8s l'ex\u00e9cution de ce programme, vous devriez voir apparaitre les donn\u00e9es contenues dans la variable \"iden\", rang\u00e9es sous la forme d'un tableau, un peu comme ce que nous obtenions en ouvrant le fichier \"ident_virgule.csv\" avec un tableur :\n\n!\n\nVous avez peut-\u00eatre remarqu\u00e9 qu'une colonne a \u00e9t\u00e9 ajout\u00e9e par rapport \u00e0 ce que nous obtenions avec le tableur :\n\n!\n\nLes nombres pr\u00e9sents dans cette colonne sont appel\u00e9s des index. Chaque ligne du tableau a un index (premi\u00e8re ligne : index 0, deuxi\u00e8me ligne index 1...)\n\nATTENTION : les index commencent \u00e0 0 et pas \u00e0 1\n\nLes colonnes poss\u00e8des \u00e9galement des index, dans notre exemple ces index correspondent au \"nom\" (index de la premi\u00e8re colonne), au \"prenom\" (index de la deuxi\u00e8me colonne) et \u00e0 \"date_naissance\" (index de la troisi\u00e8me colonne)\n\nEn r\u00e9sum\u00e9 : les lignes poss\u00e8dent des index (0,1,2..), les colonnes poss\u00e8dent aussi des index (\"nom\", \"prenom\",...)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1484, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b71ac76-1d1e-4bc6-b08d-74a87104bd80": {"__data__": {"id_": "6b71ac76-1d1e-4bc6-b08d-74a87104bd80", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e77bb752-3622-42b0-98cf-e8ec9b5bbff6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6f778089030d8d357b45d75fdf7a5c798c63083902c05c78e750b8ba43679de8", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.2\n\nIl est possible de r\u00e9cup\u00e9rer certaines donn\u00e9es du tableau, par exemple, certaines lignes, certaines colonnes ou bien encore des valeurs uniques. Pour cela, il suffit d'utiliser l'instruction \"loc\" avec les index des lignes et les index des colonnes. Le principe de fonctionnement de \"loc\" est relativement simple puisque l'on aura une instruction de la forme *loc[index_ligne,index_colonne]*\n\nTestez le programme suivant (vous pouvez r\u00e9utiliser le fichier *nsi_p.py*) :\n\n```python\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\ninfo=iden.loc[1,'prenom']\n```\nV\u00e9rifiez que la variable \"info\" contient bien le pr\u00e9nom \"christophe\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34fe050e-1244-4275-8ef1-e019dec38195": {"__data__": {"id_": "34fe050e-1244-4275-8ef1-e019dec38195", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "164745cf-e402-42fe-9c77-71f09999b1a6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5573a2bc044a8043eb57c20aa8000bac0a7e81e720e203b4ea70284338a0b26f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.3\n\nModifiez le programme de l'activit\u00e9 29.2 pour que la valeur de la variable *info* soit \u00e9gale \u00e0 \"12/06/1978\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 124, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b237626-8827-4796-8982-8e304b321ca5": {"__data__": {"id_": "7b237626-8827-4796-8982-8e304b321ca5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a50064b-e03b-4810-a064-6974bbe75a02", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "79e49225613ea06ec097ea01befd045488c7cf2a3a93e59038657dfe670ebf93", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.4\n\nIl est possible de r\u00e9cup\u00e9rer toutes les lignes d'une colonne, il suffit de remplacer la partie \"index_ligne\" de \"loc\" par \":\"\n\nTestez le programme suivant :\n\n```python\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\ninfo=iden.loc[:,'nom']\n```\n\nV\u00e9rifiez que la valeur de la variable \"info\" est \u00e9gale \u00e0 une structure de donn\u00e9es qui contient toutes les donn\u00e9es de la colonne d'index \"nom\", autrement dit, tous les noms.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e13ea6e8-12c0-4eaf-9828-70336f3b1fc5": {"__data__": {"id_": "e13ea6e8-12c0-4eaf-9828-70336f3b1fc5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "596b4044-9052-4b3d-82b3-c1b4c9c7a25e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e7d59a56e9084f54464a127a1a32550e3d50aa4e8622273653302c1a039c35ae", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.5\n\nIl est possible de r\u00e9cup\u00e9rer toutes les colonnes d'une ligne particuli\u00e8re, cette fois en rempla\u00e7ant la partie \"index_colonne\" de \"loc\" par \":\"\n\nTestez le programme suivant :\n\n```python\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\ninfo=iden.loc[2,:]\n```\n\nV\u00e9rifiez que la valeur de la variable \"info\" est \u00e9gale \u00e0 une structure de donn\u00e9es qui contient toutes les donn\u00e9es pr\u00e9sentes dans la ligne d'index 2 (la derni\u00e8re ligne).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 450, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23cc298e-b966-45bd-9863-85002cedc216": {"__data__": {"id_": "23cc298e-b966-45bd-9863-85002cedc216", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41f272a2-559c-4c1c-af26-b2c39ba0d479", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8e6e0b845931ed8090de5842888f04c2a12db00801798c12c385f8e9b771b5c1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.6\n\nIl est aussi possible de r\u00e9cup\u00e9rer seulement certaines lignes et certaines colonnes.\n\nTestez le programme suivant :\n\n```python\nimport pandas\niden=pandas.read_csv(\"ident_virgule.csv\")\ninfo=iden.loc[[0,1],['nom','date_naissance']]\n```\n\nOn r\u00e9cup\u00e8re bien les 2 premi\u00e8res lignes (index 0 et index 1) et les colonnes *nom* et *date_naissance*.\n\nAfin d'avoir des exemples plus complexes \u00e0 traiter, dans la suite, nous allons travailler sur les donn\u00e9es contenues dans le fichier villes_virgule.csv. Ce fichier contient des informations sur plus de 36000 communes fran\u00e7aises.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 583, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eddb1f41-9af5-4cd3-944e-7a15311c8aaf": {"__data__": {"id_": "eddb1f41-9af5-4cd3-944e-7a15311c8aaf", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f897967-51b1-4f8e-b001-2be179ff68e4", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d9bc394234fe3be4694a61d28507f558918b6c4839d5075f66261702758bf34b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.7\n\n- t\u00e9l\u00e9chargez le fichier villes_virgule.csv et placez-le dans r\u00e9pertoire *nsi_pandas*\n\n- dans la suite vous continuerez \u00e0 utiliser le ficher *nsi_p.py*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2bdfc6db-65b0-4570-8607-bc9435b32a2f": {"__data__": {"id_": "2bdfc6db-65b0-4570-8607-bc9435b32a2f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d12f1443-6ade-4678-8a20-b95cd75232db", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c3ed11e6a511552cd67c13f00def041ace5ab063355b4c524f4800edc3efd36d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.8\n\nTestez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\n``` \n\nV\u00e9rifiez que la variable \"info_villes\" contient bien les donn\u00e9es contenues dans le fichier ville_virgule.csv.\n\nComme vous pouvez le constater, il manque des donn\u00e9es dans le tableau qui s'affiche dans la console spyder (les donn\u00e9es manquantes sont symbolis\u00e9es par des ...), en effet, le tableau contient trop donn\u00e9es pour qu'il soit enti\u00e8rement affich\u00e9 dans la console spyder. Heureusement, il existe une solution :\n\nDans spyder, dans la fen\u00eatre situ\u00e9e juste au-dessus de la console, vous allez trouver un onglet \"Explorateur de variables\". Cliquez sur cet onglet, vous devriez alors obtenir ceci :\n\n!\n\nDouble-cliquez sur \"info_villes\" et vous devriez alors voir apparaitre une nouvelle fen\u00eatre qui contiendra un tableau avec l'ensemble des donn\u00e9es.\n\nEn explorant le tableau, vous devriez, notamment dans les colonnes l'altitude mini et maxi, voir apparaitre un \u00e9trange \"nan\" pour les derni\u00e8res villes du tableau. \"nan\" signifie \"not a number\", ici, cela veut tout simplement dire que certaines donn\u00e9es sont manquantes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48231277-49f7-4592-ae2e-bbcec8823e97": {"__data__": {"id_": "48231277-49f7-4592-ae2e-bbcec8823e97", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8544bbfe-dac1-413c-931b-7fa847e99956", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "847042602db61eb9199685d19e2e4cc22b543eca7500600a3c8d381c573d0990", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.9\n\nNous allons maintenant introduire des conditions dans la s\u00e9lection des villes. Imaginez par exemple que vous d\u00e9sirez obtenir un tableau contenant toutes les villes qui ont une altitude minimum sup\u00e9rieure \u00e0 1500 m :\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\nnom_alt=info_villes.loc[info_villes[\"alt_min\"]>1500,[\"nom\",\"alt_min\"]]\n```\n\nDans le \"loc\", l'expression \"info_villes[\"alt_min\"]>1500\" est bien avant la virgule, elle concerne donc les index des lignes du tableau. On s\u00e9lectionnera uniquement les lignes qui auront la valeur du descripteur \"alt_min\" sup\u00e9rieure \u00e0 1500. Nous allons donc bien s\u00e9lectionner les villes qui ont une altitude minimum sup\u00e9rieure \u00e0 1500 m", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1499bd0d-38d6-485e-9a52-6dbcfb987833": {"__data__": {"id_": "1499bd0d-38d6-485e-9a52-6dbcfb987833", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02a4694e-f437-4d77-8a2c-4883d248f35d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ff6677d5c1ea9f7446c95bff312266810868b37556b9ad2560cd9bf98c446f2a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.10\n\nEn vous inspirant de ce qui a \u00e9t\u00e9 fait \u00e0 l'activit\u00e9 29.9, \u00e9crivez un programme qui permettra d'avoir les villes qui ont une densit\u00e9 d'habitant inf\u00e9rieure \u00e0 50 (dans le tableau ainsi cr\u00e9\u00e9, on aura 3 colonnes : le nom de la ville, la densit\u00e9 de la population et l'altitude minimum)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "391be54b-85f9-409d-a191-29d0b3299e6c": {"__data__": {"id_": "391be54b-85f9-409d-a191-29d0b3299e6c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1dbc7e3-6f2e-41f3-94a8-854ad40dbc0b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ac592d47edceb3b46117261d6a920a7c0699ff9f5ae2f34d9b0ff56a9c582d11", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.11\n\nIl est possible de combiner plusieurs facteurs de s\u00e9lection en utilisant un \"et\"(\"&\") ou un \"ou\"(\"|\").\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\nnom_alt=info_villes.loc[(info_villes[\"alt_min\"]>1500) & (info_villes[\"dens\"]>50),[\"nom\",\"dens\",\"alt_min\"]]\n```\n\nVous devriez constater qu'il y a, en France, une seule ville avec une densit\u00e9 de population sup\u00e9rieure \u00e0 50 et une altitude minimum sup\u00e9rieure \u00e0 1500 m.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 503, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7078bc04-4d7a-4a10-8e77-4e6414115997": {"__data__": {"id_": "7078bc04-4d7a-4a10-8e77-4e6414115997", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd3aca25-96bb-4905-b09c-d8c3ec82cbdc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "dd31aa5d8c9d6cdf76de537385d1f4b338e192d7444b290dd555cfb444216ae1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.12\n\nIl est aussi possible d'effectuer des calculs sur des colonnes, par exemple des moyennes. Il suffit d'utiliser l'instruction \"mean\" pour effectuer une moyenne :\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\nmoyenne_alt_min=info_villes.loc[:,\"alt_min\"].mean()\n```\n\nVous devriez constater que l'altitude minimum moyenne est de 193 m en France. Je rappelle que dans \"loc[:,\"alt_min\"]\" le \":\" signifie que l'on consid\u00e8re toutes les lignes du tableau. De plus le \"alt_min\" que le calcul de la moyenne porte bien sur les donn\u00e9es du descripteur \"alt_min\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "285cc418-daff-4a14-bcb8-5dca0a2e707e": {"__data__": {"id_": "285cc418-daff-4a14-bcb8-5dca0a2e707e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa433598-b826-479b-af9b-ec23f4dacd0c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cb04c2ae561f0c260a74893b0e84452fe04bb8d899db230f5133d6f5698caea3", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.13\n\n\u00c9crivez un programme permettant de calculer le nombre moyen d'habitants en 2012", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 97, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0df7178f-1576-42ac-8232-e251c2bab3a1": {"__data__": {"id_": "0df7178f-1576-42ac-8232-e251c2bab3a1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03d86264-711d-485a-8009-e013e0db7949", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ac318a74a854763669b49ffd5b958d69349f6197935c1b3be065c4a9768117ba", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.14\n\nPour l'instant nous avons calcul\u00e9 une moyenne sur l'ensemble des lignes, il est aussi possible d'imposer une condition sur les lignes qui seront utilis\u00e9es pour le calcul.\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\nnbe_hab=info_villes.loc[info_villes[\"alt_min\"]>1500,\"nb_hab_2012\"].mean()\n```\n\nVous devriez constater que les villes ayant une altitude minimum sup\u00e9rieure \u00e0 1500 m avaient en moyenne 350 habitants en 2012.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 512, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a82eaf99-40a5-4a08-8d6c-80179ea01d2e": {"__data__": {"id_": "a82eaf99-40a5-4a08-8d6c-80179ea01d2e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "466cf383-947e-4d25-a811-4520f00b178e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "00ba02e84a4b3ca86c570d7d00427b24fb5a938d673b45204ace36c725cbc3d7", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.15\n\nIl est aussi possible de trier le tableau en fonction des valeurs d'un descripteur. Il suffit d'utiliser l'instruction \"sort_values\"\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\ntri_alt_min=info_villes.sort_values(by=[\"alt_min\"])\n```\n\nVous devriez obtenir un nouveau tableau de donn\u00e9es \"tri_alt_min\" tri\u00e9 dans l'ordre croissant des altitudes minimums. Quelle est la ville ayant l'altitude minimum la plus faible de France ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa94bd64-4d32-4869-8b7f-4b172544f465": {"__data__": {"id_": "fa94bd64-4d32-4869-8b7f-4b172544f465", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aed087b8-f085-4800-8fed-106b905c9565", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8c79692fe818be4c98951d9225d844bf7cf119786ecedda9220200ba5165e60e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.16\n\nIl est aussi possible de trier par ordre d\u00e9croissant en ajoutant \"ascending=False\" :\n\nAnalysez et testez le programme suivant :\n\n```python\nimport pandas\ninfo_villes=pandas.read_csv(\"villes_virgule.csv\")\ntri_alt_min=info_villes.sort_values(by=[\"alt_min\"], ascending=False)\n```\n\nQuelle est la ville ayant l'altitude minimum la plus importante de France ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce4e63a7-080c-427c-9e29-60a0691ffdc6": {"__data__": {"id_": "ce4e63a7-080c-427c-9e29-60a0691ffdc6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "573f9e19-c462-403c-9620-e2c114a24b55", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d9cf43471aa354a8f5985af80b727cf7d1e93513b5a0230a2fcbdf4d2c5de91b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.17\n\n\u00c9crivez un programme permettant de r\u00e9pondre \u00e0 la question suivante : quelle est la ville ayant la densit\u00e9 de population la plus forte ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 153, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9966bb93-f78e-4bd6-a47e-00161a75c2d0": {"__data__": {"id_": "9966bb93-f78e-4bd6-a47e-00161a75c2d0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dc5e5b63-5db8-4e55-8607-e4b48a73acf0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "29c93b43eb73b8f54f619cf47eba1fe0f23531f69a402912cce6100d31f5c450", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.18\n\nIl est possible de fusionner 2 tableaux de donn\u00e9es qui ont une colonne commune :\n\nAfin de travailler sur cette fusion, nous allons travailler avec 2 fichiers au format CSV : fiches_client.csv et fiches_com.csv\n\nApr\u00e8s avoir t\u00e9l\u00e9charg\u00e9 les 2 fichiers ci-dessus, testez le code suivant :\n\n```python\nimport pandas\nclient=pandas.read_csv(\"fiches_client.csv\")\ncommande=pandas.read_csv(\"fiches_com.csv\")\n```\n\nUtilisez l'explorateur de variables de Spyder afin d'afficher le contenu des variables \"client\" et \"commande\"\n\nVous devriez normalement obtenir pour \"client\" :\n\n!\n\net pour \"commande\" :\n\n!\n\nRien de bien complexe, nous avons un tableau qui r\u00e9f\u00e9rence les clients (nom, pr\u00e9nom, ville), chaque client poss\u00e8de un num\u00e9ro de client. Le deuxi\u00e8me tableau r\u00e9f\u00e9rence des commandes : pour chaque commande, nous avons un num\u00e9ro de commande, une date et le num\u00e9ro du client qui a pass\u00e9 la commande, ce num\u00e9ro de client correspond \u00e9videmment au num\u00e9ro de client que l'on trouve dans le premier tableau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93edc356-16c0-40fe-805c-b31d0d412e0d": {"__data__": {"id_": "93edc356-16c0-40fe-805c-b31d0d412e0d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f697fcc2-2c2c-4cf7-838b-bc3564ec30ee", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "92aaf57b0dd3e3cb7b6ba141126eeeb42d655e0562a47af23aa99a777e83613f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.19\n\nSachant que nous avons deux colonnes contenant les m\u00eames types d'information (num\u00e9ros de client), nous allons pouvoir fusionner les deux tableaux en un seul :\n\nTestez le code suivant :\n\n```python\nimport pandas\nclient=pandas.read_csv(\"fiches_client.csv\")\ncommande=pandas.read_csv(\"fiches_com.csv\")\ncl_com=pandas.merge(client, commande)\n```\n\nUtilisez l'explorateur de variables de Spyder afin d'afficher la valeur de la variable *cl_com*\n\nVous devriez obtenir ceci :\n\n!\n\nPrenons l'exemple de Mme Julie Gabriaux qui habite \u00e0 Bordeaux (n\u00b0 de client 2454) et de la commande effectu\u00e9e le 02/02/2012 par le client ayant le n\u00b0 2454 (commande n\u00b0 45). La cliente qui a pass\u00e9 cette commande n\u00b0 45 est bien Mme Gabriaux, nous avons une ligne dans notre tableau *cl-com*\n\nNous avons bien fusionn\u00e9 les 2 tableaux \"client\" et \"commande\" en un seul tableau *cl_com* qui regroupe les informations pour chaque commande. Quand on effectue ce genre de fusion, on dit souvent que l'on effectue une jointure.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1004, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6a49484-6ba8-428d-91a3-09933d037077": {"__data__": {"id_": "a6a49484-6ba8-428d-91a3-09933d037077", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "432a33af-0f47-4f8f-8a57-0d831e867abf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8991c2bfe944dc02165ab130ae14660949ffe7d05b2ec9d52d1ee094f6374c31", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.20\n\nIl faut prendre garde \u00e0 l'ordre des arguments de la fonction *merge* :\n\nTestez le code suivant :\n\n```python\nimport pandas\nclient=pandas.read_csv(\"fiches_client.csv\")\ncommande=pandas.read_csv(\"fiches_com.csv\")\ncom_cl=pandas.merge(commande, client)\n```\n\nUtilisez l'explorateur de variables de Spyder afin d'afficher la valeur de la variable **com_cl*\n\nVous devriez obtenir ceci :\n\n!\n\nComme vous pouvez le constater, l'ordre des colonnes est diff\u00e9rent. Il faudra donc \u00eatre attentif \u00e0 l'ordre des param\u00e8tres de la fonction *merge*.\n\nRemarque : On trouve Mme Ila Neufville sur 2 lignes, car elle a pass\u00e9 2 commandes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 629, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e8e9cdf-13a4-4ef5-bdc8-a2d080a5e1d4": {"__data__": {"id_": "7e8e9cdf-13a4-4ef5-bdc8-a2d080a5e1d4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0702bcce-8a0a-4652-911f-c244f4bcfdcf", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "82b6812011b3fe48dbce8b058f3790a57491e4acdf88792f05d63bb064497614", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.21\n\nVous avez peut-\u00eatre remarqu\u00e9 que Mme \u00c9lodie Gaulin (n\u00b0 de client 895) bien que pr\u00e9sente dans le tableau \"client\", est absente du tableau *com_cl* (ou *cl_com*). Pourquoi d'apr\u00e8s vous ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6439a816-fd3a-49e9-a31e-ce55a29e45e0": {"__data__": {"id_": "6439a816-fd3a-49e9-a31e-ce55a29e45e0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26b70a52-86a5-44fb-a608-3f777d377357", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "387a941a43dfd70463fcc842d021c38144f7dd709dce218b195c277992319cc0", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 29.22\n\nDe la m\u00eame mani\u00e8re, aucun trace de la commande n\u00b0 1324 du 01/02/2017 dans le tableau *com_cl* (ou *cl_com*), pourquoi d'apr\u00e8s vous ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c1fb8d3-5911-4032-91f0-64f39c5c1f22": {"__data__": {"id_": "9c1fb8d3-5911-4032-91f0-64f39c5c1f22", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24fda5db-e8e4-46f7-b0fc-aceab1d7d18d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "74d14743a77d5dcb9dd1e9f4069f65adaa387f98956cf403aefe36b0a8d92ae9", "class_name": "RelatedNodeInfo"}}, "text": "1) Les donn\u00e9es en table\n\nLe stockage de l'information est un enjeu majeur pour nos soci\u00e9t\u00e9s. Les donn\u00e9es peuvent \u00eatre stock\u00e9es sous forme de tableau, on parle alors de donn\u00e9es tabulaires ou plus simplement de donn\u00e9es en table.\n\nVoici un exemple de donn\u00e9es stock\u00e9es sous forme de tableau :\n\n| nom | pr\u00e9nom | date_naissance |\n| --- | --- | --- |\n| Durand | Jean-Pierre | 23/05/1985 |\n| Dupont | Christophe | 15/12/1967 |\n| Terta | Henry | 12/06/1978 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0418710b-b187-487a-80d6-c4b20d6b37da": {"__data__": {"id_": "0418710b-b187-487a-80d6-c4b20d6b37da", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "780bc9ad-a39a-4ea5-bc8d-50fe6deadb25", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "e913e29b9e3dd7f7f5e7c6610d3471e83533287f170c80279c98ddc2d4ba566e", "class_name": "RelatedNodeInfo"}}, "text": "2) le format CSV", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 18, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9738cb1b-882f-4ca6-9ecf-4927419f89cc": {"__data__": {"id_": "9738cb1b-882f-4ca6-9ecf-4927419f89cc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2aa9f9f4-9ea2-411a-869f-052373965fab", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "dc1c9369df155077d2b991b16e413a62a6904f1175991fda7f10f416b05e712a", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nLe format CSV permet de stocker des donn\u00e9es sous forme de tableau, d'apr\u00e8s Wikip\u00e9dia :\n\n*Un fichier CSV est un fichier texte, par opposition aux formats dits \u00ab binaires \u00bb. Chaque ligne du texte correspond \u00e0 une ligne du tableau et les virgules correspondent aux s\u00e9parations entre les colonnes. Les portions de texte s\u00e9par\u00e9es par une virgule correspondent ainsi aux contenus des cellules du tableau.*\n\nVoici le tableau ci-dessus au format CSV :\n\n```\nnom,prenom,date_naissance\nDurand,Jean-Pierre,23/05/1985\nDupont,Christophe,15/12/1967\nTerta,Henry,12/06/1978\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fccc193-15dc-413c-9620-cd72b4fa141a": {"__data__": {"id_": "1fccc193-15dc-413c-9620-cd72b4fa141a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7a0da90-66f5-4a25-b8a9-38fdfa18852d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "b9a05fa7f918bdb4c9394fae227480ec3b9d043e71271a500364ee8c4fadba86", "class_name": "RelatedNodeInfo"}}, "text": "b) descripteurs\n\n*nom*, *prenom* et *date_naissance* sont appel\u00e9s des descripteurs. Les descripteurs permettent de d\u00e9crire un *objet* et ainsi de pouvoir le distinguer d'un autre *objet* du m\u00eame type (*nom*, *prenom* et *date_naissance* sont des caract\u00e9ristiques qui permettent de distinguer 2 personnes). \"Durand\", \"Dupont\" et \"Terta\" sont les valeurs du descripteur *nom*.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 376, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21d48d8a-81b2-4654-b857-71106cea72e3": {"__data__": {"id_": "21d48d8a-81b2-4654-b857-71106cea72e3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33a0932c-1719-4bb2-87cb-9673866a4557", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "77e07fe7b6043761ea362f480708db252c7cf2146efc216054efc040d02cea1b", "class_name": "RelatedNodeInfo"}}, "text": "c) s\u00e9parateur\n\nLa virgule est un standard pour les donn\u00e9es anglo-saxonnes, mais pas pour les donn\u00e9es aux normes fran\u00e7aises. En effet, en fran\u00e7ais, la virgule est le s\u00e9parateur des chiffres d\u00e9cimaux. Il serait impossible de diff\u00e9rencier les virgules des d\u00e9cimaux et les virgules de s\u00e9paration des informations. C\u2019est pourquoi on utilise un autre s\u00e9parateur : le point-virgule (;). Dans certains cas cela peut engendrer quelques probl\u00e8mes, vous devrez donc rester vigilants sur le type de s\u00e9parateur utilis\u00e9.\n\nLes tableurs, tels que \"Calc\" (Libre Office), sont normalement capables de lire les fichiers au format CSV. J'ai pr\u00e9cis\u00e9 \"normalement\" car certains tableurs g\u00e8rent mal le s\u00e9parateur CSV \"point-virgule\" et le s\u00e9parateur des chiffres d\u00e9cimaux \"virgule\".", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9dc9f0b-355c-4d7f-af02-925954b1f070": {"__data__": {"id_": "b9dc9f0b-355c-4d7f-af02-925954b1f070", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dc122a68-03e0-4df8-988c-b9f735a80a7c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}, "hash": "7b3a4410fa921a11dbd0ee66cce022a53e44673c5d0248e0bb9bc9cbe462a09a", "class_name": "RelatedNodeInfo"}}, "text": "3) traitement des donn\u00e9es\n\nPour traiter des donn\u00e9es, nous allons utiliser la biblioth\u00e8que Python Pandas. On rappelle qu'une biblioth\u00e8que  permet de rajouter des fonctionnalit\u00e9s par rapport au langage de base. La biblioth\u00e8que Pandas est donc tr\u00e8s utilis\u00e9e pour tout ce qui touche au traitement des donn\u00e9es. Nous allons nous int\u00e9resser \u00e0 cette biblioth\u00e8que dans la partie *activit\u00e9* de ce chapitre.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eac2d760-c614-4653-bcbf-fca614515d0e": {"__data__": {"id_": "eac2d760-c614-4653-bcbf-fca614515d0e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29r.md", "file_name": "termc29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2df0bc09-c863-49e8-bba1-472062e27e1a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29r.md", "file_name": "termc29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f3e086f764df12564defff2e4ae152ed1eb6af3f81e939480f0c47f8ea851896", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir\n\nUn fichier CSV est un fichier texte. Chaque ligne du texte correspond \u00e0 une ligne d'un tableau et les virgules correspondent aux s\u00e9parations entre les colonnes.\n\nce contenu :\n\n```\nnom,prenom,date_naissance\nDurand,Jean-Pierre,23/05/1985\nDupont,Christophe,15/12/1967\nTerta,Henry,12/06/1978\n```\n\npermet d'avoir l'\u00e9quivalent de :\n\n| nom | pr\u00e9nom | date_naissance |\n| --- | --- | --- |\n| Durand | Jean-Pierre | 23/05/1985 |\n| Dupont | Christophe | 15/12/1967 |\n| Terta | Henry | 12/06/1978 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3e841de-f912-4e6e-8959-516caf5846c3": {"__data__": {"id_": "f3e841de-f912-4e6e-8959-516caf5846c3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29r.md", "file_name": "termc29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "83eb8fb8-0635-4613-82c5-684c2192999f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29r.md", "file_name": "termc29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d15a7095479d1d594d1cbcdc9d8c039f70ef251ce4181e6438bdafbbbd32911b", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir faire\n\nVous devez \u00eatre capable, gr\u00e2ce \u00e0 la biblioth\u00e8que Pandas, d'effectuer des requ\u00eates sur des donn\u00e9es au format CSV", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e26abf10-ebbf-4960-9a65-5a0a63f85a89": {"__data__": {"id_": "e26abf10-ebbf-4960-9a65-5a0a63f85a89", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e04e43f-37a0-4929-95b7-005c494b730c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "406c9cfb1ad6f9c39734a486f07f64072bd2596c67712a7bdf33a77e594eff89", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.1\nIl est possible de visualiser le contenu d'un tuple ou d'un tableau directement dans la console.\n\nSaisissez le code suivant dans la partie \"\u00e9diteur\" de spyder :\n\n```python\nmon_tuple = (5, 8, 6, 9)\n```\nEx\u00e9cutez le programme\n\nTapez ensuite *mon_tuple* dans la partie \"console\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 289, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08bc169d-727c-47aa-be6a-63cbca5d3041": {"__data__": {"id_": "08bc169d-727c-47aa-be6a-63cbca5d3041", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39f79a40-dd3c-4118-ae14-7509e52a819a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2473537f138d61e3c9c5b8bda6f598862f9efc9e463fcfb8f94786f916a7ee94", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.2\n\nCompl\u00e9tez le programme suivant afin que la variable *a* ait pour valeur 8\n\n```python\nmon_tuple = (5, 8, 6, 9)\na = mon_tuple[...]\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae3e6ebd-8741-4de2-9936-0551d8762214": {"__data__": {"id_": "ae3e6ebd-8741-4de2-9936-0551d8762214", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8892a1b0-c6be-437e-9fe4-5cbae300a8f7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0b7bab0eedd682256334dc8dc4f5c1a1ee339814cd5a92b276e462fe2f621a72", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.3\n\nCompl\u00e9tez le programme suivant afin que la variable *a* ait pour valeur 8 et que la variable *b* ait pour valeur 5 \n\n```python\na, b = (..., ...)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 164, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63896d1e-3fae-4087-ada8-c6a5e3fc9003": {"__data__": {"id_": "63896d1e-3fae-4087-ada8-c6a5e3fc9003", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fe07ea4a-d731-4d51-8fed-7cc2bb4c6a9f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "e84027fae75c00d9f1bfb8890134f228156e4eafcb137655efa76319cc8f9562", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.4\n\nCompl\u00e9tez le programme ci-dessous pour qu'apr\u00e8s ex\u00e9cution de ce dernier, le tableau *mon_tab* soit compos\u00e9 des \u00e9l\u00e9ments suivants : [15, 8, 6,  9]\n\n```python\nmon_tab = [5, 8, 6, 9]\nmon_tab[...] = 15\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c168605c-e366-4289-a463-6e25acad82f7": {"__data__": {"id_": "c168605c-e366-4289-a463-6e25acad82f7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "769d4a44-4559-4c7c-b367-c8ebc7157b9f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d1ad0dc1bd06f1b77a9cae9afc6c2763edd02180a2a9f861f8e0c1bc18262e90", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.5\n\nSoit le tableau suivant :\n\n```python\ntab = [3,3,6,9]\n```\nQuelle sera la composition de ce tableau si on ex\u00e9cute la ligne suivante :\n\n```python\ntab.append(0)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 176, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d4cb3c5-7114-441a-baa5-825c4d5ee4b3": {"__data__": {"id_": "0d4cb3c5-7114-441a-baa5-825c4d5ee4b3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4529fcca-8cb6-46fa-aa56-00e1ec784c60", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8f9370576043f1226f39522ead433e83f3e4893ec028d98d8be87962e69ed2a2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.6\n\n```python\nmon_tab = [1, 2, 3, 4]\ndel mon_tab[1]\n```\nDonnez  la composition du tableau *mon_tab*  apr\u00e8s l'ex\u00e9cution du programme  ci-dessus", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 154, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ad2a918-ef77-42b7-ba7b-f72f6f15bf69": {"__data__": {"id_": "7ad2a918-ef77-42b7-ba7b-f72f6f15bf69", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "338310ba-50d0-4abb-b4ed-09616deb99c9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8ee98add3ddf68c7c8eb446b212506e04e52edb3877b8c4bedcd3f426f9b3032", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.7\n\n```python\nmon_tab = [5, 8, 6, 9, 15,  0]\na = len(mon_tab)\n```\nQuelle  est la valeur de la variable *a*  apr\u00e8s  l'ex\u00e9cution du programme ci-dessus ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6297c6b3-d96f-44e2-b865-005d3cd3c3ed": {"__data__": {"id_": "6297c6b3-d96f-44e2-b865-005d3cd3c3ed", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e55778e9-f7c2-48f1-8180-23681afbf192", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1d259686e65ce3652de751edc12df0d19f130938bebfabda383cc95fdec5a45c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.8\n\n```python\ntab = [1, 2, 3]\ns = 0\nfor t in tab:\n\ts = s + t\n```\nQuelle est la valeur de la variable *s* apr\u00e8s  l'ex\u00e9cution du programme  ci-dessus. V\u00e9rifiez  votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8c92ffe-e20b-4a65-af2e-739bb8a18b9f": {"__data__": {"id_": "c8c92ffe-e20b-4a65-af2e-739bb8a18b9f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fc242479-8283-4a04-8046-74b8a888b362", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "132d7d79241ac7a1ba75e7b1a65f39986450f08c68c9b6d5cf15e75beb0eacff", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.9\n\n```python\ntab = [5, 3, 4, 8]\nmon_tab = [2*t for t in tab if t > 4]\n```\n\nQuelle est la composition du tableau *mon_tab* apr\u00e8s  l'ex\u00e9cution du programme  ci-dessus. V\u00e9rifiez  votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2bb7bf3a-190c-46f3-8b44-1abc7f4de6d8": {"__data__": {"id_": "2bb7bf3a-190c-46f3-8b44-1abc7f4de6d8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62da7f67-0e51-4d8b-aa1f-e4cec4e04a3f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b446bb1285b49c70fed590b92c845ae729a9e72044293ef14470a80f29504f83", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.10\n\nSoit le programme suivant :\n\n```python\nm = [[1, 3, 4],\n     [5, 6, 8],\n     [2, 1, 3],\n     [7, 8, 15]]\na  = m[0][1]\n```\nQuelle est la valeur de la variable *a* apr\u00e8s  l'ex\u00e9cution de ce programme ? V\u00e9rifiez  votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 262, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70268cc4-aab1-49fa-882b-aa2703f2954e": {"__data__": {"id_": "70268cc4-aab1-49fa-882b-aa2703f2954e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79c038ee-54d1-441f-8611-70edf59a6111", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "972bb9c3ee9482f9be3919a80d3bc8228e71b1639d870f865cb341392fe0c15a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.11\n\n```python\nm = [[1, 3],\n     [5, 8],\n     [2, 3]]\nnb_colonne = 2\nnb_ligne = 2\na = 0\nfor i in range(0, nb_ligne):\n\tfor j in range(0, nb_colonne):\n\t\ta = a + m[i][j]\n```\n\nQuelle est la valeur de la variable *a* apr\u00e8s  l'ex\u00e9cution de ce programme ? V\u00e9rifiez  votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f26b619-a964-4f37-9602-168c94b08d00": {"__data__": {"id_": "9f26b619-a964-4f37-9602-168c94b08d00", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05520f5c-c468-4899-920f-3e83a15e7e9b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1beb87e714dfdf4ed2c83509b443d062c64197d005d9d48a9ab71f94a1c8f18d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.12\n\nLa fonction *recherche_max* prend en param\u00e8tre un tableau et renvoie la plus grande valeur pr\u00e9sente dans le tableau (le tableau est constitu\u00e9 d'entiers positifs ou nuls).\n\nPar exemple, *recherche_max([4, 3, 0, 5])* renvoie 5\n\n```python\ndef recherche_max(tab):\n\tmaxi = ...\n\tfor t in tab :\n\t\tif ... > maxi :\n\t\t\tmaxi = ...\n\treturn ...\n```\nComp\u00e9tez la fonction ci-dessus", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8bea27a9-163e-4719-9df6-a538613c41ba": {"__data__": {"id_": "8bea27a9-163e-4719-9df6-a538613c41ba", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2fad7370-a7f2-406e-9d3a-e7c3caded3a0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "9017cc8245c0aa66f838a0292ddef29d9c7bc26e58e98a51a40c0e04f882db20", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.13\n\nLa fonction *somme* prend en param\u00e8tres un tableau *tab* contenant des entiers. Cette fonction renvoie la somme des entiers pr\u00e9sents dans le tableau *tab*.\n\nExemples :\n\n```\n>>> somme([3,5,8,4])\n20\n```\n\n```python\ndef somme(tab):\n\ts = ...\n\tfor t in ... :\n\t\ts = s + ...\n\treturn ...\n```\n\nCompl\u00e9tez la fonction *somme* ci-dessus.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c285fce-c453-4c7e-b2e9-3a77a8a60a84": {"__data__": {"id_": "3c285fce-c453-4c7e-b2e9-3a77a8a60a84", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40e025c6-2456-4007-93f3-666b62247722", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d085858e8ed3f14f2098112566f2d2bca0eee54177942bdb38dd3f662e905022", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.14\n\nLa fonction *recherche* prend en param\u00e8tres un tableau *tab* contenant des entiers et un entier *n*. Cette fonction renvoie l'indice de position de l'entier n s'il est pr\u00e9sent dans le tableau *tab* ou -1 dans le cas contraire (on partira du principe que le tableau ne peut pas contenir 2 fois le m\u00eame entier).\n\nExemples :\n\n```\n>>> recherche([3,5,8,34], 8)\n2\n>>> recherche([3,5,8,34], 42)\n-1\n```\n\n```python\ndef recherche(tab, n):\n\tindice = ...\n\ti = 0\n\tfor t in ... :\n\t\tif n == ... :\n\t\t\tindice = ...\n\t\ti = i + ...\n\treturn ...\n```\n\nCompl\u00e9tez la fonction *recherche* ci-dessus.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 590, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6091a53b-0e88-44be-a481-236e1de75441": {"__data__": {"id_": "6091a53b-0e88-44be-a481-236e1de75441", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4700beef-9efc-42d3-98d6-f733208145f3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4821df1a1892087ec6dbccb81f283cce58dd7df3271ad11c06bfe8571da5175f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 2.15\n\n\u00c9crire une fonction *moyenne* qui prend en param\u00e8tre un tableau d'entiers non vide *tab* et qui renvoie la moyenne de ces entiers.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40642346-01dc-46a3-8c7e-b2e533177c01": {"__data__": {"id_": "40642346-01dc-46a3-8c7e-b2e533177c01", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70fbe1ce-ad6e-4449-b186-252d8df835c3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "8fe5ff1a50cabf596ca0efcaaa359e070e1812dd5f8b55544c918356d1761259", "class_name": "RelatedNodeInfo"}}, "text": "1) Les s\u00e9quences en Python\n\nIl est possible de \"stocker\" plusieurs grandeurs dans une m\u00eame structure, ce type de structure est appel\u00e9 une s\u00e9quence. De fa\u00e7on plus pr\u00e9cise, nous d\u00e9finirons une s\u00e9quence comme un ensemble fini et ordonn\u00e9 d'\u00e9l\u00e9ments indic\u00e9s de 0 \u00e0 n-1 (si cette s\u00e9quence comporte n \u00e9l\u00e9ments). Rassurez-vous, nous reviendrons ci-dessous sur cette d\u00e9finition. Nous allons \u00e9tudier plus particuli\u00e8rement 2 types de s\u00e9quences : les tuples et les tableaux (il en existe d'autres que nous n'\u00e9voquerons pas ici).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 518, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e9e2c25-48e4-41d5-9c3e-d30c8fbb99ae": {"__data__": {"id_": "6e9e2c25-48e4-41d5-9c3e-d30c8fbb99ae", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74c50bfd-b324-4520-afc0-1497f9a7e167", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "b2874865b7097189da5dafcaba67305cc193b12cd3bd33cbe931bc4c22974a43", "class_name": "RelatedNodeInfo"}}, "text": "a) Les tuples en Python\n\nComme d\u00e9j\u00e0 dit ci-dessus, un tuple est une s\u00e9quence. Voici un exemple tr\u00e8s simple :\n\n```python\nmon_tuple = (5, 8, 6, 9)\n```\n\nDans le code ci-dessus, le nom mon_tuple est associ\u00e9 \u00e0 un tuple (l'association entre un nom et un tuple est aussi une variable), ce tuple est constitu\u00e9 des entiers 5, 8, 6 et 9. Comme indiqu\u00e9 dans la d\u00e9finition, chaque \u00e9l\u00e9ment du tuple est indic\u00e9 (il poss\u00e8de un indice):\n\nle premier \u00e9l\u00e9ment du tuple (l'entier 5) poss\u00e8de l'indice 0\nle deuxi\u00e8me \u00e9l\u00e9ment du tuple (l'entier 8) poss\u00e8de l'indice 1\nle troisi\u00e8me \u00e9l\u00e9ment du tuple (l'entier 6) poss\u00e8de l'indice 2\nle quatri\u00e8me \u00e9l\u00e9ment du tuple (l'entier 9) poss\u00e8de l'indice 3\nComment acc\u00e9der \u00e0 l'\u00e9l\u00e9ment d'indice i dans un tuple ?\n\nSimplement en utilisant la \"notation entre crochets\" :\n\n```python\nmon_tuple = (5, 8, 6, 9)\na = mon_tuple[2]\n```\n\nDans le programme ci-dessus, la variable *a* a pour valeur 6.\n\nATTENTION : dans les s\u00e9quences les indices commencent toujours \u00e0 0 (le premier \u00e9l\u00e9ment de la s\u00e9quence a pour indice 0), oublier cette particularit\u00e9 est une source d'erreur \"classique\".\n\nUn tuple ne contient pas forc\u00e9ment des nombres entiers, il peut aussi contenir des nombres d\u00e9cimaux, des cha\u00eenes de caract\u00e8res, des bool\u00e9ens...\n\nDans le programme ci-dessous :\n\n```python\nmon_tuple = (\"le\", \"monde\", \"bonjour\")\nmsg = mon_tuple[2] + \" \" + mon_tuple[0] + \" \" + mon_tuple[1] + \"!\"\n```\n\nla variable msg a pour valeur : \"bonjour le monde!\"\n\nGr\u00e2ce au tuple, une fonction peut renvoyer plusieurs valeurs :\n\nInt\u00e9ressons-nous au programme suivant :\n\n```python\ndef add(a, b):\n\tc = a + b\n\treturn (a, b, c)\nval = add(5, 8)\n```\nApr\u00e8s ex\u00e9cution du programme ci-dessus, la variable *val* a  pour valeur le tuple *(5, 8, 13)* car notre fonction *add* renvoie bien un tuple (*return (a, b, c)*)\n\nIl est possible d'associer \u00e0 des noms les valeurs contenues dans un tuple. Dans l'exemple ci-dessous :\n\n```python\na, b, c = (5, 8, 6)\n```\n\nla variable *a* a pour valeur 5, *b* a pour valeur 8 et *c* a pour valeur 6.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1996, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aee169ac-3dc0-413d-b8fa-5710d911054e": {"__data__": {"id_": "aee169ac-3dc0-413d-b8fa-5710d911054e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34a2d468-393d-4a43-83e3-25ba639d70fe", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "c25ff415ee64d616fd97e5ab8fc2528a786424a7da2de6bf0ce23d8011f290e6", "class_name": "RelatedNodeInfo"}}, "text": "b) Les tableaux en Python\n\nATTENTION : Dans la suite nous allons employer le terme \"tableau\". Pour parler de ces \"tableaux\" les concepteurs de Python ont choisi d'utiliser le terme de \"list\" (\"liste\" en fran\u00e7ais). Pour \u00e9viter toute confusion, notamment par rapport \u00e0 des notions qui seront abord\u00e9es en terminale, le choix a \u00e9t\u00e9 fait d'employer \"tableau\" \u00e0 la place de \"liste\" (dans la documentation vous rencontrerez le terme \"list\", cela ne devra pas vous perturber)\n\nIl n'est pas possible de modifier un tuple apr\u00e8s sa cr\u00e9ation (on parle d'objet \"immutable\"), si vous essayez de modifier un tuple existant, l'interpr\u00e9teur Python vous renverra une erreur. Les tableaux sont,comme les tuples, des s\u00e9quences, mais \u00e0 la diff\u00e9rence des tuples, ils sont modifiables (on parle d'objets \"mutables\").\n\nPour cr\u00e9er un tableau, il existe diff\u00e9rentes m\u00e9thodes : une de ces m\u00e9thodes ressemble beaucoup \u00e0 la cr\u00e9ation d'un tuple :\n\n```python\nmon_tab = [5, 8, 6, 9]\n```\n\nNotez la pr\u00e9sence des crochets \u00e0 la place des parenth\u00e8ses.\n\nUn tableau est une s\u00e9quence, il est donc possible de \"r\u00e9cup\u00e9rer\" un \u00e9l\u00e9ment d'un tableau \u00e0 l'aide de son indice (de la m\u00eame mani\u00e8re que pour un tuple)\n\nDans le cas ci-dessous :\n\n```python\nmon_tab = [5, 8, 6, 9]\nval = mon_tab[1]\n```\nla variable *val* a pour valeur  8 (index 0 : 5, index 1 :  8...)\n\nIl est possible de modifier un tableau \u00e0 l'aide de la \"notation entre crochets\" :\n\n```python\nmon_tab = [5, 8, 6, 9]\nmon_tab[2] = 15\n```\nApr\u00e8s l'ex\u00e9cution du programme ci-dessus, la tableau *mon_tab* est constitu\u00e9 des valeurs suivantes : [5, 8, **15**,  9]. L'\u00e9l\u00e9ment d'indice 2 (le nombre entier 6) a bien \u00e9t\u00e9 remplac\u00e9 par le nombre entier 15\n\nIl est aussi possible d'ajouter un \u00e9l\u00e9ment en fin de tableau \u00e0 l'aide de la m\u00e9thode \"append\" :\n\n```python\nmon_tab = [5, 8, 6, 9]\nmon_tab.append(15)\n```\n\nApr\u00e8s l'ex\u00e9cution du programme ci-dessus, la tableau *mon_tab* est constitu\u00e9 des valeurs suivantes : [5, 8, 6, 9, **15**]. La valeur 15 a  bien \u00e9t\u00e9 ajout\u00e9e au tableau en derni\u00e8re position.\n\nL'instruction \"del\" permet de supprimer un \u00e9l\u00e9ment d'un tableau en utilisant son index :\n\n```python\nmon_tab = [5, 8, 6, 9]\ndel mon_tab[1]\n```\n\u00c0 la suite de l'ex\u00e9cution du programme ci-dessus le tableau *mon_tab* contient les  valeurs [5, 6, 9] : l'\u00e9l\u00e9ment situ\u00e9 \u00e0 l'index 1 (c'est \u00e0 dire 8) a bien \u00e9t\u00e9 supprim\u00e9.\n\nLa fonction \"len\" renvoie le nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans une s\u00e9quence (tableau et tuple)\n\n```python\nmon_tab = [5, 8, 6, 9]\na = len(mon_tab)\n```\nApr\u00e8s ex\u00e9cution du programme ci-dessus,  la  variable *a* a  pour valeur 4 (le tableau [5, 8, 6, 9] est bien constitu\u00e9 de 4 \u00e9l\u00e9ments)\n\nApr\u00e8s avoir vu les tableaux, on pourrait s'interroger sur l'int\u00e9r\u00eat d'utiliser un tuple puisque le tableau permet plus de choses ! La r\u00e9ponse est simple : les op\u00e9rations sur les tuples sont plus \"rapides\". Quand vous savez que votre tableau ne sera pas modifi\u00e9, il est pr\u00e9f\u00e9rable d'utiliser un tuple \u00e0 la place d'un tableau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "494e551a-5af5-4a0c-a461-5ee21d19593d": {"__data__": {"id_": "494e551a-5af5-4a0c-a461-5ee21d19593d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4d11b148-c874-4cab-9bed-c644e1cadb64", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "8a0ae314da6941c62df1d1145a2cf70d121307b8ba703df5add5bc8e8f7a0434", "class_name": "RelatedNodeInfo"}}, "text": "2) Parcourir une s\u00e9quence \u00e0 l'aide de la boucle *for*\n\nLa boucle for... in permet de parcourir chacun des \u00e9l\u00e9ments d\u2019une s\u00e9quence (tableau ou tuple) :\n\nPrenons l'exemple suivant :\n\n```python\nmon_tab = [5, 8, 6, 9]\nfor ele in mon_tab:\n\tprint(ele)\n```\nL'ex\u00e9cution du programme ci-dessus permettra d'afficher toutes les valeurs contenues dans le tableau *mon_tab* :\n\n```\n5\n8\n6\n9\n```\n\nQuelques explications : comme son nom l'indique, la boucle \"for\" est une boucle ! Nous \"sortirons\" de la boucle une fois que tous les \u00e9l\u00e9ments du tableau mon_tab auront \u00e9t\u00e9 parcourus :\n\n- au premier tour de boucle, la variable *ele* sera \u00e9gale 5\n\n- au deuxi\u00e8me tour de boucle, la variable *ele* sera \u00e9gale 8\n\n- au troisi\u00e8me tour de boucle, la variable *ele* sera \u00e9gale 6\n\n- au quatri\u00e8me et dernier tour de boucle, la variable *ele* sera \u00e9gale 9\n\nUne chose importante \u00e0 bien comprendre : le choix du nom de la variable qui va \u00eatre associ\u00e9 aux \u00e9l\u00e9ments du tableau les uns apr\u00e8s les autres (*ele*) est totalement arbitraire, il est possible de choisir un autre nom sans aucun probl\u00e8me, le code suivant aurait donn\u00e9 exactement le m\u00eame r\u00e9sultat :\n\n```python\nmon_tab = [5, 8, 6, 9]\nfor toto in mon_tab:\n\tprint(toto)\n```\n\nDans la boucle for... in il est possible d\u2019utiliser la fonction native *range* \u00e0 la place d\u2019un tableau d\u2019entiers :\n\n```python\nfor ele in range(0, 5):\n\tprint (ele)\n```\n\naura exactement le m\u00eame effet que le programme : \n\n```python\nfor ele in [0, 1, 2, 3, 4]:\n\tprint (ele)\n```\n\nComme vous pouvez le constater, *range(0,5)* est, au niveau de la boucle \"for..in\", \u00e9quivalent au tableau [0,1,2,3,4]\n\nATTENTION : si vous avez dans un programme \"range(a,b)\", a est la borne inf\u00e9rieure et b a borne sup\u00e9rieure. Vous ne devez surtout pas perdre de vu que la borne inf\u00e9rieure est incluse, mais que la borne sup\u00e9rieure est exclue.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1816, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b59179a-6816-4fab-bef2-9770e8a20328": {"__data__": {"id_": "6b59179a-6816-4fab-bef2-9770e8a20328", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b6c3afc-73ca-4f94-86f4-019de41e1ced", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "9383e8d4794a05eb71d04c6d31fc072837d565f6a9b4e852c89d5a3ed9661777", "class_name": "RelatedNodeInfo"}}, "text": "3) Cr\u00e9er un tableau par compr\u00e9hension\n\nNous avons vu qu'il \u00e9tait possible de \"remplir\" un tableau en renseignant les \u00e9l\u00e9ments du tableau les uns apr\u00e8s les autres :\n\n```python\nmon_tab = [0, 1, 2, 3]\n```\n\nIl est aussi possible d'obtenir exactement le m\u00eame r\u00e9sultat que ci-dessus en une seule ligne gr\u00e2ce \u00e0 la compr\u00e9hension de tableau :\n\n```python\nmon_tab = [p for p in range(0, 4)]\n```\n\nnous avons une boucle for entre crochets. p va successivement prendre les valeurs 0, 1, 2, 3. Ces diff\u00e9rentes valeurs de p vont permettre de remplir le tableau *mon_tab*.\n\nLes compr\u00e9hensions de tableau permettent de rajouter une condition (if) :\n\n```python\nl = [1, 7, 9, 15, 5, 20, 10, 8]\nmon_tab = [p for p in l if p > 10]\n```\n\nci-dessus nous utilisons le tableau *l* pour cr\u00e9er le tableau *mon_tab* : on parcourt le tableau *l* gr\u00e2ce \u00e0 la boucle *for p in l* mais on \"garde\" uniquement les valeurs sup\u00e9rieures \u00e0 10 (gr\u00e2ce au *if p > 10*). Apr\u00e8s l'ex\u00e9cution du programme ci-dessus, le tableau *mon_tab* est constitu\u00e9 des \u00e9l\u00e9ments suivants : [15, 20]\n\nIl y a aussi la possibilit\u00e9 d'ajouter des op\u00e9rations arithm\u00e9tiques  :\n\n```python\nl = [1, 7, 9, 15, 5, 20, 10, 8]\nmon_tab = [p**2 for p in l if p < 10]\n```\n\nOn utilise le tableau  *l* pour  cr\u00e9er le tableau *mon_tab* en mettant au carr\u00e9 tous les \u00e9l\u00e9ments du tableau *l* \u00e0 condition qu'ils soient strictement inf\u00e9rieurs \u00e0 10. On obtient donc le tableau *mon_tab* suivant : [1, 49, 81, 25, 64]", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1429, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb73c9e1-9046-479d-bc9d-e30ec3498584": {"__data__": {"id_": "bb73c9e1-9046-479d-bc9d-e30ec3498584", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97fdbf78-d83e-4de0-a280-7c524d8c609b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}, "hash": "da2166fcd51052d97e30d124ab154f52dbc6ac0673eb41478fb858aa78a58534", "class_name": "RelatedNodeInfo"}}, "text": "4) Travailler sur des \"tableaux de tableaux\"\n\nChaque \u00e9l\u00e9ment d'un tableau peut \u00eatre un tableau, on parle de tableau de tableau.\n\nVoici un exemple de tableau de tableau :\n\n```python\nm = [[1, 3, 4], [5 ,6 ,8], [2, 1, 3], [7, 8, 15]]\n```\n\nLe premier \u00e9l\u00e9ment du tableau ci-dessus est bien un tableau ([1, 3, 4]), le deuxi\u00e8me \u00e9l\u00e9ment est aussi un tableau ([5, 6, 8])...\n\nIl est souvent plus pratique de pr\u00e9senter ces \"tableaux de tableaux\" comme suit :\n\n```python\nm = [[1, 3, 4],\n     [5, 6, 8],\n     [2, 1, 3],\n     [7, 8, 15]]\n```\n\nNous obtenons ainsi quelque chose qui ressemble beaucoup \u00e0 un \"objet math\u00e9matique\" tr\u00e8s utilis\u00e9 : une matrice\n\nIl est \u00e9videmment possible d'utiliser les indices de position avec ces \"tableaux de tableaux\". Pour cela nous allons consid\u00e9rer notre tableau de tableaux comme une matrice, c'est \u00e0 dire en utilisant les notions de \"ligne\" et de \"colonne\". Dans la matrice ci-dessus :\n\nEn ce qui concerne les lignes :\n\n- 1, 3, 4 constituent la premi\u00e8re ligne\n\n- 5, 6, 8 constituent la deuxi\u00e8me ligne\n\n- 2, 1, 3 constituent la troisi\u00e8me ligne\n\n- 7, 8, 15 constituent la quatri\u00e8me ligne\n\n\nEn ce qui concerne les colonnes :\n\n- 1, 5, 2, 7 constituent la premi\u00e8re colonne\n\n- 3, 6, 1, 8 constituent la deuxi\u00e8me colonne\n\n- 4, 8, 3, 15 constituent la troisi\u00e8me colonne\n\nPour cibler un \u00e9l\u00e9ment particulier de la matrice, on utilise la notation avec \"doubles crochets\" : m\\[ligne]\\[colonne] (sans perdre de vu que la premi\u00e8re ligne et la premi\u00e8re colonne ont pour indice 0)\n\nSi nous prenons cet exemple : \n\n```python\nm = [[1, 3, 4],\n     [5, 6, 8],\n     [2, 1, 3],\n     [7, 8, 15]]\na = m[1][2]\n```\n\nla variable  *a* aura  pour valeur 8.\n\nExplications : *m[1]* correspond au  tableau *[5, 6, 8]* (2e \u00e9l\u00e9ment).  Dans ce tableau *[5, 6, 8]*, \u00e0  l'index 2 (*m[1][2]*), on trouve bien la valeur 8.\n\nSi maintenant nous consid\u00e9rons l'exemple suivant :\n\n```python\nm = [1, 2, 3]\nmm = [m, m, m]\nm[0] = 100\n```\nApr\u00e8s l'ex\u00e9cution de ce programme le tableau *mm* est constitu\u00e9 des \u00e9l\u00e9ments suivants  : [[100, 2, 3], [100, 2, 3], [100, 2, 3]]\n\nComme vous pouvez le constater, la modification du tableau associ\u00e9 au nom m entra\u00eene la modification du tableau associ\u00e9 au nom mm (alors que nous n'avons pas directement modifi\u00e9 le tableau associ\u00e9 au nom mm). Il faut donc \u00eatre tr\u00e8s prudent lors de ce genre de manipulation afin d'\u00e9viter des modifications non d\u00e9sir\u00e9es.\n\nIl est possible de parcourir l'ensemble des \u00e9l\u00e9ments d'une matrice \u00e0 l'aide d'une \"double boucle for\" :\n\n```python\nm = [[1, 3, 4],\n     [5, 6, 8],\n     [2, 1, 3],\n     [7, 8, 15]]\nnb_colonne = 3\nnb_ligne = 4\nfor i in range(0, nb_ligne):\n\tfor j in range(0, nb_colonne):\n\t\ta = m[i][j]\n\t\tprint(a)\n```\nL'ex\u00e9cution de ce programme donnera le r\u00e9sultat suivant :\n\n```\n1\n3\n4\n5\n6\n8\n2\n1\n3\n7\n8\n15\n```\nNous avons bien parcouru l'ensemble des \u00e9l\u00e9ments du tableau *m*.\n\nCette double boucle *for* est une structure complexe, mais pourtant assez r\u00e9pandue. N'h\u00e9sitez pas \u00e0 consacrer quelques minutes \u00e0 son analyse.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2961, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "723af712-2eb6-4f0e-8012-ea2d78255135": {"__data__": {"id_": "723af712-2eb6-4f0e-8012-ea2d78255135", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d62f46d7-c5b1-4fce-bdbd-7b7fb1d8e6d1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5c533d9c88fc55f530821011a2ff25d7d70044432e5d4b5cc413e5a88b8805b0", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\nIl est possible de \"stocker\" plusieurs grandeurs dans une m\u00eame structure, ce\ntype de structure est appel\u00e9 une s\u00e9quence.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 143, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea03ff7b-d4ca-493e-be95-d4888288d60c": {"__data__": {"id_": "ea03ff7b-d4ca-493e-be95-d4888288d60c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05f6e441-bd3d-4801-84d8-13dc11adfb66", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2f94566f5bd0d74fc71588df3e7fc03d08665f91a3f25ca60532706b90725d3b", "class_name": "RelatedNodeInfo"}}, "text": "Les tuples\n\n- un tuple est une s\u00e9quence (exemple de tuple => tu = (1, 5, 3, 4))\n\n- chaque \u00e9l\u00e9ment d\u2019un tuple est identifi\u00e9 par un indice (1er \u00e9l\u00e9ment indice\n0, 2e \u00e9l\u00e9ment indice 1,...)\n\n- pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment d\u2019indice i on utilise la notation entre crochets :\ntu[i] (avec tu un tuple)\n\n- une fois cr\u00e9\u00e9, un tuple ne peut pas \u00eatre modifi\u00e9", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 343, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5039aba-cb59-49f9-a204-a2be65c77fe2": {"__data__": {"id_": "c5039aba-cb59-49f9-a204-a2be65c77fe2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "72aa7e45-01e1-4ddb-a181-29e7d6acb8b8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ef0ac42a4e7fa37b00c4ab4e29c40a8a052b9cf91c741c60e0fad63ea424b9e3", "class_name": "RelatedNodeInfo"}}, "text": "Les tableaux\n\nun tableau est une s\u00e9quence (exemple de tableau => ta = [1, 5, 3, 4])\n\nchaque \u00e9l\u00e9ment d\u2019un tableau est identifi\u00e9 par un indice (1er \u00e9l\u00e9ment\nindice 0, 2e \u00e9l\u00e9ment indice 1,...)\n\npour acc\u00e9der \u00e0 un \u00e9l\u00e9ment d\u2019indice i on utilise la notation entre crochets\nta[i] (avec ta un tableau)\n\nil est possible de modifier un tableau\n\non peut cr\u00e9er des tableaux de tableaux (exemple t = [[1, 2, 3], [7,\n9,15]])", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7267e323-1d5c-47e7-8487-bc9f69f5106f": {"__data__": {"id_": "7267e323-1d5c-47e7-8487-bc9f69f5106f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1627f176-bb30-4960-8429-5d409e7df029", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c9a54360ebd461b2c2b43c47f66382de88208312da2fc16778c44521d57d3c6e", "class_name": "RelatedNodeInfo"}}, "text": "La boucle for\n\non peut utiliser une boucle for pour parcourir les \u00e9l\u00e9ments d\u2019un tableau", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 89, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c17e9d63-aafd-49f3-ac9d-6356be20d3dc": {"__data__": {"id_": "c17e9d63-aafd-49f3-ac9d-6356be20d3dc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80620d38-b872-4add-9acb-fcb7f0852158", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "74fbe1c546f9f544db86d6b423337df0d89909bc7837bf1781839fa05e1b03fc", "class_name": "RelatedNodeInfo"}}, "text": "Cr\u00e9er un tableau par compr\u00e9hension\n\nil est possible de cr\u00e9er un tableau en utilisant une boucle for et \u00e9ventuellement une condition\n(if).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bd1c862-76f8-41ef-896a-3ac189ced172": {"__data__": {"id_": "3bd1c862-76f8-41ef-896a-3ac189ced172", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "21d516ea-3a3b-44e5-b77d-c003df8c00fd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7ee43ac387201a52b9d1d543b07a53cf8d48e17fa8b090e9c33677e658abd86a", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- savoir utiliser les tuples (cr\u00e9ation, utilisation) et les tableaux (cr\u00e9ation, utilisation, modification\u2026)\n\n- savoir utiliser une boucle for pour parcourir une s\u00e9quence (tuple et tableau)\n\n- savoir cr\u00e9er une tableau par compr\u00e9hension (utilisation du for et du if)\n\n- savoir manipuler des tableaux de tableaux", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 339, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38ba7a5a-1a26-4c58-9aa8-60b5e92f676a": {"__data__": {"id_": "38ba7a5a-1a26-4c58-9aa8-60b5e92f676a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "09532927-fc22-425a-88cf-46ca43697496", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2e65d43846ad9eadf4abd2f38f4ee818bd6f3d14592ea897788fcb58b5c552da", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 30.1\n\nFaites un sch\u00e9ma permettant d'expliquer le principe de la recherche dichotomique en vous basant sur l'exemple suivant : t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 40 (valeur recherch\u00e9e)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 209, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c06f31e4-ed28-43e0-b01c-7ca3d5b8ecfd": {"__data__": {"id_": "c06f31e4-ed28-43e0-b01c-7ca3d5b8ecfd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43996ed6-8156-4cdf-b127-340e5a87d5f7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1afe8df40f961417d6b2d5afe22ebfcb898f3ee4fd3afe8effc7b2a315ff2209", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 30.2\n\nFaites un sch\u00e9ma permettant d'expliquer le principe de la recherche dichotomique en vous basant sur l'exemple suivant : t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 9 (valeur recherch\u00e9e)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e37372d-4188-4542-bd5e-8a1436d1b6c5": {"__data__": {"id_": "2e37372d-4188-4542-bd5e-8a1436d1b6c5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcedff7e-4774-44d2-8939-51586c8aad9a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6e24c4dd054892c8888bc56e62bc6f771449fe6525fa28a76be6b0cf2edda79c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 30.3\n\nSoit l'algorithme de recherche dichotomique :\n\n```\nVARIABLE\nt : tableau d'entiers tri\u00e9\nmil : nombre entier\nfin : nombre entier\ndeb : nombre entier\nx : nombre entier // x : l'entier recherch\u00e9\ntr : bool\u00e9en\nDEBUT\ntr \u2190 FAUX\ndeb \u2190 1\nfin \u2190 longueur(t)\ntant que tr == FAUX et que deb \u2a7d fin :\n mil \u2190 partie_enti\u00e8re((deb+fin)/2)\n si t[mil] == x :\n  tr = VRAI\n sinon :\n  si x > t[mil] :\n   deb \u2190 mil+1\n  sinon :\n   fin \u2190 mil-1\n  fin si\n fin si\nfin tant que\nrenvoyer la valeur de tr\nFIN\n```\n\n1) Appliquez cet algorithme au tableau  t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 40. V\u00e9rifiez que l'algorithme renvoie bien VRAI\n\n2) Appliquez cet algorithme au tableau  t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 9. V\u00e9rifiez que l'algorithme renvoie bien FAUX", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc83a270-5440-46ec-af18-b671482e5b5c": {"__data__": {"id_": "cc83a270-5440-46ec-af18-b671482e5b5c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5979300b-539c-4014-88f3-289c684cf327", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "04934c9ef02900b82db6a69b696cd257b63bd2614f3cc87ae3f8ff5dbc6abb4f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 30.4\n\nImpl\u00e9mentez l'algorithme de recherche dichotomique en Python.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 78, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13a20aff-d12c-485b-bed7-17618052ee5c": {"__data__": {"id_": "13a20aff-d12c-485b-bed7-17618052ee5c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bff0ee32-2835-4a36-8467-1780639d94c7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "99b2d9fd4860469294efd8405b98ca6e6f19b685d8a3520b5865826a3c2d74ed", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous avons d\u00e9j\u00e0 eu l'occasion d'\u00e9tudier un algorithme de recherche d'un entier dans un tableau. Dans le pire des cas (l'entier recherch\u00e9 n'est pas dans le tableau), l'algorithme parcourt l'ensemble du tableau, nous avions donc une complexit\u00e9 O(n). Est-on oblig\u00e9 de parcourir l'ensemble du tableau pour v\u00e9rifier qu'un entier x ne se trouve pas dans un tableau t ? A priori oui, sauf si le tableau t est tri\u00e9 !", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20024d21-57b9-43f9-a4ec-02f12c13f32f": {"__data__": {"id_": "20024d21-57b9-43f9-a4ec-02f12c13f32f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0a8d3a1-0c55-443f-aea2-cdcc605009c6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "1b1c158c8084a73d083081908363fc916d8baf9243d4e48b459491dc646c49bb", "class_name": "RelatedNodeInfo"}}, "text": "2) Principe\n\nIl est aussi possible de repr\u00e9senter le principe de l'algorithme de recherche dichotomique avec le sch\u00e9ma suivant (on recherche la valeur x=35 dans le tableau t =  [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] :\n\n!\n\nDans le sch\u00e9ma ci-dessus, \u00e0 chaque \u00e9tape, on garde uniquement le tableau d\u00e9sign\u00e9 par la fl\u00e8che en trait plein, on abandonne le tableau d\u00e9sign\u00e9 par la fl\u00e8che en pointill\u00e9. Dans la premi\u00e8re \u00e9tape on part du tableau [5, 7, 12, 14, 23, 27, 35, 40, 41, 45], ce tableau est divis\u00e9 en 2 tableaux :  [5, 7, 12, 14, 23] et [27, 35, 40, 41, 45]. La valeur recherch\u00e9e (35) ne peut pas \u00eatre dans le premier tableau ([5, 7, 12, 14, 23]) puisque 35 > 23 et que les autres valeurs du premier tableau sont forc\u00e9ment plus petite que 23 (le tableau est tri\u00e9). On garde donc uniquement le second tableau ([27, 35, 40, 41, 45]) et on recommence le processus (on divise ce tableau en deux...) jusqu'au moment o\u00f9 l'on \"tombe\" sur la valeur recherch\u00e9e ou que l'on se retrouve avec un tableau contenant un seul \u00e9l\u00e9ment : si l'\u00e9l\u00e9ment unique du tableau n'est pas l'\u00e9l\u00e9ment recherch\u00e9, cela signifie que l'\u00e9l\u00e9ment recherch\u00e9 n'est pas dans le tableau.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b89d49c-c15a-4f74-9f60-5a65110372b7": {"__data__": {"id_": "5b89d49c-c15a-4f74-9f60-5a65110372b7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7b2e6252-4b2c-4871-bb0b-6f96a05f0bf3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "8edbe63d415e0c60a14f0ea2354b98f45c332e5de19b147bf2ba22e3d3b38c42", "class_name": "RelatedNodeInfo"}}, "text": "3) algorithme\n\nVoici l'algorithme qui permet d'effectuer une recherche dichotomique :\n\n```\nVARIABLE\nt : tableau d'entiers tri\u00e9\nmil : nombre entier\nfin : nombre entier\ndeb : nombre entier\nx : nombre entier // x : l'entier recherch\u00e9\ntr : bool\u00e9en\nDEBUT\ntr \u2190 FAUX\ndeb \u2190 1\nfin \u2190 longueur(t)\ntant que tr == FAUX et que deb \u2a7d fin :\n mil \u2190 partie_enti\u00e8re((deb+fin)/2)\n si t[mil] == x :\n  tr = VRAI\n sinon :\n  si x > t[mil] :\n   deb \u2190 mil+1\n  sinon :\n   fin \u2190 mil-1\n  fin si\n fin si\nfin tant que\nrenvoyer la valeur de tr\nFIN\n```\n\nOn peut r\u00e9sumer le principe de fonctionnement de l'algorithme de recherche dichotomique par le sch\u00e9ma suivant :\n\n!\n\nLes variables *deb*, *mil* et *fin* du sch\u00e9ma correspondent aux variables *deb*, *mil* et *fin* de l'algorithme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 751, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc192a7f-19da-4a42-b9e6-4e7cb0b3af2b": {"__data__": {"id_": "cc192a7f-19da-4a42-b9e6-4e7cb0b3af2b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b0e37ea-e1a0-47a6-9cf6-cbfaad2390e3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "f3c796d5fb39cf04072fb5e26c659931639bbefa88e360ee47061a24cd86fa16", "class_name": "RelatedNodeInfo"}}, "text": "4) complexit\u00e9 de l'algorithme\n\nPour \u00e9tudier la complexit\u00e9, nous allons nous int\u00e9resser \u00e0 la boucle : au niveau de la boucle, combien doit-on effectuer d'it\u00e9rations pour un tableau de taille n dans le cas le plus d\u00e9favorable (l'entier x n'est pas dans le tableau t) ?\n\nSachant qu'\u00e0 chaque it\u00e9ration de la boucle on divise le tableau en 2, cela revient donc \u00e0 se demander combien de fois faut-il diviser le tableau en 2 pour obtenir, \u00e0 la fin, un tableau comportant un seul entier ? Autrement dit, combien de fois faut-il diviser n par 2 pour obtenir 1 ?\n\nMath\u00e9matiquement cela se traduit par l'\u00e9quation $\\frac{n}{2^a}=1$ avec a le nombre de fois qu'il faut diviser n par 2 pour obtenir 1. Il faut donc trouver a !\n\nA ce stade il est n\u00e9cessaire d'introduire une nouvelle notion math\u00e9matique : le \"logarithme base 2\" not\u00e9 $log_2$. Par d\u00e9finition $log_2(2^x)=x$\n\nNous avons donc :\n\n$\\frac{n}{2^a}=1$ => $n=2^a$ => $log_2(n)=log_2(2^a)=a$, nous avons donc $a=log_2(n)$\n\t\t\t\nNous pouvons donc dire que la complexit\u00e9 en temps dans le pire des cas de l'algorithme de recherche dichotomique est $O(log_2(n))$\n\t\t\t\nAfin de pouvoir comparer l'efficacit\u00e9 des diff\u00e9rents algorithmes, voici une repr\u00e9sentation graphique des fonctions $y=x$ (en rouge), $y=x^2$ (en bleu) et $y=log_2(x)$ (en vert)\n\n!\n\nComme vous pouvez le constater l'algorithme de recherche dichotomique est plus efficace que l'algorithme de recherche qui consiste \u00e0 parcourir l'ensemble du tableau, car $x>log_2(x)$ quelque soit $x$.\n\nCependant, il ne faut pas perdre de vu que dans le cas de la recherche dichotomique, il est n\u00e9cessaire d'avoir un tableau tri\u00e9, si au d\u00e9part le tableau n'est pas tri\u00e9, il faut rajouter la dur\u00e9e du tri.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1689, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a49cf2e-dcf0-426c-aa64-201acd8b9cb5": {"__data__": {"id_": "8a49cf2e-dcf0-426c-aa64-201acd8b9cb5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a432431e-4425-4075-8a62-e302b9a3567b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}, "hash": "13ffb4da8a2ad0edd73372e6a36d5e1157d41125466cfee8ffadfcc044afbbc8", "class_name": "RelatedNodeInfo"}}, "text": "5) terminaison de l'algorithme\n\nPour terminer, nous allons d\u00e9montrer que cet algorithme se termine dans tous les cas (on ne peut pas \"tomber dans une boucle infinie\") :\n\t\t\t\nNous avons les variables *fin* et *deb*. D\u00e9finissons fini et debi avec i qui correspond \u00e0 la i\u00e8me it\u00e9ration de la boucle : deb0 correspond \u00e0 la valeur de la variable *deb* avant la premi\u00e8re it\u00e9ration de la boucle (nous avons donc deb0 = 0). M\u00eame chose pour fini (nous avons donc fin0 = n). \u00c0 la fin de la premi\u00e8re it\u00e9ration de la boucle, nous aurons fin1 et deb1...\n\t\t\nOn d\u00e9finit aussi mi = (debi + fini) / 2.\n\t\t\nPartons du principe que nous sommes \u00e0 la k i\u00e8me it\u00e9ration (i=k), nous avons plusieurs cas \u00e0 consid\u00e9rer :\n\t\t\t\n- si debk > fink ou si t[mk] = x, l'algorithme se termine, car on n'entre pas dans la boucle.\n\t\t\t\t\n- si debk \u2a7d fink et si x k], on entre dans la boucle : debk+1 = debk et fink+1 = mk - 1. On a alors fink+1 - debk+1 k - debk\n\t\t\t\t\n- si debk \u2a7d fink et si x > t[mk], on entre dans la boucle : debk+1 = mk + 1 et fink+1 = fink. On a alors fink+1 - debk+1 k - debk\n\t\t\t\nQuel que soit le cas, nous avons fink+1 - debk+1 k - debk, nous pouvons donc dire que fini - debi est strictement d\u00e9croissante.\n\nIl existe donc un entier p tel que :\n\t\t\t\n- soit debp > finp, dans ce cas l'algorithme va se terminer, car on \"n'entre pas\" dans la boucle et l'algorithme renvoie FAUX.\n\t\t\t\t\n- soit x = t[mp] avec mp = (debp + finp) / 2, dans ce cas l'algorithme va se terminer, car on n'entre pas dans la boucle et l'algorithme renvoie VRAI.\n\t\nNous venons d\u00e9montrer que l'algorithme se termine \u00e0 un moment ou \u00e0 un autre. Pour effectuer cette d\u00e9monstration nous avons utilis\u00e9 le fait que fini - debi est strictement d\u00e9croissante. fini - debi est appel\u00e9 un variant de boucle. \n\nUn variant de boucle est une grandeur qui, comme son nom l'indique, varie \u00e0 chaque it\u00e9ration, cette variation fait qu'\u00e0 un moment ou \u00e0 un autre, l'algorithme finira par s'arr\u00eater.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1926, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c3759aa-7392-46f9-a5d4-5f9acebab2e0": {"__data__": {"id_": "1c3759aa-7392-46f9-a5d4-5f9acebab2e0", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30r.md", "file_name": "termc30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f319406-78c7-4a91-8c7d-6dc57694bb7c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30r.md", "file_name": "termc30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "93b24ed3beefd751413af2c96f0759f9b11505646792ce3c843671e738c7d38a", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir\n\n- l'algorithme de recherche dichotomique permet de rechercher un \u00e9l\u00e9ment dans un tableau **tri\u00e9**, en divisant ce tableau en 2 \u00e0 chaque \u00e9tape de la recherche\n\n- la complexit\u00e9 en temps dans le pire des cas de cet algorithme est en O(log2(n)) (donc meilleur que l'algorithme qui cherche l'\u00e9l\u00e9ment en parcourant enti\u00e8rement le tableau qui est en O(n)).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 373, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39cf76cf-5c52-4200-a002-c7caa4bf14b5": {"__data__": {"id_": "39cf76cf-5c52-4200-a002-c7caa4bf14b5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30r.md", "file_name": "termc30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de84f7ca-483c-4a4f-b7c2-c883c4df932b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30r.md", "file_name": "termc30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "38ad6efaac7497634e77a47f2521deb54666a515c0518e901c48d185a9053e5b", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir faire\n\nVous devez \u00eatre capable d'appliquer cet algorithme sur un exemple donn\u00e9.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7d4658a-d17b-4ea9-9428-7991d4f7fdeb": {"__data__": {"id_": "f7d4658a-d17b-4ea9-9428-7991d4f7fdeb", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3efcb26c-4ce3-411e-849e-1834ff3aef28", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ea52e1d18625fb74386c03254dc922ed83f6f1010f57b69c8b6fe4aa8b2665c0", "class_name": "RelatedNodeInfo"}}, "text": "Nous allons dans cette s\u00e9rie d'activit\u00e9 \u00e9tudier un probl\u00e8me classique en informatique, le probl\u00e8me du rendu de monnaie", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 118, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a3b0f8d-839d-48b7-9a4a-76baff53bc8e": {"__data__": {"id_": "9a3b0f8d-839d-48b7-9a4a-76baff53bc8e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "56cfc2ac-612c-4b28-a8f9-8129025c63ae", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "eae3e7c0a39af1e61205943dcb9211bbe65ddf7371d582caaa858026e2510472", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 31.1\n\nNous sommes des commer\u00e7ants, nous avons \u00e0 notre disposition un nombre illimit\u00e9 de pi\u00e8ces de :\n\n- 1 centime\n- 2 centimes\n- 5 centimes\n- 10 centimes\n- 20 centimes\n- 50 centimes\n- 1 \u20ac\n- 2 \u20ac\n\nNous devons rendre la monnaie \u00e0 un client \u00e0 l'aide de ces pi\u00e8ces. La contrainte est d'utiliser le moins de pi\u00e8ces possible.\n\nTrouvez une m\u00e9thode gloutonne permettant d'effectuer un rendu de monnaie (en utilisant le moins possible de pi\u00e8ces).\n\nVous devez rendre la somme de 2,63 \u20ac, appliquez la m\u00e9thode que vous venez de mettre au point.\n\nCombien de pi\u00e8ces avez-vous utilis\u00e9es ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bc08d47-f8bc-49dd-a8ad-d3995e4cc556": {"__data__": {"id_": "5bc08d47-f8bc-49dd-a8ad-d3995e4cc556", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ccc87367-2af9-4e7f-bda8-d2ed30b73743", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "cd41e378a47ff7a78e4369fe63fcab9ab33027b7a7ae282cc9aa323864f60b3f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 31.2\n\n\u00c0 partir de la m\u00e9thode gloutonne que vous avez \u00e9labor\u00e9e dans l'activit\u00e9 31.1, \u00e9crivez un algorithme glouton qui permettra de d\u00e9terminer le nombre minimal de pi\u00e8ces \u00e0 utiliser pour une somme donn\u00e9e. Vous proposerez ensuite une impl\u00e9mentation en Python de votre algorithme. Vous testerez votre programme avec une somme \u00e0 rendre de 2 euros et 63 centimes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d018af0d-07b2-4962-a512-847abe25a4c9": {"__data__": {"id_": "d018af0d-07b2-4962-a512-847abe25a4c9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b484ab70-4d47-4ea1-90a3-dda462a3767f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c88e65ff2c748af21566c5067407110ea07180bfe41273d6b6f06047a5e07c74", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 31.3\n\nNous avons maintenant uniquement les pi\u00e8ces suivantes :\n\n- 2 centimes\n- 5 centimes\n- 10 centimes\n- 20 centimes\n- 50 centimes\n- 1 \u20ac\n- 2 \u20ac\n\nUtilisez le programme que vous avez d\u00e9velopp\u00e9 dans l'activit\u00e9 31.2  pour essayer de r\u00e9soudre le probl\u00e8me pour une somme de 11 centimes \u00e0 rendre. Que constatez-vous ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f4925ae-4979-43d7-92d8-0a2b1baf4f56": {"__data__": {"id_": "3f4925ae-4979-43d7-92d8-0a2b1baf4f56", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9eefbf0e-7967-4b1f-a492-78ec07daf397", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "328901fe747f9b140b9e73fc74418cace769d94dfe7c6f87f6131ff4f3e828f2", "class_name": "RelatedNodeInfo"}}, "text": "1) Probl\u00e8me du sac \u00e0 dos\n\nUn cambrioleur poss\u00e8de un sac \u00e0 dos d'une contenance maximum de 30 Kg. Au cours d'un de ses cambriolages, il a la possibilit\u00e9 de d\u00e9rober 4 objets A, B, C et D. Voici un tableau qui r\u00e9sume les caract\u00e9ristiques de ces objets :\n\n| objet | A | B | C | D |\n| --- | --- | --- | --- | --- |\n| masse (en Kg) | 13 | 12 | 8 | 10 |\n| valeur (en \u20ac) | 700 | 400 | 300 | 300 |\n\nQuelle est la meilleure strat\u00e9gie \u00e0 adopter pour ce voleur sachant qu'il est limit\u00e9 \u00e0 30 Kg et qu'il cherche un gain maximum ?\n\nCe genre de probl\u00e8me est un grand classique en informatique, on parle de probl\u00e8me d'optimisation. Il existe toujours plusieurs solutions possibles \u00e0 un probl\u00e8me d'optimisation (dans le probl\u00e8me du sac \u00e0 dos, on peut choisir A+B ou A+C ou B+C+D... toutes les combinaisons sont possibles \u00e0 partir du moment o\u00f9 la masse totale ne d\u00e9passe pas 30 Kg), mais on ne cherche pas n'importe quelle solution, on cherche une solution dite optimale : dans notre exemple, on cherche le plus grand gain possible. Souvent, dans les probl\u00e8mes d'optimisation, il n'existe pas une solution optimale, mais plusieurs solutions optimales, r\u00e9soudre un probl\u00e8me d'optimisation c'est donc trouver une des solutions optimales.\n\nIl existe diff\u00e9rentes m\u00e9thodes algorithmiques permettant de trouver une solution optimale \u00e0 un probl\u00e8me d'optimisation : il peut, en effet, \u00eatre int\u00e9ressant \"d'automatiser\" la r\u00e9solution des probl\u00e8mes d'optimisation \u00e0 l'aide d'algorithme (dans notre cas, trouver un algorithme qui trouve une solution optimale au probl\u00e8me du sac \u00e0 dos).\n\nEn apparence, la solution la plus simple dans le cas du sac \u00e0 dos serait d'\u00e9crire un algorithme qui teste toutes les combinaisons d'objets possibles et qui retient les solutions qui offrent un gain maximum. Dans notre cas pr\u00e9cis, avec seulement 4 objets, cette solution pourrait \u00eatre envisag\u00e9e, mais avec un plus grand nombre d'objets, le temps de calculs, m\u00eame pour un ordinateur tr\u00e8s puissant, deviendrait trop important. En effet, l'algorithme qui testerait toutes les combinaisons possibles aurait une complexit\u00e9 en temps en O(an) avec a une constante et n les nombre d'objets. On parle d'une complexit\u00e9 exponentielle. Les algorithmes \u00e0 complexit\u00e9 exponentielle ne sont pas efficaces pour r\u00e9soudre des probl\u00e8mes, le temps de calcul devient beaucoup trop important quand n devient tr\u00e8s grand.\n\n\u00c0 la place de cette m\u00e9thode \"je teste toutes les possibilit\u00e9s\", il est possible d'utiliser une m\u00e9thode dite gloutonne (greedy en anglais).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2494, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f00b7fa8-1ecd-4f57-a59a-7b3bd18b034b": {"__data__": {"id_": "f00b7fa8-1ecd-4f57-a59a-7b3bd18b034b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23eca1c1-d38c-4abe-ba86-67c37e7d32f3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "361359a639c35ba1ff6082145f9b7e848a57b90e8a07093bddc4e5090bf165bd", "class_name": "RelatedNodeInfo"}}, "text": "2) la m\u00e9thode gloutonne", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 25, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33a9113b-5e85-4966-8d60-a988258a8e95": {"__data__": {"id_": "33a9113b-5e85-4966-8d60-a988258a8e95", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "705a2fc2-3b45-4581-aee6-e4a12e02cc7c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b223ee75b4e2aaf0e1f4d1fa44684620794b762b72f8ae99ed229296f5b62a3c", "class_name": "RelatedNodeInfo"}}, "text": "a) pr\u00e9sentation\n\nQu'est-ce qu'une m\u00e9thode gloutonne ?\n\nLa r\u00e9solution d'un probl\u00e8me d'optimisation se fait g\u00e9n\u00e9ralement par \u00e9tapes : \u00e0 chaque \u00e9tape, on doit faire un choix. Par exemple, dans le probl\u00e8me du sac \u00e0 dos, nous ajoutons les objets un par un, chaque ajout d'un objet constitue une \u00e9tape : \u00e0 chaque \u00e9tape, on doit choisir un objet \u00e0 mettre dans le sac. Le principe de la m\u00e9thode gloutonne est de, \u00e0 chaque \u00e9tape de la r\u00e9solution du probl\u00e8me, faire le choix qui semble le plus pertinent sur le moment, avec l'espoir qu'au bout du compte, cela nous conduira vers une solution optimale du probl\u00e8me \u00e0 r\u00e9soudre. Autrement dit, on fait des choix localement optimaux dans l'espoir que ces choix m\u00e8neront \u00e0 une solution globalement optimale (le \"localement\" signifie ici \"\u00e0 chaque \u00e9tape de la r\u00e9solution du probl\u00e8me\"). Il est aussi important de bien comprendre qu'avec une m\u00e9thode gloutonne on ne revient jamais en arri\u00e8re : quand, \u00e0 une \u00e9tape donn\u00e9e, on effectue un choix, ce choix est d\u00e9finitif, on ne reviendra jamais dessus plus tard (au cours des \u00e9tapes ult\u00e9rieures), m\u00eame si on se rend compte que le choix fait pr\u00e9c\u00e9demment n'\u00e9tait pas vraiment judicieux. \n\nAppliquons une m\u00e9thode gloutonne \u00e0 la r\u00e9solution du probl\u00e8me du sac \u00e0 dos :\n\n- Sachant que l'on cherche \u00e0 maximiser le gain, commen\u00e7ons par \u00e9tablir un tableau nous donnant la \"valeur massique\" de chaque objet (pour chaque objet on divise sa valeur par sa masse) :\n\n| objet | A | B | C | D |\n| --- | --- | --- | --- | --- |\n|valeur massique (en \u20ac/Kg)| 54 | 33 | 38 | 30 |\n\n- On classe ensuite les objets par ordre d\u00e9croissant de valeur massique : A - C - B - D\n\n- Enfin, on remplit le sac en prenant les objets dans l'ordre et en s'arr\u00eatant d\u00e8s que la masse limite est atteinte. C'est ici que se fait \"le choix glouton\", \u00e0 chaque \u00e9tape, on prend l'objet ayant le rapport \"valeur-masse\" le plus int\u00e9ressant au vu des objectifs :\n\n\t- 1re \u00e9tape : A (13 Kg)\n\t\n\t- 2e \u00e9tape : C (13+8=21 Kg)\n\t\n\t- 3e \u00e9tape : B (13+8+12=33 Kg) => impossible, on d\u00e9passe les 30 Kg.\n\t\nLe sac est donc compos\u00e9 de 2 objets : A et C pour un montant total de 1000 \u20ac et une masse totale de 21 Kg.\n\nCette m\u00e9thode gloutonne peut \u00eatre \"automatis\u00e9e\", il est donc possible d'\u00e9crire un algorithme glouton (un algorithme qui est bas\u00e9 sur une m\u00e9thode gloutonne) afin de trouver une solution au probl\u00e8me du sac \u00e0 dos avec n'importe quelles valeurs (nombre d'objets, masse des objets, valeur des objets, masse maximum).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2442, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c6439caa-1c77-4f4e-800d-dd6b7665086f": {"__data__": {"id_": "c6439caa-1c77-4f4e-800d-dd6b7665086f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e768bcf-c21a-4bbf-abb5-1fd9e20f9fa8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "23f23445d459265682812bd52a0b1ed12a6c30ec98e739fdb750c910b8684093", "class_name": "RelatedNodeInfo"}}, "text": "b) une m\u00e9thode optimale ?\n\nLa solution trouv\u00e9e ci-dessus est-elle optimale ?\n\nOn constate rapidement que la r\u00e9ponse est non, car le couple A+B permet d'atteindre une valeur de 1100 \u20ac pour une masse de 25 Kg. Dans notre probl\u00e8me, la m\u00e9thode gloutonne ne nous donne pas une solution optimale.\n\nPlus g\u00e9n\u00e9ralement , il est important de bien comprendre qu'un algorithme glouton ne donne pas forcement une solution optimale. Pour certains types de probl\u00e8mes, il est possible de d\u00e9montrer qu'un algorithme glouton donnera toujours une solution optimale, mais cela d\u00e9passe largement le cadre de ce cours.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "331cea45-fa3d-4b54-9f49-0eada1c6faba": {"__data__": {"id_": "331cea45-fa3d-4b54-9f49-0eada1c6faba", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31r.md", "file_name": "termc31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b43fcb01-d2b0-476f-abed-60390ebdcab7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31r.md", "file_name": "termc31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1d44d9bb866561b2b33cc734aac9cdbf53b159414d831fc22548f245056dffb2", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir\n\n- un algorithme est dit glouton s'il se base sur une m\u00e9thode gloutonne pour r\u00e9soudre un probl\u00e8me d'optimisation\n\n- dans une m\u00e9thode gloutonne, on fait des choix localement optimaux dans l'espoir que ces choix m\u00e8neront \u00e0 une solution globalement optimale. Ces choix ne seront jamais remis en  cause  au  cours de la r\u00e9solution du probl\u00e8me (pas de retour en arri\u00e8re possible)\n\n- une m\u00e9thode gloutonne ne donne pas forc\u00e9ment une solution optimale.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 468, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef07b443-4ece-4294-9eef-1a73ca4c2c06": {"__data__": {"id_": "ef07b443-4ece-4294-9eef-1a73ca4c2c06", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31r.md", "file_name": "termc31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b30b97f5-c97c-44db-bcca-9e2af863dea6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31r.md", "file_name": "termc31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f63b22ea3a7f19a5d25b2ff806b68c9aa79876a2143463c0892341cb98240ee8", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir faire\n\n\u00c9crire un programme Python permettant de r\u00e9soudre un probl\u00e8me d'optimisation (sac \u00e0 dos ou rendu de monnaie) \u00e0 l'aide d'un algorithme glouton", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 171, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68c1b5ec-ae74-435d-ac70-431db95081f4": {"__data__": {"id_": "68c1b5ec-ae74-435d-ac70-431db95081f4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7024fbd1-af7c-43c8-ab40-8ef317f0979a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "0c2f9436d3d11151d3d5f292ed24636efba03c84b5395492a0adec8f927cfaae", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 32.1\n\nCr\u00e9ez un r\u00e9pertoire *knn_iris* et t\u00e9l\u00e9chargez le fichier iris.csv dans ce r\u00e9pertoire.\n\nEn r\u00e9sum\u00e9, vous trouverez dans ce fichier :\n\n- la longueur des p\u00e9tales\n- la largeur des p\u00e9tales\n- l'esp\u00e8ce de l'iris (au lieu d'utiliser les noms des esp\u00e8ces, on utilisera des chiffres : 0 pour \"iris setosa\", 1 pour \"iris versicolor\" et 2 pour \"iris virginica\")\n\npour 50 iris.\n\nNous allons chercher \u00e0 obtenir la repr\u00e9sentation graphique suivante (en abscisse la longueur du p\u00e9tale et en ordonn\u00e9e la largeur du p\u00e9tale pour les 3 esp\u00e8ces d'iris)  :\n\n!\n\nCr\u00e9ez un  fichier  *knn_iris.py* dans le r\u00e9pertoire *knn_iris* et copiez-coller le code suivant dans ce fichier :\n\n```python\nimport pandas\nimport matplotlib.pyplot as plt\niris=pandas.read_csv(\"iris.csv\")\nx=iris.loc[:,\"petal_length\"]\ny=iris.loc[:,\"petal_width\"]\nlab=iris.loc[:,\"species\"]\nplt.axis('equal')\nplt.scatter(x[lab == 0], y[lab == 0], color='g', label='setosa')\nplt.scatter(x[lab == 1], y[lab == 1], color='r', label='versicolor')\nplt.scatter(x[lab == 2], y[lab == 2], color='b', label='virginica')\nplt.legend()\nplt.show()\n```\n\nQuelques mots sur le programme ci-dessus :\n\n- La partie \"Pandas\" ne devrait pas vous poser de probl\u00e8mes : x correspond \u00e0 la longueur des p\u00e9tales, y correspond \u00e0 la largeur des p\u00e9tales et lab correspond \u00e0 l'esp\u00e8ce d'iris (0,1 ou 2)\n\n- Nous utilisons ensuite la biblioth\u00e8que matplotlib qui permet de tracer des graphiques tr\u00e8s facilement. \"plt.axis('equal')\" permet d'obtenir un rep\u00e8re orthonorm\u00e9. \"plt.scatter\" permet de tracer des points, le \"x[lab == 0]\" permet de consid\u00e9rer uniquement l'esp\u00e8ce \"iris setosa\" (lab==0). Le premier \"plt.scatter\" permet de tracer les points correspondant \u00e0 l'esp\u00e8ce \"iris setosa\", ces points seront vert (color='g'), le deuxi\u00e8me \"plt.scatter\" permet de tracer les points correspondant \u00e0 l'esp\u00e8ce \"iris versicolor\", ces points seront rouge (color='r'), enfin le troisi\u00e8me \"plt.scatter\" permet de tracer les points correspondant \u00e0 l'esp\u00e8ce \"iris virginica\", ces points seront bleu (color='b'). Nous aurons en abscisse la longueur du p\u00e9tale et en ordonn\u00e9e la largeur du p\u00e9tale.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2098, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3d9e722-2013-4e6c-9f12-194ac0ec64b5": {"__data__": {"id_": "e3d9e722-2013-4e6c-9f12-194ac0ec64b5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87c75c5d-0c12-4b15-8b9f-68eb1b303437", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "b6bb3c4a9eb523c2fe0219270938aa69c9c7763babdb995e2edbd86d349295c5", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 32.2\n\nCopiez-collez le code ci-dessous dans le fichier *knn_iris.py*\n\n```python\nimport pandas\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier\n\n#traitement CSV\niris=pandas.read_csv(\"iris.csv\")\nx=iris.loc[:,\"petal_length\"]\ny=iris.loc[:,\"petal_width\"]\nlab=iris.loc[:,\"species\"]\n#fin traitement CSV\n\n#valeurs\nlongueur=2.5\nlargeur=0.75\nk=3\n#fin valeurs\n\n#graphique\nplt.axis('equal')\nplt.scatter(x[lab == 0], y[lab == 0], color='g', label='setosa')\nplt.scatter(x[lab == 1], y[lab == 1], color='r', label='versicolor')\nplt.scatter(x[lab == 2], y[lab == 2], color='b', label='virginica')\nplt.scatter(longueur, largeur, color='k')\nplt.legend()\n#fin graphique\n\n#algo knn\nd=list(zip(x,y))\nmodel = KNeighborsClassifier(n_neighbors=k)\nmodel.fit(d,lab)\nprediction= model.predict([[longueur,largeur]])\n#fin algo knn\n\n#Affichage r\u00e9sultats\ntxt=\"R\u00e9sultat : \"\nif prediction[0]==0:\n  txt=txt+\"setosa\"\nif prediction[0]==1:\n  txt=txt+\"versicolor\"\nif prediction[0]==2:\n  txt=txt+\"virginica\"\nplt.text(3,0.5, f\"largeur : {largeur} cm longueur : {longueur} cm\", fontsize=12)\nplt.text(3,0.3, f\"k : {k}\", fontsize=12)\nplt.text(3,0.1, txt, fontsize=12)\n#fin affichage r\u00e9sultats\n\nplt.show()\n```\n\nTestez le programme ci-dessus\n\nLa biblioth\u00e8que Python Scikit Learn propose un grand nombre d'algorithmes li\u00e9 au machine learning (c'est sans aucun doute la biblioth\u00e8que la plus utilis\u00e9e en machine learning). Parmi tous ces algorithmes, Scikit Learn propose l'algorithme des k plus proches voisins.\n\n\nLe programme ci-dessus n'est pas tr\u00e8s complexe \u00e0 comprendre, nous allons tout de m\u00eame nous attarder sur la partie \"knn\" :\n\n```\nd=list(zip(x,y))\nmodel = KNeighborsClassifier(n_neighbors=k)\nmodel.fit(d,lab)\nprediction= model.predict([[longueur,largeur]])\n```\n\nLa premi\u00e8re ligne \"d=list(zip(x,y))\" permet de passer des 2 listes x et y :\n\n```\nx = [1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, ...]\ny = [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.4,....]\n```\n\n\u00e0 une liste de tuples d :\n\n```\nd = [(1.4, 0.2), (1.4, 0.2), (1.3, 0.2) (1.5, 0.2), (1.4, 0.2), (1.7, 0.2), (1.4, 0.4), ...]\n```\n\nles \u00e9l\u00e9ments des tableaux x et y ayant le m\u00eame indice sont regroup\u00e9s dans un tuple, nous obtenons bien une liste de tuples.\n\n\"KNeighborsClassifier\" est une m\u00e9thode issue de la biblioth\u00e8que scikit-learn (voir plus haut le \"from sklearn.neighbors import KNeighborsClassifier\"), cette m\u00e9thode prend ici en param\u00e8tre le nombre de \"plus proches voisins\" (model = KNeighborsClassifier(n_neighbors=k))\n\n\"model.fit(d, lab)\" permet d'associer les tuples pr\u00e9sents dans la liste \"d\" avec les labels (0 : \"iris setosa\", 1 : \"iris versicolor\" ou 2 : \"iris virginica\"). Par exemple le premier tuple de la liste \"d\", (1.4, 0.2) est associ\u00e9 au premier label de la liste lab (0), et ainsi de suite...\n\nLa ligne \"prediction= model.predict([[longueur,largeur]])\" permet d'effectuer une pr\u00e9diction pour un couple [longueur, largeur] (dans l'exemple ci-dessus \"longueur=2.5\" et \"largeur=0.75\"). La variable \"prediction\" contient alors le label trouv\u00e9 par l'algorithme knn. \n\nAttention, \"prediction\" est une liste Python qui contient un seul \u00e9l\u00e9ment (le label), il est donc n\u00e9cessaire d'\u00e9crire \"prediction[0]\" afin d'obtenir le label.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f470fdbd-1e2b-4c51-a488-c787f53b2b2d": {"__data__": {"id_": "f470fdbd-1e2b-4c51-a488-c787f53b2b2d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dbef25da-9823-40b0-9949-cea30cd5ec9e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}, "hash": "9d6d2153ae129e76f666564e987615deb974775612215e7af59e17b83b7f58c2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 32.3\n\nModifiez le programme de l'activit\u00e9 32.2 afin de tester l'algorithme knn avec un nombre \"de plus proches voisins\" diff\u00e9rent (en gardant un iris ayant une longueur de p\u00e9tale \u00e9gale \u00e0 2,5 cm et une largeur de p\u00e9tale \u00e9gale \u00e0 0,75 cm).\n\nQue se passe-t-il pour k = 5 ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 279, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d469bb7-9140-4e28-aa72-875293af7586": {"__data__": {"id_": "6d469bb7-9140-4e28-aa72-875293af7586", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2644630f-76f0-4542-aad5-93256e4c9f9f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ebdcb28ba4505c5edfc2c9cddd620019aadce742bec30304673b51b2ddea5663", "class_name": "RelatedNodeInfo"}}, "text": "1)  introduction\n\nNous allons maintenant travailler sur un algorithme d'apprentissage automatique, souvent appel\u00e9, m\u00eame en fran\u00e7ais, algorithme de machine learning. L'id\u00e9e est d'utiliser un grand nombre de donn\u00e9es afin \"d'apprendre \u00e0 la machine\" \u00e0 r\u00e9soudre un certain type de probl\u00e8me (nous verrons un exemple un peu plus loin).\n\nCette id\u00e9e d'apprentissage automatique ne date pas d'hier, puisque le terme de machine learning a \u00e9t\u00e9 utilis\u00e9 pour la premi\u00e8re fois par l'informaticien am\u00e9ricain Arthur Samuel en 1959. Pourquoi le machine learning est tant \"\u00e0 la mode\" depuis quelques ann\u00e9es ? Simplement parce que le nerf de la guerre dans les algorithmes de machine learning est la qualit\u00e9 et la quantit\u00e9 des donn\u00e9es (les donn\u00e9es qui permettront \u00e0 la machine d'apprendre \u00e0 r\u00e9soudre un probl\u00e8me), or, avec le d\u00e9veloppement d'internet, il est relativement simple de trouver des donn\u00e9es sur n'importe quel sujet (on parle de \"big data\"). \u00c0 noter aussi l'importance des strat\u00e9gies mises en place par les GAFAM (Google, Apple, Facebook, Amazon et Microsoft) afin de r\u00e9cup\u00e9rer un grand nombre de donn\u00e9es concernant leurs clients. Ces donn\u00e9es sont tr\u00e8s souvent utilis\u00e9es pour \"nourrir\" des algorithmes de machine learning (comment, d'apr\u00e8s vous, Amazon arrive \u00e0 proposer \u00e0 ces clients des \"suggestions d'achats\" souvent tr\u00e8s pertinentes ?)\n\nNous allons \u00e9tudier un algorithme d'apprentissage assez simple \u00e0 appr\u00e9hender : l'algorithme des \"k plus proches voisins\" (en anglais \"k nearest neighbors\" : knn)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e75fb5e3-9ca2-4b37-b615-ed9daeff854b": {"__data__": {"id_": "e75fb5e3-9ca2-4b37-b615-ed9daeff854b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7b75e568-8c25-4279-a875-a037fd8eb455", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "1bbdfd19e670ad532eaf061d0616391f883378143770108cbabebe86e4a18f91", "class_name": "RelatedNodeInfo"}}, "text": "2) le probl\u00e8me des iris\n\nAfin de travailler sur un exemple, nous allons utiliser un jeu de donn\u00e9es relativement connu dans le monde du machine learning : le jeu de donn\u00e9es \"iris\".\n\nEn 1936, Edgar Anderson a collect\u00e9 des donn\u00e9es sur 3 esp\u00e8ces d'iris : \"iris setosa\", \"iris virginica\" et \"iris versicolor\"\n\niris setosa :\n\n!\n\niris virginica : \n\n!\n\niris versicolor :\n\n!\n \nPour chaque iris \u00e9tudi\u00e9, Anderson a mesur\u00e9 (en cm) :\n\n- la largeur des s\u00e9pales\n- la longueur des s\u00e9pales\n- la largeur des p\u00e9tales\n- la longueur des p\u00e9tales\n\nPar souci de simplification, nous nous int\u00e9resserons uniquement \u00e0 la largeur et \u00e0 la longueur des p\u00e9tales.\n\nPour chaque iris mesur\u00e9, Anderson a aussi not\u00e9 l'esp\u00e8ce (\"iris setosa\", \"iris versicolor\" ou \"iris virginica\")\n\nEn travaillant sur ce jeu de donn\u00e9es, on peut obtenir le graphique suivant (en abscisse la longueur du p\u00e9tale et en ordonn\u00e9e la largeur du p\u00e9tale) :\n\n!\n\nNous obtenons des \"nuages\" de points, on remarque ces points sont regroup\u00e9s par esp\u00e8ces d'iris (pour \"iris virginica\" et \"iris versicolor\", les points ont un peu tendance \u00e0 se m\u00e9langer).\n\nImaginez maintenant qu'au cours d'une promenade vous trouviez un iris, n'\u00e9tant pas un sp\u00e9cialiste, il ne vous est pas vraiment possible de d\u00e9terminer l'esp\u00e8ce. En revanche, vous \u00eates capables de mesurer la longueur et la largeur des p\u00e9tales de cet iris. Partons du principe qu'un p\u00e9tale fasse 0,5 cm de large et 2 cm de long. Pla\u00e7ons cette nouvelle donn\u00e9e sur notre graphique (point en noir) :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1484, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8135b7a9-c0de-45ba-b79a-debe4bd27154": {"__data__": {"id_": "8135b7a9-c0de-45ba-b79a-debe4bd27154", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e735267f-54a1-4ad8-b203-9b28efb9fca7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "99b4b4de5ee059b831e3519767028838e8612930d5b8229ce25166eceebd2223", "class_name": "RelatedNodeInfo"}}, "text": "3) algorithme de k plus proches voisins\n\nIl est possible de rencontrer des cas plus difficiles, par exemple : largeur du p\u00e9tale = 0,75 cm ; longueur du p\u00e9tale = 2,5 cm :\n\n!\n\nDans ce genre de cas, il peut \u00eatre int\u00e9ressant d'utiliser l'algorithme des \"k plus proches voisins\", en quoi consiste cet algorithme ?\n\n- on calcule la distance entre notre point (largeur du p\u00e9tale = 0,75 cm ; longueur du p\u00e9tale = 2,5 cm) et chaque point issu du jeu de donn\u00e9es \"iris\" (\u00e0 chaque fois c'est un calcul de distance entre 2 points tout ce qu'il y a de plus classique)\n\n- on s\u00e9lectionne uniquement les k distances les plus petites (les k plus proches voisins)\n\n- parmi les k plus proches voisins, on d\u00e9termine quelle est l'esp\u00e8ce majoritaire. On associe \u00e0 notre \"iris myst\u00e8re\" cette \"esp\u00e8ce majoritaire parmi les k plus proches voisins\"\n\nPrenons k = 3\n\n!\n\nLes 3 plus proches voisins sont signal\u00e9s ci-dessus avec des fl\u00e8ches : nous avons deux \"iris setosa\" (point vert) et un \"iris versicolor\" (point rouge). D'apr\u00e8s l'algorithme des \"k plus proches voisins\", notre \"iris myst\u00e8re\" appartient \u00e0 l'esp\u00e8ce \"setosa\".\n\nLe choix de la valeur de k est important, il faut souvent effectuer plusieurs essais.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12435baa-e252-4cef-a95b-c3ecee925c78": {"__data__": {"id_": "12435baa-e252-4cef-a95b-c3ecee925c78", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32r.md", "file_name": "termc32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "274603d3-9379-465d-947b-0b30857a6c50", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32r.md", "file_name": "termc32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "dd312867d65adff45753ce6e4e9cc8d4030e9bac48af305059bc1ba8bdb4131c", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir\n\n- l'algorithme des k plus proches voisins fait partie de la famille des algorithmes d'apprentissage automatique\n\n- vous devez conna\u00eetre le principe de fonctionnement de l'algorithme des k plus proches voisins", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 232, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2cf65182-ca0c-4c5c-a573-d467f7e6e919": {"__data__": {"id_": "2cf65182-ca0c-4c5c-a573-d467f7e6e919", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32r.md", "file_name": "termc32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "71a5a93e-10a2-4ba0-9d75-80b303a1fc50", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32r.md", "file_name": "termc32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "42e8381015ddcf1ce24a9e8356578704cdf2f1df2387ae4adc5250cdcda9a0b0", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu'il faut savoir faire\n\nVous devez \u00eatre capable d'utiliser l'algorithme des k plus proches voisins sur un jeu de donn\u00e9es simple (utilisation des biblioth\u00e8ques Python Pandas et scikit-learn)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9dc6fea3-1e33-4829-9cdb-99d86955fb6f": {"__data__": {"id_": "9dc6fea3-1e33-4829-9cdb-99d86955fb6f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc33c.md", "file_name": "termc33c.md", "file_size": 2143, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "905c41b9-560a-4472-b5f1-699fd1bbf758", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc33c.md", "file_name": "termc33c.md", "file_size": 2143, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "007473497e53ec25daad593aa356e9b09a554e4f98690c929d98e4533b4e058c", "class_name": "RelatedNodeInfo"}}, "text": "Nous allons nous int\u00e9resser aux interfaces Homme-Machine (IHM). Une IHM permet \u00e0 un utilisateur d'interagir avec une machine, la souris et le clavier sont des exemples d'IHM, mais il en existe bien d'autres (par exemple les \u00e9crans tactiles des smartphones). Par \"machine\", on entend bien \u00e9videmment \"ordinateur\", comme dans le cas du duo clavier-souris, mais pas seulement. En effet, les \"machines\" peuvent aussi \u00eatre des objets connect\u00e9s, des syst\u00e8mes embarqu\u00e9s ou encore des robots. Nous allons justement nous int\u00e9resser ici \u00e0 cette derni\u00e8re cat\u00e9gorie : les robots.\n\nQu'est-ce qu'un robot ?\n\nLe mot robot a \u00e9t\u00e9 utilis\u00e9 pour la premi\u00e8re fois par l\u2019\u00e9crivain tch\u00e9coslovaque Karel \u010capek dans sa pi\u00e8ce de th\u00e9\u00e2tre \"Rossum's Universal Robots\" en 1920, il a pour origine le mot russe \"rabota\" qui signifie travail, corv\u00e9e. La notion de robot a \u00e9t\u00e9 ensuite d\u00e9velopp\u00e9e par l'\u00e9crivain am\u00e9ricano-russe Isaac Asimov dans son recueil de nouvelles \"Les Robots\" (1950).\n\nPour simplifier \u00e0 l'extr\u00eame, un robot est constitu\u00e9 de 2 choses :\n\n- des actionneurs qui lui permettent d'effectuer des actions (se d\u00e9placer, saisir des choses, faire de la soudure...)\n- des capteurs qui lui permettent de \"connaitre\" son environnement (d\u00e9tecteurs d'obstacles, capteur de temp\u00e9rature...)\n\nAu niveau IHM, il est possible d'interagir avec le robot avec une simple t\u00e9l\u00e9commande : l'op\u00e9rateur donne des ordres au robot par l'interm\u00e9diaire de cette t\u00e9l\u00e9commande (\"aller \u00e0 gauche\", \"avancer de 3 m\u00e8tres\", \"prendre un objet avec une pince\"...), par exemple, les robots qui interviennent dans des milieux dangereux (centrale nucl\u00e9aire) sont t\u00e9l\u00e9command\u00e9s \u00e0 distance par des op\u00e9rateurs.\n\nrobot destin\u00e9 aux interventions dans les centrales nucl\u00e9aires :\n\n!\n\nop\u00e9rateur robot :\n\n!\n\nIl est aussi possible d'interagir avec un robot non pas directement, mais en le programmant afin de lui donner une certaine autonomie. La programmation consiste \u00e0 donner au robot la marche \u00e0 suivre en fonction des situations rencontr\u00e9es : \"si le capteur X d\u00e9tecte quelque chose alors arr\u00eate les moteurs\".", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "35e26b4d-6785-4d07-a619-04f4378bfa8e": {"__data__": {"id_": "35e26b4d-6785-4d07-a619-04f4378bfa8e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8c93f99-cc25-4769-8c53-e549069fdb2a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a184c6c781b3e75ce54520bc1124728fdeddd6c14affe164b551c43818b19959", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.1\n\nIl est possible d'afficher le contenu d'un dictionnaire dans la console.\n\nTapez la ligne suivante dans la partie \u00e9diteur de Spyder ou de basthon :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n```\napr\u00e8s avoir ex\u00e9cut\u00e9 le \"programme\" ci-dessus, tapez  *mes_fruits* dans la partie console. Vous devriez alors voir s'afficher le contenu (cl\u00e9s et valeurs) du dictionnaire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 399, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4c7d95a-0686-424f-b1b0-30e83f7c9e1f": {"__data__": {"id_": "f4c7d95a-0686-424f-b1b0-30e83f7c9e1f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "84d99005-5433-4d8e-9b52-91aacd50c218", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "507a15c4b9d34aa8f2d5a1900f8459ee7bfd23f54bb82ce2d1a892753e4d4b4f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.2\n\n```python\nd = {\"voiture\": 25, \"v\u00e9lo\": 55, \"train\": 20}\ntr = d['v\u00e9lo']\n```\nQuelle  est la valeur de la variable *tr* apr\u00e8s l'ex\u00e9cution du programme ci-dessus. V\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50214f4d-f60e-4b98-9089-6a382962b6bd": {"__data__": {"id_": "50214f4d-f60e-4b98-9089-6a382962b6bd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f7935e7-d9e9-4e4e-b0f7-d6f44c15f671", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "aac45e8df685689414a98ccc2bdf57a52198cc9ea0476090298f9b71dc07399b", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.3\n\n```python\ntab = []\nd = {\"voiture\": 25, \"v\u00e9lo\": 55, \"train\": 20}\nfor t in d.values():\n\tif t < 40 :\n\t\ttab.append(t)\n```\nQuelle est la valeur de la variable *tab* apr\u00e8s l'ex\u00e9cution de  ce programme. V\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 258, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20521fb2-081f-4337-8f47-188e6a0920b3": {"__data__": {"id_": "20521fb2-081f-4337-8f47-188e6a0920b3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07db983d-9ba7-4a4d-93fd-c1b36e1beb58", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "589f052de5741a537ec846aee403dff9452a3e90a7dd0bc0dff3ac62d5cad14e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.4\n\n```python\ntab = []\nd = {\"voiture\": 25, \"v\u00e9lo\": 55, \"train\": 20}\nfor v,t in d.items():\n\tif t < 40 :\n\t\ttab.append(v)\n```\nQuelle est la valeur de la variable *tab* apr\u00e8s l'ex\u00e9cution de  ce programme. V\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 259, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c64f9637-169a-4c9c-a0ae-131a767ee193": {"__data__": {"id_": "c64f9637-169a-4c9c-a0ae-131a767ee193", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3f328f6b-e1b9-41ba-a9cb-5952c2c89dc7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "02a64036bd235017e1e0a9230fb1154a49c77bd4732877b7655d2787d4249e9f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.5\n\n```python\ntab = [{'nom': 'toto', 'num': 2}, {'nom': 'titi', 'num': 5},  {'nom': 'tata', 'num': 4}]\ntab_nom =  []\n\nfor t in tab :\n\tif t['num'] > 3:\n\t\ttab_nom.append(t['nom'])\n```\nQuelle est la valeur de la variable *tab_nom* apr\u00e8s l'ex\u00e9cution de  ce programme. V\u00e9rifiez votre r\u00e9ponse \u00e0 l'aide de la console.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f217d1f2-a318-4486-998c-a07e91f4f3dd": {"__data__": {"id_": "f217d1f2-a318-4486-998c-a07e91f4f3dd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70f959d4-a132-4827-a868-2f7944055757", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "29cef74c17bbe0bd3c1a8c0e0a1f9f4c71bd3ac3a330eaf8b560195fd43ea278", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.6\n\nOn utilise un tableau contenant des dictionnaires afin de stocker les  notes des \u00e9l\u00e8ves Titi, Toto et Tutu :\n\n```python\n[{'nom':'Titi', 'note':12}, {'nom':'Tutu', 'note':11}, {'nom':'Toto', 'note':17}]\n```\n\nLa fonction *plusHaute* prend en param\u00e8tre un tableau contenant des dictionnaires (comme celui ci-dessus) et renvoie le nom de l'\u00e9l\u00e8ve ayant obtenu la meilleure note (on partira du principe que les \u00e9l\u00e8ves ont tous des notes diff\u00e9rentes).\n\n```python\ndef plusHaute(tab):\n\tnom = \"\"\n\tmax_note = ...\n\tfor t in ...:\n\t\tif t['note'] > ...:\n\t\t\tmax_note = t[...]\n\t\t\tnom = t[...]\n\treturn ...\n```\n\t\t\t\nCompl\u00e9tez la fonction *plusHaute*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 645, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "587b71e5-96fd-450f-bfc7-c698bd55192d": {"__data__": {"id_": "587b71e5-96fd-450f-bfc7-c698bd55192d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5b74fcf-3bf6-470f-8f04-eb9ef872c259", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c2bfddb8ea5695df4080a27297ab2a8d6e9f580553af3683b87356102f8545e2", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.7\n\nOn utilise un tableau et des dictionnaires pour stocker des noms et des num\u00e9ros  de t\u00e9l\u00e9phone :\n\n```python\n[{'nom':'Titi', 'num':987675643}, {'nom':'Tutu', 'num':424224}, {'nom':'Toto', 'num':343235365}]\n```\n\nLa fonction *numTel* prend 2 param\u00e8tres :\n\n- un tableau de dictionnaires *tab_tel* contenant les noms  et les num\u00e9ros de t\u00e9l\u00e9phone (comme celui ci-dessus)\n- un nom *n*\n\nLa fonction *numTel* doit renvoyer le num\u00e9ro de t\u00e9l\u00e9phone de *n* si ce dernier existe. Dans le cas o\u00f9 *n* n'existe pas, la  fonction *numTel* doit renvoyer -1\n\n```python\ndef numTel(n, ...):\n\tfor ... in tab_tel:\n\t\tif ...  == t['nom']:\n\t\t\treturn ...\n\treturn ...\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "883febc2-346a-4321-a476-f322f9d7e372": {"__data__": {"id_": "883febc2-346a-4321-a476-f322f9d7e372", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ed53990-a6ad-45a9-9a4d-531496ef6526", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "093e7b5b683c94ead88f3774abde9744dbd801c4d8b0f2a5992b77033c359a09", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 3.8\n\nOn utilise un tableau contenant des dictionnaires afin de stocker les  notes des \u00e9l\u00e8ves Titi, Toto et Tutu :\n\n```python\n[{'nom':'Titi', 'note':12}, {'nom':'Tutu', 'note':11}, {'nom':'Toto', 'note':17}]\n```\nLa fonction *moyenne* prend en param\u00e8tre un tableau contenant des dictionnaires (comme celui ci-dessus) et renvoie la moyenne des notes.\n\n\u00c9crivez la fonction *moyenne*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b750473-375a-4af2-9486-d5def7525672": {"__data__": {"id_": "5b750473-375a-4af2-9486-d5def7525672", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48b12ab7-5d2a-42a8-8066-44f766ea5625", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0833e1e2e1cd4c1d044909c780380bbde3915e759b01b4b739bcf801b9aa97b3", "class_name": "RelatedNodeInfo"}}, "text": "1)  pr\u00e9sentation des dictionnaires\n\nComme les listes, les dictionnaires permettent de \"stocker\" des donn\u00e9es. Chaque \u00e9l\u00e9ment d'un dictionnaire est compos\u00e9 de 2 parties, on parle de paires \"cl\u00e9/valeur\". \n\nVoici un exemple de dictionnaire :\n\n```python\nmon_dico = {\"nom\": \"Durand\", \"prenom\": \"Christophe\", \"date de naissance\": \"29/02/1981\"}\n```\n\nComme vous pouvez le constater, nous utilisons des accolades {} pour d\u00e9finir le d\u00e9but et la fin du dictionnaire (alors que nous utilisons des crochets [] pour les listes et les parenth\u00e8ses pour les tuples). Dans le dictionnaire ci-dessus, \"nom\", \"prenom\" et \"date de naissance\" sont des cl\u00e9s et \"Durand\", \"Christophe\" et \"29/02/1981\" sont des valeurs. La cl\u00e9 \"nom\" est associ\u00e9e \u00e0 la valeur \"Durand\", la cl\u00e9 \"prenom\" est associ\u00e9e \u00e0 la valeur \"Christophe\" et la cl\u00e9 \"date de naissance\" est associ\u00e9e \u00e0 la valeur \"29/02/1981\". Les cl\u00e9s sont des cha\u00eenes de caract\u00e8res ou des nombres. Les valeurs peuvent \u00eatre des cha\u00eenes de caract\u00e8res, des nombres, des bool\u00e9ens...\n\nPour cr\u00e9er un dictionnaire, il est aussi possible de proc\u00e9der comme suit :\n\n```python\nmon_dico = {}\nmon_dico[\"nom\"] = \"Durand\"\nmon_dico[\"prenom\"] = \"Christophe\"\nmon_dico[\"date de naissance\"] = \"29/02/1981\"\n```\n\n\u00c0 noter qu'il est aussi possible d'\u00e9crire :\n\n```python\nmon_dico = dict()\nmon_dico[\"nom\"] = \"Durand\"\nmon_dico[\"prenom\"] = \"Christophe\"\nmon_dico[\"date de naissance\"] = \"29/02/1981\"\n```\n\nIl est possible d'obtenir la valeur associ\u00e9e \u00e0 une cl\u00e9 :\n\n```python\nmon_dico = {\"nom\": \"Durand\", \"prenom\": \"Christophe\", \"date de naissance\": \"29/02/1981\"}\n\na = mon_dico['nom']\n```\n\nDans le programme ci-dessus, la variable *a* aura pour valeur *Durand*.\n\nIl est facile d'ajouter un \u00e9l\u00e9ment \u00e0 un dictionnaire (les dictionnaires sont mutables)\n\n```python\nmon_dico = {\"nom\": \"Durand\", \"prenom\": \"Christophe\", \"date de naissance\": \"29/02/1981\"}\n\nmon_dico['lieu de naissance'] = 'Contamine'\n```\nLa  deuxi\u00e8me ligne du programme ci-dessus  a permis  d'ajouter la cl\u00e9 *lieu de naissance* au dictionnaire *mon_dico*. Cette cl\u00e9 a pour valeur *Contamine*\n\nL'instruction \"del\" permet du supprimer une paire \"cl\u00e9/valeur\"\n\nSoit le dictionnaire suivant :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n```\nsi on ex\u00e9cute la ligne :\n\n```python\ndel mes_fruits[\"pomme\"]\n```\nle dictionnaire *mes_fruits* n'aura plus  que 2 cl\u00e9s : *poire* et *orange*\n\nIl est possible de modifier la valeur d'une cl\u00e9 :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\nmes_fruits[\"pomme\"] = mes_fruits[\"pomme\"] - 1\n```\n\nApr\u00e8s l'ex\u00e9cution de ce programme, la cl\u00e9 *pomme* aura pour valeur 3", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2577, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e10f561-8540-4d01-9e4a-9edd4d550161": {"__data__": {"id_": "9e10f561-8540-4d01-9e4a-9edd4d550161", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f08520f6-d668-4d76-a83f-3e795b23e25a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "38939367a22b67740888e21431187f4759db0317f1b18e72e982cda23aaca6dc", "class_name": "RelatedNodeInfo"}}, "text": "2) parcourir un dictionnaire avec la boucle for", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6204d1c-300e-40af-ab44-e93f91516ea1": {"__data__": {"id_": "e6204d1c-300e-40af-ab44-e93f91516ea1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3f9062a8-085e-4b9f-af2e-ce413de57760", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0f5ad7c68fedae7824e0bc3a8789958121a45f326a458a01c1d98589fd994c8d", "class_name": "RelatedNodeInfo"}}, "text": "a) parcourir les cl\u00e9s\n\nIl est possible de parcourir un dictionnaire \u00e0 l'aide d'une boucle for. Ce parcours peut se faire selon les cl\u00e9s ou les valeurs. Commen\u00e7ons par parcourir les cl\u00e9s \u00e0 l'aide de la m\u00e9thode *keys*\n\nLe programme suivant :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n\nfor fruit in mes_fruits.keys():\n\tprint(fruit)\n```\npermet d'afficher :\n\n```\npoire\npomme\norange\n```\n\nAttention : vous n'obtiendrez par forcement le m\u00eame ordre que ci-dessus (surtout si vous utilisez une version un peu ancienne de Python). En effet, les paires cl\u00e9/valeur ne sont pas ordonn\u00e9es dans un dictionnaire.\n\n\u00c0 noter que le *.keys()* n'est pas obligatoire pour parcourir les cl\u00e9s, on obtient le m\u00eame r\u00e9sultat avec simplement :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n\nfor fruit in mes_fruits:\n\tprint(fruit)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 842, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77724a0d-9b50-43c8-9685-0050b604e6ab": {"__data__": {"id_": "77724a0d-9b50-43c8-9685-0050b604e6ab", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac19c0e6-7e72-4bbb-9e82-4df555084ae5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "2545b2a63ef17903f2fba8debe9307261b0bc8dab2756fa4ab5d4023b0aa3bb0", "class_name": "RelatedNodeInfo"}}, "text": "b) parcourir les valeurs\n\nLa m\u00e9thode *values* permet de parcourir le dictionnaire selon les valeurs :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\nfor qte in mes_fruits.values():\n  print(qte)\n```\n\nLe programme ci-dessus permet d'obtenir :\n\n```\n3\n4\n2\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "044ebcf5-631a-424b-9994-f2a31f792b83": {"__data__": {"id_": "044ebcf5-631a-424b-9994-f2a31f792b83", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "033cc0b8-6084-4ed5-870c-e2597d2fbf04", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4ab623aeb81f4e12cacd037a482f92140aba4bb01fdfbf5d9dfbba3b361cccbd", "class_name": "RelatedNodeInfo"}}, "text": "c)  parcourir les cl\u00e9s et les valeurs en m\u00eame temps\n\nIl est possible de parcourir un dictionnaire \u00e0 la fois sur les cl\u00e9s et les valeurs en utilisant la m\u00e9thode *items* :\n\n```python\nmes_fruits = {\"poire\": 3, \"pomme\": 4, \"orange\": 2}\n\nfor fruit, qte in mes_fruits.items():\n\tprint (f\"{fruit} : {qte}\")\n```\nl'ex\u00e9cution du programme ci-dessus nous permet d'avoir :\n```\npoire : 3\npomme : 4\norange : 2\n```\n\nVous avez sans doute remarqu\u00e9 l'utilisation de deux variables (*fruit* et *qte*) au niveau du *for...in*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ee305cb-b436-4bc8-baef-899cc1238c05": {"__data__": {"id_": "2ee305cb-b436-4bc8-baef-899cc1238c05", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3r.md", "file_name": "termc3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a971c2aa-1e8f-4be5-bbda-114bd65a5744", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3r.md", "file_name": "termc3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "44143b73cfec95b8ff030b351c2a494023c69b3015049d305b2756b7b170acee", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- un dictionnaire permet de \u201cstocker\u201d des donn\u00e9es\n\n- chaque \u00e9l\u00e9ment d'un dictionnaire est compos\u00e9 de 2 parties, on parle de paires \"cl\u00e9/valeur\" (exemple : *mon_dico = {\"nom\": \"Durand\", \"prenom\": \"Christophe\", \"date de naissance\": \"29/02/1981\"})*\n\n- pour afficher une \u201cvaleur\u201d particuli\u00e8re, on utilise la notation *mon\\_dico[nom\\_de\\_la\\_cl\u00e9 ]*\n\n- il est possible de parcourir l\u2019ensemble des cl\u00e9s d\u2019un dictionnaire \u00e0 l\u2019aide d\u2019une boucle\nfor en utilisant *keys*\n\n- il est possible de parcourir l\u2019ensemble des valeurs d\u2019un dictionnaire \u00e0 l\u2019aide d\u2019une boucle for en utilisant *values*\n\n- il est possible de parcourir l\u2019ensemble des cl\u00e9s et des valeurs (en m\u00eame temps) d\u2019un dictionnaire \u00e0 l\u2019aide d\u2019une boucle for en utilisant *items*", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 752, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1de65c89-b852-4180-a45d-e8f537acd876": {"__data__": {"id_": "1de65c89-b852-4180-a45d-e8f537acd876", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3r.md", "file_name": "termc3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d484326-0fdd-4ca5-8dd0-27b0ddd719ad", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3r.md", "file_name": "termc3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8b8949a1bc2398c4360c0e2546b7db09c5e1ee636b2f49ad15676cbd8f72babc", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- construire un dictionnaire\n\n- utiliser la notation *mon\\_dico[nom\\_de\\_la\\_cl\u00e9 ]* afin d\u2019utiliser une valeur particuli\u00e8re\n\n- parcourir l\u2019ensemble des valeurs\n\n- parcourir l\u2019ensemble des cl\u00e9s\n\n- parcourir l\u2019ensemble des cl\u00e9s et des valeurs (en m\u00eame temps)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ace53c07-56b5-4881-bd38-220678f904aa": {"__data__": {"id_": "ace53c07-56b5-4881-bd38-220678f904aa", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b151e099-1e3c-4f4e-825c-754422f1e1bc", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c70fdfdf1e9fc11588cd266a121551fd25ea38926471888b7b1c23264e29efab", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.1\n\nConvertir 4210 en base 2", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 40, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc3e3730-9a73-4b8b-afb3-38fbed42e131": {"__data__": {"id_": "bc3e3730-9a73-4b8b-afb3-38fbed42e131", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8fd686c3-7fba-4674-b4fb-4c1689d6ea42", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "555a1c1c1fa843459114bba93eb4256920cd50f91481bb465df3f406e781d5fa", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.2\n\nConvertir 100110012 en base 10", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 46, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "001b7086-8454-48ad-8ecd-95190582250c": {"__data__": {"id_": "001b7086-8454-48ad-8ecd-95190582250c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "981ca82f-c210-46a1-b5d3-4d680d4e6e6e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "695458fac7366ff87e54a85759e0d4e90e913962b4b03e9d642dcacff5cbc317", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.3\n\nConvertir 1011110110012 en base 16", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 50, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5ba4156-25ca-4b14-a444-4f73d9c55477": {"__data__": {"id_": "d5ba4156-25ca-4b14-a444-4f73d9c55477", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "317f8931-0d30-4892-b85f-691a5a5f5065", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5d8daa5442acc2b2ba8bd821160178f3c323d63c770b012d2c534301607e8e0d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.4\n\nConvertir 1110112 en base 16", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 44, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "884f8baf-c0bb-4795-bc64-47d56e3d5679": {"__data__": {"id_": "884f8baf-c0bb-4795-bc64-47d56e3d5679", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3c94a936-58c3-40c2-8460-42acc6973be0", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "12ace207a9570b02795676cbaed95ebfda7fe7f53b83f1fc3784c02fb1b394c6", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.5\n\nConvertir 1A3E16 en base 2", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 42, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "929ab39b-cece-4146-a72f-de31cf1d565a": {"__data__": {"id_": "929ab39b-cece-4146-a72f-de31cf1d565a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40f360e5-34d9-4e1b-99a1-44b64948c1d7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c4527266e8890edd2e4f805be4c2ee14c9d092febd025feead85216e411e2505", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.6\n\nConvertir 138710 en base 16", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 43, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc54b98c-ac64-4114-ad33-05eb7f4873ce": {"__data__": {"id_": "fc54b98c-ac64-4114-ad33-05eb7f4873ce", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4a7a6217-56f0-4c3c-82ea-8c0656599820", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "728616ee3e4dc4bebd5a1253921d5dfcfe5f84ea950bc27a66052e38762a029a", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 4.7\n\nConvertir 1B8716 en base 10", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 43, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2721f66a-15aa-40a7-92fc-8dab2112be14": {"__data__": {"id_": "2721f66a-15aa-40a7-92fc-8dab2112be14", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b93fa343-5e48-4adb-a6b5-aa9dd34ae514", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6764af845e24ca977cc3e45b58ce50ccc93952ed0590d083dc5a4ee488c264f4", "class_name": "RelatedNodeInfo"}}, "text": "1) Le syst\u00e8me d\u00e9cimal\nPour que vous compreniez le fonctionnement du binaire, et des syst\u00e8mes de comptage en g\u00e9n\u00e9ral (plus commun\u00e9ment appel\u00e9s bases), je vais commencer par faire une petite r\u00e9introduction \u00e0 la base 10 que vous connaissez tous.\n\nEn effet, tout le monde sait compter en base 10 (d\u00e9cimal). Mais comment \u00e7a marche ? Comment est construit notre syst\u00e8me ? Pour r\u00e9pondre \u00e0 cette question \u00e0 l'apparence simple, oubliez tout et reprenons depuis le d\u00e9but : comment avez-vous appris \u00e0 compter \u00e0 l'\u00e9cole ?\n\nVous penserez peut-\u00eatre que la base 10 vient du fait qu'on a 10 doigts, mais en tout cas deux choses sont s\u00fbres :\n\nIl y a 10 chiffres : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.\n\nAvec ces derniers, on peut compter jusqu'\u00e0 9.\n\nEt si l'on veut aller au-del\u00e0 de 9, il faut changer de rang.\n\nCela signifie que si le rang des unit\u00e9s est plein, il faut passer \u00e0 celui des dizaines, puis des centaines, milliers et j'en passe.\n\nPar exemple : \u00e0 19, le rang des unit\u00e9s est \"satur\u00e9\" (plein), car il contient le chiffre 9, et il n'y a pas (dans la base 10) de valeur plus \u00e9lev\u00e9e. Il faut donc incr\u00e9menter le rang p\u00e9riph\u00e9rique puis r\u00e9initialiser l'\u00e9tat de celui des unit\u00e9s. Ce qui signifie : j'ai 19, je ne peux pas mettre plus de 9 \u00e0 droite, donc j'ajoute 1 \u00e0 celui de gauche et je remets \u00e0 z\u00e9ro celui de droite.\n\n!\n\nComme je disais tout \u00e0 l'heure, le nombre entier va \u00eatre compos\u00e9 de rangs (unit\u00e9s, dizaines, centaines, etc). Chaque rang vaut le rang pr\u00e9c\u00e9dent multipli\u00e9 par l'indice de la base. Une centaine vaut dix dizaines, et une dizaine vaut 10 unit\u00e9s. Par exemple, dans l'image ci-dessus, on peut voir le nombre 18510 (ici, le 10 signifie qu'il s'agit d'un nombre, en base 10). Dans ce nombre, on peut voir trois rangs : centaines, dizaines et unit\u00e9s. Pour n'importe quelle base, la valeur d'un rang est \u00e9gale \u00e0 bn, o\u00f9 b est l'indice de la base (ici, 10) et n la position du rang. Ici, les unit\u00e9s ont la position 0, les dizaines la position 1 et les centaines la position 2. Nous pouvons donc \u00e9crire :\n\n185=1\u2217102+8\u2217101+5\u2217100\n\nCe que je viens de faire, c'est d\u00e9composer 185 en puissance de 10 (unit\u00e9s, dizaines, centaines, etc).\n\nUn nombre est \u00e9gal \u00e0 la somme des valeurs de ses rangs, et on peut d\u00e9composer n'importe quel nombre en puissance de sa base.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2251, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08d52fd4-b884-4242-a2f2-71f7d3e8c757": {"__data__": {"id_": "08d52fd4-b884-4242-a2f2-71f7d3e8c757", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24ded022-d957-4fdf-9043-460f5443226c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8f45bf1efde544513a618b95736dda144940f9992a6c6b8e8e4624668ddbf900", "class_name": "RelatedNodeInfo"}}, "text": "2) Le binaire", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 15, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc9e063c-3ce8-48c1-b945-456bd8541258": {"__data__": {"id_": "bc9e063c-3ce8-48c1-b945-456bd8541258", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aca38c90-3db3-4111-b1c5-0e8b47c1d236", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "79a4ce5bdfcb46c97f6d544eca31ac80b3231910d5d0d3b361e315397f2e64a4", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nLe binaire, c'est le syst\u00e8me de comptage des ordinateurs. Pourquoi le binaire et pas le d\u00e9cimal comme les humains ? Et bien c'est tr\u00e8s simple : un ordinateur est compos\u00e9 de circuits \u00e9lectroniques, et donc de composants \u00e9lectriques. Le plus simple pour compter est donc d'utiliser un syst\u00e8me en base 2 (le binaire) car on peut repr\u00e9senter ses deux valeurs possibles (0 et 1) par un signal \u00e9lectrique : 1, y'a du courant, 0, y'en a pas (c'est la version simple).\n\nJe vous ai parl\u00e9 ci-dessus de rangs. En binaire, c'est pareil \u00e0 la diff\u00e9rence qu'on utilise le terme bit, qui est la contraction de \"binary digit\", litt\u00e9ralement \"chiffre binaire\". Par exemple, le nombre 10011 occupe 5 bits. L\u00e0 o\u00f9 tout se complique, c'est que comme je l'ai expliqu\u00e9, chaque rang en binaire ne peut avoir que deux valeurs (binaire = base 2) diff\u00e9rentes : 0 ou 1. Pour la base 10, chaque rang repr\u00e9sente une puissance de 10, pour la base 2, chaque rang occupe une puissance de 2. Voici comment compter en binaire jusqu'\u00e0 10 :\n\n\n|Nombre en d\u00e9cimal|Nombre en binaire|Le pourquoi du comment|\n|--- |--- |--- |\n|0|0|Pour l'instant, \u00e7a va.|\n|1|1|L\u00e0 encore, c'est simple.|\n|2|10|Le premier rang ayant \u00e9t\u00e9 rempli, on passe au suivant !|\n|3|11|On re-remplit le rang 1.|\n|4|100|Le rang 2 est plein, le rang 1 aussi, qu'\u00e0 cela ne tienne, on passe au suivant.|\n|5|101|On continue en suivant la m\u00eame m\u00e9thode.|\n|6|110|On continue en suivant la m\u00eame m\u00e9thode.|\n|7|111|On continue en suivant la m\u00eame m\u00e9thode.|\n|8|1000|On commence le rang 4.|\n|9|1001|On continue comme tout \u00e0 l'heure.|\n|10|1010|On continue comme tout \u00e0 l'heure.|\n|...|...|...|\n\n- avec 1  bit on peut coder 2 valeurs (0 et 1)\n\n- avec  2 bits on peut coder 4 valeurs (00, 01, 10 et 11)\n\n- avec  3 bits on peut coder 8 valeurs (000, 001, 010, 011, 100, 101, 110, 111)\n\n- avec n bits on peut coder... **2n** valeurs (v\u00e9rifications : 21 = 2 ; 22 = 4 ; 23 = 8 ...)\n\nComme on a pu le voir, compter jusqu'\u00e0 10 ou 20 reste ais\u00e9, mais imaginons un instant que je vous demandasse d'\u00e9crire 185 en binaire ? Vous allez faire chaque rang, un par un ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2081, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b68a5f3-e16b-457d-90d3-a58f6874d2db": {"__data__": {"id_": "8b68a5f3-e16b-457d-90d3-a58f6874d2db", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91e9fa1f-816a-4b79-8db8-f9f1ab70c971", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5a116941984226e84414e7b7be668690d7e9623ee5362b22818f679d1325c91c", "class_name": "RelatedNodeInfo"}}, "text": "b) Conversion d\u00e9cimale binaire\n\nPour l'instant, on n'a compt\u00e9 que jusqu'\u00e0 10. Mais pour les plus grands nombres, la m\u00e9thode pr\u00e9c\u00e9dente peut se r\u00e9v\u00e9ler fastidieuse\n\nLa m\u00e9thode :\n\nIl existe bien s\u00fbr plusieurs m\u00e9thodes de conversion, mais nous allons \u00e9tudier la plus simple et la plus rapide. Il s'agit de la m\u00e9thode euclidienne.\n\nCette m\u00e9thode, en plus d'\u00eatre facile \u00e0 utiliser en programmation (c'est un algorithme) est une des meilleures lorsqu'il s'agit de traiter les grands nombres.\n\nVoici la m\u00e9thode :\n\nOn prend le nombre en base 10 (forme normale).\nOn le divise par 2 et on note le reste de la division (soit 1 soit 0)\nOn refait la m\u00eame chose avec le quotient pr\u00e9c\u00e9dent, et on met de nouveau le reste de c\u00f4t\u00e9.\nOn r\u00e9it\u00e8re la division, jusqu'\u00e0 ce que le quotient soit 0.\nLe nombre en binaire appara\u00eet alors : il suffit de prendre tous les restes de bas en haut.\nEt l'exemple :\n\n185 = 2 x 92 + 1\n\n92 = 2 x 46 + 0\n\n46 = 2 x 23 + 0\n\n23 = 2 x 11 + 1\n\n11 = 2 x 5 + 1\n\n5 = 2 x 2 + 1\n\n2 = 2 x 1 + 0\n\n1 = 2 x 0 + 1\n\nAttention, il faut bien lire de bas en haut !\n\n185 en base 10 vaut donc 10111001 en binaire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1105, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c0b5494-595f-4dbe-8af5-dcc7a075eda9": {"__data__": {"id_": "0c0b5494-595f-4dbe-8af5-dcc7a075eda9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d727beed-dd36-40b2-a8e0-d20219072339", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "dde6490e771ecbe8557bf7d3283f45bdabd5c318da0dc84bdc853abee1b5f29d", "class_name": "RelatedNodeInfo"}}, "text": "c) Conversion binaire d\u00e9cimale\n\nJe vous rassure tout de suite : c'est plus simple dans ce sens-l\u00e0 que dans l'autre.\n\nPrenons un nombre au hasard, tel que 11010011. Il s'\u00e9tale sur 8 rangs, et comme dit pr\u00e9c\u00e9demment, chaque rang correspond \u00e0 une puissance de deux.\nLe premier rang (en partant de la droite) est le rang 0, le second est le 1, etc.\n\nPour convertir le tout en d\u00e9cimale, on proc\u00e8de de la mani\u00e8re suivante : on multiplie par 20 la valeur du rang 0, par 21 la valeur du rang 1, par 22 la valeur du rang 2, [...], par 210 la valeur du rang 10, etc.\n\nApr\u00e8s \u00e7a, il ne reste plus qu'\u00e0 remplacer les puissances de 2 par leurs valeurs et de calculer la somme : (Attention \u00e0 bien partir de la droite !)\n11010011binaire=1\u22171+1\u22172+0\u22174+0\u22178+1\u221716+0\u221732+1\u221764+1\u2217128=211d\u00e9cimal", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b58b3ea3-7653-4e1e-aff0-8392e261572c": {"__data__": {"id_": "b58b3ea3-7653-4e1e-aff0-8392e261572c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cac3bb6b-3f54-430d-9c14-447735f336bb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "999f25550f3d34b5daa0964cdcabec438b3ee1e170dac0ea6ceaed471008cb27", "class_name": "RelatedNodeInfo"}}, "text": "3) L'hexad\u00e9cimal", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 18, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7303bbfd-065f-49f9-a7f5-98665bf7635f": {"__data__": {"id_": "7303bbfd-065f-49f9-a7f5-98665bf7635f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41edc7a7-970a-4eac-998e-5b961a7a1c01", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "47c75d0ee043883a34bacbe403e8416d2fb5b41b917972c0b2a15698993ac0fa", "class_name": "RelatedNodeInfo"}}, "text": "a) introduction\n\nLe binaire, c'est bien pratique : on peut coder des nombres uniquement avec des 0 et des 1. C'est bien pour les signaux \u00e9lectriques et tout le bazar, mais dans la vie de tous les jours c'est pas bien facile d'utilisation. On utilise couramment la base 10. Le probl\u00e8me c'est qu'en informatique, tout est bas\u00e9 sur le binaire, et \u00e9tant une base d'indice 2, c'est plus ais\u00e9 d'encoder les informations sur un nombre multiple de 2. On utilise donc souvent la base 16, appel\u00e9 syst\u00e8me hexad\u00e9cimal (hexa = 6, d\u00e9ci = 10, 16 = 6 + 10) car 16 est un multiple de 2, et qu'il permet de repr\u00e9senter 8 bits avec seulement 2 chiffres. \u00c7a para\u00eet simple, mais il y a un autre probl\u00e8me : en base 10, on utilise 10 chiffres. En base 2 (binaire) on utilise seulement 2 chiffres : 0 et 1. Mais du coup, en base 16, il faut 16 chiffres. OK, 0 1 2 3 4 5 6 7 8 9.. quoi apr\u00e8s ? On prend des lettres de l'alphabet.\n\nCe qui donne :\n\n0 1 2 3 4 5 6 7 8 9 A B C D E F \n\nOn peut \u00e9tablir une liste de correspondances entre la base 10 et la base 16 (voire m\u00eame la base 2) :\n\n|Binaire (base 2)|D\u00e9cimal (base 10)|Hexad\u00e9cimal (base 16)|\n|--- |--- |--- |\n|0|0|0|\n|1|1|1|\n|10|2|2|\n|11|3|3|\n|100|4|4|\n|101|5|5|\n|110|6|6|\n|111|7|7|\n|1000|8|8|\n|1001|9|9|\n|1010|10|A|\n|1011|11|B|\n|1100|12|C|\n|1101|13|D|\n|1110|14|E|\n|1111|15|F|\n\nComme vous pouvez le voir, le plus grand chiffre en hexad\u00e9cimal est F, et il correspond \u00e0 15 en d\u00e9cimal et 1111 en binaire : F est donc encod\u00e9 sur 4 bits (Fhex=1111bin, 4 chiffres binaires = 4 bits).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dfb6ab9f-9888-4d61-a650-ae96b9e0b3f7": {"__data__": {"id_": "dfb6ab9f-9888-4d61-a650-ae96b9e0b3f7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "341e38ac-5522-49af-88c0-a02281c89225", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "c8013da0e07ba9ad17ce9897686fca9b189068fc76158d6056fc5e4140064464", "class_name": "RelatedNodeInfo"}}, "text": "b) Convertir un nombre binaire en hexad\u00e9cimal (et vice versa)\n\nPour convertir un nombre binaire en base 16, on regroupe les bits 4 \u00e0 4, chaque groupe donnant un chiffre hexad\u00e9cimal. \u00c0 l'inverse, passer d'un nombre hexad\u00e9cimal \u00e0 sa repr\u00e9sentation binaire se fait en rempla\u00e7ant chaque chiffre pour son \u00e9quivalent sur 4 bits. Ainsi, 110110012=1101 10012=D916, tandis que 7F16=0111 11112=011111112. \n\nAttention, si le nombre binaire de d\u00e9part n'a pas un nombre de bits multiple de 4, il faut ajouter des z\u00e9ros en t\u00eate (ce qui ne change pas sa valeur) afin de pouvoir les regrouper 4 par 4.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 587, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40a9d26e-175f-447e-ac54-1e5bad90063b": {"__data__": {"id_": "40a9d26e-175f-447e-ac54-1e5bad90063b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10daf129-f1df-4eaf-828f-a77800a51b86", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "a4feaf8a969fc364fa943f54d737007cdcba8df66005885db421fe92cffff406", "class_name": "RelatedNodeInfo"}}, "text": "c) Convertir un nombre d\u00e9cimal en hexad\u00e9cimal\n\nPour convertir un nombre d\u00e9cimal en hexad\u00e9cimal, la m\u00e9thode est similaire au binaire, sauf que cette fois on divise par 16.\n\n185 = 16 x 11 + 9\n\n11 = 16 x 0 + 11 (c'est \u00e0 dire B)\n\nAttention, il faut bien lire de bas en haut !\n\n185 en base 10 vaut donc B9 en hexad\u00e9cimal.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56dad17e-7272-4e94-99a2-541a34315396": {"__data__": {"id_": "56dad17e-7272-4e94-99a2-541a34315396", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fcb340d1-8c6f-4ae4-8d92-34be43ba18c8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d987dc4f5ffb7982e7bd8602198936cdc12bee328ba53085e6ab32e96648367c", "class_name": "RelatedNodeInfo"}}, "text": "d) Convertir un nombre hexad\u00e9cimal en d\u00e9cimal\n\nLe principe est le m\u00eame que pour la conversation \"binaire en d\u00e9cimal\" sauf qu'au lieu d'utiliser des 2n on utilise des 16n :\n\nexemple :\n\n12B716 = 1\u00d7163 + 2\u00d7162 + 11\u00d7161 + 7\u00d7160=1\u00d74096 + 2\u00d7256 + 11\u00d716 + 7= 4096 + 512 + 176 + 7 = 4791\n\nVous avez remarqu\u00e9 que quand on trouve un B dans le nombre \u00e9crit en hexad\u00e9cimal, on le remplace par un 11 dans le calcul. C'est exactement la m\u00eame chose quand on trouve :\n\n- un A, on le remplace par un 10\n\n- un C, on le remplace par un 12\n\n- un D, on le remplace par un 13\n\n- un E, on le remplace par un 14\n\n- un F, on le remplace par un 15", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f61333af-7eb4-4a3e-a5a5-932581e8176d": {"__data__": {"id_": "f61333af-7eb4-4a3e-a5a5-932581e8176d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4r.md", "file_name": "termc4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0182d6e4-c15a-450a-99c1-1aea53977b8b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4r.md", "file_name": "termc4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "44e7077379c645a4ccb0aa270988d81162767979cf551a6a53790c845cd267ea", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- en base 10 nous avons 10 symboles (chiffres) : 0, 1, 2, 3, 4, 5\u2026.9\n\n- en base 2 (binaire) nous avons 2 symboles (chiffres) : 0 et 1\n\n- en base 16 (hexad\u00e9cimal) nous avons 16 symboles : 0, 1, 2\u2026.8, 9, A, B, C, D, E, F\n\n- \u00e0 chaque fois que l\u2019on a utilis\u00e9 tous les symboles, on doit changer de rang\n\n- il serait judicieux de conna\u00eetre \u201cpar coeur\u201d (ou au moins \u00eatre capable de les retrouver\nrapidement) les nombres jusqu\u2019\u00e0 15 :\n\n| d\u00e9cimal | binaire | hexad\u00e9cimal |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n| 1 | 1 | 1 |\n| 2 | 10 | 2 |\n| 3 | 11 | 3 |\n| 4 | 100 | 4 |\n| 5 | 101 | 5 |\n| 6 | 110 | 6 |\n| 7 | 111 | 7 |\n| 8 | 1000 | 8 |\n| 9 | 1001 | 9 |\n| 10 | 1010 | A |\n| 11 | 1011 | B |\n| 12 | 1100 | C |\n| 13 | 1101 | D |\n| 14 | 1110 | E |\n| 15 | 1111 | F |\n\n- on peut coder 2n valeurs avec n bits", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66697d37-8174-474f-ac19-d1b656f0a55a": {"__data__": {"id_": "66697d37-8174-474f-ac19-d1b656f0a55a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4r.md", "file_name": "termc4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf28c8c8-b18e-4cc2-842f-c06ee5068d58", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4r.md", "file_name": "termc4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4e30a8db4ac5663a30d6b6870bf623667615b56124e33e73e478553300864841", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- convertir d\u00e9cimal vers binaire\n- convertir binaire vers d\u00e9cimal\n- convertir d\u00e9cimal vers hexad\u00e9cimal\n- convertir hexad\u00e9cimal vers d\u00e9cimal\n- convertir binaire vers hexad\u00e9cimal\n- convertir hexad\u00e9cimal vers binaire", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87cff90f-ccbb-415f-abcd-bad192f14de9": {"__data__": {"id_": "87cff90f-ccbb-415f-abcd-bad192f14de9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5a.md", "file_name": "termc5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5be6fdb8-bf79-45c9-82fb-3f3e8ec6902c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5a.md", "file_name": "termc5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7530dc6f48a5090f71439384707ce2cc213319ebc7331946f11547296130c482", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 5.1\nQuel est le code binaire du \"a\" minuscule en ASCII ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e82cf9d8-d985-468c-91e7-2b20d43a02d2": {"__data__": {"id_": "e82cf9d8-d985-468c-91e7-2b20d43a02d2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5a.md", "file_name": "termc5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0b2a2d7-c7e5-4ce1-bd75-79533537a54b", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5a.md", "file_name": "termc5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ab203b59248b48b443da41b2006dab459c6885e2caa65f12d5d8a65e88ee2920", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 5.2\n\nQuel est le code binaire du \"b\" minuscule Unicode cod\u00e9 avec UTF-8 ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 83, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "172c5c1a-5f7d-456a-b5ae-e4facbf33b1a": {"__data__": {"id_": "172c5c1a-5f7d-456a-b5ae-e4facbf33b1a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "52f0d364-ee15-47a5-aa0c-347917bbaf46", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "6fdad29a4429d7fe6f7aa0fd7c349853e0d28b9bd670fe01975ebf745498e9c9", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous savons qu'un ordinateur est uniquement capable de traiter des donn\u00e9es binaires, comment sont donc cod\u00e9s les textes dans un ordinateur ? Ou plus pr\u00e9cis\u00e9ment, comment sont cod\u00e9s les caract\u00e8res dans un ordinateur ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 235, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b093455-06a7-44d4-95ac-bf1ec50226dd": {"__data__": {"id_": "8b093455-06a7-44d4-95ac-bf1ec50226dd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24f8c79d-d933-4cee-a10d-d8aaf43cc80c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ba961fe84c2ef3fc1dc011c993a9850a550d22cf0a9b9a8897da1e3d0bf9903c", "class_name": "RelatedNodeInfo"}}, "text": "2) ASCII\n\nAvant 1960 de nombreux syst\u00e8mes de codage de caract\u00e8res existaient, ils \u00e9taient souvent incompatibles entre eux. En 1960, l'organisation internationale de normalisation (ISO) d\u00e9cide de mettre un peu d'ordre dans ce bazar en cr\u00e9ant la norme ASCII (American Standard Code for Information Interchange). \u00c0 chaque caract\u00e8re est associ\u00e9 un nombre binaire sur 8 bits (1 octet). En faite, seuls 7 bits sont utilis\u00e9s pour coder un caract\u00e8re, le 8e bit n'est pas utilis\u00e9 pour le codage des caract\u00e8res. Avec 7 bits il est possible de coder jusqu'\u00e0 128 caract\u00e8res ce qui est largement suffisant pour un texte \u00e9crit en langue anglaise (pas d'accents et autres lettres particuli\u00e8res).\n\n!\n\nComme vous pouvez le constater dans le tableau ci-dessus, au \"A\" majuscule correspond le code binaire 10000012 (6510 ou 4116)\n\nCertains codes ne correspondent pas \u00e0 des caract\u00e8res (de 0 \u00e0 3210), nous n'aborderons pas ce sujet ici.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 917, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3341544-2032-4e00-a048-903fdcbbf730": {"__data__": {"id_": "d3341544-2032-4e00-a048-903fdcbbf730", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32b9c3d1-d6ae-47d3-ad67-d98bb87e0b34", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "537faefd9457b76308dfd5fc977b89061e5c5514b67de82e773bcaee96878530", "class_name": "RelatedNodeInfo"}}, "text": "3) ISO-8859-1\n\nLa norme ASCII convient bien \u00e0 la langue anglaise, mais pose des probl\u00e8mes dans d'autres langues, par exemple le fran\u00e7ais. En effet l'ASCII ne pr\u00e9voit pas d'encoder les lettres accentu\u00e9es. C'est pour r\u00e9pondre \u00e0 ce probl\u00e8me qu'est n\u00e9e la norme ISO-8859-1. Cette norme reprend les m\u00eames principes que l'ASCII, mais les nombres binaires associ\u00e9s \u00e0 chaque caract\u00e8re sont cod\u00e9s sur 8 bits, ce qui permet d'encoder jusqu'\u00e0 256 caract\u00e8res. Cette norme va \u00eatre principalement utilis\u00e9e dans les pays europ\u00e9ens puisqu'elle permet d'encoder les caract\u00e8res utilis\u00e9s dans les principales langues europ\u00e9ennes (la norme ISO-8859-1 est aussi appel\u00e9e \"latin1\" car elle permet d'encoder les caract\u00e8res de l'alphabet dit \"latin\")\n\nProbl\u00e8me, il existe beaucoup d'autres langues dans le monde qui n'utilisent pas l'alphabet dit \"latin\", par exemple le chinois ou le japonais ! D'autres normes ont donc d\u00fb voir le jour, par exemple la norme \"GB2312\" pour le chinois simplifi\u00e9 ou encore la norme \"JIS_X_0208\" pour le japonais.\n\nCette multiplication des normes a tr\u00e8s rapidement pos\u00e9 probl\u00e8me. Imaginons un fran\u00e7ais qui parle le japonais. Son traitement de texte est configur\u00e9 pour reconnaitre les caract\u00e8res de l'alphabet \"latin\" (norme ISO-8859-1). Un ami japonais lui envoie un fichier texte \u00e9crit en japonais. Le fran\u00e7ais devra modifier la configuration de son traitement afin que ce dernier puisse afficher correctement l'alphabet japonais. S'il n'effectue pas ce changement de configuration, il verra s'afficher des caract\u00e8res \u00e9sot\u00e9riques.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c0d6bfa-942a-4d55-b80b-edc63d53c25d": {"__data__": {"id_": "9c0d6bfa-942a-4d55-b80b-edc63d53c25d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a4762f99-45fc-4aee-b32c-4260fd302e13", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "6f6d6924ac4f6f7f4e30673d5c0833449c5dcd7ed6a4f037a5c039ab6e13c070", "class_name": "RelatedNodeInfo"}}, "text": "4) Unicode\n\nPour \u00e9viter ce genre de probl\u00e8me, en 1991 une nouvelle norme a vu le jour : Unicode\n\nUnicode a pour ambition de rassembler tous les caract\u00e8res existant afin qu'une personne utilisant Unicode puisse, sans changer la configuration de son traitement de texte, \u00e0 la fois lire des textes en fran\u00e7ais ou en japonais\n\nUnicode est uniquement une table qui regroupe tous les caract\u00e8res existant au monde, il ne s'occupe pas de la fa\u00e7on dont les caract\u00e8res sont cod\u00e9s dans la machine. Unicode accepte plusieurs syst\u00e8mes de codage : UTF-8, UTF-16, UTF-32. Le plus utilis\u00e9, notamment sur le Web, est UTF-8.\n\nPour encoder les caract\u00e8res Unicode, UTF-8 utilise un nombre variable d'octets : les caract\u00e8res \"classiques\" (les plus couramment utilis\u00e9s) sont cod\u00e9s sur un octet, alors que des caract\u00e8res \"moins classiques\" sont cod\u00e9s sur un nombre d'octets plus important (jusqu'\u00e0 4 octets). Un des avantages d'UTF-8 c'est qu'il est totalement compatible avec la norme ASCII : Les caract\u00e8res Unicode cod\u00e9s avec UTF-8 ont exactement le m\u00eame code que les m\u00eames caract\u00e8res en ASCII.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1075, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87ae257e-c679-48cd-a1e0-4270dd5d8ea6": {"__data__": {"id_": "87ae257e-c679-48cd-a1e0-4270dd5d8ea6", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "309eaff3-8911-405b-b63d-89da66100af3", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6b815456dbacb1e1731e7f48f95a9a9aacb0d0038eed4fdda399963da826fdde", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ceb873b-9d39-4079-9556-f28d6542aa81": {"__data__": {"id_": "2ceb873b-9d39-4079-9556-f28d6542aa81", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65583a0e-f55d-43e1-b717-bcaf67864e25", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "ffedfcb231a8793d74ceb5231051ef82ac8f4471d64559eb4069367bb2236808", "class_name": "RelatedNodeInfo"}}, "text": "Norme ASCII\n\nLa norme ASCII (American Standard Code for Information Interchange) permet de repr\u00e9senter les caract\u00e8res. Chaque caract\u00e8re est associ\u00e9 \u00e0 un nombre cod\u00e9 sur 8 bits (7 bits pour coder le caract\u00e8re + 1 bit dit de parit\u00e9). Avec 7 bits il est donc possible de coder\n128 caract\u00e8res.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "514a49ec-7fed-4d76-a1df-0f347dbf2297": {"__data__": {"id_": "514a49ec-7fed-4d76-a1df-0f347dbf2297", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "789210fb-d24b-4ce6-b369-be52a77ab42a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4d8565eba5b153154da5495c791a87801aee3db4e2c1dc68fafa67f874d269c8", "class_name": "RelatedNodeInfo"}}, "text": "Norme ISO-8859-1\n\nLa norme ASCII convient bien \u00e0 la langue anglaise, mais pose des probl\u00e8mes dans d'autres langues, par exemple le fran\u00e7ais. En effet l'ASCII ne pr\u00e9voit pas d'encoder les lettres accentu\u00e9es. C'est pour r\u00e9pondre \u00e0 ce probl\u00e8me qu'est n\u00e9e la norme ISO-8859-1. Cette\nnorme reprend les m\u00eames principes que l'ASCII, mais les nombres binaires associ\u00e9s \u00e0 chaque caract\u00e8re sont cod\u00e9s sur 8 bits, ce qui permet d'encoder jusqu'\u00e0 256 caract\u00e8res Cette norme va \u00eatre principalement utilis\u00e9e dans les pays europ\u00e9ens puisqu'elle permet\nd'encoder les caract\u00e8res utilis\u00e9s dans les principales langues europ\u00e9ennes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 614, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b42c2e44-d43b-43cb-89b1-546eb4a227dd": {"__data__": {"id_": "b42c2e44-d43b-43cb-89b1-546eb4a227dd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7bae26b9-1623-4301-aebc-dd089226a9d7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7f3fe487e8d3341c4d4db0f3dc21c301436fd89d1dc7ea73ab45f325a15ac901", "class_name": "RelatedNodeInfo"}}, "text": "Unicode\n\nLe but de la norme Unicode est de pouvoir encoder tous les caract\u00e8res que l\u2019on peut rencontrer dans le monde. Unicode est uniquement une table qui regroupe tous les\ncaract\u00e8res existant au monde, il ne s'occupe pas de la fa\u00e7on dont les caract\u00e8res sont cod\u00e9s dans la machine. Unicode accepte plusieurs syst\u00e8mes de codage : UTF-8, UTF-16, UTF-32. Le plus utilis\u00e9, notamment sur le Web, est UTF-8. Pour encoder les caract\u00e8res Unicode,\nUTF-8 utilise un nombre variable d'octets : les caract\u00e8res \"classiques\" (les plus couramment\nutilis\u00e9s) sont cod\u00e9s sur un octet, alors que des caract\u00e8res \"moins classiques\" sont cod\u00e9s sur\nun nombre d'octets plus important (jusqu'\u00e0 4 octets). Il y a compatibilit\u00e9 entre ASCII et UTF-8 puisque les caract\u00e8res Unicode cod\u00e9s avec UTF-8 ont exactement le m\u00eame code que les m\u00eames caract\u00e8res en ASCII.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d99ae7bb-ff61-4685-a24c-6c5d674ed10b": {"__data__": {"id_": "d99ae7bb-ff61-4685-a24c-6c5d674ed10b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fde0b1ce-17c5-45bc-a4d6-de3f1e594e36", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "299fec5a1237983750cdb4aac338f7aa3d5ddf5d2a44f146a14a23ddf1a2703c", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nConvertir un fichier texte dans diff\u00e9rents formats d\u2019encodage.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 92, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82a898b5-69ff-4fac-b7cf-f7f722da7c45": {"__data__": {"id_": "82a898b5-69ff-4fac-b7cf-f7f722da7c45", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "afb84c36-218e-490c-a13c-f329445e0162", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5e4aa1d7ef98c8dbccecc67c293e98cfcbdd3b11cbf2d25348128fa0f424a4a1", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 6.1\n\nEn utilisant le compl\u00e9ment \u00e0 2, repr\u00e9sentez -15 en binaire (repr\u00e9sentation sur 8 bits)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4efefda9-4f16-4e7d-9a18-147538052db2": {"__data__": {"id_": "4efefda9-4f16-4e7d-9a18-147538052db2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "722227c1-83e9-430e-b5ff-23286433b8b9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7ec7076cd3916e3a554a32ef44d90dfc3141313cd07e04f67d72baedb5bab5b4", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 6.2\n\nEn utilisant le compl\u00e9ment \u00e0 2, repr\u00e9sentez sur 8 bits l'entier 4 puis repr\u00e9sentez, toujours sur 8 bits, l'entier -5. Additionnez ces 2 nombres (en utilisant les repr\u00e9sentations binaires bien \u00e9videmment), v\u00e9rifiez que vous obtenez bien -1.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 255, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b40ab00d-3435-43b4-b803-925d1ec83b5e": {"__data__": {"id_": "b40ab00d-3435-43b4-b803-925d1ec83b5e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "583e20ce-eab0-4efa-aaf2-7b46c2760910", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "55c1b1d83e8a85bb7a2f2e5ebea2d98c4f91f02a6bf3fd4e96d56080b82ac503", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 6.3\n\nQuel est l'entier relatif cod\u00e9 en compl\u00e9ment \u00e0 2 sur un octet par le code 11011010 ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 100, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90f7168f-f6e6-4ed4-a8c1-f7d6b725cbe7": {"__data__": {"id_": "90f7168f-f6e6-4ed4-a8c1-f7d6b725cbe7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "033dabb3-deef-4e7c-8795-f4d08daef68a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bcff51ccc7111c08dde29ff4ea820a3db66958397a547563d9b1db9c56abaeab", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 6.4\n\nQuelles sont les bornes inf\u00e9rieure et sup\u00e9rieure d'un entier relatif cod\u00e9 sur 16 bits ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 103, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c6e2dd07-df40-4439-9e40-52ef0c5b08b3": {"__data__": {"id_": "c6e2dd07-df40-4439-9e40-52ef0c5b08b3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6c.md", "file_name": "termc6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3fa37804-6869-4195-afa4-d9f6c7ee778f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6c.md", "file_name": "termc6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "395690698604b673706f853b640193f53ad582848d635fe81804caf23731c03e", "class_name": "RelatedNodeInfo"}}, "text": "1) une mauvaise id\u00e9e pour commencer...\n\nNous avons d\u00e9j\u00e0 vu comment repr\u00e9senter les entiers positifs, nous allons maintenant nous int\u00e9resser aux entiers relatifs.\n\nLa premi\u00e8re id\u00e9e qui pourrait nous venir \u00e0 l'esprit est, sur un nombre comportant n bits, d'utiliser 1 bit pour repr\u00e9senter le signe et n-1 bit pour repr\u00e9senter la valeur absolue du nombre \u00e0 repr\u00e9senter. Le bit de signe \u00e9tant le bit dit \"de poids fort\" (c'est \u00e0 dire le bit le plus \u00e0 gauche), ce bit de poids fort serait \u00e0 0 dans le cas d'un nombre positif et \u00e0 1 dans le cas d'un nombre n\u00e9gatif.\n\nun exemple : on repr\u00e9sente l'entier 5 sur 8 bits par 00000101, -5 serait donc repr\u00e9sent\u00e9 par 10000101\n\nIl existe un \u00e9norme inconv\u00e9nient \u00e0 cette m\u00e9thode : l'existence de deux z\u00e9ros, un z\u00e9ro positif (00000000) et un z\u00e9ro n\u00e9gatif (10000000) !\n\nCe probl\u00e8me est, pour plusieurs raisons qui ne seront pas d\u00e9velopp\u00e9es ici, r\u00e9dhibitoire. Nous allons donc devoir utiliser une autre m\u00e9thode : le compl\u00e9ment \u00e0 deux", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 966, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e0943d02-5b5b-4fe0-852c-e12f9a1bddfc": {"__data__": {"id_": "e0943d02-5b5b-4fe0-852c-e12f9a1bddfc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6c.md", "file_name": "termc6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "470d9f69-87f3-4b34-89c7-a685e6e9aed6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6c.md", "file_name": "termc6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "7eda33c1abdddf3d8193e3bcabcbef217406028885f6c24dcf5cccb041208242", "class_name": "RelatedNodeInfo"}}, "text": "2) le compl\u00e9ment \u00e0 deux\n\nAvant de repr\u00e9senter un entier relatif, il est n\u00e9cessaire de d\u00e9finir le nombre de bits qui seront utilis\u00e9s pour cette repr\u00e9sentation (souvent 8, 16 , 32 ou 64 bits)\n\nPrenons tout de suite un exemple : d\u00e9terminons la repr\u00e9sentation de -12 sur 8 bits\n\n- Commen\u00e7ons par repr\u00e9senter 12 sur 8 bits (sachant que pour repr\u00e9senter 12 en binaire seuls 4 bits sont n\u00e9cessaire, les 4 bits les plus \u00e0 gauche seront \u00e0 0) : 00001100\n\n- Inversons tous les bits (les bits \u00e0 1 passent \u00e0 0 et vice versa) : 11110011\n\n- Ajoutons 1 au nombre obtenu \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente :\n\n!\n\nles retenues sont not\u00e9es en rouge\n\nLa repr\u00e9sentation de -12 sur 8 bits est donc : 11110100\n\nComment peut-on \u00eatre s\u00fbr que 11110100 est bien la repr\u00e9sentation de -12 ?\n\nNous pouvons affirmer sans trop de risque de nous tromper que 12 + (-12) = 0, v\u00e9rifions que cela est vrai pour notre repr\u00e9sentation sur 8 bits.\n\n!\n\nDans l'op\u00e9ration ci-dessus, nous avons un 1 pour le 9e bit, mais comme notre repr\u00e9sentation se limite \u00e0 8 bits, il nous reste bien 00000000.\n\nIl faut noter qu'il est facile de d\u00e9terminer si une repr\u00e9sentation correspond \u00e0 un entier positif ou un entier n\u00e9gatif : si le bit de poids fort est \u00e0 1, nous avons affaire \u00e0 un entier n\u00e9gatif, si le bit de poids fort est \u00e0 0, nous avons affaire \u00e0 un entier positif.\n\nLa plus petite valeur qu'il est possible de coder sur 8 bits est 10000000 (soit -128). La plus grande valeur est 01111111 (soit 127). \n\nPlus g\u00e9n\u00e9ralement, nous pouvons dire que pour une repr\u00e9sentation sur n bits, il sera possible de coder des valeurs comprises entre -2n-1 et +2n-1 - 1", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1593, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a779fce-013f-4936-b2ab-8fab0f61976e": {"__data__": {"id_": "6a779fce-013f-4936-b2ab-8fab0f61976e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6r.md", "file_name": "termc6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a01045a-156c-4edf-a9e3-a2462a477075", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6r.md", "file_name": "termc6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "7b42f9037a62e07d994f63ceacf979e763a1031ec87b569d78a5968f9bd56146", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- conna\u00eetre le principe du compl\u00e9ment \u00e0 2 (voir cours)\n\n- savoir que pour une repr\u00e9sentation sur n bits, il sera possible de coder des valeurs comprises entre -2\nn-1 et +2n-1- 1", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 201, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5004cd2a-f69d-44c5-b1e9-1436203a8643": {"__data__": {"id_": "5004cd2a-f69d-44c5-b1e9-1436203a8643", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6r.md", "file_name": "termc6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79c0eda0-303a-41a7-929d-2d0d997055f8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6r.md", "file_name": "termc6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3a93b44959cadd7b47f55d9d0c143061c7422b9b587e26c06ed74f491e3657cb", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nvous devez savoir repr\u00e9senter un entier (positif ou n\u00e9gatif) en utilisant le compl\u00e9ment \u00e0 2 sur\nn bits (repr\u00e9sentation binaire -> repr\u00e9sentation d\u00e9cimale et repr\u00e9sentation d\u00e9cimale ->\nrepr\u00e9sentation binaire)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5fb5ff6-0fff-462e-a589-a13187850866": {"__data__": {"id_": "d5fb5ff6-0fff-462e-a589-a13187850866", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb686fee-77e8-44a6-93ec-fb4ebb7a2ff5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "66ede5cb7110d5e3af03a3d25bb702b182da9317dc8c17abfd6507540d34c792", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.1\n\nTrouvez la repr\u00e9sentation binaire de 4,12510", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "feb2f707-2e36-450a-a799-77e10d148709": {"__data__": {"id_": "feb2f707-2e36-450a-a799-77e10d148709", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "20e3f47c-e459-4fe3-a7a7-038449764638", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "6ef7b553ddd188be96b9ef26de820f162c0c86ee0905d7dacf4359e74a747b51", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.2\n\nTrouvez la repr\u00e9sentation binaire de 0,2510", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "596b5aad-9c4a-4cc4-aefc-d6174598ae86": {"__data__": {"id_": "596b5aad-9c4a-4cc4-aefc-d6174598ae86", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e15f622-ef7a-4cb3-8893-2ba3327826b5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "4fe3d351cdf397e59878268ed371f6f763818bb787b9e0813a644384809cf4d4", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.3\n\nTrouvez la repr\u00e9sentation binaire d'un tiers (1/3)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41e2cd52-7dd7-47ca-8ba3-f7b1ce56b41f": {"__data__": {"id_": "41e2cd52-7dd7-47ca-8ba3-f7b1ce56b41f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5439bc74-bf9f-4716-b9cb-66aff6bcbab2", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "239e42fa4e37892f962d9a5aa4818f1d521cb6355077bc0ae0e8c8343833777c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.4\n\nTrouvez la repr\u00e9sentation d\u00e9cimale de 100,0012", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d78bb477-5566-43f3-ac70-5269eeaec4d5": {"__data__": {"id_": "d78bb477-5566-43f3-ac70-5269eeaec4d5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86d315d7-a833-4f61-9356-dcde786f1104", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0752bd7d62e4380fd81adef757f6858526dfbf58b4046eb9a758fd780d79e94d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.5\n\nTrouvez la repr\u00e9sentation d\u00e9cimale de 1,1012", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f33d179-8a06-45d5-8e9d-0c0b8093d2ae": {"__data__": {"id_": "9f33d179-8a06-45d5-8e9d-0c0b8093d2ae", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c84af25-3633-45c6-a272-757de885aced", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "f6f30632b9bfc05911c9cefc8e43fb2ddf52a8abf2b0b525f6f0071fd7d7cfcb", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.6\n\nTrouvez la repr\u00e9sentation binaire de 0,110", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "900f6628-f8ac-4ef5-ac25-a0a6f5d0351e": {"__data__": {"id_": "900f6628-f8ac-4ef5-ac25-a0a6f5d0351e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3143a739-7639-494e-9d1e-5d2d7ed338ae", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "de12f74895ca3803700ad97072f95867091ddce73819e032f8a04da13ecc4846", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 7.7\n\n\u00c0 l'aide de Spyder, tapez dans la console : 0.1 + 0.2\nQuel r\u00e9sultat obtenez-vous  ?", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 99, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ffc89437-c27d-4852-97bc-34314504efff": {"__data__": {"id_": "ffc89437-c27d-4852-97bc-34314504efff", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "94f46206-a1a5-4eb5-ab9f-989f5b563b71", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ce0eea7ca4e092b66e5b8338359cd73ef72bba8966da0cd41b66ffec0cd37f6f", "class_name": "RelatedNodeInfo"}}, "text": "1) introduction\n\nNous avons vu comment sont repr\u00e9sent\u00e9s les entiers relatifs au sein d'un ordinateur. Nous allons maintenant voir comment sont repr\u00e9sent\u00e9s les nombres r\u00e9els, appel\u00e9s ici nombres flottants.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d69f2bc7-9cf7-4ce9-98c4-4a3b38efcedc": {"__data__": {"id_": "d69f2bc7-9cf7-4ce9-98c4-4a3b38efcedc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "752a62ee-a8ca-4351-a103-7219cb108173", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "83ff8c1e2a144fb34686922aa3b619507ac7075e090619d149947c907fdd0a14", "class_name": "RelatedNodeInfo"}}, "text": "2) repr\u00e9sentation de la partie d\u00e9cimale d'un nombre", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 53, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b12eedd2-fd0f-47e2-a3ce-81fdbf33fe14": {"__data__": {"id_": "b12eedd2-fd0f-47e2-a3ce-81fdbf33fe14", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c17d566e-fed1-460e-8d96-2016e075ac47", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b1e6c006617c5ca892ad885b348aadda21aab498a586da8948107e614661feb1", "class_name": "RelatedNodeInfo"}}, "text": "a) base 10 vers base 2\n\nPartons tout de suite sur un exemple : comment repr\u00e9senter 5,1875 en binaire ?\n\nIl nous faut d\u00e9j\u00e0 repr\u00e9senter 5, \u00e7a, pas de probl\u00e8me : 101\n\nComment repr\u00e9senter le \",1875\" ?\n\n- on multiplie 0,1875 par 2 : 0,1875 x 2 = 0,375. On obtient 0,375 que l'on \u00e9crira 0 + 0,375\n\n- on multiplie 0,375 par 2 : 0,375 x 2 = 0,75. On obtient 0,75 que l'on \u00e9crira 0 + 0,75\non multiplie 0,75 par 2 : 0,75 x 2 = 1,5. On obtient 1,5 que l'on \u00e9crira 1 + 0,5 (quand le r\u00e9sultat de la multiplication par 2 est sup\u00e9rieur \u00e0 1, on garde uniquement la partie d\u00e9cimale)\n\n- on multiplie 0,5 par 2 : 0,5 x 2 = 1,0. On obtient 1,0 que l'on \u00e9crira 1 + 0,0 (la partie d\u00e9cimale est \u00e0 0, on arr\u00eate le processus)\n\nOn obtient une succession de \"a + 0,b\" (\"0 + 0,375\", \"0 + 0,75\", \"1 + 0,5\" et \"1 + 0,0\"). Il suffit maintenant de \"prendre\" tous les \"a\" (dans l'ordre de leur obtention) afin d'obtenir la partie d\u00e9cimale de notre nombre : 0011\n\nNous avons 101,00112 qui est la repr\u00e9sentation binaire de 5,187510", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 998, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "461763e6-b22f-4868-8be9-f55a3e723454": {"__data__": {"id_": "461763e6-b22f-4868-8be9-f55a3e723454", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cdae5ea0-a428-4b78-9735-24292beeb2cd", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a5de95d985186c4e9a659a1b3c1e29af122299f9fbc35d51ee7678f58e691b5b", "class_name": "RelatedNodeInfo"}}, "text": "b) base 2 vers base 10\n\nIl est possible de retrouver une repr\u00e9sentation d\u00e9cimale en base 10 \u00e0 partir d'une repr\u00e9sentation en binaire.\n\nPartons de 100,01012\n\nPas de probl\u00e8me pour la partie enti\u00e8re, nous obtenons \"4\". Pour la partie d\u00e9cimale nous devons \u00e9crire : 0 x 2-1 + 1 x 2-2 + 0 x 2-3 + 1 x 2-4 = 0,3125. Nous avons donc 4,312510", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 335, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab544a3a-4e20-4f0a-94ba-282249c9438b": {"__data__": {"id_": "ab544a3a-4e20-4f0a-94ba-282249c9438b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "14aadaf0-1e8c-4e64-994e-81f06b0759e8", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "cc4c31b4790bdf853968d92b96f9bd9821fa2c5a7ba04ee5494b845d66529a8e", "class_name": "RelatedNodeInfo"}}, "text": "c) le cas  particulier de 0,1<sub>10</sub>\n\nInt\u00e9ressons-nous \u00e0 la conversion de 0,110.\n\n0,1 x 2 = 0,2 = 0 + 0,2\n\n0,2 x 2 = 0,4 = 0 + 0,4\n\n0,4 x 2 = 0,8 = 0 + 0,8\n\n0,8 x 2 = 1,6 = 1 + 0,6\n\n0,6 x 2 = 1,2 =  1 + 0,2\n\n0,2 x 2 = 0,4 = 0 + 0,4\n\nNous constatons que la 6e ligne  est identique \u00e0 la 2e ligne. Le processus va donc se poursuivre sans jamais  s'arr\u00eater, car apr\u00e8s le 0,2 x 2 = 0,4 = 0 + 0,4 nous allons retrouver :\n\n0,4 x 2 = 0,8 = 0 + 0,8\n\n0,8 x 2 = 1,6 = 1 + 0,6\n\n0,6 x 2 = 1,2 =  1 + 0,2\n\net nous retombons donc sur 0,2 x 2 = 0,4 = 0 + 0,4...\n\nle processus de \"conversion\" ne s'arr\u00eate pas, nous obtenons : 0,0001100110011..., le sch\u00e9ma \"0011\" se r\u00e9p\u00e8te \u00e0 \"l'infini\". Cette caract\u00e9ristique est tr\u00e8s importante, nous aurons l'occasion de revenir l\u00e0-dessus plus tard.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1207783f-1c24-404d-86fe-b18706c49d71": {"__data__": {"id_": "1207783f-1c24-404d-86fe-b18706c49d71", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1d09705-a0e0-4a1d-9606-f9b591a69964", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "0ce9a54cdc8604d4b9a41329ccf03e1e9704eb9dd9ae50a75ecb8ebf730daa08", "class_name": "RelatedNodeInfo"}}, "text": "d) \u00e9crire un nombre binaire \u00e0 l'aide de puissance de 2\n\nEn base dix, il est possible d'\u00e9crire les tr\u00e8s grands nombres et les tr\u00e8s petits nombres gr\u00e2ce aux \"puissances de dix\" (exemples 6,02.1023 ou 6,67.10-11). Il est possible de faire exactement la m\u00eame chose avec une repr\u00e9sentation binaire, puisque nous sommes en base 2, nous utiliserons des \"puissances de deux\" \u00e0 la place des \"puissances dix\" (exemple : 101,1101.210).\n\nPour passer d'une \u00e9criture sans \"puissance de deux\" \u00e0 une \u00e9criture avec \"puissance de deux\", il suffit de d\u00e9caler la virgule : 1101,1001 = 1,1011001.211 pour passer de 1101,1001 \u00e0 1,1011001 nous avons d\u00e9cal\u00e9 la virgule de 3 rangs vers la gauche d'o\u00f9 le 211 (attention de ne pas oublier que nous travaillons en base 2 le 11 correspond bien \u00e0 un d\u00e9calage de 3 rangs de la virgule).\n\nSi l'on d\u00e9sire d\u00e9caler la virgule vers la droite, il va \u00eatre n\u00e9cessaire d'utiliser des \"puissances de deux n\u00e9gatives\" 0,0110 = 1,10.2-10, nous d\u00e9calons la virgule de 2 rangs vers la droite, d'o\u00f9 le -10", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1010, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a93d8a22-8a05-4fbd-a4bd-d04b0740a5b3": {"__data__": {"id_": "a93d8a22-8a05-4fbd-a4bd-d04b0740a5b3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3f7dbea7-6acc-4284-814b-14fd74459fe7", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "3e331cdd91a12e7aa7f86f7f4c687c727127faef01680b6835d9149d0a15c223", "class_name": "RelatedNodeInfo"}}, "text": "3) repr\u00e9sentation des flottants dans un ordinateur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 52, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ade2023f-3260-4c2d-b6c2-b6a3687ce596": {"__data__": {"id_": "ade2023f-3260-4c2d-b6c2-b6a3687ce596", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae0608f2-68ef-4b21-941f-c9a78090ea2d", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "4cfdac3d8008dfe8468a382aa63a7610eacce148d40c8b132a0c9bb9122fb34c", "class_name": "RelatedNodeInfo"}}, "text": "a) principe\n\nLa norme IEEE 754 est la norme la plus employ\u00e9e pour la repr\u00e9sentation des nombres \u00e0 virgule flottante dans le domaine informatique. La premi\u00e8re version de cette norme date de 1985.\n\nNous allons \u00e9tudier deux formats associ\u00e9s \u00e0 cette norme : le format dit \"simple pr\u00e9cision\" et le format dit \"double pr\u00e9cision\". Le format \"simple pr\u00e9cision\" utilise 32 bits pour \u00e9crire un nombre flottant alors que le format \"double pr\u00e9cision\" utilise 64 bits. Dans la suite nous travaillerons principalement sur le format 32 bits.\n\nQue cela soit en simple pr\u00e9cision ou en double pr\u00e9cision, la norme IEEE754 utilise :\n\n- 1 bit de signe (1 si le nombre est n\u00e9gatif et 0 si le nombre est positif)\n\n- des bits consacr\u00e9s \u00e0 l'exposant (8 bits pour la simple pr\u00e9cision et 11 bits pour la double pr\u00e9cision)\n\n- des bits consacr\u00e9s \u00e0 la mantisse (23 bits pour la simple pr\u00e9cision et 52 bits pour la double pr\u00e9cision)\n\n!\n\nNous pouvons v\u00e9rifier que l'on a bien 1 + 8 + 23 = 32 bits pour la simple pr\u00e9cision et 1 + 11 + 52 = 64 bits pour la double pr\u00e9cision.\n\nPour \u00e9crire un nombre flottant en respectant la norme IEEE754, il est n\u00e9cessaire de commencer par \u00e9crire le nombre sous la forme 1,XXXXX.2e (avec e l'exposant), il faut obligatoirement qu'il y ait un seul chiffre \u00e0 gauche de la virgule et il faut que ce chiffre soit un 1. Par exemple le nombre 1010,11001 devra \u00eatre \u00e9crit 1,01011001.211. Autre exemple, 0,00001001 devra \u00eatre \u00e9crit 1,001.2-101.\n\nLa partie XXXXXX de 1,XXXXX.2e constitue la mantisse (dans notre exemple 1010,11001 la mantisse est 01011001). Comme la mantisse comporte 23 bits en simple pr\u00e9cision, il faudra compl\u00e9ter avec le nombre de z\u00e9ro n\u00e9cessaire afin d'atteindre les 23 bits (si nous avons 01011001, il faudra ajouter 23 - 8 = 15 z\u00e9ros \u00e0 droite, ce qui donnera en fin de compte 01011001000000000000000 )\n\nNotre premi\u00e8re intuition serait de dire que la partie \"exposant\" correspond simplement au \"e\" de 1,XXXXX.2e (dans notre exemple 1010,11001, nous aurions 11). En faite, c'est un peu plus compliqu\u00e9 que cela. En effet, comment repr\u00e9senter les exposants n\u00e9gatifs ? Aucun bit pour le signe de l'exposant n'a \u00e9t\u00e9 pr\u00e9vu dans la norme IEEE754, une autre solution a \u00e9t\u00e9 choisie :\n\nPour le format simple pr\u00e9cision, 8 bits sont consacr\u00e9s \u00e0 l'exposant, il est donc possible de repr\u00e9senter 256 valeurs, nous allons pouvoir repr\u00e9senter des exposants compris entre -12610 et +12710 (les valeurs -127 et +128 sont des valeurs r\u00e9serv\u00e9es, nous n'aborderons pas ce sujet ici). Pour avoir des valeurs uniquement positives, il va falloir proc\u00e9der \u00e0 un d\u00e9calage : ajouter syst\u00e9matiquement 127 \u00e0 la valeur de l'exposant. Prenons tout de suite un exemple (dans la suite, afin de simplifier les choses nous commencerons par \u00e9crire les exposants en base 10 avant de les passer en base 2 une fois le d\u00e9calage effectu\u00e9) :\n\nRepartons de 1010,11001 qui nous donne 1,01011001.23, effectuons le d\u00e9calage en ajoutant 127 \u00e0 3 : 1,01011001.2130, soit en passant l'exposant en base 2 : 1,01011001.210000010. Ce qui nous donne donc pour 1010,11001 une mantisse 01011001000000000000000 (en ajoutant les z\u00e9ros n\u00e9cessaires \u00e0 droite pour avoir 23 bits) et un exposant 10000010 (m\u00eame si ce n'est pas le cas ici, il peut \u00eatre n\u00e9cessaire d'ajouter des z\u00e9ros pour arriver \u00e0 8 bits, ATTENTION, ces z\u00e9ros devront \u00eatre rajout\u00e9s \u00e0 gauche).\n\n\u00c0 noter que pour le format double pr\u00e9cision le d\u00e9calage est de 1023 (il faut syst\u00e9matiquement ajouter 1023 \u00e0 l'exposant afin d'obtenir uniquement des valeurs positives)\n\nNous sommes maintenant pr\u00eats \u00e0 \u00e9crire notre premier nombre au format simple pr\u00e9cision :\n\nSoit le nombre -10,125 en base 10 repr\u00e9sentons-le au format simple pr\u00e9cision :\n\nnous avons 1010 = 10102 et 0,12510 = 0,0012 soit 10,12510 = 1010,0012\nD\u00e9calons la virgule : 1010,001 = 1,010001.23, soit avec le d\u00e9calage de l'exposant 1,010001.2130, en \u00e9crivant l'exposant en base 2, nous obtenons 1,010001.210000010\n\nNous avons donc : notre bit de signe = 1 (nombre n\u00e9gatif), nos 8 bits d'exposant = 10000010 et nos 23 bits de mantisse = 01000100000000000000000\n\nSoit en \"collant\" tous les \"morceaux\" :\n\n11000001001000100000000000000000\n\nCette \u00e9criture \u00e9tant un peu p\u00e9nible, il est possible d'\u00e9crire ce nombre en hexad\u00e9cimal : C1220000", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 4204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "22c69836-3570-457f-803a-ceb1cb0812d9": {"__data__": {"id_": "22c69836-3570-457f-803a-ceb1cb0812d9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a8151c38-78db-4ebf-8691-9b7da958c079", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c3137bf059af03c632b72e81592f276d1831f425a4975140516886ff214f252f", "class_name": "RelatedNodeInfo"}}, "text": "b) probl\u00e8me de l'arrondi\n\nRevenons au cas de 0,110 :\n\nnous avons vu plus  que la repr\u00e9sentation en binaire est infinie : \n\n0,0001100110011...2, le sch\u00e9ma \"0011\" se r\u00e9p\u00e8te \u00e0 \"l'infini\"\n\nLa m\u00e9moire d'un ordinateur n'\u00e9tant pas infinie, nous allons devoir nous limiter \u00e0 32 bits (en simple pr\u00e9cision) ou \u00e0 64 bits (en double pr\u00e9cision) pour la repr\u00e9sentation de 0,110\n\nNous obtenons donc la repr\u00e9sentation suivante (simple pr\u00e9cision) :\n\n0,110 => 00111101110011001100110011001100\n\nSi nous proc\u00e9dons \u00e0 la conversion inverse (conversion en  base 10 du nombre flottant ci-dessus) nous n'obtenons pas 0,1 mais 0,099999994 !\n\nCette \"l\u00e9g\u00e8re\" erreur \u00e9tait pr\u00e9visible, elle est due \u00e0 la limitation impos\u00e9e (32 bits dans cet exemple). \n\nCette repr\u00e9sentation avec un nombre limit\u00e9 de bits des nombres flottants est un probl\u00e8me classique en informatique. Cela peut entra\u00eener des erreurs d'arrondi dans les calculs qui peuvent \u00eatre tr\u00e8s g\u00eanants si on n'y prend pas garde. Il faut donc \u00eatre tr\u00e8s m\u00e9fiant quand on utilise des flottants  pour des calculs.  \n\nPrenons un exemple simple :\n\n```\na = 0.1\nb = 0.2\nc = a + b\nif c == 0.3:\n\tprint(\"pas de probl\u00e8me\")\nelse :\n\tprint(\"oups...??!\")\n```\n\nLe r\u00e9sultat attendu apr\u00e8s l'ex\u00e9cution de ce programme peut para\u00eetre \u00e9vident : nous devrions voir s'afficher le message \"pas de probl\u00e8me\"...pourtant c'est le message \"oups...??!\" qui s'affiche !\n\nComme nous l'avons vu, la repr\u00e9sentation de 0.1 en m\u00e9moire pose un probl\u00e8me, le r\u00e9sultat du calcul *a + b* pose donc aussi un probl\u00e8me (nous  n'obtenons pas exactement 0.3), donc *c == 0.3* renvoie *False*...\n\nOn \u00e9vitera donc de proc\u00e9der \u00e0 des comparaisons de flottants dans les programmes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7140219-0066-4c49-b68d-9e670845c715": {"__data__": {"id_": "a7140219-0066-4c49-b68d-9e670845c715", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7r.md", "file_name": "termc7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4ff4e9e6-2909-4d58-866e-8fa0f5785c5a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7r.md", "file_name": "termc7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "8688379e9835127a5cc118c24c6b4909798c66bb69c21170434ca74a7157daba", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir\n\n- la repr\u00e9sentation en machine des nombres r\u00e9els (on parle souvent en informatique\nde nombres flottants) diff\u00e8re de la repr\u00e9sentation en machine des entiers\n\n- la norme IEEE 754 est la norme la plus employ\u00e9e pour la repr\u00e9sentation des\nnombres \u00e0 virgule flottante dans le domaine informatique.\n\n- il existe 2 formats associ\u00e9s \u00e0 la norme IEEE 754 : le format simple pr\u00e9cision (le\nnombre est repr\u00e9sent\u00e9 sur 32 bits) et le format double pr\u00e9cision (le nombre est\nrepr\u00e9sent\u00e9 sur 64 bits)\n\n- que cela soit en simple pr\u00e9cision ou en double pr\u00e9cision, la norme IEEE754 utilise :\n\n\t- 1 bit de signe (1 si le nombre est n\u00e9gatif et 0 si le nombre est positif)\n\t\n\t- des bits consacr\u00e9s \u00e0 l'exposant (8 bits pour la simple pr\u00e9cision et 11 bits pour la double pr\u00e9cision)\n\t\n\t- des bits consacr\u00e9s \u00e0 la mantisse (23 bits pour la simple pr\u00e9cision et 52 bits pour la double pr\u00e9cision)\n\t\n- \u00e0 cause de la limitation de la taille de mantisse on peut dans certains cas avoir des erreurs d\u2019arrondies, par exemple 0.1 + 0.2 n\u2019est pas \u00e9gal \u00e0 0.3. On \u00e9vitera de tester l\u2019\u00e9galit\u00e9 entre 2 flottants (par exemple 0.1 + 0.2 == 0.3 retourne Faux !)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13e8b13d-1143-4946-a82d-a992a62ec0d9": {"__data__": {"id_": "13e8b13d-1143-4946-a82d-a992a62ec0d9", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7r.md", "file_name": "termc7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e548cb1-95e5-4486-ade3-a6f5a9c8c0c1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7r.md", "file_name": "termc7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "0f89e1a5900b150eeefba203626dc9ef08aa6a8045fe1e1a069854078991437d", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\n- vous devez \u00eatre capable de trouver la repr\u00e9sentation en binaire d\u2019un r\u00e9el (par exemple 0.1, 0.25 ou encore 1/3)\n\n- vous n\u2019avez pas \u00e0 savoir \u00e9crire un nombre flottant en utilisant la norme IEEE754, vous devez juste connaitre les grands principes de cette norme (bit de signe,\nmantisse, exposant)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 326, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79a716ea-f0e7-4251-a984-ecc12c23bfbd": {"__data__": {"id_": "79a716ea-f0e7-4251-a984-ecc12c23bfbd", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ca14b984-030f-415e-ad5c-caeda067a58e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "a07592b9641fb1c21310c4ba8382a1308d3017a85692bd03f0a477146b6d2500", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.1\n\nApr\u00e8s avoir visionn\u00e9 cette vid\u00e9o, \u00e9num\u00e9rez les diff\u00e9rents composants d'un ordinateur.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4193e20-ab0d-4e01-835a-437e082bc02f": {"__data__": {"id_": "d4193e20-ab0d-4e01-835a-437e082bc02f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e9ddc8d6-5471-4153-b532-f7867060f505", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "1473b33237ba0a6375c771fb07ad7ada3d2309647091f6641b3663eaa4682e6f", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.2\n\nVisionnez cette vid\u00e9o, de la chaine Deus Ex Silicium, consacr\u00e9e aux circuits int\u00e9gr\u00e9s.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d4c7115-c2b1-40f3-a2de-28accbf34f12": {"__data__": {"id_": "6d4c7115-c2b1-40f3-a2de-28accbf34f12", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33b656a1-ac56-4319-9fe6-5ecafc70cf9e", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "756e4ec1a5bf727cf6f27e597a1aacce4bbcb5e342edeb3b1812b3e94b1e29ba", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.3\n\nEn vous aidant de la table de v\u00e9rit\u00e9 de l'additionneur, effectuez l'addition suivant : \n1100010012 + 1100102. Le r\u00e9sultat devra \u00eatre donn\u00e9 en base 2.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eaab75af-5e82-4086-ad0a-b8db60f8b1d8": {"__data__": {"id_": "eaab75af-5e82-4086-ad0a-b8db60f8b1d8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b2d233b2-7c96-4f30-8649-dba5a501b960", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c7c3278ac35670c36ec05b15150a37fd7abc42a8c74d20ad7713bca88a71e790", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.4\n\nCompl\u00e9tez le sch\u00e9ma ci-dessous avec les termes suivants :\n\n- CPU\n\n- transistor\n\n- porte logique\n\n- additionneur\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 130, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "413327a0-c54c-4c0a-95a2-658fd7563d78": {"__data__": {"id_": "413327a0-c54c-4c0a-95a2-658fd7563d78", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c275ab6e-81b2-4815-9de5-283385195b98", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ba6d43f7f6666724da2e2df999079531ce2dc8df7bd62fdf19bc41285aa52a36", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.5\n\nExpliquez bri\u00e8vement, les instructions suivantes :\n\n```\nADD R0, R1, #42\n```\n\n```\nLDR R5,98\n```\n\n```\nCMP R4, #18\nBGT 77\n```\n\n```\nSTR R0,15\n```\n\n```\nB 100\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b8269a3-53ba-4385-8976-58c370096cf3": {"__data__": {"id_": "2b8269a3-53ba-4385-8976-58c370096cf3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12461ff1-3f30-4a53-992a-efe69b4f07e5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "8f1e15d90e38359bccac5953e4aa978940eaa1a046aa94d7d35e597c2d568ade", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 8.6\n\nNommez et d\u00e9crivez les diff\u00e9rentes parties qui constituent le mod\u00e8le de von Neumann", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 99, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24c9f9c5-b1fb-4718-9860-5ec500c84b26": {"__data__": {"id_": "24c9f9c5-b1fb-4718-9860-5ec500c84b26", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f45a812e-1df4-4591-b2c3-d36840180c49", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "3490a7c3b645444a39e7a8d661be495e918e3c0b9e9cb5282bf3c96bf1482b26", "class_name": "RelatedNodeInfo"}}, "text": "1) du transistor au micro-processeur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 38, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5df26ca5-168d-4e82-999c-a2a1f6a799b1": {"__data__": {"id_": "5df26ca5-168d-4e82-999c-a2a1f6a799b1", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e690811d-dfdd-436a-af86-18fec5d718b1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "5405a448592516f6e39b3d647b34f3d63be455983721c27da6cb2d510c906965", "class_name": "RelatedNodeInfo"}}, "text": "a) le transistor\n\nOn entend souvent dire qu'\"un ordinateur utilise uniquement des \"1\" et des \"0\"\". Cette affirmation m\u00e9rite d'\u00eatre pr\u00e9cis\u00e9e.\n\n\u00c0 la base de la plupart des composants d'un ordinateur, on retrouve le transistor. Ce composant \u00e9lectronique a \u00e9t\u00e9 invent\u00e9 fin 1947 par les Am\u00e9ricains John Bardeen, William Shockley et Walter Brattain. L'invention du transistor a \u00e9t\u00e9 un immense progr\u00e8s, mais les premiers ordinateurs sont ant\u00e9rieurs \u00e0 cette invention. En effet, ces premiers ordinateurs, par exemple le Colossus qui date de 1943, \u00e9taient con\u00e7us \u00e0 base de tubes \u00e9lectroniques (on parle aussi de tubes \u00e0 vide) qui, bien que beaucoup plus gros et beaucoup moins fiable que les transistors fonctionnent sur le m\u00eame principe que ce dernier.\n\nun transistor :\n\n!\n\nun tube \u00e9lectronique :\n\n!\n\nAutre aspect historique qu'il est important de pr\u00e9ciser : on ne trouve plus, depuis quelque temps d\u00e9j\u00e0, de transistors en tant que composant \u00e9lectronique discret (comme le transistor de la photo ci-dessus). Dans un ordinateur, les transistors sont regroup\u00e9s au sein de ce que l'on appelle des circuits int\u00e9gr\u00e9s. Dans un circuit int\u00e9gr\u00e9, les transistors sont grav\u00e9s sur des plaques de silicium, les connexions entre les millions de transistors qui composent un circuit int\u00e9gr\u00e9 sont, elles aussi, grav\u00e9es directement dans le silicium. Les processus mis en jeu lors de ces gravures d\u00e9passent largement le cadre de ce cours, si ce sujet vous int\u00e9resse, je vous invite \u00e0 visionner cette vid\u00e9o : https://www.youtube.com/watch?v=NFr-WyytNfo\n\nun circuit int\u00e9gr\u00e9 :\n\n!\n\nIl n'est pas question de nous pencher en d\u00e9tail sur le fonctionnement d'un transistor, mais vous devez tout de m\u00eame savoir que dans un ordinateur les transistors se comportent comme des interrupteurs : soit le transistor laisse passer le courant \u00e9lectrique (interrupteur ferm\u00e9), soit il ne le laisse pas passer (interrupteur ouvert). Et c'est tout, il n'y a pas d'autre \u00e9tat possible pour un transistor dans un ordinateur : le courant passe ou le courant ne passe pas. Globalement l'ordinateur fonctionne uniquement avec deux \u00e9tats. On parle d'un \u00e9tat \"haut\" et d'un \u00e9tat \"bas\". On symbolise souvent l'\u00e9tat \"haut\" par le chiffre \"1\" et l'\u00e9tat \"bas\" par le chiffre \"0\", mais il faut bien avoir conscience qu'il n'y a pas dans un ordinateur des \"petits 1\" ou des \"petits 0\" qui se \"baladent\", c'est juste une histoire de \"courant qui passe\" ou de \"courant qui ne passe pas\". On travaille donc uniquement avec 2 chiffres, voil\u00e0 pourquoi un ordinateur travaille en base 2 (en binaire) et non pas en base 10 comme dans la vie courante.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2585, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccb02c03-1089-42b1-8c8b-fe7e817c5b21": {"__data__": {"id_": "ccb02c03-1089-42b1-8c8b-fe7e817c5b21", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26cff75a-b2eb-42db-a018-635822a44bcb", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "6173cf805358114cb0871f5189f52d9b20bed61e06c49d4f167f6fe61f7df4ec", "class_name": "RelatedNodeInfo"}}, "text": "b) les circuits logiques\n\nLe transistor est l'\u00e9l\u00e9ment de base des circuits logiques. Un circuit logique permet de r\u00e9aliser une op\u00e9ration bool\u00e9enne. Ces op\u00e9rations bool\u00e9ennes sont directement li\u00e9es \u00e0 l'alg\u00e8bre de Boole (Georges Boole, math\u00e9maticien Britanique 1815-1864). L'\u00e9tude de l'alg\u00e8bre de Boole d\u00e9passe le cadre de ce cours, vous devez juste savoir qu'un circuit logique prend en entr\u00e9e un ou des signaux \u00e9lectriques (chaque entr\u00e9e est dans un \u00e9tat \"haut\" (symbolis\u00e9 par un \"1\") ou \u00e0 un \u00e9tat \"bas\" (symbolis\u00e9 par un \"0\")) et donne en sortie un ou des signaux \u00e9lectriques (chaque sortie est aussi dans un \u00e9tat \"haut\" ou \u00e0 un \u00e9tat \"bas\"). Il existe deux cat\u00e9gories de circuit logique :\n\n- les circuits combinatoires (les \u00e9tats en sortie d\u00e9pendent uniquement des \u00e9tats en entr\u00e9e)\n\n- les circuits s\u00e9quentiels (les \u00e9tats en sortie d\u00e9pendent des \u00e9tats en entr\u00e9e ainsi que du temps et des \u00e9tats ant\u00e9rieurs)\n\nDans la suite nous nous int\u00e9resserons principalement aux circuits combinatoires.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 989, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88d39e82-2ef4-4b40-b17d-00d7ecd16899": {"__data__": {"id_": "88d39e82-2ef4-4b40-b17d-00d7ecd16899", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8552e168-efbe-42af-af32-dab8fe2352c1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "6302a4146683271bf6d6ac74e6a533e3c014f837d69e3384871c7667c489d5af", "class_name": "RelatedNodeInfo"}}, "text": "i) la porte NON (NOT)\n\nLe plus simple des circuits combinatoires est la porte \"NON\" (\"NOT\" en anglais) qui inverse l'\u00e9tat en entr\u00e9e : si l'entr\u00e9e de la porte est dans un \u00e9tat \"bas\" alors la sortie sera dans un \u00e9tat \"haut\" et vice versa. Si on symbolise l'\u00e9tat \"haut\" par un \"1\" et l'\u00e9tat \"bas\" pour un \"0\", on peut obtenir ce que l'on appelle la table de v\u00e9rit\u00e9 de la porte \"NON\" :\n\n| E (Entr\u00e9e) | S (Sortie) |\n| --- | --- |\n| 1 | 0 |\n| 0 | 1 |\n\nLa porte \"NON\" est symbolis\u00e9e par le sch\u00e9ma suivant :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b7cb5a07-5cb4-4d3b-be94-d3a603c459d4": {"__data__": {"id_": "b7cb5a07-5cb4-4d3b-be94-d3a603c459d4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a1199be4-6b0a-49cf-a7ff-db1822910ce6", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "3373a3af8c0b3f627bc91ad1c4a69196fe11ee7a86556c8e6e526a14bb538a99", "class_name": "RelatedNodeInfo"}}, "text": "ii) la porte OU (OR)\n\nLa porte \"OU\" a deux entr\u00e9es (E1 et E2) et une sortie S\n\n!\n\nTable de v\u00e9rit\u00e9 porte \"OU\" :\n\n| E1 | E2 | S |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n| 0 | 1 | 1 |\n| 1 | 0 | 1 |\n| 1 | 1 | 1 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 205, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "faf4855b-8534-4f0f-8b5e-573bd58a7ca4": {"__data__": {"id_": "faf4855b-8534-4f0f-8b5e-573bd58a7ca4", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9eb69a1-b10d-4f35-82d5-4f1b6510851a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "55e85508a0823754d0a4b91c3397b56d74f44db85bfaa8bef7de357239d65dad", "class_name": "RelatedNodeInfo"}}, "text": "iii) la porte ET (AND)\n\nLa porte \"ET\" (\"AND\") a deux entr\u00e9es (E1 et E2) et une sortie S\n\n!\n\nTable de v\u00e9rit\u00e9 porte \"ET\" :\n\n| E1 | E2 | S |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n| 0 | 1 | 0 |\n| 1 | 0 | 0 |\n| 1 | 1 | 1 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea785456-beda-48f5-b1b4-f6313b7120a8": {"__data__": {"id_": "ea785456-beda-48f5-b1b4-f6313b7120a8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e13f4b5b-0e55-4469-bd67-bde6c9fc6427", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "5a6944dec1875cd0c2a5677d921bbca700328c68d704ab2817a3c234981bf7ea", "class_name": "RelatedNodeInfo"}}, "text": "iv) la porte OU EXCLUSIF (XOR)\n\nLa porte \"OU EXCLUSIF\" (\"XOR\") a deux entr\u00e9es (E1 et E2) et une sortie S\n\n!\n\nTable de v\u00e9rit\u00e9 porte \"XOR\" :\n\n| E1 | E2 | S |\n| --- | --- | --- |\n| 0 | 0 | 0 |\n| 0 | 1 | 1 |\n| 1 | 0 | 1 |\n| 1 | 1 | 0 |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1cbfc8d-665e-43b8-a273-e58dfbd927af": {"__data__": {"id_": "f1cbfc8d-665e-43b8-a273-e58dfbd927af", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57f84b43-1a33-4bd5-b907-2bd85dab9839", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b2d745ea9c76871d87bb0851f229866a6dffceabc797ae76bb41aba6080c6bcd", "class_name": "RelatedNodeInfo"}}, "text": "v) l'additionneur\n\nEn combinant les portes logiques, on obtient des circuits plus complexes. Par exemple en combinant 2 portes \"OU EXCLUSIF\", 2 portes \"ET\" et une porte \"OU\" on obtient un additionneur :\n\n!\n\nComme son nom l'indique, l'additionneur permet d'additionner 2 bits (E1 et E2) en tenant compte de la retenue entrante (\"Cin\" \"carry in\" en anglais). En sortie on obtient le r\u00e9sultat de l'addition (S) et la retenue sortante (\"Cout\").\n\n| E1 | E2 | Cin | Cout | S |\n| --- | --- | --- | --- | --- |\n| 0 | 0 | 0 | 0 | 0 |\n| 0 | 0 | 1 | 0 | 1 |\n| 0 | 1 | 0 | 0 | 1 |\n| 0 | 1 | 1 | 1 | 0 |\n| 1 | 0 | 0 | 0 | 1 |\n| 1 | 0 | 1 | 1 | 0 |\n| 1 | 1 | 0 | 1 | 0 |\n| 1 | 1 | 1 | 1 | 1 |\n\nEn combinant plusieurs fois le type de circuit d\u00e9crit ci-dessus, on obtient des additionneurs capables d'additionner des nombres sur X bits.\n\nUne chose est tr\u00e8s importante \u00e0 bien comprendre : \u00e0 la base nous avons le transistor, une combinaison de transistor (sous forme de circuit int\u00e9gr\u00e9) permet d'obtenir des circuits logiques, la combinaison de circuits logiques permet d'obtenir des circuits plus complexes (exemple : l'additionneur), et ainsi de suite...\n\nAu sommet de cet \u00e9difice (on pourrait parler de poup\u00e9e russe), nous allons trouver la m\u00e9moire vive (RAM) et le microprocesseur (CPU).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "00a259fe-d9ec-4725-8684-ae8f2dd31c18": {"__data__": {"id_": "00a259fe-d9ec-4725-8684-ae8f2dd31c18", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0cbe28e3-236d-4e7a-9c67-d58b04d4e417", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "46761ebc173dd13dffa00ef0226497d9ed51ec4dc3f4716720e1d7fc84147f8b", "class_name": "RelatedNodeInfo"}}, "text": "c) la m\u00e9moire vive RAM (Random Acess Memory)\n\nLa m\u00e9moire vive permet de stocker des donn\u00e9es et des programmes. Comme nous l'avons vu, l'ordinateur utilise uniquement 2 \u00e9tats, la m\u00e9moire va donc stocker les donn\u00e9es sous forme de bits (0 ou 1), mais encore une fois, il ne faut pas s'imaginer que la m\u00e9moire est pleine de \"petit 0\" et de \"petit 1\", ce sont des \"\u00e9tats \u00e9lectriques\" qui sont stock\u00e9s dans cette m\u00e9moire.\n\nLa m\u00e9moire ne g\u00e8re pas les bits 1 par 1, mais 8 par 8, la m\u00e9moire g\u00e8re donc des octets (rappel : 1 octet = 8 bits)\n\nOn peut se repr\u00e9senter la m\u00e9moire comme une s\u00e9rie de cellules, chaque cellule \u00e9tant capable de stocker 1 octet. Chacune de ces cellules poss\u00e8de une adresse. Les op\u00e9rations sur la m\u00e9moire sont de 2 types : lecture / \u00e9criture. Une op\u00e9ration de lecture consiste \u00e0 aller lire l'octet situ\u00e9 \u00e0 l'adresse m\u00e9moire XXXXX (ces adresses m\u00e9moire \u00e9tant bien \u00e9videmment cod\u00e9es en binaire) et une op\u00e9ration d'\u00e9criture consiste \u00e0 \u00e9crire un octet donn\u00e9 \u00e0 l'adresse m\u00e9moire YYYYY. Cette notion d'adresse m\u00e9moire est fondamentale, nous aurons l'occasion de revenir dessus un peu plus loin.\n\nToujours sur l'aspect technologique, 1 bit d'une cellule est l'association d'un transistor et d'un condensateur. Un condensateur est un composant \u00e9lectronique qui peut \u00eatre soit charg\u00e9 (on stocke alors un \"1\"), soit d\u00e9charg\u00e9 (on stocke alors un \"0\"). Un condensateur n'est pas capable de conserver sa charge pendant tr\u00e8s longtemps, il doit donc \u00eatre aliment\u00e9 \u00e9lectriquement parlant afin de conserver cette charge. Voil\u00e0 pourquoi la m\u00e9moire vive est une m\u00e9moire volatile : toutes les donn\u00e9es pr\u00e9sentes en m\u00e9moire sont perdues en cas de coupure de courant. Pour conserver les donn\u00e9es une fois l'ordinateur \u00e9teint, il faut faire appel \u00e0 d'autres types de m\u00e9moire : les m\u00e9moires de stockage. Le disque dur est aujourd'hui la m\u00e9moire de stockage la plus utilis\u00e9 (au moins dans les usages \"familiaux\"). Un disque dur (HDD : Hard Disk Drive et SSD : Solid State Drive) n'a pas besoin d'alimentation \u00e9lectrique pour conserver les donn\u00e9es. \u00c0 noter que les vitesses d'\u00e9criture ou de lecture des donn\u00e9es sur un disque dur sont beaucoup plus faibles que les vitesses d'\u00e9criture ou de lecture des donn\u00e9es en m\u00e9moire RAM.\n\nPour terminer sur cet aspect technologique, il faut noter que l'on trouve aussi des m\u00e9moires vives qui stockent l'information gr\u00e2ce \u00e0 un circuit dit de type \"bascule\". Ce circuit est une combinaison de plusieurs portes logiques.\n\ncircuit de type bascule, permet de stocker 1 bit :\n\n!\n\nIl n'est pas question pour nous d'\u00e9tudier ce type de circuit, le sch\u00e9ma ci-dessus vous permet juste de v\u00e9rifier qu'une fois de plus nous avons bien \u00e0 faire \u00e0 une combinaison de porte logique.\n\nN.B. : il existe un autre type de m\u00e9moire dans un ordinateur, la m\u00e9moire ROM (Read Only Memory) aussi appel\u00e9e \"m\u00e9moire morte\". Comme son acronyme l'indique, cette m\u00e9moire est uniquement utilisable en lecture. Au contraire de la RAM, la ROM n'est pas volatile. Elle est notamment utilis\u00e9e pour stocker les informations n\u00e9cessaires au d\u00e9marrage d\u2019un ordinateur (BIOS).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3060, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "239695b6-e60c-41cf-b7e2-caa22529a000": {"__data__": {"id_": "239695b6-e60c-41cf-b7e2-caa22529a000", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e0b3912-51a4-4621-9e7c-3ef039c34e79", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "24ff627804fada4c9aaf88fe0fac104d2828ea439d5c3bbc0ff1ca43490f1b15", "class_name": "RelatedNodeInfo"}}, "text": "d) Le microprocesseur CPU (Central Processing Unit)\n\nLe microprocesseur est le \"coeur\" d'un ordinateur : les instructions sont ex\u00e9cut\u00e9es au niveau du CPU. Il est sch\u00e9matiquement constitu\u00e9 de 3 parties :\n\n- les registres permettent de m\u00e9moriser de l'information (donn\u00e9e ou instruction) au sein m\u00eame du CPU. Leur nombre et leur taille sont variables en fonction du type de microprocesseur. Dans la suite on nommera ces registres R1, R2, R3...\n\n- l'unit\u00e9 arithm\u00e9tique et logique (UAL ou ALU en anglais) est charg\u00e9e de l'ex\u00e9cution de tous les calculs que peut r\u00e9aliser le microprocesseur. Nous allons retrouver dans cette UAL des circuits comme l'additionneur (voir plus haut)\n\n- l'unit\u00e9 de commande permet d'ex\u00e9cuter les instructions (les programmes)\n\nun microprocesseur :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 774, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ad9c4dd-98ba-4966-a9f2-40c295cf591e": {"__data__": {"id_": "1ad9c4dd-98ba-4966-a9f2-40c295cf591e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16180e5a-a13b-4cce-b2d5-8a467b22d486", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "53a6a71622dc7ab0442e68301eab0b57bdb7ace92752fd02cfd95bf450fe0c07", "class_name": "RelatedNodeInfo"}}, "text": "e) Le bus\n\nLes donn\u00e9es doivent circuler entre les diff\u00e9rentes parties d\u2019un ordinateur, notamment entre la m\u00e9moire vive et le CPU. Le syst\u00e8me permettant cette circulation est appel\u00e9 bus. Il existe, sans entrer dans les d\u00e9tails, 3 grands types de bus :\n\n- Le bus d\u2019adresse permet de faire circuler des adresses (par exemple l\u2019adresse d\u2019une donn\u00e9e \u00e0 aller chercher en m\u00e9moire)\n\n- Le bus de donn\u00e9es permet de faire circuler des donn\u00e9es\n\n- Le bus de contr\u00f4le permet de sp\u00e9cifier le type d\u2019action (exemples : \u00e9criture d\u2019une donn\u00e9e en m\u00e9moire, lecture d\u2019une donn\u00e9e en m\u00e9moire).\n\nbus :\n\n!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5ad9091-0e5d-46b1-8139-6df82f92f887": {"__data__": {"id_": "d5ad9091-0e5d-46b1-8139-6df82f92f887", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2614ecf5-29c2-4487-bceb-4c03ada17fe5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "b60a699dc6c7913e4ae7318a6903768d3ec0ab8458f7e82fbd67399e8d5bb1b0", "class_name": "RelatedNodeInfo"}}, "text": "2) initiation \u00e0 l'assembleur", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 30, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af41eb59-7767-412c-b1ab-138ea4ff5048": {"__data__": {"id_": "af41eb59-7767-412c-b1ab-138ea4ff5048", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b223545-fc85-4a91-bba8-f49024b2d6f1", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "da8b894b1f420734b112f4b329347ea70a0721e9ba52afd94d0e5c82d19a31be", "class_name": "RelatedNodeInfo"}}, "text": "a) principes\n\nRevenons sur ces instructions aussi appel\u00e9es \"instructions machines\" ex\u00e9cut\u00e9es par l'unit\u00e9 de commande. Comme vous le savez d\u00e9j\u00e0, un ordinateur ex\u00e9cute des programmes qui sont des suites d'instructions. Le CPU est incapable d'ex\u00e9cuter directement des programmes \u00e9crits, par exemple, en Python. En effet, comme tous les autres constituants d'un ordinateur, le CPU g\u00e8re uniquement 2 \u00e9tats (toujours symbolis\u00e9s par un \"1\" et un \"0\"), les instructions ex\u00e9cut\u00e9es au niveau du CPU sont donc cod\u00e9es en binaire. L'ensemble des instructions ex\u00e9cutables directement par le microprocesseur constitue ce que l'on appelle le \"langage machine\".\n\nUne instruction machine est une cha\u00eene binaire compos\u00e9e principalement de 2 parties :\n\n- le champ \"code op\u00e9ration\" qui indique au processeur le type de traitement \u00e0 r\u00e9aliser. Par exemple le code \"00100110\" donne l'ordre au CPU d'effectuer une multiplication.\n\n- le champ \"op\u00e9randes\" indique la nature des donn\u00e9es sur lesquelles l'op\u00e9ration d\u00e9sign\u00e9e par le \"code op\u00e9ration\" doit \u00eatre effectu\u00e9e.\n\ninstruction machine :\n\n!\n\nLes instructions machines sont relativement basiques (on parle d'instructions de bas niveau), voici quelques exemples :\n\n- les instructions arithm\u00e9tiques (addition, soustraction, multiplication...). Par exemple, on peut avoir une instruction qui ressemble \u00e0 \"additionne la valeur contenue dans le registre R1 et le nombre 789 et range le r\u00e9sultat dans le registre R0\" (l'adresse m\u00e9moire est donn\u00e9e en base 10 pour souci de simplicit\u00e9, n'oubliez pas qu'en interne elle est cod\u00e9e en binaire)\n\n- les instructions de transfert de donn\u00e9es qui permettent de transf\u00e9rer une donn\u00e9e d'un registre du CPU vers la m\u00e9moire vive et vice versa. Par exemple, on peut avoir une instruction qui ressemble \u00e0 \"prendre la valeur situ\u00e9e \u00e0 l'adresse m\u00e9moire 487 et la placer dans la registre R2\" ou encore \"prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l'adresse m\u00e9moire 512\"\n\n- les instructions de rupture de s\u00e9quence : les instructions machines sont situ\u00e9es en m\u00e9moire vive, si, par exemple, l'instruction n\u00b01 est situ\u00e9e \u00e0 l'adresse m\u00e9moire 343, l'instruction n\u00b02 sera situ\u00e9e \u00e0 l'adresse m\u00e9moire 344, l'instruction n\u00b03 sera situ\u00e9e \u00e0 l'adresse m\u00e9moire 345... Au cours de l'ex\u00e9cution d'un programme, le CPU passe d'une instruction \u00e0 une autre en passant d'une adresse m\u00e9moire \u00e0 l'adresse m\u00e9moire imm\u00e9diatement sup\u00e9rieure : apr\u00e8s avoir ex\u00e9cut\u00e9 l'instruction n\u00b02 (situ\u00e9 \u00e0 l'adresse m\u00e9moire 344), le CPU \"va chercher\" l'instruction suivante \u00e0 l'adresse m\u00e9moire 344+1=345. Les instructions de rupture de s\u00e9quence d'ex\u00e9cution encore appel\u00e9es instructions de saut ou de branchement permettent d'interrompre l'ordre initial sous certaines conditions en passant \u00e0 une instruction situ\u00e9e une adresse m\u00e9moire donn\u00e9e, par exemple, nous pouvons avoir une instruction qui ressemble \u00e0 cela : imaginons qu'\u00e0 l'adresse m\u00e9moire 354 nous avons l'instruction \"si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors ex\u00e9cuter l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 4521\". Si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors la prochaine instruction \u00e0 ex\u00e9cuter est l'adresse m\u00e9moire 4521, dans le contraire, la prochaine instruction \u00e0 ex\u00e9cuter est \u00e0 l'adresse m\u00e9moire 355.\n\nComme d\u00e9j\u00e0 dit, les op\u00e9randes d\u00e9signent les donn\u00e9es sur lesquelles le code op\u00e9ration de l'instruction doit \u00eatre r\u00e9alis\u00e9e. Un op\u00e9rande peut \u00eatre de 3 natures diff\u00e9rentes :\n\n1) l'op\u00e9rande est une valeur imm\u00e9diate : l'op\u00e9ration est effectu\u00e9e directement sur la valeur donn\u00e9e dans l'op\u00e9rande\n\n2) l'op\u00e9rande est un registre du CPU : l'op\u00e9ration est effectu\u00e9e sur la valeur situ\u00e9e dans un des registres (R0,R1, R2,...), l'op\u00e9rande indique de quel registre il s'agit\n\n3) l'op\u00e9rande est une donn\u00e9e situ\u00e9e en m\u00e9moire vive : l'op\u00e9ration est effectu\u00e9e sur la valeur situ\u00e9e en m\u00e9moire vive \u00e0 l'adresse XXXXX. Cette adresse est indiqu\u00e9e dans l'op\u00e9rande.\n\nQuand on consid\u00e8re l'instruction machine : \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\", nous avons 2 valeurs : le \"nombre 125\" (qui est une valeur imm\u00e9diate, nous sommes dans le cas n\u00b01) et \"la valeur situ\u00e9e dans le registre R2\" (nous sommes dans le cas n\u00b02)\n\nQuand on consid\u00e8re l'instruction machine : \"prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l'adresse m\u00e9moire 512\", nous avons 2 valeurs : \"\u00e0 l'adresse m\u00e9moire 512\" (nous sommes dans le cas n\u00b03) et \"la valeur situ\u00e9e dans le registre R1\" (nous sommes toujours dans le cas n\u00b02)\n\n\u00c9videmment le microprocesseur est incapable d'interpr\u00e9ter la phrase \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\" tout cela doit \u00eatre cod\u00e9 sous forme binaire.\n\nUn programme en langage machine est donc une suite tr\u00e8s tr\u00e8s longue de \"1\" et de \"0\", ce qui vous en conviendrez est quelque peu r\u00e9barbatif \u00e0 programmer : sur les dizaines de milliers de \"1\" et de \"0\" qui composent un programme en langage machine de taille modeste, une seule erreur, et votre programme ne fonctionne pas...imaginer la difficult\u00e9 pour retrouver l'erreur ! Bref programmer en langage machine est extr\u00eamement difficile, pour pallier cette difficult\u00e9, les informaticiens ont remplac\u00e9 les codes binaires abscons par des symboles mn\u00e9moniques (plus facile \u00e0 retenir qu'une suite de \"1\" et de \"0\"). Nous avons toujours des instructions machines du genre \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\", mais au lieu d'\u00e9crire \"11100010100000100001000001111101\", nous pourrons \u00e9crire \"ADD R1,R2,#125\". Dans les 2 cas, la signification est identique : \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\".\n\nLe processeur est uniquement capable d'interpr\u00e9ter le langage machine, un programme appel\u00e9 \"assembleur\" assure donc le passage de \"ADD R1,R2,#125\" \u00e0 \"11100010100000100001000001111101\". Par extension, on dit que l'on programme en assembleur quand on \u00e9crit des programmes avec ces symboles mn\u00e9moniques \u00e0 la place de suites de \"0\" et de \"1\". Aujourd'hui plus personne n'\u00e9crit de programme directement en langage machine, en revanche l'\u00e9criture de programme en assembleur est encore chose relativement courante.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 6274, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f53412f9-e46a-42bc-a897-52ea224b4b44": {"__data__": {"id_": "f53412f9-e46a-42bc-a897-52ea224b4b44", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c3cbb4c-01b5-4bd3-8340-d3dafe02ffba", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "32f0097f4aa28f4665336145440cc6132ad13558eeca4c60b4a6b6e456de6fc9", "class_name": "RelatedNodeInfo"}}, "text": "b) quelques exemples\n\nIl n'est pas question d'apprendre \u00e0 programmer en assembleur dans ce cours, mais voici tout de m\u00eame quelques exemples d'instructions en assembleur :\n\n```\nLDR R1,78\n```\n\nPlace la valeur stock\u00e9e \u00e0 l'adresse m\u00e9moire 78 dans le registre R1 (par souci de simplification, nous continuons \u00e0 utiliser des adresses m\u00e9moire cod\u00e9es en base 10)\n\n```\nSTR R3,125\n```\n\nPlace la valeur stock\u00e9e dans le registre R3 en m\u00e9moire vive \u00e0 l'adresse 125\n\n```\nADD R1,R0,#128\n```\n\nAdditionne le nombre 128 (une valeur imm\u00e9diate est identifi\u00e9e gr\u00e2ce au symbole #) et la valeur stock\u00e9e dans le registre R0, place le r\u00e9sultat dans le registre R1\n\n```\nADD R0,R1,R2\n```\n\nAdditionne la valeur stock\u00e9e dans le registre R1 et la valeur stock\u00e9e dans le registre R2, place le r\u00e9sultat dans le registre R0\n\n```\nSUB R1,R0,#128\n```\n\nSoustrait le nombre 128 de la valeur stock\u00e9e dans le registre R0, place le r\u00e9sultat dans le registre R1\n\n```\nSUB R0,R1,R2\n```\n\nSoustrait la valeur stock\u00e9e dans le registre R2 de la valeur stock\u00e9e dans le registre R1, place le r\u00e9sultat dans le registre R0\n\n```\nMOV R1, #23\n```\n\nPlace le nombre 23 dans le registre R1\n\n```\nMOV R0, R3\n```\n\nPlace la valeur stock\u00e9e dans le registre R3 dans le registre R0\n\n```\nB 45\n```\n\nNous avons une structure de rupture de s\u00e9quence, la prochaine instruction \u00e0 ex\u00e9cuter se situe en m\u00e9moire vive \u00e0 l'adresse 45\n\n```\nCMP R0, #23\n```\n\nCompare la valeur stock\u00e9e dans le registre R0 et le nombre 23. Cette instruction CMP doit pr\u00e9c\u00e9der une instruction de branchement conditionnel BEQ, BNE, BGT, BLT (voir ci-dessous)\n\n```\nCMP R0, R1\n```\n\nCompare la valeur stock\u00e9e dans le registre R0 et la valeur stock\u00e9e dans le registre R1.\n\n```\nCMP R0, #23\nBEQ 78\n```\n\nLa prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est \u00e9gale \u00e0 23\n\n```\nCMP R0, #23\nBNE 78\n```\n\nLa prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 n'est pas \u00e9gale \u00e0 23\n\n```\nCMP R0, #23\nBGT 78\n```\n\nLa prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est plus grand que 23\n\n```\nCMP R0, #23\nBLT 78\n```\n\nLa prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est plus petit que 23\n\n```\nHALT\n```\n\nArr\u00eate l'ex\u00e9cution du programme\n\nEncore une fois, il n'est pas question d'apprendre \u00e0 programmer en assembleur, les instructions ci-dessus sont uniquement des exemples.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7aac379f-de04-4616-b199-3a0b6eb5c2b5": {"__data__": {"id_": "7aac379f-de04-4616-b199-3a0b6eb5c2b5", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6620730-e6fe-449f-9cf6-686c0cbb5375", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "ced39cc193cdd466b877eab41a8aa52bee8ca8f1d1a69cdbda075d4ac0fd07fa", "class_name": "RelatedNodeInfo"}}, "text": "c) utilisation des labels\n\nEn faite, les instructions assembleur B, BEQ, BNE, BGT et BLT n'utilisent pas directement l'adresse m\u00e9moire de la prochaine instruction \u00e0 ex\u00e9cuter, mais des \"labels\". Un label correspond \u00e0 une adresse en m\u00e9moire vive (c'est l'assembleur qui fera la traduction \"label\"->\"adresse m\u00e9moire\"). L'utilisation d'un label \u00e9vite donc d'avoir \u00e0 manipuler des adresses m\u00e9moires en binaire ou en hexad\u00e9cimale. Voici un exemple qui montre comment utiliser un label :\n\n```\n   CMP R4, #18\n   BGT monLabel\n   MOV R0,#14\n   HALT\nmonLabel:\n   MOV R0,#18\n   HALT\n```\n\nDans l'exemple ci-dessus, nous avons choisi \"monLabel\" comme nom de label. La ligne \"MOV R0,#18\" a pour label \"monLabel\" car elle est situ\u00e9e juste apr\u00e8s la ligne \"monLabel:\". Concr\u00e8tement, voici ce qui se passe avec ce programme : si la valeur stock\u00e9e dans le registre R4 est sup\u00e9rieure \u00e0 18 on place le nombre 18 dans le registre R0 sinon on place le nombre 14 dans le registre R0. ATTENTION : la pr\u00e9sence du \"HALT\" juste apr\u00e8s la ligne \"MOV R0,#14\" est indispensable, car sinon, la ligne \"MOV R0,#18\" sera aussi ex\u00e9cut\u00e9e (m\u00eame si la valeur stock\u00e9e dans le registre R4 est inf\u00e9rieure \u00e0 18 )", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1169, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3173ad07-b470-4850-bb42-2944890c1a05": {"__data__": {"id_": "3173ad07-b470-4850-bb42-2944890c1a05", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4592879-856e-46f0-8506-56f46096565a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "fcbfc631a9f7998b2bf1f61eca83d885281dbec7cbcdacd494407a42fda392e9", "class_name": "RelatedNodeInfo"}}, "text": "d) du langage de haut niveau \u00e0 l'assembleur\n\nComme dit plus haut, un CPU est uniquement capable d'ex\u00e9cuter des instructions machines. Les instructions  des langages de  haut niveau  comme Python doivent \u00eatre \"\"transform\u00e9es\" en langage machine (compilation ou interpr\u00e9tation).\n\nVoici ce que pourrait donner la \"transformation\" d'un programme Python tout simple en langage machine (plus  pr\u00e9cis\u00e9ment ici en assembleur).\n\nVoici le programme Python :\n\n```\nx = 4\ny = 8\nif x == 10:\n\ty = 9\nelse :\n\tx=x+1\nz=6\n```\n\net voici maintenant voici son \u00e9quivalent en assembleur :\n\n```\n MOV R0, #4\n   STR R0,30\n   MOV R0, #8\n   STR R0,75\n   LDR R0,30\n   CMP R0, #10\n   BNE else\n   MOV R0, #9\n   STR R0,75\n   B endif\nelse:\n   LDR R0,30\n   ADD R0, R0, #1\n   STR R0,30\nendif:\n   MOV R0, #6\n   STR R0,23\n   HALT\n```\n\nComme vous  pouvez  le constater le moindre programme Python donne un programme assembleur relativement complexe.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 910, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46924f07-5447-417f-9996-9d06a8043d7e": {"__data__": {"id_": "46924f07-5447-417f-9996-9d06a8043d7e", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cbf2e642-ce65-4e51-917a-d84568ee048c", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "e0299dce5bb6885e69c808a6e0797b1dce229588cb4215a8a00b597469afc8c1", "class_name": "RelatedNodeInfo"}}, "text": "2) architecture de von Neumann\n\nComme vous avez pu le constater dans les exemples ci-dessus, les donn\u00e9es et les instructions sont stock\u00e9es en m\u00e9moire vive, les donn\u00e9es et les instructions se partagent la m\u00e9moire vive (il n'y a pas une m\u00e9moire pour les instructions et une m\u00e9moire diff\u00e9rente pour les donn\u00e9es). C'est John von Neumann (math\u00e9maticien et physicien am\u00e9ricano-hongrois 1903-1957) qui a eu l'id\u00e9e en 1945 d'utiliser une structure de stockage unique pour les donn\u00e9es et les instructions, voil\u00e0 pourquoi on parle d'architecture de von Neumann. Voici un sch\u00e9ma qui repr\u00e9sente ce mod\u00e8le de von Neumann :\n\nmod\u00e8le de von Neumann d'apr\u00e8s le site https://interstices.info/ :\n\n!\n\nSur ce sch\u00e9ma, nous avons :\n\n- La m\u00e9moire qui correspond \u00e0 la RAM vue ci-dessus\n\n- L'unit\u00e9 arithm\u00e9tique et logique qui correspond \u00e0 l'UAL vu ci-dessus (l'accumulateur est un registre permettant de stocker les r\u00e9sultats interm\u00e9diaires lors d'un calcul)\n\n- L'unit\u00e9 de commande qui g\u00e8re l'ex\u00e9cution des instructions machines (voir ci-dessus). \u00c0 noter que cette unit\u00e9 de commande est aussi parfois appel\u00e9e \"unit\u00e9 de contr\u00f4le\"\n\n- Le syst\u00e8me \"entr\u00e9e-sortie\" qui permet de communiquer avec \"le monde ext\u00e9rieur\" au syst\u00e8me CPU+RAM (clavier, souris, \u00e9cran, carte graphique, disque dur...)\n\nEncore aujourd'hui, tous les ordinateurs fonctionnent sur ce principe d\u00e9fini par von Neumann. \u00c0 noter que John von Neumann \u00e9tait un v\u00e9ritable g\u00e9nie \"touche \u00e0 tout\" puisqu'il a laiss\u00e9 son nom dans l'histoire de la m\u00e9canique quantique, dans l'histoire de la th\u00e9orie des ensembles...et comme nous venons de le voir, dans l'histoire de l'informatique. Il a aussi particip\u00e9 \u00e0 l'\u00e9laboration de la bombe atomique am\u00e9ricaine lors de la 2e guerre mondiale (projet Manhattan).\n\nPendant des ann\u00e9es, pour augmenter les performances des ordinateurs, les constructeurs augmentaient la fr\u00e9quence d'horloge des microprocesseurs : la fr\u00e9quence d'horloge d'un microprocesseur est li\u00e9e \u00e0 sa capacit\u00e9 d'ex\u00e9cuter un nombre plus ou moins important d'instructions machines par seconde. Plus la fr\u00e9quence d'horloge du CPU est \u00e9lev\u00e9e, plus ce CPU est capable d'ex\u00e9cuter un grand nombre d'instructions machines par seconde (en fait, c'est un peu plus compliqu\u00e9 que cela, mais nous nous contenterons de cette explication).\n\n\u00e9volution de la fr\u00e9quence d'horloge du CPU dans le temps :\n\n!\n\nComme vous pouvez le remarquer sur le graphique ci-dessus, \u00e0 partir de 2006 environ, la fr\u00e9quence d'horloge a cess\u00e9 d'augmenter, pourquoi ? \u00c0 cause d'une contrainte physique : en effet plus on augmente la fr\u00e9quence d'horloge d'un CPU, plus ce dernier chauffe. Il devenait difficile de refroidir le CPU, les constructeurs de microprocesseurs (principalement Intel et AMD) ont d\u00e9cid\u00e9 d'arr\u00eater la course \u00e0 l'augmentation de la fr\u00e9quence d'horloge, ils ont d\u00e9cid\u00e9 d'adopter une nouvelle tactique.\n\nIl n'est plus vraiment possible d'augmenter les performances en augmentant la fr\u00e9quence d'horloge des CPU, et bien augmentons le nombre de coeurs pr\u00e9sent sur un CPU ! Mais qu'est qu'un coeur dans un microprocesseur ? Dans un microprocesseur, un coeur est principalement compos\u00e9 : d'une UAL, de registres (R0, R1...) et d'une unit\u00e9 de commande, un coeur est donc capable d'ex\u00e9cuter des programmes de fa\u00e7on autonome. La technologie permettant de graver toujours plus de transistors sur une surface donn\u00e9e, il est donc possible, sur une m\u00eame puce, d'avoir plusieurs coeurs, alors qu'auparavant on trouvait un seul coeur dans un CPU. Cette technologie a \u00e9t\u00e9 impl\u00e9ment\u00e9e dans les ordinateurs grand public \u00e0 partir de 2006. Aujourd'hui (en 2019) on trouve sur le march\u00e9 des CPU poss\u00e9dant jusqu'\u00e0 18 coeurs ! M\u00eame les smartphones poss\u00e8dent des microprocesseurs multicoeurs : le Snapdragon 845 poss\u00e8de 8 coeurs.\n\nOn pourrait se dire que l'augmentation du nombre de coeurs entra\u00eene obligatoirement une augmentation des performances du CPU, en faite, c'est plus que complexe que cela : pour une application qui n'aura pas \u00e9t\u00e9 con\u00e7ue pour fonctionner avec un microprocesseur multicoeur, le gain de performance sera tr\u00e8s faible, voir m\u00eame nul. En effet, la conception d'applications capables de tirer profit d'un CPU multicoeur demande la mise en place de certaines techniques de programmation (techniques de programmation qui ne seront pas abord\u00e9es ici). Il faut aussi avoir conscience que les diff\u00e9rents coeurs d'un CPU doivent se \"partager\" l'acc\u00e8s \u00e0 la m\u00e9moire vive : quand un coeur travaille sur une certaine zone de la RAM, cette m\u00eame zone n'est pas accessible aux autres coeurs, ce qui, bien \u00e9videmment va brider les performances. De plus, on trouve \u00e0 l'int\u00e9rieur des microprocesseurs de la m\u00e9moire \"ultrarapide\" appel\u00e9e m\u00e9moire cache (il ne faut pas confondre m\u00e9moire cache et registres). Le CPU peut stocker certaines donn\u00e9es dans cette m\u00e9moire cache afin de pouvoir y acc\u00e9der tr\u00e8s rapidement dans le futur, en effet, l'acc\u00e8s \u00e0 la m\u00e9moire cache est beaucoup plus rapide que l'acc\u00e8s \u00e0 la RAM. La m\u00e9moire cache ayant un coup assez important, la quantit\u00e9 pr\u00e9sente au sein d'un CPU est assez limit\u00e9e, les diff\u00e9rents coeurs vont donc devoir se partager cette m\u00e9moire cache, ce qui peut aussi provoquer des ralentissements (en faite il existe plusieurs types de m\u00e9moire cache appel\u00e9s L1, L2 et L3, chaque coeur poss\u00e8de son propre cache L1, alors que les caches L2 et L3 sont partag\u00e9s par les diff\u00e9rents coeurs).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 5321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b9be001-3a96-4c46-8910-b4c2007e74a7": {"__data__": {"id_": "1b9be001-3a96-4c46-8910-b4c2007e74a7", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a4c8419-463e-4a56-8295-81f6351b3ebe", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "c33a63b0f2edf1295ba0795d11d8167bc1713f98ffa7a7ab03424afe8c768c82", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 22, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa067714-48dc-4993-935c-744b7f427350": {"__data__": {"id_": "fa067714-48dc-4993-935c-744b7f427350", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39c1e8a2-ad50-47b4-9706-87e41b58b272", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "84869aae2d4e4e73465f54ead8a4c36c6599bae5456da7c892b28fb7c9af7a51", "class_name": "RelatedNodeInfo"}}, "text": "Des transistors aux circuits complexes\n- \u00e0 la base de la plupart des composants d'un ordinateur, on retrouve le transistor.\n\n- dans un ordinateur, les transistors sont regroup\u00e9s au sein de ce que l'on appelle des circuits int\u00e9gr\u00e9s. Dans un circuit int\u00e9gr\u00e9, les transistors sont grav\u00e9s sur des plaques de silicium\n\n- dans un ordinateur les transistors se comportent comme des interrupteurs : soit le transistor laisse passer le courant \u00e9lectrique (interrupteur ferm\u00e9, \u00e9tat haut), soit il ne le laisse pas passer (interrupteur ouvert, \u00e9tat bas).\n\n- on symbolise souvent l'\u00e9tat \"haut\" par le chiffre \"1\" et l'\u00e9tat \"bas\" par le chiffre \"0\"\n\n- un ordinateur ne \u201cconnait\u201d que 2 \u00e9tats (haut et bas ou 0 et 1), un ordinateur travaille donc en binaire\n\n- Le transistor est l'\u00e9l\u00e9ment de base des circuits logiques. Un circuit logique permet de r\u00e9aliser une op\u00e9ration bool\u00e9enne.\n\n- Il existe deux cat\u00e9gories de circuit logique :\n\n\t- les circuits combinatoires (les \u00e9tats en sortie d\u00e9pendent uniquement des \u00e9tats en entr\u00e9e)\n\n\t- les circuits s\u00e9quentiels (les \u00e9tats en sortie d\u00e9pendent des \u00e9tats en entr\u00e9e ainsi que du temps et des \u00e9tats ant\u00e9rieurs)\n\n- les portes logiques sont des circuits combinatoires. Il existe 4 types de portes logiques : la porte NON, la porte OU, la porte ET et la porte OU EXCLUSIF\n\n- \u00e0 chaque type de porte logique on associe une table de v\u00e9rit\u00e9 (vous devez conna\u00eetre ces tables)\n\n- en combinant les portes logiques, on obtient des circuits plus complexes (exemples : m\u00e9moire, additionneur\u2026)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4d5e448-9137-47aa-bd7c-ef3aef65ed6f": {"__data__": {"id_": "c4d5e448-9137-47aa-bd7c-ef3aef65ed6f", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "635f83cd-5030-47fd-956e-6ef7574f3831", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "46ece929d9811e86003a835950ee3c027a4c6bd55d41e60eccf2059752e1a64f", "class_name": "RelatedNodeInfo"}}, "text": "Les diff\u00e9rents composants d\u2019un ordinateur\n\n- la m\u00e9moire vive ou RAM (Random Access Memory) : la m\u00e9moire vive permet de stocker des donn\u00e9es et des programmes. La m\u00e9moire vive est une m\u00e9moire volatile :\ntoutes les donn\u00e9es pr\u00e9sentes en m\u00e9moire sont perdues en cas de coupure de courant. Pour stocker les donn\u00e9es plus longtemps on utilisera la m\u00e9moire de masse\nqui elle, n\u2019est pas volatile (cl\u00e9 USB, disque dur, disque SSD\u2026)\n\n- Le microprocesseur ou CPU (Central Processing Unit) : Le microprocesseur est le \"coeur\" d'un ordinateur : les instructions sont ex\u00e9cut\u00e9es au niveau du CPU. Il est\nsch\u00e9matiquement constitu\u00e9 de 3 parties :\n\n\t- les registres permettent de m\u00e9moriser de l'information (donn\u00e9e ou instruction) au sein m\u00eame du CPU. Leur nombre et leur taille sont variables en fonction du type de microprocesseur.\n\n\t- L'unit\u00e9 arithm\u00e9tique et logique (UAL ou ALU en anglais) est charg\u00e9e de l'ex\u00e9cution de tous les calculs que peut r\u00e9aliser le microprocesseur. Nous allons retrouver dans cette UAL des circuits comme l'additionneur\n\n\t- L'unit\u00e9 de commande permet d'ex\u00e9cuter les instructions (les programmes)\n\n- Le bus : les donn\u00e9es doivent circuler entre les diff\u00e9rentes parties d\u2019un ordinateur, notamment entre la m\u00e9moire vive et le CPU. Le syst\u00e8me permettant cette circulation est appel\u00e9 bus. Il existe, sans entrer dans les d\u00e9tails, 3 grands types de bus :\n\n\t- Le bus d\u2019adresse permet de faire circuler des adresses (par exemple l\u2019adresse d\u2019une donn\u00e9e \u00e0 aller chercher en m\u00e9moire)\n\n\t- Le bus de donn\u00e9es permet de faire circuler des donn\u00e9es\n\n\t- Le bus de contr\u00f4le permet de sp\u00e9cifier le type d\u2019action (exemples : \u00e9criture d\u2019une donn\u00e9e en m\u00e9moire, lecture d\u2019une donn\u00e9e en m\u00e9moire).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1682, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ed2b1d9-a886-4ce1-8b92-8a3d071b034a": {"__data__": {"id_": "3ed2b1d9-a886-4ce1-8b92-8a3d071b034a", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57a67684-80ae-44c9-9d8e-29d819f22cc5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "1513e802b47be738887621b25bfad7295300d7368dbec9a7687c39acc6735292", "class_name": "RelatedNodeInfo"}}, "text": "Architecture de von Neumann\n\nJohn von Neumann (math\u00e9maticien et physicien am\u00e9ricano-hongrois 1903-1957) a eu l'id\u00e9e en 1945 d'utiliser une structure de stockage unique pour les donn\u00e9es et les instructions , on parle d'architecture de von Neumann. Voici un sch\u00e9ma qui repr\u00e9sente ce mod\u00e8le de von\nNeumann :\n\nSur ce sch\u00e9ma, nous avons :\n\n!\n\n- La m\u00e9moire qui correspond \u00e0 la RAM vue ci-dessus\n\n- L'unit\u00e9 arithm\u00e9tique et logique qui correspond \u00e0 l'UAL vu ci-dessus (l'accumulateur est un registre permettant de stocker les r\u00e9sultats interm\u00e9diaires lors d'un calcul)\n\n- L'unit\u00e9 de commande qui g\u00e8re l'ex\u00e9cution des instructions machines. \u00c0 noter que cette unit\u00e9 de commande est aussi parfois appel\u00e9e \"unit\u00e9 de contr\u00f4le\"\n\n- Le syst\u00e8me \"entr\u00e9e-sortie\" qui permet de communiquer avec \"le monde ext\u00e9rieur\" au syst\u00e8me CPU+RAM (clavier, souris, \u00e9cran, carte graphique, disque dur...)\n\nLes ordinateurs actuels continuent de se baser sur l'architecture de von Neumann. Pendant tr\u00e8s longtemps les constructeurs ont cherch\u00e9 \u00e0 augmenter la fr\u00e9quence d\u2019horloge des CPU afin d\u2019am\u00e9liorer les performances, aujourd\u2019hui la tendance est plut\u00f4t \u00e0 l\u2019augmentation du\nnombre de coeurs", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92b3a135-9bfc-4d3c-b8c6-752c829e6416": {"__data__": {"id_": "92b3a135-9bfc-4d3c-b8c6-752c829e6416", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "145f320d-ff3c-4f61-bd65-b5d04db13194", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}, "hash": "5c571790b50008225259d96490ffb0f19f9b3de8f45b6c25f70fb84f6600ee89", "class_name": "RelatedNodeInfo"}}, "text": "Ce qu\u2019il faut savoir faire\n\nVous devez \u00eatre capable d\u2019\u00e9crire et de lire (et comprendre) des programmes simples en assembleur (en ayant en votre possession l\u2019aide m\u00e9moire sur l\u2019assembleur)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f938c6f8-253e-48ed-ade3-516b4e502818": {"__data__": {"id_": "f938c6f8-253e-48ed-ade3-516b4e502818", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7dc9539-3996-4b02-aeee-ae754e048b84", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "bcbf88190c29eab816fd018f558fac395d59a66d0c1bddae724f57f030eb4775", "class_name": "RelatedNodeInfo"}}, "text": "Afin de mettre en pratique ce que nous avons \u00e9tudi\u00e9 dans le cours \"Mod\u00e8le d'architecture de von Neumann\", nous allons utiliser un simulateur d\u00e9velopp\u00e9 par Peter L Higginson. Ce simulateur est bas\u00e9 sur une architecture de von Neumann. Nous allons trouver dans ce simulateur :\n\n- une RAM\n\n- un CPU\n\nUne version en ligne de ce simulateur est disponible ici :  http://www.peterhigginson.co.uk/AQA/\n\nVoici ce que vous devriez obtenir en vous rendant \u00e0 l'adresse indiqu\u00e9e ci-dessus :\n\nsimulateur d\u00e9velopp\u00e9 par Peter L Higginson\n\n!\n\nIl est relativement facile de distinguer les diff\u00e9rentes parties du simulateur :\n\n- \u00e0 droite, on trouve la m\u00e9moire vive (\"main memory\")\nau centre, on trouve le microprocesseur\n\n- \u00e0 gauche on trouve la zone d'\u00e9dition (\"Assembly Language\"), c'est dans cette zone que nous allons saisir nos programmes en assembleur\n\nRevenons sur les parties RAM et CPU", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 875, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9b26a7b-08f5-4a97-8791-66519f66f30c": {"__data__": {"id_": "a9b26a7b-08f5-4a97-8791-66519f66f30c", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1a69e2af-aa92-4b90-88dc-bb241f00bc1f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "034051faf1d7bbae46c4a14346aae87a1f339cc04a0e734049605860dab1b815", "class_name": "RelatedNodeInfo"}}, "text": "La RAM\n\nPar d\u00e9faut le contenu des diff\u00e9rentes cellules de la m\u00e9moire est en base 10 (entier sign\u00e9), mais d'autres options sont possibles : base 10 (entier non-sign\u00e9, \"unsigned\"), base 16 (\"hex\"), base 2 (\"binary\"). On acc\u00e8de \u00e0 ces options \u00e0 l'aide du bouton \"OPTIONS\" situ\u00e9 en bas dans la partie gauche du simulateur.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 319, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f383f148-82b1-417e-86da-b2dfcad2cf99": {"__data__": {"id_": "f383f148-82b1-417e-86da-b2dfcad2cf99", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "30e5df8e-634a-4357-a903-6128f2c56b59", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "12d3d830e9949a063a17be96eac0f13a53125699ab7a486a1ca420d8b3c2c05c", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.1\n\n\u00c0 l'aide du bouton \"OPTIONS\", passez \u00e0 un affichage en binaire.\n\nComme vous pouvez le constater, chaque cellule de la m\u00e9moire comporte 32 bits (nous avons vu que classiquement une cellule de RAM comporte 8 bits). Chaque cellule de la m\u00e9moire poss\u00e8de une adresse (de 000 \u00e0 199), ces adresses sont cod\u00e9es en base 10.\n\nVous pouvez repasser \u00e0 un affichage en base 10 (bouton \"OPTION\"->\"signed\")", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d752693e-fff2-44cc-90c0-f9c432ec1bb3": {"__data__": {"id_": "d752693e-fff2-44cc-90c0-f9c432ec1bb3", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fb8faad8-bace-481e-894b-09156065a324", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "3e7b01e8d293f08ac657d7d1b491d6488bc71e1729ab5cccf543a706307262f8", "class_name": "RelatedNodeInfo"}}, "text": "Le CPU\n\nDans la partie centrale du simulateur, nous allons trouver en allant du haut vers le bas :\n\nle bloc \"registre\" (\"Registers\") : nous avons 13 registres (R0 \u00e0 R12) + 1 registre (PC) qui contient l'adresse m\u00e9moire de l'instruction en court d'ex\u00e9cution\nle bloc \"unit\u00e9 de commande\" (\"Control Unit\") qui contient l'instruction machine en cours d'ex\u00e9cution (au format hexad\u00e9cimal)\nle bloc \"unit\u00e9 arithm\u00e9tique et logique\" (\"Arithmetic and Logic Unit\")\nNous ne nous int\u00e9resserons pas aux autres composants de la partie CPU", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 523, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2304b788-b22f-4262-a3e4-6d840af2992d": {"__data__": {"id_": "2304b788-b22f-4262-a3e4-6d840af2992d", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e65901d-b382-4f0d-9e15-89d144d6c37a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "73f345060ed9f2d0c53cad70699b90df1d9f7ff4f477bc14d4eed8f840e5d917", "class_name": "RelatedNodeInfo"}}, "text": "Programmer en assembleur\n\nComme d\u00e9j\u00e0 dit plus haut, la partie de gauche permet de saisir des programmes en assembleur. L'assembleur du simulateur correspond exactement \u00e0 l'assembleur que nous avons \u00e9tudi\u00e9 dans le cours \"mod\u00e8le d'architecture de von Neumann\", n'h\u00e9sitez pas \u00e0 consulter ce cours.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de6b38bf-3495-499c-961c-c7460cf2b17b": {"__data__": {"id_": "de6b38bf-3495-499c-961c-c7460cf2b17b", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f584e456-bdad-4b19-94ba-2f2088135c4f", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "d5fe03aa8a9703c7666d6dbd78791de046bb7a79942c7f1733531f493abebc51", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.2\n\nDans la partie \"\u00e9diteur\" (\"Assembly Language\") saisissez les lignes de codes suivantes\n\n```\nMOV R0,#42\nSTR R0,150\nHALT\n```\n\t\t\t\nUne fois la saisie termin\u00e9e, cliquez sur le bouton \"submit\". Vous devriez voir apparaitre des nombres \"\u00e9tranges\" dans les cellules m\u00e9moires d'adresses 000, 001 et 002 :\n\n!\n\nL'assembleur a fait son travail, il a converti les 3 lignes de notre programme en instructions machines, la premi\u00e8re instruction machine est stock\u00e9e \u00e0 l'adresse m\u00e9moire 000 (elle correspond \u00e0 \"MOV R0,#42\" en assembleur), la deuxi\u00e8me \u00e0 l'adresse 001 (elle correspond \u00e0 \"STR R0,150\" en assembleur) et la troisi\u00e8me \u00e0 l'adresse 002 (elle correspond \u00e0 \"HALT\" en assembleur) Pour avoir une id\u00e9e des v\u00e9ritables instructions machines, vous devez repasser \u00e0 un affichage en binaire ((bouton \"OPTION\"->\"binary\")). Vous devriez obtenir ceci :\n\n!\n\nNous pouvons donc maintenant affirmer que :\n\n- l'instruction machine *11100011\u200910100000\u200900000000\u200900101010* correspond au code assembleur *MOV R0,#42*\n- l'instruction machine *11100101\u200910001111\u200900000010\u200901001100* correspond au code assembleur *STR R0,150*\n\n- l'instruction machine *11101111\u200900000000\u200900000000\u200900000000* correspond au code assembleur *HALT*\n\nAu passage, pour l'instruction machine *11100011\u200910100000\u200900000000\u200900101010*, vous pouvez remarquer que l'octet le plus \u00e0 droite, 001010102, est bien \u00e9gale \u00e0 4210 !\n\nRepassez \u00e0 un affichage en base 10 afin de faciliter la lecture des donn\u00e9es pr\u00e9sentes en m\u00e9moire.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b99411c1-e8e3-4982-8b8e-7acef20fe9c8": {"__data__": {"id_": "b99411c1-e8e3-4982-8b8e-7acef20fe9c8", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7b5b129-c9da-4cd0-8bb5-e095f1dac4e5", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "b7f410f0b87a40daf1b9d9d608bd2bf756a577f72449e9b0fa0c2f0757338a5e", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.3\n\nPour ex\u00e9cuter notre programme, il suffit maintenant de cliquer sur le bouton \"RUN\". Vous allez voir le CPU \"travailler\" en direct gr\u00e2ce \u00e0 de petites animations. Si cela va trop vite (ou trop doucement), vous pouvez r\u00e9gler la vitesse de simulation \u00e0 l'aide des boutons \">\". Un appui sur le bouton \"STOP\" met en pause la simulation, si vous rappuyez une deuxi\u00e8me fois sur ce m\u00eame bouton \"STOP\", la simulation reprend l\u00e0 o\u00f9 elle s'\u00e9tait arr\u00eat\u00e9e.\n\nUne fois la simulation termin\u00e9e, vous pouvez constater que la cellule m\u00e9moire d'adresse 150, contient bien le nombre 42 (en base 10). Vous pouvez aussi constater que le registre R0 a bien stock\u00e9 le nombre 42.\n\n!\n!\n\nATTENTION : pour relancer la simulation, il est n\u00e9cessaire d'appuyer sur le bouton \"RESET\" afin de remettre les registres R0 \u00e0 R12 \u00e0 0, ainsi que le registre PC (il faut que l'unit\u00e9 de commande pointe de nouveau sur l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 000). La m\u00e9moire n'est pas modifi\u00e9e par un appui sur le bouton \"RESET\", pour remettre la m\u00e9moire \u00e0 0, il faut cliquer sur le bouton \"OPTIONS\" et choisir \"clr memory\". Si vous remettez votre m\u00e9moire \u00e0 0, il faudra cliquer sur le bouton \"ASSEMBLE\" avant de pouvoir ex\u00e9cuter de nouveau votre programme.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1231, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d569a34-8a20-457d-aa5f-0b6d20e19eb2": {"__data__": {"id_": "9d569a34-8a20-457d-aa5f-0b6d20e19eb2", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa10cdd7-3b72-47b9-8317-a4b54207899a", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "696d275774b48d8c964645fa0611d850f8e87069516c83c07761514c9242bb18", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.4\n\nModifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place du registre R0. Testez vos modifications en ex\u00e9cutant la simulation.\n\nLe simulateur prend en charge les labels :", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac782498-11bb-4f96-a8b0-6043c9512a08": {"__data__": {"id_": "ac782498-11bb-4f96-a8b0-6043c9512a08", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "17d8db86-534d-4bf6-9dfb-a0dd87b68f50", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5e0eec03141cf3eaef931957c78e80239cc9d6d42e42085e2f99a763106e8863", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.5\n\nSaisissez et testez le programme suivant :\n\n```\n   MOV R0, #4\n   STR R0,30\n   MOV R0, #8\n   STR R0,75\n   LDR R0,30\n   CMP R0, #10\n   BNE else\n   MOV R0, #9\n   STR R0,75\n   B endif\nelse:\n   LDR R0,30\n   ADD R0, R0, #1\n   STR R0,30\nendif:\n   MOV R0, #6\n   STR R0,23\n   HALT\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "500a2bbb-6e5d-4675-a0e2-b20f432e25bc": {"__data__": {"id_": "500a2bbb-6e5d-4675-a0e2-b20f432e25bc", "embedding": null, "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f08552bd-b089-4ccd-80af-eec3fc515bb9", "node_type": "4", "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}, "hash": "5f456c30668e3e860a5b4ea0038ed27c03c058a83ee80a43d41f865be54f598d", "class_name": "RelatedNodeInfo"}}, "text": "activit\u00e9 9.6\n\nVoici un programme Python :\n\n```\nx=0\nwhile x<3:\n   x=x+1\n```\n\n\u00c9crivez et testez un programme en assembleur \u00e9quivalent au programme ci-dessus.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 157, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"1f19a001-b0bf-4c58-b468-4e31613b578f": {"doc_hash": "2142f6268336833a8a86a77819d7cbcbecb8470430e79e3baefb0ebaa6f2edce", "ref_doc_id": "6a5622ae-d74e-48c5-b24d-359d7215cd49"}, "d43c7cab-31eb-424a-b8b7-0e9bfdf7e208": {"doc_hash": "7e7fd13533559bdb436e36903d90f3b5f91f1b0fd348632323a647acb4b90914", "ref_doc_id": "d61a62b4-bad0-4748-9c74-ef92b95a0209"}, "27656e70-8614-479d-a352-6fb637c2fd2c": {"doc_hash": "a6401b44305667078fb53c2db11d695013e47dcc6bb5aa4939a06cfd9f8af695", "ref_doc_id": "9d678ff7-9f56-4b3c-82ce-8ea0214dcf7c"}, "2a008288-abff-44d8-8743-b142216dc42a": {"doc_hash": "5aef94799da697e046dcd21f39d3c299a5ed0c69afa46454f4ae7a55d6b5868d", "ref_doc_id": "cbfafba3-0b20-4cdc-8735-a5196ab97487"}, "fb97a55d-2b1a-4ddd-8020-18d20a19e3e6": {"doc_hash": "a61e7f8d8737d7b68ef7e7ca0b36e0f6bbb2ee36505c4a679c7daf0bfdc7a81e", "ref_doc_id": "97856ac2-2f9e-4d17-b18b-2972237a2f9a"}, "ee5ac627-8300-44c3-ba2e-320479b4a1ed": {"doc_hash": "3d8fe8a4418a34c57bce52b73a1ee70061d1af659afa79b26a8b7cb1d18c26b7", "ref_doc_id": "2d078324-b8d2-425e-b7f3-6f54e3cd7d32"}, "24d10af0-ba59-4c94-8fe9-a81c5b5c07f8": {"doc_hash": "4de979a98ed94b887b6a67ea37f725aa08b4ee3aadcc4cacb35218876238a220", "ref_doc_id": "f7b3652d-6439-4975-aed7-cd1ff4c84d5e"}, "cc668a24-3b36-4da8-9c95-2aedd5008baa": {"doc_hash": "ecbb39170ab0bfd65affd63bea48df6ce834108fcbf0f00042629a388312e80f", "ref_doc_id": "a9c716e8-7fec-4f37-9471-78bb6d3eb92a"}, "930f84b6-8784-40c4-9181-7e7be14d74f7": {"doc_hash": "201cdd48cc1fce18fcc95348edaaa0386ac0f9313f7568ccdafa24920fcbca7b", "ref_doc_id": "2b33c5ad-f697-4354-9f53-6327308a4450"}, "c9076ffe-d75d-49a0-bd9c-f24fd2e8cbeb": {"doc_hash": "796dc32231e4f0e06933f19a4064b72b6407b8a30d89517459063306a7fe7359", "ref_doc_id": "4cce7e55-e66e-4f2e-9727-8bd0aaa3e77b"}, "dd943000-763f-4271-b157-8c391851b75e": {"doc_hash": "c6642b55cedcff451de1764c5a4c431b662a37a0085b0927b902830fb654ce3a", "ref_doc_id": "70b47774-c06e-4417-8e63-8873c4f2ed6a"}, "5435a3d2-edbc-4515-8f19-7cfc08494e4b": {"doc_hash": "7e660d4bb1bce0863e8ab2ca53560648614be06e2f99d3b59e7af5e33bffc0f5", "ref_doc_id": "ef404959-890e-483b-a61d-c81b9f8dd3e1"}, "8b58fff8-2406-4319-a44b-5d4b9d2b9429": {"doc_hash": "ee0d307c717a00502b61109e2a1f4e5a48ee91562a88642d76c875b155da4f0c", "ref_doc_id": "f86c5557-7bdb-448e-9b31-47e1746ee5b6"}, "7594d104-12c8-4977-a939-eae1bdbd3d75": {"doc_hash": "b85d109013bc17350c4da3d6f2ac38d2fc1f9b8ed445ba9cfc0c9d0a0f40370e", "ref_doc_id": "ac126a00-842a-4ad2-9de9-d9b6a04f3cac"}, "45ea8e03-e7db-46ef-bd7e-0dfe3528012b": {"doc_hash": "5b9de6ccf6e6f7c1119b1f46c372f45920fffd08602c82a049d45478beae21c0", "ref_doc_id": "68f2b5b6-b495-4e8f-9fd8-deee9e8a94c7"}, "04837022-9673-4939-8901-49aea933e587": {"doc_hash": "fe6a58b68eda887734f0aefe2fdf3fc7ab712c5326f445652137d8016befdab5", "ref_doc_id": "2b81e6fa-7d3d-43b3-9176-a94f6f475bef"}, "142e538e-59ff-4d5f-a246-3b81ba9699df": {"doc_hash": "0db6ba22c8ac643d42958a50de2cb386aec618e8c4d83c2fd8a000b1aba2b78f", "ref_doc_id": "3eac8147-1ac4-4529-9c98-cfa82881889a"}, "34d21135-2844-486b-959c-3b892c9a5c0e": {"doc_hash": "f6fcd54e5ed86705f2e953bb02e011c856a76260fabddcb9eac6b7dda4f60529", "ref_doc_id": "be7e88f0-2533-4382-b81e-d248fcbd8914"}, "5e6199d8-ac48-4c91-9790-cd656050d7c4": {"doc_hash": "416302d70cf58ea47de40348a99abc4fb4ed5cd5b8e36a2a7a5192e46e94770f", "ref_doc_id": "a5f3600f-9482-4d92-b18d-aad7668e9274"}, "ce73a2f4-cf73-4003-b2a1-85368d0ebf48": {"doc_hash": "8377b2ef8ff4332d3cae87a3db41afd85eca47e5e2b697941044d9bfefb21044", "ref_doc_id": "ed1f616d-0b41-4ab7-8ef5-42ef2e8e6ff0"}, "b58e2e66-88c3-4245-95ca-29cc8dc4aa6e": {"doc_hash": "d9cb8f59143c1eb43cbcd982b7b2eab1786c0be5012117d96527463f5286b8e7", "ref_doc_id": "00e8f73e-01e4-4ad6-8bb3-3e4407669216"}, "e3964af5-10ee-4f53-bb3a-73344089aacf": {"doc_hash": "83e09c746464b0ceded7e3c163628ef04c9942764251e9e478dd33511bd535e9", "ref_doc_id": "2edde1d7-5529-4451-a756-eec80e70daba"}, "6f2a152f-c93a-4d7a-94f0-78e179db2439": {"doc_hash": "b24a4892c653b16455542f6e6535b34374dd6a289bb1989984501858089c7b74", "ref_doc_id": "5a8cba85-ab57-40a2-ab16-c1fbc2150162"}, "60b6c3c7-36f6-4ed4-bdf0-4f8e673ad135": {"doc_hash": "1f1129146338f282508040e526b2dc1d820d47a2bb5d078dc9a8f041a801f84c", "ref_doc_id": "12bff89c-2281-4191-aceb-77463fe4b7d6"}, "9becb5d8-8544-47c6-abbd-d857c3430f8c": {"doc_hash": "047d0f3bb39ba2bfd8696c93bfdf2c34f640c8fb552793d0f29325b5e1add4b8", "ref_doc_id": "df26e656-4261-4921-9b03-b4b35da59e14"}, "85675e5f-b0dd-4677-8f4b-4e3c9c7cbebd": {"doc_hash": "4b6c860e42c9a64615cd6a58a5c0810c62c539fcaafbaef1c1627cf568ee3f63", "ref_doc_id": "ed6b02f7-ad77-420a-85f5-e35e1fc61203"}, "7091e703-e40c-456e-80a7-fc8cd2397a4b": {"doc_hash": "6e736c99f319a2ee6134009fa33a128862226c0a4357a1c9c1cfd715f89e75d1", "ref_doc_id": "449bfc83-f982-4acf-8fe4-5964f0eb5046"}, "b78032bb-7b2e-47f8-9311-5a4cfd76c17f": {"doc_hash": "56328e8518eb401b97844ab1cbd67c4304870528f4f2c513ae363c1d6879a770", "ref_doc_id": "0c194e55-9711-4870-9545-0397557bd199"}, "e482583e-661f-424c-b21a-cebcdaf62c30": {"doc_hash": "982812bf25256d635a20a035556f624177468f3105e130f29e9ff52541b41a94", "ref_doc_id": "73a9f20a-3768-4769-a930-17b52a9e38d6"}, "9d945014-66cb-45d7-9ded-e4580cad61f7": {"doc_hash": "7d4110cfcf279b199d40ed1e4c23ac1c3323f641e07cd415b0a5f10f20f540e4", "ref_doc_id": "54c4f3f3-602f-432f-8d62-dea3aa18a7fb"}, "4b3f4012-203e-477a-9670-6a866189ab0f": {"doc_hash": "63ae4201e8936b569dfc3d03753c1cb7c798036fc99bb85c655bdd97698ef2af", "ref_doc_id": "6033e73d-537d-4304-8a36-23b0674c7f08"}, "98429152-e29f-4bf4-914c-29591028b4ba": {"doc_hash": "1963b2db1dd0bcd63b2d671f906f6c75182321e487635e44835ad65883e51034", "ref_doc_id": "ef3de27b-074e-4cb9-9898-7566a8661bde"}, "da08b58c-0d9d-42e6-b337-97bbd12285bb": {"doc_hash": "b54842f525fad2c45439f5722ab993c8fa53316a2e85c62e51c0eba461845c6b", "ref_doc_id": "27735650-443d-4fcc-84c4-aeb894b5daf8"}, "17ac0a5e-34c6-4680-bcdf-7a05b396251a": {"doc_hash": "1c775641941bcba895328f151a72cb16d38b57ec5b37b5c4a2948609c02373aa", "ref_doc_id": "34e0ecdd-edb4-473b-97b5-374cca03aec0"}, "4d0e0b99-91c6-4c29-897d-6cc33714e528": {"doc_hash": "cea9bdca5ddbdb942739d5c78f9a42a171510967b82b5c93e438d709b842b83e", "ref_doc_id": "93e70f45-9eb4-4cc7-9793-53156e023e9d"}, "c1a53512-5102-4b65-b913-e367e364a430": {"doc_hash": "0789daeb5fb59c1460ee9c4eb79eb0e89a404658b4a3ad79b0b75eac26a50281", "ref_doc_id": "6f76151d-938f-4a81-88f4-828ad4d00466"}, "b4807a75-26e6-4b65-8117-7433c1c0858c": {"doc_hash": "8dea5587a21c561a35d137af2c4ddfc2bc044bfa23ec252778880939bc965d0b", "ref_doc_id": "a4120c1b-c63e-4467-9bce-eb785a5e3f6e"}, "d670f387-68cb-442a-b66e-b427740cc81f": {"doc_hash": "a19c575e539951db5cfba51da99520169ba250b4bf722003be43eb5a2fc832c9", "ref_doc_id": "4365248c-a130-4cca-8dee-b9ddef79c556"}, "f1d1ca66-5633-4b20-abc8-cc3ffd3bf52f": {"doc_hash": "823c17085680b1faab8191cab2d8a12963479aa0b6b26ffa7aa681a6d45d483e", "ref_doc_id": "1fa48e40-2fa0-47b4-8e38-7f3de70b59bc"}, "fdeeadab-65b2-4944-93aa-7f98405e39de": {"doc_hash": "43bfd767bbb67dc6afc21375ae5d4b49cf9608e8ae13bbf99716c0c5f0a485ed", "ref_doc_id": "e6af1309-d5c7-415e-a82c-063d7da9f9c0"}, "96f4bd72-4a15-4b1c-a44a-36926e7bd7f6": {"doc_hash": "8c877a657cd8031f3d023d36afcbb5885fb456c029ef44c4525b8e661c89558c", "ref_doc_id": "602b1e84-7183-4eb7-b9e5-43e713cca174"}, "997266f6-d0ec-4ccc-a96c-ccaa936b672c": {"doc_hash": "0f7f1a71b0c52ac247b29224bc25c9c21000966ee6ffeb6ab93c455dd9e23509", "ref_doc_id": "dac53864-f4a5-4de3-9f95-dcf4c32036da"}, "e52da04b-4a88-4c16-8a36-4b52207d233f": {"doc_hash": "0bf4060b54077b55811b320006343a49ddb38e1adc059ef95ee7bcc0785c5528", "ref_doc_id": "843e1693-4bfa-4bc2-baa2-a6110a29b189"}, "46d0be56-d3d0-41b0-88e7-44abfb43876e": {"doc_hash": "3da705d1aeb10d67e9102beec99e12778a9d6010c465bf38a6dc653e6299ad8a", "ref_doc_id": "27c31d9e-8d21-46ae-b4c1-6f40477ef254"}, "57de25e1-67a3-40d7-9881-0d290011cdeb": {"doc_hash": "db185deb2101bf75c01f5f267fb2d3366b91df72e63609d3d70dbac8c152f87c", "ref_doc_id": "88040aa2-75c5-4ed6-943f-feaaaf651e1e"}, "ac86cf98-e925-464d-8c7f-6d96320689ed": {"doc_hash": "09304529d2028d49baead9e9ab10660f40b31f491528e05564a6863647014c3e", "ref_doc_id": "e45bfe72-dcae-434e-b406-cc5b441ea83b"}, "f062fac9-05ca-446b-8bd8-c6c86b01a334": {"doc_hash": "084edf9a73850f9b79cca9574f8564337cad42c234cb9219fa6f211fb7923d93", "ref_doc_id": "f3a217cf-8cfd-4fb3-b979-daa824b231c1"}, "b0ab32c8-83c0-41b2-933e-4552fc3a0cb8": {"doc_hash": "03bc5c970d8df1ca5b86c991efc7586c525b8904da8247c6d4f7457df1888b64", "ref_doc_id": "09804031-41e9-4f0b-a324-490bcfc1a932"}, "21cd0318-038d-4a70-926b-db01f0449823": {"doc_hash": "0cf656fca22edbabe74e012e35028264c8d1710453b30b1ddae9c1b11b0893e7", "ref_doc_id": "a2769d44-f75d-474f-988b-771f690a213f"}, "f3119e9c-0779-458f-8c7f-0df58c329cb6": {"doc_hash": "82dd0a2938c674ac0fda1a7d9eab466007bf2fb1f8b851a4a30ff284cfabf832", "ref_doc_id": "0e72f884-16f9-441b-b44a-c6572616a7f6"}, "5ff37844-5f9f-4b96-9cef-5f0b5e390252": {"doc_hash": "119cbbaa8a02e8d4ec3c464fc35bc24e3d1885957b003e6a168ef56ccd18fcbc", "ref_doc_id": "a364d327-8765-4bac-bac5-bb3e222684c7"}, "025f8427-3452-4371-9f2d-5d6be906b823": {"doc_hash": "63b5e3f7daf59ebd786def22d2ea531425e10950a67e8e95d873b8b945a95a16", "ref_doc_id": "3dcc4e6b-e623-4531-b659-9552694a5a11"}, "81862c10-39bb-4274-b45b-b1a17843d92e": {"doc_hash": "eb30db06445614ce7029fc7212cbd8dc548540ca8ccf2afc57d88d2c3d72ca3b", "ref_doc_id": "9957b0b9-07c9-4050-bad2-52f6dbefa29a"}, "45cefba3-913f-404b-9863-c2a3c37b23a4": {"doc_hash": "1448b1a0da7c8700d17d8dd52d9b252dac8dc38606752e0d0f062dc931ee83fd", "ref_doc_id": "5b56fa3c-e975-4237-90f8-562aadfe0f13"}, "749d61ca-e768-42c6-a34c-9f04957adc16": {"doc_hash": "4bb90df4a7dd03f4c6d34cdcb40e419377cf44fa36b3181546cc64f51484e679", "ref_doc_id": "47451d2e-9896-414a-b66d-75b38b4ae2ed"}, "51e2a1cd-2471-4919-b664-7e7e33b4baa7": {"doc_hash": "2436a14afacaf3fc9bce8382bb0d877c5f5aeec92b664bd52fd0b732886ddad7", "ref_doc_id": "109ea251-d24c-42c2-9c25-f6d2d3adb554"}, "23b61737-9139-443e-967d-8a35e8b169bd": {"doc_hash": "da82067a1771620bcea3696e7d78be28b90977dc1b1fdd969cdeed99afcef589", "ref_doc_id": "47d7ae3c-fef4-4ec9-bae3-09d27d9cbcef"}, "21595bc9-f53d-4d86-89fa-83b499eb771c": {"doc_hash": "b5c4dd26eea64b1c5ee3f5f26891131b0b375512d0b3365b52c9bc5a9f61cebb", "ref_doc_id": "d4e4a12c-0dd6-4c8a-a40c-190deefddc76"}, "894b65a9-7ac0-4f80-b31a-fc90677d300b": {"doc_hash": "f103d96ca5c4bd260d79e53a4e3f3b940ad034a4f59b24369ea17cacc5c466ea", "ref_doc_id": "0cf88da9-14ab-487e-851a-77afba0aa572"}, "aabf8be2-b833-4acc-833a-64d6b8c1a569": {"doc_hash": "071ae26f6b99c5e175fc01388a699b7b443841c814cd7645fa9ef2d26cfc3032", "ref_doc_id": "1097952d-7a0c-4547-8df5-f731245107cf"}, "7325adce-1139-4ace-95fb-74336a29c151": {"doc_hash": "cf028cc5515d4a30904c39134b2a17ad927cc9f6227f5cb75567857b55374389", "ref_doc_id": "617485c7-aec4-4809-b48e-234d98d84cec"}, "355048b7-8936-4d15-8b05-dcaa11d597ea": {"doc_hash": "ff2d0ef6a997da9f4d3d4ee0906936030078603d092eac6e256f6f63b3bda11e", "ref_doc_id": "bec16df9-4d2c-437e-9c0e-86e13c7b6e37"}, "7eb443b7-e02b-4770-8f2f-d7bedc8094f8": {"doc_hash": "f263e3b494b8040de7c5939fb35588cec10dfd275831309095d42fbc50fc6870", "ref_doc_id": "f036e09a-a890-442f-9d05-a0606d0e9152"}, "c65bfbe8-9297-4f60-beae-1408d12b9a7d": {"doc_hash": "13239af70eea85ab1c5e60a70f508cc35922a88dce0774ea1105b1927fe0eb65", "ref_doc_id": "d1c020fa-8286-49e4-8327-e9381b6e1429"}, "3f25401a-aaae-41f9-ab9a-59c2694e2086": {"doc_hash": "fa7a3985ddb12e8fa8ba6e9b0447271bfb611d1d20190b98f1ecdf76db7b8bb2", "ref_doc_id": "4c47c26c-8b54-4b4b-8b77-5148ed8a3783"}, "449c5e4b-cd2c-451d-b6e8-2917cbc1e50f": {"doc_hash": "010fcd9041c86fa755cef18b0ec892d65a235727d9ade9fb8466e2c2c2f5cc4c", "ref_doc_id": "1bb73b1a-cda6-455a-ad8a-2f578010801a"}, "4926296a-f866-4f19-b62f-9fb369f82554": {"doc_hash": "2429bd9ed5a0c8e991c9fc58f4a96973e4414a1e6aeb9c7c8e440f1d98be3802", "ref_doc_id": "2d0c2095-e15b-4d8d-b67e-9896c5cb9aa0"}, "0828bb43-d615-4bd4-8eeb-ab7522179810": {"doc_hash": "bb89677829bd3437a7c619b32da76233cff51e8cf0dc1194549ba018a9dd9dc8", "ref_doc_id": "1750c214-104e-4e49-a173-004a91b8bb51"}, "4b75b2d1-201b-4b79-9425-837c876a9195": {"doc_hash": "33c3244f99bcdb9f946f9863f77a5e0584173cc5d0197b8aad817969a06b0031", "ref_doc_id": "97756da4-76db-4204-9cc5-71c902c89778"}, "3fbec9f1-6d8e-4999-8ec3-d104faabf16d": {"doc_hash": "ae73f8f417d82db98ccd477726178446e94cb887a656164f99ac1038e35c04a1", "ref_doc_id": "ee9365ba-696d-4275-a6d8-0ce50dcf6b0d"}, "b5a14889-1737-4ce6-949f-f12d24177ddc": {"doc_hash": "0ac870d67c2654eb0ad809e6db42fa50a87999eda29a34b0dbad8da17de6d14c", "ref_doc_id": "553050df-d315-4936-b791-e4c41ade6f70"}, "624e68eb-7573-430c-ac06-5962416f5ac6": {"doc_hash": "26f1310f981cd4245cdca8bf3bb16689a8083056335b8afdce350aeae8d302ef", "ref_doc_id": "b4492473-0b26-4ed6-b032-3b5817a6675b"}, "0294889e-4d0c-4f4f-abfc-d8227ac113df": {"doc_hash": "b337b7e3a083bf3432c6a46c96d2b8a7a75163586ab6bf7cc805466c52864ca4", "ref_doc_id": "291530e8-6dc9-4a99-8f7a-bf24ee4ebaeb"}, "9549c964-88be-4cc1-8145-0bc33620a7d8": {"doc_hash": "ab36afafc8ec599c79168be880c881c7e5f042ef7e112fd17d8d96a84ea7410c", "ref_doc_id": "7205e833-bd83-4fe0-892b-a4787a7fc470"}, "a38390f7-e6f8-4866-b771-344787180c5f": {"doc_hash": "23cf7d1df6a896270f091c7febfcf75f908eb41f0ae2f26e688ee5b03c5946a0", "ref_doc_id": "c53eb518-f5eb-4b81-8552-ab282292d856"}, "97972804-eb13-44ce-8982-68e1f7de1064": {"doc_hash": "087a898a8409c583de92b6f40918988ec7d4c981d30e10d15d6d5ab734a30312", "ref_doc_id": "bcbeb604-6071-433e-8295-c20906b8dfc0"}, "a125b47d-60fa-45f5-9eda-55ea8cb6e80e": {"doc_hash": "f454e9116495212414be14214369b94a223cd249782e506fd777f69f6724c9d8", "ref_doc_id": "87c85179-8032-41af-a1c6-4b8f57c92e9a"}, "155cf083-d77a-4e40-adea-f08398966d30": {"doc_hash": "71418e58464e4b09a43396a0e4ba9746babed9a6f686324b61b3b48f711380d6", "ref_doc_id": "93c54499-62a1-44b1-84ce-75c604d72dac"}, "d9b47b93-1202-48d8-9c55-df2fa79fbdad": {"doc_hash": "5eb179690abab8314c648a1272f90f3a90847b5a443e2aaa8061d483a1496fc4", "ref_doc_id": "ca4e96ba-c36e-4b62-97a2-b719958d84e7"}, "cf711582-d4df-43a7-a896-a620b2ec1f43": {"doc_hash": "357849ca587d8faf5ee9a355bcde0e86328e34d09a612547a19f5e9f3bb9bb6b", "ref_doc_id": "9644c6ff-8fd1-4e1a-bcb1-de9def566b54"}, "095a2dc6-8e97-4c39-aa81-3e9a6de07f9f": {"doc_hash": "b6c4dc15c6fa0883c825138f04dac0d775af85bf8f54e620adfd0a7d8995e01e", "ref_doc_id": "56e1dbf3-6855-47b3-9cba-4d3d76a0192e"}, "511432c2-f64e-4e24-a36f-685fe05ecf63": {"doc_hash": "ca58b49844e91f39f06a62d944510c5e5c171a6a3362cc295705986ed9a927ad", "ref_doc_id": "bd194c5a-5a2d-4c69-8715-458de16bc5ae"}, "93a5a1e2-a970-4ead-b3e5-35cbb0bd3d02": {"doc_hash": "72dd304d98cc98f3b1741efde3cee16fecb1949646f886eac6090174a45e3540", "ref_doc_id": "c8c955ea-ef68-4674-abe4-cd2be86f3fbf"}, "d4b29faf-0701-4e52-a764-412397533a70": {"doc_hash": "7f9d6072f75817bcb5980f6e17e283bb51ae2674b9868947263e5d34dfbda44f", "ref_doc_id": "57d78170-c1c4-490d-977c-97c2a2931e9f"}, "e1bc8f3d-e902-41be-bca8-10d1d61b0756": {"doc_hash": "aabaca243130b31ce8efbf3913bb906ebe16e49dfcb8fe30a0f84999772529b4", "ref_doc_id": "8a83d90d-f264-43a5-9453-b22359d49cc4"}, "ad296553-f91f-4278-b5ce-801f637dcafa": {"doc_hash": "ce30f2267afc0f205ef35407f9267e1929aa96692c76c85ede999f2fd49c70b8", "ref_doc_id": "7388c529-e104-464d-bab4-cbbb41a71081"}, "5df1b0b9-99c8-49c7-ae62-6b790accf847": {"doc_hash": "43d28be05dbaeb394f0a08eafe3b44691c1339ed6ef03f41bc04da83e90e69bd", "ref_doc_id": "e38e8e51-64e9-4299-9ce5-cd1caf7e1640"}, "727c6b32-f33a-4d08-8bb1-f41cb2d548f0": {"doc_hash": "bff287c44b0d4af6d0542b5462f00245ddffa6709229f60e469d13425769ca0e", "ref_doc_id": "81be80d5-998f-41d9-ab6a-ee3fab82376d"}, "f70d7963-5dec-44a6-a4e6-6e00bf780324": {"doc_hash": "a241cb25ed35c4a67f6e00bcf505156260199d51c328aab324720679fa53f861", "ref_doc_id": "abdef5d3-428e-4fea-9fd7-4cdc545d6279"}, "34811b98-a69b-4cbb-beb5-186349c293fc": {"doc_hash": "7347a5e5551e692521364ace23988bbcfca8d24abe50c08bbc2a0bd03be4a614", "ref_doc_id": "37aed677-e086-4271-904b-a606a0dcb7aa"}, "a094a8a5-4672-494e-bf7d-efd7ab21efb1": {"doc_hash": "b426bb7b4e4f53d96545d8b7d5c233ef69c0aed4fec0e7a6777399b0db1379d6", "ref_doc_id": "e1c94b78-69d1-40ad-96e0-6ec94387783c"}, "f66ce18f-1d99-467e-9fee-afd218a1e3f2": {"doc_hash": "f90c2db249f18ab272153a6beb58d26a430141d6eb3cad1078244b6c3dce9900", "ref_doc_id": "77e07e37-b2cd-4732-a886-fc772570a67d"}, "a18ee8b5-0db4-4f13-9bef-57088f4885f6": {"doc_hash": "65262f996be3de59d3e590ed38ff7ad11c653089a82a141b5e48ca00a4afb737", "ref_doc_id": "7ed3fe8a-c38f-4813-be80-e9d2cba5806b"}, "dba651ce-a492-45bb-9ea2-f05663fd69e6": {"doc_hash": "764491b508b6e2bfccabbf1189539b65df55799bebb88cb2543b60cd066b0417", "ref_doc_id": "0add5296-1b8d-4130-bc12-d133ba5cd9b1"}, "125f1fea-ecd2-4160-b42c-562ee80aef29": {"doc_hash": "1de8b1ee04d543b33fb9a65622961e0788201c699d386e330e977ab5624c5d0c", "ref_doc_id": "95b6364a-d7a5-4909-aea2-c2ab0a38cfa4"}, "31ce3b09-ba42-43f8-9580-afa01eb096ec": {"doc_hash": "b425e2575d93975047ae100f62884a1dbf3813839df006f102d994269a8b8c26", "ref_doc_id": "1ffdbc0f-60d6-4471-81b9-778583edce0a"}, "a0b7fd74-f42a-48d4-b82b-657c6077a807": {"doc_hash": "b81d3b4b9cfffcd7854e9faed51f5c2d0bc3000d29d50ebe216b71a9b85de139", "ref_doc_id": "cd11aa56-6894-4ac8-850c-cd4e07f5e7f4"}, "56e6523d-95d6-4875-9c8b-3ce27c41ae11": {"doc_hash": "6a531f43e44bac0f481585c0bb1a612f7a17287dd05ffc1ec07ef939cdd2b7e4", "ref_doc_id": "f3869f7f-773b-4ed1-af20-745541a65cf3"}, "7ef741f4-336c-477f-83bb-b294d5626b4b": {"doc_hash": "4121462b976a13d9ded56f49a4e1e87938968872a8b2cbe537381d17f7cb94ac", "ref_doc_id": "b1cd9866-45f9-4c4e-a0fd-407335233087"}, "1d3429a0-48ce-4c80-8216-75cd6b35cc49": {"doc_hash": "bf06df397aac298d489816a9c725805249e11e19c20dc634b08ba3adb337431f", "ref_doc_id": "50bfe027-7fde-4256-8a8f-6530b79d1c23"}, "98f55fcc-1bfa-496a-a9b9-b7dedc23b745": {"doc_hash": "2690a4e0f5283135edfc266d602a818f55b04f1177a288a9555e5550b5d23681", "ref_doc_id": "ac243e8d-15fc-4511-a866-40afac1af97b"}, "dcdd889b-0de0-4bc8-97da-10b3289e1ae7": {"doc_hash": "db285245666093d1dcd6490480e7c1aa3de614f1a5d442b336fb9e8d96551620", "ref_doc_id": "e6c646c1-2ef4-494d-a3f6-6b8d727e871c"}, "dd969051-2c68-423e-b3b8-fc29bdf85d7b": {"doc_hash": "0edec6a5ec1c4b62ebfc7d345d430f67e374b8f8814073b3a90b4edd9a3ff79d", "ref_doc_id": "63316569-3b76-4665-8494-4551c6f1922a"}, "44e9e93b-1b7d-404d-9c7f-dbc24b7e4768": {"doc_hash": "0dee405aafae6af6b419c059978545e75b5a1598072cdf7f7a1fc0590998f926", "ref_doc_id": "5f29901d-aa5d-450a-a182-f72f538052c1"}, "641a5d59-b9e1-455c-8b6c-fe60d43eba5a": {"doc_hash": "bb57a4c28981b081ebfa1275bf3b1fc5855606278fb5d0454e4a69a255cd7c66", "ref_doc_id": "db181862-db39-4ed7-99ac-d7466f434869"}, "3f25189e-2fb3-44ff-b846-0e5686b1f026": {"doc_hash": "93ba8e0eba8a6d7383c30d5ffa9a3deba39e44878ac47e50759b74b7d4caf85e", "ref_doc_id": "b5ff7607-df24-4852-8852-d3afc86a8a3b"}, "69399ecb-c271-4888-ad54-ce34d9e2430f": {"doc_hash": "8edfe55d619ceead5ab389cb3b8e0f4d4350f7ca0c04f0c12dfa33e924ece7d2", "ref_doc_id": "60cd5f08-107d-4329-81cf-d51342a07f69"}, "e2061dee-dfb3-4eb9-b52a-9854acf1014e": {"doc_hash": "618d551f3270f9ec03d119e4a194f1a4bba942723999ba97869f223f249f4431", "ref_doc_id": "64bea22d-3e50-420d-86d8-9dcf653eb23d"}, "fd13b1aa-1977-4d23-b5c2-5c68ddab716a": {"doc_hash": "ba22193d741ffdacec6b6bf31b1ebde2573d703bf5f6c020faa0bf2d67927798", "ref_doc_id": "73d9f7fd-a86d-481c-858e-d4dc08cbeb3a"}, "ee8dc55e-e6d0-4e98-a3d6-1514bb0e67bd": {"doc_hash": "65e1b2086ed5e1e11aa61d9059c8baac58e380b94a3dff6e525a0b330f1a9be0", "ref_doc_id": "e49c6c0b-77cd-4be3-a717-4ec881a0db35"}, "39d0399f-da88-490f-bb9d-cf411d5a5ad4": {"doc_hash": "f6d820f30494b2458c36762fc3658299a98d555f017d53512582a48fd2c8d3ab", "ref_doc_id": "e37905a3-bbe4-4503-b523-9ac5ba2d9792"}, "a7ed48c4-3d8e-43d2-a566-878d1d82bb85": {"doc_hash": "e450507fa620e7717b33837ffb35e5c10c351659f449193860d02e2f1062efb1", "ref_doc_id": "7297be4a-900b-49d1-aa95-bfe5665d9488"}, "d2a4d039-35ac-460b-a02f-e2c52a7e8311": {"doc_hash": "4005654406b2b432a0f406b9944ab9ebfe097fdc1b5782d522fd246b51520485", "ref_doc_id": "03c7634f-b13a-4dfe-9584-19d7bc330c95"}, "24d93c13-5bee-4c8e-b08f-77f0af1f741e": {"doc_hash": "2c19e116a5cd24eae2abac916a5acb4b9ed5c054f63a54cc76ece29bf554ea0f", "ref_doc_id": "974e4510-bfb4-4ea9-93c6-8a614669e5ea"}, "ef55a823-859c-4c70-9fd9-0c8feae2c323": {"doc_hash": "ec78a5227e22b685d7c827da30dec947cccedb371ee614588dc35316229fadd6", "ref_doc_id": "9c21095d-98a2-43b4-92dd-aad65e99a689"}, "340ab151-0b8b-499d-b782-fd62e3b84816": {"doc_hash": "87d71f74223403cb716c39cb1ab1b45f1777d17f1801488a10a7efb6dd53b11f", "ref_doc_id": "212e1ac9-db25-433d-b0cf-301048c40f46"}, "67530245-52f5-4bdc-b6ef-43e0119e4809": {"doc_hash": "e281b911895139c1264fd7a9de5bf39c107e56f1e17e6aa3f4c6c7c83c8d0fd5", "ref_doc_id": "4dcd1141-e605-4ee1-a460-94978babb1a1"}, "0a849ea8-f07f-496c-bbb7-f019d4d65747": {"doc_hash": "b7fd7e2a8537e7fdb31601baffe191e5b0d98ac9dec90c952ca572529e8a4398", "ref_doc_id": "4ed38a1f-62e6-4ec0-8539-3c51552713cf"}, "a25d138c-76cd-44c2-b948-344bb3161f19": {"doc_hash": "5ad8ca8520ab7ab660b484b33cdc38d422d476f9d0f62674e8b5a972d9fd399b", "ref_doc_id": "ceaa4f17-8948-4dd3-ae1d-a276e481a07a"}, "f025f8b9-23aa-46c1-9265-53c4a593e462": {"doc_hash": "51faf02b05c031d53bd78ec393d4fac03249fce4f49716d215bac68c024c5578", "ref_doc_id": "fe637f62-1799-40a6-a0d0-a433cc652869"}, "dd587f43-e4f6-44e5-8b39-d17f5e047167": {"doc_hash": "923b612153de698e59ace740c4ca3cf42d8e8ffb03c7018b90aedb5cdb7fc2ad", "ref_doc_id": "b5533b6a-8a4b-44ca-9805-ace99f29d4f7"}, "309badbd-b786-435b-a554-ea35a0445f1f": {"doc_hash": "4a2cbdc3dcc9a3b0c9aab901faf8e5fad8f6655fb0005db6aaa520a44a9996de", "ref_doc_id": "f8cfb095-26e5-456f-bac8-70c3ec1eeedf"}, "010c88cd-61da-4343-ab9b-98fd4253ded4": {"doc_hash": "7bf716bdaa4ade0e22eb4a56ea244551886535332e9633567b647eb597d7a567", "ref_doc_id": "983ab04b-67e8-4a36-946d-4ea77a69a0f1"}, "9aad4da4-9bfa-46c3-bdfc-91c4f0bf3ad0": {"doc_hash": "daa45afa85419017d9f94c1216aadfcdf1d9bf0a8f6cff6b3864ef7385df3dd7", "ref_doc_id": "b4d7d2b8-9b98-4034-a73f-c170823c42c7"}, "72307c78-e8bd-48a2-a763-8cf63f5f8a69": {"doc_hash": "6ba7b413345a236d8668d4005df8b45c1c0af18a206aa6ffbebf00d43dc5db52", "ref_doc_id": "08f96ec4-fb60-481d-a092-ad7f2c318769"}, "a57fe735-1341-4b71-87fe-8a3ccda462c4": {"doc_hash": "8be8bcf7d04a07339e972ab054aa3554ead3598b20615bb0b0880eb62e3c6bfd", "ref_doc_id": "43e3f5ee-b6d1-4815-85e6-dfea6d8d3fb6"}, "3cb578be-fcfd-47a4-8d14-566b168c936d": {"doc_hash": "f442a2a3fc45d77dbec9f7f385ea18019a135788b8379afaea0856a4faaa5431", "ref_doc_id": "d88ac874-a14c-49ab-8ad1-4ae556169cb2"}, "9ff8b60e-9d79-4fd3-873a-a0f9f42040d8": {"doc_hash": "2f2b1a80008e20bd516c63e0d5beed13035c2a594c5ed5bd5212604dca749517", "ref_doc_id": "27dae3a0-8bd1-4ed4-afe7-89ccc2ee3bd8"}, "eefd07a9-e331-41ed-873d-dab50ab38e84": {"doc_hash": "6615ef7a75b41574acc6f8d2cfa9ba4d7ced4c73a38aa34fd0d4d5d816bb86cf", "ref_doc_id": "ecaff489-ed15-4e3c-a4ee-c62df85b0115"}, "4c90276f-3741-4195-bf91-7a0009dbec0c": {"doc_hash": "ba52cc1b162879f17c5182dfb30550df3e11719642e96328010abd18a4200cac", "ref_doc_id": "99d0dad8-8b01-43bb-a5ac-16a95ba5e308"}, "a17a7264-e379-4658-9498-5087a9eacfc0": {"doc_hash": "520b35b30cb6a878c49070cbfd05099e87eb843fd6783867870cf80fdde4101b", "ref_doc_id": "1d7150cd-1ef1-4770-a987-ff33577db69b"}, "9a59f9eb-4b78-4a1c-9f8f-408a1ad8b731": {"doc_hash": "057b2564646224b46f5f80e60c8dffe7e6208fd8efed404fa2b540f43ee73652", "ref_doc_id": "2cc697d2-4711-402d-957a-10d5d790034f"}, "6c1ae7ba-16e6-418e-b327-c561ff572241": {"doc_hash": "c1fad44705315ef98a97c0bdea8a52d3cdd1ebf36035f7cdf98650177566dce9", "ref_doc_id": "de3cc56c-4e5a-481e-908f-1cf5db7ca40f"}, "1d2d8400-5795-4ee9-a4d5-a43b42c44466": {"doc_hash": "d7fb2c71ee11b38fd3d0bf72627657ac542c684265373051d69f4de9da2bf1cb", "ref_doc_id": "61e899e9-fcb7-4eb5-a5e8-8b488c3b48aa"}, "e475a362-0834-42e7-853b-35a859bf42aa": {"doc_hash": "03b2dd82adc24fba9f5e6939e0d757d63f1649ffd2b3548f7aa9f66b9558959c", "ref_doc_id": "dc42eeec-07f0-4260-9648-92022f23b934"}, "7887028a-0b94-4255-8d82-398865b03cbb": {"doc_hash": "b8c12df69bdf1a66ff1a8d31d49d3a661ec0b367c5b7f5ee2d980422d5ebe6a4", "ref_doc_id": "2d6f6dc4-9239-49ee-a327-4620e107c5a4"}, "441169cd-79a8-4747-a8f1-d3ccbe7c3983": {"doc_hash": "d0824fc2fc7c459a9e036aef6777665aba011e812e62cffcdc196560fc6a2eee", "ref_doc_id": "7ef4263d-1325-4048-a905-62a64a3d7ab9"}, "da145994-5479-4a14-97f8-9e967dc3cdb2": {"doc_hash": "ba2ceedd2b36d5904b226324f368edc4c12381675ec7a844567b734472014ce5", "ref_doc_id": "1f54a417-197d-4080-8e1e-f4172db9d94e"}, "98a7f29b-5f96-41f1-872f-2d9488b5badc": {"doc_hash": "c98a09d7e914e58dee2d31e9bef4fdc72ed4995a3bf98128f88625d4cc2e57b3", "ref_doc_id": "2744d87a-830b-4a99-92be-da71acacb27f"}, "a154d8e1-63f1-4c65-b257-ca5369581e6a": {"doc_hash": "d90e5833888fdee5f5a3faf4f68f25f86d413998fcd8f66e119b4b9cc313fb3c", "ref_doc_id": "de584ebc-9a47-432d-8088-0891090c9326"}, "c0a54561-1c4e-4598-a9cc-6c2b50ea7793": {"doc_hash": "908f338cea95ff9e99ab0eb863e1d76b608767c997a4d25820b5ae28e4d72449", "ref_doc_id": "bb0fb027-0140-46aa-b131-9bdda9900a4c"}, "3b480466-f5c9-4c6b-83e1-e3e76b10a1f5": {"doc_hash": "05aad936dbb5218f154bf0a202b98b6cb77d9b6f1100dfa7b52f1790abaa147e", "ref_doc_id": "e6aab538-4312-48cd-87f0-4ecd9a6ead88"}, "1fe03dd9-261d-46f1-a74c-bcc245eb9e69": {"doc_hash": "92340510b5990515cabcc1e687f201a358ba3ecdbfe70b609a5b6e2263843232", "ref_doc_id": "488aa055-3487-4e1d-a7e7-0869b5781714"}, "69f0241a-6d54-4135-a345-fc495d89235e": {"doc_hash": "c3200e062a9a5caa373f3cd401519f77dab956389f6c0c2817425b5b9bc7e3c5", "ref_doc_id": "5d10a689-3e5c-4979-829a-1683965e4874"}, "50dcf67c-e110-4de1-b0f8-0e266fc077a1": {"doc_hash": "95a4986200e20aac0c2703b4d74b850c4c6c65c6b5a75a20bfe98e60b17c3e67", "ref_doc_id": "f47cb18d-6619-42bf-a272-fbf30b7fae2e"}, "0c6a8010-2b5c-4504-a504-4e8035030e30": {"doc_hash": "b17d1b8105a4cb92a87a5d48a8f054ef6c0ddef8f8b0f6adc25df16d0b16b067", "ref_doc_id": "a7a6e0fa-4f38-4872-bee5-7ea7dc5bfad5"}, "dbb39311-9340-4697-bf79-0bbfc54c819d": {"doc_hash": "380bae4a81d89c7f35672576926a9f519244c561ba8b1eaae6b88da6c5c81079", "ref_doc_id": "8a689760-a3e3-4751-a089-b60c342b53d8"}, "b904ab90-84bf-4a97-8d40-e6017b8a269c": {"doc_hash": "cfe26fddf5b6c84d05ec0089aed48d32bcbab1c45fb41ef767c16cb8966873a2", "ref_doc_id": "b9954fb5-57e1-4429-abbf-926d5b0a1581"}, "4937198d-9ed4-4cc0-97ad-077eedacefab": {"doc_hash": "7c9fc304632653d9425d2912981f877a7dffa4f7aa5e7700dc82348af815a423", "ref_doc_id": "9ab673d5-4f0d-4d95-8f00-ec2f69e6b4f1"}, "d5fae3ae-8786-41c7-a120-01466abdddd9": {"doc_hash": "34ccc8c91ce61a31109fafce47592baa85499b1733f7f2443a7a7d1b984bfa9c", "ref_doc_id": "fdd76871-255c-4da2-8be6-fd9ad384ac08"}, "f8b68945-e0f7-4b64-805a-093d57434b6a": {"doc_hash": "0b32914d1163bb14b989b1d12a19cc8a1052c2efbc3b85dc96984f6c7f1de798", "ref_doc_id": "0a70e06f-f672-4459-b54f-7cbb1f07e74d"}, "ab3bcd9d-fbdc-4e9c-9cc6-d9ef60b19ce5": {"doc_hash": "a10cd90bba10e023d83561dc96e22e2da23838963cd0231ae3b83b84bebe8bdf", "ref_doc_id": "668ce929-808a-4a41-9018-40cbda109732"}, "324f2baa-f815-4501-a020-2e1e49afa0ea": {"doc_hash": "a7760a6a52115bc95ba4d6a8605f1d310d52c1476260520c05289ff43e8b0c52", "ref_doc_id": "acd00401-7781-4ade-8aab-b522831a8b56"}, "62f0bb1d-a719-407c-973d-76de9b69c920": {"doc_hash": "3ff48d521f9516611169a59687148e5b175cdb63e058101bb7659ef1fbce34b9", "ref_doc_id": "d0054dde-962d-4504-928b-7302bbbc16bf"}, "1d69ba55-5cb9-48ee-bc23-f441e4a88ce2": {"doc_hash": "a263b9910d536dc806a4b97cea662fb182132eede0948f91118a94d37345735a", "ref_doc_id": "7e486aab-be09-4ba0-b73f-ee840e454b37"}, "974f9fd3-f1bf-4174-9ecc-54ffa2d73809": {"doc_hash": "d135ae9558664aaeadd52b1d21d3527c7177d7c4864c839f4b1a44d0802ccd88", "ref_doc_id": "4343fd10-09cc-462f-b2a9-a73b15546b41"}, "e898ebd9-7ecc-4fa7-9f87-c5c1a85e1d52": {"doc_hash": "f9a61911e483cdc30f2a516b98133cb0f5e103dd0df617c5665ca368f2acdc14", "ref_doc_id": "6620ff71-ec7a-4163-a83a-952c9ece79e8"}, "038b493a-e2e9-462d-b4ba-b006d99ad790": {"doc_hash": "ee4a756c8de4a136d8de678beead0ce98c771291ec16afefd515812a3f0cfe2a", "ref_doc_id": "47b1c884-3400-4a75-a5af-eb0cf3a3ac52"}, "b288d748-8130-44aa-bd83-eeb1165ac8f7": {"doc_hash": "36c852dc0099e09ec8b93b6a6b08575c906c997a81aff83750f99515bae0a205", "ref_doc_id": "f44ebe39-9cd9-47b7-9ef6-983f891afad6"}, "2463ee44-cb6e-4cce-8e13-a47f718aa5a0": {"doc_hash": "016ab7ca82e9250a494431db586362537c73235a9e09b7d1848ad239a238784e", "ref_doc_id": "bb8c1c8d-f3d2-4e4f-8a5d-f203220203d6"}, "3039769b-7aaa-4027-a08d-9813bc1d6a0d": {"doc_hash": "d390aaf183727c98f3d3764b77a9fa2df0414adc9afb25b49f591de9e770d0e3", "ref_doc_id": "2195ee9e-83f6-4e5c-be4c-04088a756822"}, "eb50b032-681b-4346-b511-b5b143b55ff6": {"doc_hash": "ed7be5201c72a582887965e4ca94a6da3c3995f4c6ac6a401651a093a2057c1b", "ref_doc_id": "116783a5-5cb5-4bd9-96d2-cff32f4fe96d"}, "29bb055a-f051-4fb3-bffc-3f195273c064": {"doc_hash": "17d86f73518d8a11656adbb4d19467051a635c465a1122adf531773762e4db1d", "ref_doc_id": "a707d493-9ad4-47f8-8c8b-9b324506b59b"}, "4bd5cf00-6a46-45a5-ad4a-45baf71bdb0c": {"doc_hash": "69b6f4708a380e3bc1376f6e7a052169d319372133c74265f8ee29ece5222ea3", "ref_doc_id": "7cf7f319-12bd-4989-b6a3-ecb0949e2940"}, "db2799af-c9d2-498a-8d46-48532e811bdc": {"doc_hash": "b987f9996893795c6e65092e488b50b369fc944a447ece15a8d845ae6f051bcc", "ref_doc_id": "a6edcd2c-d264-4153-942a-d639631a44b6"}, "c5445de9-325d-4d10-a64a-9bcda9d0cd2d": {"doc_hash": "cdd0b1fd7774e2ae066fe4b6200851692a4ddcab090120e7c824575521e470da", "ref_doc_id": "5571003f-d1d2-40c6-be76-a41e15e9124f"}, "65588dbe-99e6-4d7e-a2f3-91a6b8005bf9": {"doc_hash": "4e02aac7ec96be00a1ae1256e9d36bc09ef06c081e6bda0db44f1d6aa7fa02c2", "ref_doc_id": "19bc2006-e9eb-490c-a456-8da3a233b442"}, "7f1dd914-0404-4c82-b8ed-4749428830b8": {"doc_hash": "d844d99eb889156033a3762b470c17aa9dd6d362a582ee13a26308a0915fb1a9", "ref_doc_id": "926671f6-ac12-47d7-be0c-f47fda757874"}, "f30a5b7b-3c79-4539-8dc8-652400b0714b": {"doc_hash": "2301eee7075908c4e635496f17eb04ddc3ea631c34bf56388ea1a5deb3bb01e7", "ref_doc_id": "361cf11e-c878-4cf6-97b9-2745a0718f08"}, "acee3dc3-fe15-47b3-96d0-a6f9727f2e25": {"doc_hash": "050e112370e7b5afa3ddb20b4c30d68e09af4b9c6af73963c3bae110f49e2621", "ref_doc_id": "5042df36-0bb6-40e1-af37-68f5d7f30cf3"}, "562ad8c7-e484-48bb-9f59-aa18008db7a0": {"doc_hash": "af826a12c96e68c7317bb761d7f784abc55b1ee48d660397538483fa5234ce6c", "ref_doc_id": "83e5e892-eacd-4a6e-8e03-ff1ddc99fb6c"}, "c8c6eb3d-a272-47f1-b771-a9e5bed93987": {"doc_hash": "748255ae41d9dcf5625f0c5bbfb6deb80cbdb64acd088f67fe8259cfdeffa798", "ref_doc_id": "3b445937-e17a-4b82-9292-7ad1e406b0b0"}, "90b1e3c6-6d27-4225-8f4e-508549a6e70d": {"doc_hash": "293aa323d9081bee2b507499d95ee3fee055af36ead5ff1c5a34df856e7d4b00", "ref_doc_id": "580229bf-4f29-43bb-a674-bd69576d59cb"}, "a3135961-0b61-44c4-bd34-0804f4be101a": {"doc_hash": "37ecae62cb72c401924fa4110e339531ce448a7ffc5cc5668a82591af493cdab", "ref_doc_id": "1fb69de7-54f6-462d-b89e-fb70ed6c8d8e"}, "79c6d2ec-b1ac-4b7e-822d-93ba7153636c": {"doc_hash": "5ce7a97b8b8180739f748dd56b011c25a28a246898f1241098785e34509a049e", "ref_doc_id": "acf05f67-61dd-49b4-8450-f0eca4c1058a"}, "5bbf2e89-204b-44a6-b66d-0c8f040c0225": {"doc_hash": "034ee57fe7aace3a0f70cf382e3d473846a20960a6732df66dc30bfe09c967d6", "ref_doc_id": "130a9c53-9619-4c38-9433-2a90d0de7708"}, "ae897e90-017d-4c3b-8515-95fc1b5197d2": {"doc_hash": "1ba7af2010419f5dcea3c4b5ec97cd6fe3cebf193e4a57743950411f1e91140c", "ref_doc_id": "69dda942-7d64-4239-9131-b8187003f4c4"}, "168ae92a-43e0-41a1-8339-39b8dcd1a23a": {"doc_hash": "3f1cf80609a7763ebc3a95818fe6be05af75a7651feb5246fa292cd6ed4835a2", "ref_doc_id": "d3c9e89d-6945-4b1c-b46a-01f7fb781d4f"}, "fdb7bc39-76f9-4435-bfee-24998b4f411d": {"doc_hash": "62352251a797d8ecc7142c55d02bc5a80edb0d334089525b157a7fdefaa5b0e4", "ref_doc_id": "645d4922-107f-4308-8b52-55e2254f39bb"}, "d460ca9a-51ce-4474-b484-dbe00f24df8e": {"doc_hash": "fb15a771b9b2cfed5c1a61e47c81d67d6580c88014f198b5f0fc1a063324ff74", "ref_doc_id": "3c5b6292-e20e-4f62-adf5-7bc0ab94faaa"}, "e0d07d73-29ff-4dd9-80b2-fd5aaf1f73d1": {"doc_hash": "23a79b2e07537592c7b2571419d216c0e99bd2e1c3807ee1d677124bbf8f9711", "ref_doc_id": "37157804-fc56-43ae-ae1d-bfbb289348a1"}, "68164e8e-015a-4f11-8a5a-b68a4da0091b": {"doc_hash": "dcc16f161854800c2e276758765ce8301f5fad1937e78d4fa4e23cc97622075f", "ref_doc_id": "0ab62c8d-49ca-424d-b814-bbc3378dc575"}, "c7b973e2-d0a2-4755-bda0-2e14be17ec3a": {"doc_hash": "4652ef9fb62cbd2d91c86e6e0ce1c97f4e315a95df016820f5cf9b787e49ab47", "ref_doc_id": "f2fdfe57-4637-4278-b059-6e5e4f56aa8e"}, "2821c120-03c2-4865-8e13-299eae9b27c4": {"doc_hash": "1b35190ad0525e42822bedbe8bf1fc6c22057238f16d36e4443209bbbfbb6090", "ref_doc_id": "38e25a15-a7db-4153-91f6-755b97544155"}, "8cffb380-8fe1-4dfb-a8c9-1b70d0406c8e": {"doc_hash": "8186aa69c9de5b2ff302bff6ebd568db5a8e30f2757ecd9921561e97c5789740", "ref_doc_id": "60e90f29-7843-4147-a63e-92565f38a1ca"}, "2d44158d-1b53-467f-b0ca-ab427aea5ed7": {"doc_hash": "a987a897f58b1ac71347194aacc07c63c1d4a452bd4ab6b6286ac0d8ef4afd13", "ref_doc_id": "2a4ccc4f-351f-4add-941b-ffd21416f045"}, "9aa2f123-10e4-49ce-8a24-629a49712e1c": {"doc_hash": "0cf661a6f3aa5b30672771af7dacfb4d0d892d34464aa29bf78832c70d34230a", "ref_doc_id": "35b5b5b1-d9d3-42dd-85fb-03c1405813d1"}, "353fdbff-74f6-4912-bceb-50680b172845": {"doc_hash": "8168671f47d44b36a4fa4c4cc9cade2a14d4cc8ee421cb167051126aa4ffa4ae", "ref_doc_id": "26f7f149-ebe2-4b9e-8b37-6456bc241098"}, "5a469d83-2abb-417e-922f-83865b1e841d": {"doc_hash": "7d8f196f247366b08d51a9118920bcd2bf80c55c9d5a8268cfae39febc80a0c8", "ref_doc_id": "180662cd-586f-4433-8f8b-701597a03986"}, "14277149-1f6e-44d8-a191-9e487ad3b5e8": {"doc_hash": "06d6bbf68d6bde6260b35ebaa5b8a295e1c42586e5b4674c5e53a83956ea3d4e", "ref_doc_id": "53d101ec-8d06-4471-b4a8-bf3518b5e408"}, "d3acb30d-1620-4b60-969e-a0344d20461e": {"doc_hash": "bb957f3b0840de2498e3ba6e438a633db576568ee6ab04022c80938ec8ee0fb7", "ref_doc_id": "5e55ed64-a12e-41f4-a877-24a72f408e40"}, "478f1dfc-676f-45ff-880f-bd8ece0b5749": {"doc_hash": "f47d3e6deb7b4817b9ee771b8aba69bac5213d0faf9e9aabb4555473da905932", "ref_doc_id": "6da38436-e4c5-49b9-8281-b1b54d280f63"}, "b34842b8-bd59-4ce8-bdb2-821ad1eb3187": {"doc_hash": "932885539ca3a6002ea97a26620704779a7388cfdd7703d3a4e7a69758a30c17", "ref_doc_id": "e320b2ea-20a0-465c-8f04-76ce3fb7d661"}, "457229bc-778e-4ccf-95e4-3b21c1c893d3": {"doc_hash": "c3e089e14bd5dbbe90542ca9de326fad0cb43f4316544b790ce219b555889cfe", "ref_doc_id": "c2a1bc35-c564-44dd-b54a-60158f710ff5"}, "c04472d7-dca9-466a-aece-32962858a20c": {"doc_hash": "d9738e90806c28705a2b8c57b68c61a447a7648a6b1a759cbdbc99f35f9ff642", "ref_doc_id": "4d3f691e-1e21-4f01-a909-e77bdb2b6240"}, "b8d29b57-0d6f-4cee-a0cd-41428c3402e5": {"doc_hash": "9b07502bc387027610b170465a7afeeaaacbb5dc7457df6d5965c70f1ea4f192", "ref_doc_id": "3b3936c0-fe8c-4fb5-8fa4-84849a146193"}, "18ed91c5-0619-4dcd-8661-f83914839797": {"doc_hash": "117d20b79279c5da08d3771aee89508d22ca3269c1b3bc7e610bb9e4c5c570b3", "ref_doc_id": "4d81fecb-1fd5-4c2b-a297-fc561c2598c2"}, "dd19f305-fd3d-4238-ab69-c872b59515b0": {"doc_hash": "c72daf2f85413fe778fe305a8a150ca8a455bce5e82c0d88f2d6eca3181200ba", "ref_doc_id": "47d9209f-8c95-4be4-bb06-3376616f67ac"}, "810980ec-5aa7-40fc-bd7a-426be96b8b52": {"doc_hash": "11b75ccba6b63e1697941f9e750ccca996ef3396a81e83a286d8b82174810a87", "ref_doc_id": "c4abbcaa-74c9-42eb-a458-0f7690fae938"}, "5fa54e83-16cb-4423-a18a-e9e0a0b83b53": {"doc_hash": "f8a5f8bc8b39059cc425ae1da9d291282f946c89c8421bed7f605b34204583fc", "ref_doc_id": "8b88db01-dfff-4858-9256-58238854a602"}, "c7934a28-ff59-4db1-a18b-a035e8a5610d": {"doc_hash": "6e3369ce6459c27f1ec91ddf499f0531c34be1bbdeb32fa5212bd72e68e3ab69", "ref_doc_id": "dd91ebae-1b65-4a78-a68d-7e8dfadea34c"}, "cee0b913-e028-479f-addc-28c579ce5856": {"doc_hash": "d9950fc1b5f08e2da1dc402b1abcc2f9bc2bdcc54c2c3d662292f5c85313b28c", "ref_doc_id": "ab027658-9bc7-4f4d-837b-7c928790ad0e"}, "7b8a75d2-0f2a-4ea6-ac3c-6b7065051eb7": {"doc_hash": "a8c538407bb1c6c76dad162e6a9c85b1fb1b66884b218a00d5089c0f96d4ec05", "ref_doc_id": "14c9f2c4-59c5-44d4-98be-aa55c9751292"}, "61df2aa3-2a27-482f-90dc-57ebbe25fb2b": {"doc_hash": "f27c73b815b7786e8f904e078b317ff6f267ea224500b5fc0390c5522c85e5fc", "ref_doc_id": "73bb6197-9c8d-47f1-a31a-8cdf7c2bdf0c"}, "c77d2aa1-a80a-44e9-9f2b-61a007e7bc23": {"doc_hash": "d3f01db99adcc23456469ba7fb5acef7f8af28efbbfc0a22e58b001d6be2d09d", "ref_doc_id": "3278cdb6-b55f-4e74-ba79-0b5bac83641d"}, "639f1c2b-46cb-4d2d-87c8-46cd38b98e49": {"doc_hash": "58fd0ffc8d5513e44827a36038d7c1aae0efeb662a1fcf58ab0c0726bd658a5c", "ref_doc_id": "e59462b4-48eb-49e2-9e9c-1769969eb222"}, "9ba96875-ce38-4602-a922-ef81399efecf": {"doc_hash": "89c1bb3ec85c86cd214c41bb0eabc291e12f214a9a485690c363b03cab1c3f19", "ref_doc_id": "656b5ac6-b0bb-4abf-acd6-6b23b159527f"}, "108a1d20-0022-43e6-bfb9-3836ac1dd01c": {"doc_hash": "a6f0687e70eef4e72274e57162f67897ecd42aa41a3962c606dc66a18f418b0d", "ref_doc_id": "fc924c44-3a7d-4de2-a939-d9399cd8201f"}, "1316b434-65e6-43f4-858c-03f79088ac36": {"doc_hash": "4161ac9608f172a6ac3e0ccf371c9172eda12f3302a9bc475ebe32e446871e5f", "ref_doc_id": "408738cf-5961-4a35-8b16-dcaa0fd7573e"}, "255b5480-4863-416a-8d39-c71bea4d53f9": {"doc_hash": "126484486048487796ca064eb5f551a7dc022433c4a8d8b209e4c1cf508cc511", "ref_doc_id": "1bf88250-ed8e-4388-a07c-ebb14a2c63f8"}, "551ac993-fa69-4460-8691-4c3091e80dcb": {"doc_hash": "c1fe780b0f1aad78bd3d67d789ed5aac5bc274f05baa5fded294303e77ed3bc3", "ref_doc_id": "5e715fe5-7fd0-4004-913e-f446ba52739e"}, "2bcb0018-d454-40ed-9fe8-1408f5f929a0": {"doc_hash": "43b363b55a785b43de7c3605b19a6d9269af49a2066c1ff434bd5a9193bf8367", "ref_doc_id": "822a0e41-4f50-4dce-8227-ec9bd66bc24c"}, "4df665cb-40e6-40fd-a96b-220a4b033f66": {"doc_hash": "1691c2d90eeeb4fbb8c02cb317da4832c395273e371ec477e456636db878dcfb", "ref_doc_id": "04b967fd-6171-48b3-8e9e-0b1226225845"}, "b3008d5d-0066-4c9d-b97c-323e6e172242": {"doc_hash": "ef161c620b7a79311c132afdd2f77dbb64e6a1707f103cd38eded34cfc9a77cb", "ref_doc_id": "1409a894-acb4-4e3d-b3f6-426a121e084b"}, "501d0c63-8678-423d-8c3b-c65a0221422c": {"doc_hash": "f24696ac9a48116b3b6c9c23e280003ff2553e8c09be0dcbd0fce557012859cf", "ref_doc_id": "e721be0a-8938-41d7-863f-c2ce53055df1"}, "eef024e4-ccd9-4d08-9caf-95c6cb151fee": {"doc_hash": "cdacfd3e0530ba639d8ccc90611cae700464ffde0277c27695ef162ee3e8fe00", "ref_doc_id": "59992cb1-3f92-455a-a9bb-9359151e1df5"}, "f5130cb7-5a2c-4d8f-9447-c03ebf572b07": {"doc_hash": "70ced2bcc6d73590cde00c050921d55f8a692c985eb72538d5d535e8ad05eefa", "ref_doc_id": "f7d02df3-ad74-4b78-a60a-3104888be595"}, "c1d038b0-6e47-4bd3-951e-e433bce2658e": {"doc_hash": "4e3cc046e538d58d17d67d4ff551e677e68191e00c22a0bc7727a64af488e822", "ref_doc_id": "aa539f69-a0c1-4d87-8bd8-60ff27d97fa4"}, "b0653539-b9ee-4ee9-be87-63ecf10b25d8": {"doc_hash": "e7b8138ee2516a0c496349e5a74989de8903fd84ebe24a2466a2d7e6fa79d0b2", "ref_doc_id": "101d21d0-aef4-4830-8eff-d57dc6adbc48"}, "8a9ee3fa-52c7-4940-80b0-a76f28ce5e08": {"doc_hash": "b3d3e3ad1d4f103da1689d4b632b5479dc2fa32f6a945638622ef72edc5028cd", "ref_doc_id": "f16f4403-f6a1-43db-85f3-0baef188f588"}, "a837da05-ab05-4766-966e-01a56dbf94be": {"doc_hash": "a4c5fb817e6325571d4995538fb6b57db2f84765469aab32344a369f36ac3245", "ref_doc_id": "ad296c6a-4c20-463a-b9d3-1a562157c072"}, "ca7c8f71-d54f-4233-afb1-4a26b48b4f2b": {"doc_hash": "b2c36ee2baf33385b2cbbe55d73b2540b2fc5bb0c681a297940ce9b011a9ceea", "ref_doc_id": "1aaf8a50-879c-438c-802c-85afc1ffc962"}, "b06a923c-e90b-403e-9089-38f373915c5c": {"doc_hash": "431593754177bbf33e96077490a8859efc29c3040ee94eb551e87b31031501d9", "ref_doc_id": "f52ac9f2-41af-4046-baaf-f867e5c275ee"}, "03bc10d7-aaaa-4103-8683-1973f5b46697": {"doc_hash": "503cccab4fada335ce868f5e0e6eb711800d65b965432045c909514502d3805e", "ref_doc_id": "c5ee0cc6-fd62-4f11-8173-bddf58ef3426"}, "6d05b220-2621-4d0a-b0e1-d4ed97308e16": {"doc_hash": "df1d09804d06d59a8fb776470c4466156c8ed8ed057bebca473b74c3ecbec74d", "ref_doc_id": "54ac9695-4089-40cf-a354-425e6d4fd7cb"}, "1be09337-f9c5-49d0-9d41-a281bc7c85e0": {"doc_hash": "6620097ac01d4dad8b1929b67881cd567d164f4031f058694bd5e1361050cf92", "ref_doc_id": "5337e53a-d956-4122-ab8a-6f67de22ca59"}, "06849f6e-dd61-4234-817a-eddb289befe9": {"doc_hash": "96b20732c5ed872d107e5ce267d370c6139f76a843ce4817a007d39fc6a9d762", "ref_doc_id": "a3344a29-c951-4329-99c3-099c0ed63cc2"}, "6e5e6ce2-5323-4608-8fac-f943abb39dfd": {"doc_hash": "92e1224d20c92ac83dd88dd5b293af880540e5b84430beed3112a43704f4841e", "ref_doc_id": "c8df7639-5bfc-4172-bf64-4153bb873e36"}, "ae2a6e13-e236-4962-bb5a-8dee45f42e2e": {"doc_hash": "f2ea3332650c8103b0c949197df48279bb5c8e228b894d451f9f557913acd083", "ref_doc_id": "7f33e2a3-21ff-4385-afbf-97941c9fdd0a"}, "17a7cea4-5d4f-476c-b4bb-97227fb04f32": {"doc_hash": "89b7f310805af773ca3c5e46f5a1e96d2b1d4faff64c6c2dfb32f35165d391d7", "ref_doc_id": "f52a816c-53ba-4abf-94d6-f2c72448a156"}, "708d0bb6-58d6-4411-8b94-ee0c6afe37f7": {"doc_hash": "84aa1ca0230eca82ff69e16165c92303839138e51ea15874ebe111fa4f18543b", "ref_doc_id": "782ee217-a635-4cff-8072-a8534fde9c38"}, "6236bb44-b265-4655-87e9-a883a3953602": {"doc_hash": "3ee7ff1a03995ff39df1045946155e21209b608e8c94cf266f6492379022c271", "ref_doc_id": "8b4cef0e-9945-4c4e-96c7-316936eb93f8"}, "add011c4-722e-4b76-b275-f8f9569e8c27": {"doc_hash": "45d17e5f2bad7b7809d29fe33fa14a7ca0a0ee78766726627697e563f52c8532", "ref_doc_id": "b4deda91-bd75-45a5-b72e-4d08724a43cc"}, "b343514e-e98b-4432-8fba-160eb5efeed9": {"doc_hash": "9556ad72ccf24174827ba2e5010f76162a5799ed75153975bcbc04da47bff95c", "ref_doc_id": "95f3fe0d-62f5-431a-868d-bfda70ce05bc"}, "58ce8596-e250-4467-bfc2-cfa82e1189a5": {"doc_hash": "34793bcc33ec9f066cbe9fa1a46dcd6d10b8df08be35cdd62a76116801bea04b", "ref_doc_id": "ac238a27-1fd5-4222-81f0-4b38b6c08a99"}, "8dbac3ef-00f4-4795-8ef0-36af836593f4": {"doc_hash": "77e5a4821f0cfec38c2c29ac57222e7dd59dfd07aa1a3ba056c665cec38a38f8", "ref_doc_id": "2be0c1b0-fd96-4a5d-a3bc-a4523242870c"}, "9592eb56-f0b9-456f-84f9-5e34fbe9d2f1": {"doc_hash": "31d63fc22f1e37258eaf23e36b9f2e856cded65626cfc3efcad8eb9bf8b08c16", "ref_doc_id": "e55aa66c-2992-46e6-adb0-d0ea580b3f43"}, "9ceb2e93-6a8b-4231-8a93-0d61c3c64ad9": {"doc_hash": "7d35ab8aae2eff689005337ebf6f0bb6f748cbb2fbaa7aa39b06aa78afcbf5c6", "ref_doc_id": "71e34556-ad07-4cfa-9fa4-0ac410ff206a"}, "fbb76287-4411-4549-9f39-852777411527": {"doc_hash": "63bba153d94bbf468c50c69880c0b57f4621e2bc9799cf5b68d0aa9a91886c7a", "ref_doc_id": "e43b5b72-23ea-46d2-90b9-ba3f95b6c3ee"}, "e8aeefa1-cd9f-449b-b76d-ac95bc42972c": {"doc_hash": "d544fe56deb4ed84945ed380d3c73521f6b2f271a7f09ebb81d550de0984b683", "ref_doc_id": "b2345e20-3747-417f-bff5-df5eb0274580"}, "c49fd740-52b3-4b0d-9bfb-041c747ff9ea": {"doc_hash": "65069c710e365a1a81c95967787db2b9d70d6ea1b9b26bc5e1eb93c7a7069d43", "ref_doc_id": "35bbd956-890c-4847-9686-e5aa5da6f6a7"}, "27ade77b-1eb2-440c-9b79-6e8417b0ce0b": {"doc_hash": "66c09082620b0700bd667d86953288b37655d6aa47c6d3df1da3f6532fffc01c", "ref_doc_id": "c39bf27f-f3b2-47ab-8b85-ca1dc4b83770"}, "58aa44d3-0c7f-437f-ae9c-d582c1b30bd5": {"doc_hash": "4cfa890639e329abffa4187d74b61ec112d27cf1dd98bdd56c14ad0e8494aa6d", "ref_doc_id": "9ad97850-9710-4b28-8c1d-fc92a2cf5c66"}, "59794a89-7c77-4cee-b678-833454c1fdf4": {"doc_hash": "a89dbbc97b87bf14e47b76c2acb3702f9202471ffeb6be9a410aee70757d4bac", "ref_doc_id": "5144c61f-b32a-4b47-bb51-8dbf3fb57728"}, "80afb447-33ce-4799-bd7e-86d7c2bf812e": {"doc_hash": "2dda4c719e3b1ee00a58932c0885907ec6b1ef432bd1e2695bf1ad4ef9324932", "ref_doc_id": "68c88959-f408-42bb-b6b1-18a1a7b8a19e"}, "2c3d5a9c-f8ac-4eff-80b4-ee82297369b6": {"doc_hash": "ac3686411446700774302f80a9033a65b5e09f431b8281001c3a01335f04111e", "ref_doc_id": "96372a4d-4946-457b-a279-82a3a952b44f"}, "af5b269d-8d5f-4fa7-86a6-c2ba13170077": {"doc_hash": "93c493132c34de5cb6f78ef6efb832c2a6b27ea72739e1bf49e956b942d63d0e", "ref_doc_id": "c4aa79ce-ba6c-4c81-b2ac-afb0a1f0a2e0"}, "54ec4195-3bd2-478f-912b-ce59cbb4e8db": {"doc_hash": "67cc8712ef3f51b0dab2227600fa069e6e9097104093af71a553f3feadcbf72d", "ref_doc_id": "e76a0f23-5de0-451d-a5b3-ddc62f08cadf"}, "69f654fc-2572-42ee-97e5-36f581b2d9c7": {"doc_hash": "d8e9a6cfdbb069840b8a77732173d190b98c3d7974378c33fc3d24a134fe9f36", "ref_doc_id": "0a88948b-e236-4b7c-b407-7a21335754ef"}, "90966541-1f47-4a63-ae3c-86b8501ded98": {"doc_hash": "626c4bf41809601efcb14b796d6c75abd91486e13eede8570f089ec7b1a76c9d", "ref_doc_id": "837cdf55-a178-44a7-8901-7367d1ff6b89"}, "de3ed5fe-e569-4d6a-bf5c-ac961b7eb76f": {"doc_hash": "36db70654974436a55c825cf4af0476446a5c412196ad0f16082a7d40c12ed5d", "ref_doc_id": "360f90b9-76e8-4736-80be-81e7ac45c138"}, "d37b4f44-f15f-44f4-bb85-9a1118c9bae8": {"doc_hash": "3ec8286a4e44e7a82007e6064f9a0518c9e23f3e36460358b4ad3286ae3a99bc", "ref_doc_id": "b580db8f-0ccf-43af-ae53-040b6d44a476"}, "95c23524-1808-4c95-9a49-9318c2cbf9f1": {"doc_hash": "ac1d9575cc0db8e07b3b08357d8f75ac7679211d6d34f8c3eda908eba9d8ea24", "ref_doc_id": "25f289f4-ffe1-42ca-b64c-6d7c719c57b3"}, "f89be756-713b-4f4d-840b-779c672d72fa": {"doc_hash": "840e17365d31d24378a8d2721f05fd7740230ea226e32b52de9271faa5095033", "ref_doc_id": "2bb7cb0f-104c-4bd1-af9d-570c619bd47f"}, "fb01600e-c11e-466f-8c32-9af0f451852d": {"doc_hash": "238190a2a9f6248471445c73294dd78c7b4d73a4b88dbc6dbe47b7bbe9427970", "ref_doc_id": "0efcf9d5-8193-452e-806d-e023ffa8dea9"}, "4fa47120-a57a-4589-9795-7bc87cf3e4a6": {"doc_hash": "720187a639573752318232bca9ef2794ba30727f3b59e513465966ff00d86971", "ref_doc_id": "d6dc4655-26ea-426b-95f5-633dfc3e627f"}, "d652e246-5b2d-4576-a9d6-5c1a9d5086f0": {"doc_hash": "30bce2bc37b0103507dda6dfb338b0e64b67a005725f0f6347d22d1cffeace81", "ref_doc_id": "875b5a3e-7561-47aa-a9e0-6f8a530a13f8"}, "dbab9b9d-2336-4ccc-9e0d-27b1a4d3284c": {"doc_hash": "111cf2e3e8451cf409aabf8faaa78fde3e9af5eafd54cba4bd59a82f17db7b90", "ref_doc_id": "a1b19ff8-ad6e-46eb-a9d2-bdac77b9f998"}, "6683efb0-98a2-4b9c-9895-e02b14d725cb": {"doc_hash": "8e7aa477dbb0e6b91705c698bed98c600d9d24702072e5d2f95d0151d809ca0e", "ref_doc_id": "78a86a96-7bad-4aca-9636-477a311954a8"}, "ccb1001d-755c-40c5-8233-7b16f0122861": {"doc_hash": "286b6ccea5cbc1e47bd635769a31ee43063cbc6e3f24499e2b13f18ce11e0e49", "ref_doc_id": "32a9f017-2ac7-49a8-af2a-033e0d7032f1"}, "34ce7564-6228-4343-9b99-36d5bc8ea5fd": {"doc_hash": "027aa43f22b7eb33260ddd0ec0596c317f72cbba7962f4f17eb5c72b321ba2c1", "ref_doc_id": "d78f35f5-25ef-4fad-a0d4-7105c352bd70"}, "08259f5d-4993-4e3c-813f-41f34c8332a5": {"doc_hash": "506055d3aa072d3a43d084fc3d43c605763345f1d9193cffada50d1bb26cc30f", "ref_doc_id": "bf150a4d-483e-4c04-a02b-90b127d6e49e"}, "0228fb1d-2c5a-42ef-a76e-6687b71b5c4f": {"doc_hash": "226cafebb428f191344509ad3ef004c6ec80f78e04a001e3e8f9ec31cdb15d1d", "ref_doc_id": "3e71fc8d-cb25-4371-90df-647eb5719182"}, "c10dfee1-8c9f-4eba-9d5d-d679694f60b8": {"doc_hash": "97f6862ecf7f2ce997c3e00e92eb1101ea1b851c3526f4d6b634fee2f6617778", "ref_doc_id": "80eab1f6-4f44-4d32-9430-260637c9eaf8"}, "eae0ac1a-dd40-47de-bef7-d3aee7953785": {"doc_hash": "42b7bb993718b68ac3f937f42c0bbbd2751c37e7a553aff666608673c2ebbbf3", "ref_doc_id": "16ffe8eb-f018-4c19-910a-33c3a3a9d1f1"}, "7a280eec-18b5-46aa-bea9-4f8e3e5aa8fb": {"doc_hash": "ad525d4187bddf3a4d52408e0eef717417c9f151d664403f1185a8a3aab6f05b", "ref_doc_id": "4b0172ab-5468-4964-90e1-f1d12293e276"}, "87ca4493-a863-4569-a327-358fc2ee93e0": {"doc_hash": "f1b5dba20111bf591d6b8756f64848fc08e07cb0a52e2635ea39e2541dea7017", "ref_doc_id": "4f04e318-c1f7-4f15-a28a-77854ab85aa9"}, "397a4a1f-675f-43c6-8c06-57971a1b638a": {"doc_hash": "05e4f211a930f840fe0306c3b0694847cc81183746d9a90da96ba2bed13e0e4b", "ref_doc_id": "b66fb5f3-0507-4a43-94cc-c745751f9bbe"}, "e4ee6bb9-be76-4818-b484-444fbfc51783": {"doc_hash": "f1dba521d512cfd4f4c026df3b92f13fcdca1c1463eafb5bb6573885bc8071a6", "ref_doc_id": "ec3f2c67-2f22-41be-87c5-2a6063c8ec0c"}, "596684b7-29af-4a2f-9005-0b93c7cd71dc": {"doc_hash": "7c32c927dbc54bddece3cd756fd0e1993d639e1e3d0bae644fc08c3bee9e8d08", "ref_doc_id": "0c51a751-8651-4564-b9cb-93eaa8cdc21e"}, "5112ca33-75e8-463f-8e82-3806803292d1": {"doc_hash": "be971211ce6e2c0116e8bf2a7b9a5ea966db15d296049dc7f58fc40bb8a9fa43", "ref_doc_id": "52113a87-964c-40e9-a779-6a203982c81d"}, "d2a53a3e-97a9-4d19-9a00-e26d6d92ecd3": {"doc_hash": "c8be712731a1ea01cde28be3e9bbc2375f0e4495468ceda1f34d007df2099982", "ref_doc_id": "fddc6040-a0cf-4bda-a8e6-2270dc7307c4"}, "9c2fcda0-0530-4995-869c-6ce68c87ed80": {"doc_hash": "39551bfacc05e59c14f940858ed56d90a2cd466d1d68f611a2e4ca4229cfdc06", "ref_doc_id": "8b0e665e-8b43-4c2b-8183-8c20be24be4d"}, "5a5fcb52-9446-43bc-b175-10eea1358d29": {"doc_hash": "f41b32771da60f15828ace482303841219b7f11707be498b6e64b17213841b03", "ref_doc_id": "37bfa5f9-9772-4dec-b169-c4df9573330d"}, "2591dda3-cf53-44d1-83f8-1258e7f42415": {"doc_hash": "5bf3047012de6a9afc9886946c855ca844c74ae2d890fc610ba1cd0d8b42b13a", "ref_doc_id": "6ae9894b-e706-4f6f-92af-db62b1c458bc"}, "adeb2794-6e5d-4208-8c02-6a9a8218d9c9": {"doc_hash": "eeffcfb2881b48a704a43ae3cbc3318ccd48583574119b535bd4aea7aec1caaf", "ref_doc_id": "ed95d086-40d4-4285-a85f-673fd80d8483"}, "ba92772b-b180-4b6f-8c96-85059a531088": {"doc_hash": "57ba777929d89b3373d5c1c522541ee771d1531867f8ddfee852e3cfa879e73a", "ref_doc_id": "f6d1e96f-4fca-4a73-a5b3-3f4f64b3c423"}, "1b9eb3cd-82a9-41df-8153-6ad68b4efe9b": {"doc_hash": "2eb8ff8da00184bde97bcc3131575622eb2192f26e671309732e91d2a36a16b8", "ref_doc_id": "b22dd71f-997f-4b63-aff4-1c0445cb8fe7"}, "71e17f29-132e-4895-a657-223f42def1b6": {"doc_hash": "41176eaf601c199b0d890ceeacbd19b6375f8e9d852f1a715ead9bcf58eb54b9", "ref_doc_id": "003753d3-2978-485b-b84d-b67245b98cb5"}, "0011577b-a14c-4006-949b-7131dbed93f4": {"doc_hash": "fb155543ca1e355d19af34e3901c92cdd849851f6ab314449d5ae3f571d1564f", "ref_doc_id": "c22fbed1-1525-4dca-bb53-9e0ae033b792"}, "0f74968e-2cfc-4f4d-a1b5-81b102817f6e": {"doc_hash": "3d1a7809148d800d5ee12a13ecccecb4f98af2d2bc411d431b844f7684f452a0", "ref_doc_id": "b833fec4-4245-4269-8c06-728629e68bc9"}, "60c3fe63-a691-4938-bc68-4b1d2bb5d8cd": {"doc_hash": "44771fb036558f1a97ddceba69ab00d7485df2a927f036c9aed236a5fdeac553", "ref_doc_id": "e89bdd7e-1c92-4e61-bc30-fc2e9570e563"}, "7efe51dc-1319-447a-bda3-f75c0efabf24": {"doc_hash": "dd2279a1116b8b5e8eb4dbb1f04974fa9035bf45af4e66cba89798fe8ac888cd", "ref_doc_id": "9ab62a31-1f6d-476a-8d0c-088b65100d38"}, "d4e919b6-2c6a-48a9-9ebe-a69a55f62934": {"doc_hash": "1ec306b37f5b1e2eed7d9265e440acdaa45ba9411d4b2f4b5400a30dc9ae054a", "ref_doc_id": "246423f6-6697-4c0f-92d4-58acafcde898"}, "fb9ce593-07c6-4ed1-9ba9-0820502dd784": {"doc_hash": "a9076d918fef7e85f09c5a6805b97076a4efe4fd46966b57421e753a54e5a7e4", "ref_doc_id": "88682c63-c023-434d-9b98-bc4d4ea8da21"}, "915af28b-f239-4b02-8b26-3c1d167e25c9": {"doc_hash": "fd72de2d0424190ebd895df8d2c5e9a30e591864b64ab92dbd34f0b47e42d8ce", "ref_doc_id": "e582b632-df7e-4523-a0d9-0fc6fe2300ff"}, "a4188542-5ed0-47f9-8822-520abdf4dd1b": {"doc_hash": "bd0d62de7143b4f228b74eef7a871d7086c900ac0b42d4be236abd87928bb645", "ref_doc_id": "7d9197f4-a0cc-4754-b3c6-bc831ae325d2"}, "c1882781-013d-4336-81ec-d2f793a179e0": {"doc_hash": "17928b514cc358fe8de5b480691121fd28d57794f338d515ff66da606b302a66", "ref_doc_id": "87f580f8-605a-4428-a9c6-e20d8dc53ea8"}, "c5fae006-a116-4d28-8b7e-00355eca7ed8": {"doc_hash": "f0fbfbd1ca1d71fdec01b0d3c32fb7956171f271cb41a922efa5daa6acc52e93", "ref_doc_id": "a7cddefa-3979-4177-b205-9b9dfea5d523"}, "a28f8e61-73cd-4bdc-a809-10b1e5dcc06c": {"doc_hash": "5d36e98d9748b5bb5e5a76199a1329e8fa16416beb963b1e7d7b4f1d34c7dcc1", "ref_doc_id": "5f35a402-dff8-470f-8d37-8a9e4d5ca82a"}, "583dd425-afdf-450b-b46b-f7d90ef051d1": {"doc_hash": "c159a28781f12926c7cd91147598d1a62f163c875fb69c9233f42fdd442f0ce5", "ref_doc_id": "5f7e51a5-cf91-4f39-afd3-75e71396a20b"}, "c4ea5705-9a78-4de1-8359-4a6488870a94": {"doc_hash": "7438ef42ba07c1cd3d6e1c006f0bb005665ae812632cd15da74fb5f662d65e2a", "ref_doc_id": "8e7e8586-6fd3-4a35-b2bb-1044236ef116"}, "8a1987cb-6bb2-40b0-996c-4bb20c2291d0": {"doc_hash": "f2149dcc0570fa913eaebdfc1565d9db977a65ae31aed76a463447df74a1376a", "ref_doc_id": "448da2ee-73bd-4617-b31b-10a43da6176e"}, "242b10a1-d638-4ad8-a152-0c9b7fc489e7": {"doc_hash": "863eb4307cc7d39ce73b41c264e72c5dd84c26f55692cde54dccab47a43bf988", "ref_doc_id": "1aa9fdf1-94b3-422b-8255-0f0275a9c93e"}, "5c0c9d0a-80cb-4124-8026-fb09d0ca584b": {"doc_hash": "519d4bfe5e7fa2c4511ca1c17fe052027ff987200380cceb59b0db8dd12f3a28", "ref_doc_id": "e85c0f25-3cfc-449a-b61b-80e044a05568"}, "51dc72a8-0590-45c3-b3d0-05e26995fd3d": {"doc_hash": "7095ca93867d5492058bc2d2f01789ade70d4ce22843a348cb90c1eba308cd42", "ref_doc_id": "f0288b78-3d39-49cd-b66e-17d40ab9d454"}, "0c037299-f1d0-446c-9ea3-74bf37527244": {"doc_hash": "5aea65d32a22e67e9a7aee7876ab227fc83dd7cb93f13fdf2010d7682a70fd14", "ref_doc_id": "3a4ebeb2-85d1-4f3c-a5f2-1a3a045858d2"}, "1cfc9ac1-eab2-4877-9cee-dd2246c9e35d": {"doc_hash": "02d4cf803164dca43fa566cd1d32cae870922328150c235c09e84d5d645e59f4", "ref_doc_id": "fecfbbab-a647-4585-98a0-974e66dcf2dc"}, "c5baffde-65c6-4fdf-8c1c-18297b11120f": {"doc_hash": "1a71d96d4fb8d059342ba68c76c1ebff3e4f7767450485cbeec0f1cc51fa7b41", "ref_doc_id": "eab3f2f7-7474-45a6-bea0-9722588a4acc"}, "485b4894-9719-4fa5-8659-13d340d7f4b9": {"doc_hash": "9f0b636106dab57b6736fdd4f2efefbf6f01fcbb04f05683214cd63f0ab103a0", "ref_doc_id": "e7226d25-6b5c-4d46-93d7-240de8d83be2"}, "af74f855-9e5b-4917-a0b1-cf63275469bd": {"doc_hash": "81faa37ca98f373a9358659224fc707ff096dfa087a53e98741810879ab563ac", "ref_doc_id": "470849e7-f4a3-41f4-947a-a0ca341e0d89"}, "cddfaf43-0017-40ed-a82f-0dfe09f28228": {"doc_hash": "d5db000ca3d3a3168081c1fee9cd8c7696fa00a14da27084f7628cbd0871d76f", "ref_doc_id": "09b37ed1-5055-41ad-a72c-49ac95ded20e"}, "e13cf9ac-d0c3-42a0-8494-74a0225b294a": {"doc_hash": "8f446bdb8d105ea3c08691f26d0c73ed0c5f11a2b6748e1902b697b7c85d8b78", "ref_doc_id": "9eddf6b5-d6a6-45f1-8308-fca7f42325b2"}, "0233847e-1f44-473e-8269-7b93dad752c5": {"doc_hash": "653e96e770b9f0b8a581d5aaf60c0ab9f400586aea9652b9123b8133ad257cda", "ref_doc_id": "b4ff59ed-2a6f-43e5-883a-0440ec01099c"}, "fffd3fd4-88c3-400f-8ba5-3418640fd82d": {"doc_hash": "1c2832e37ef82b36757f9a522a96fc2967b436a0b355b7538e85a58b19babe56", "ref_doc_id": "f3846111-a316-41f4-b275-3a61d91b4825"}, "ec7aaf40-6f29-4692-8412-385eb9126948": {"doc_hash": "64f2c29857eee9da7ad0b4043dc9faca6ff55c4027972570d6f9df37c3bf27ef", "ref_doc_id": "4d4d68ab-7c59-464e-b558-324d6579b651"}, "f9f2c770-ac34-45e8-8728-472027a57236": {"doc_hash": "b7202e4fd7c7058d129e01c64a1c7f4189d30e0d66d4c9cbd4e12719a65cd3eb", "ref_doc_id": "8e86a2e2-4b36-4ef4-84af-0a0cf1d57048"}, "104828e4-1490-4e78-bbf1-9e59de94f1d7": {"doc_hash": "b73e4fe13b26352033122b33e9f3fc874ebc2a5a695a62bc4ed7fc694a6590fe", "ref_doc_id": "20c9115d-c070-4247-bed9-ea2c457aff45"}, "98aa7164-3913-476e-b947-c9d890a1dac0": {"doc_hash": "dfb2e7d5c8e27da9931bb6f609bb16899562697f810945c900cceb98711174be", "ref_doc_id": "a029d4cc-40d6-4bba-87db-d2eb1ae8c544"}, "2c13cb6f-ae63-475f-be91-4d433b8c4146": {"doc_hash": "ebda3fc8ad7a7a9a74c70f8fd5ea4268facbdb7c7480446c2e9f25aa353e7f0e", "ref_doc_id": "6e17917f-d22f-4b89-b573-76f45b8e4da9"}, "109c539d-f414-4df8-946a-128e57654911": {"doc_hash": "69091abf33c5b61427a0b2683da57e65a27f9f9862e81dc4f6f6664cbe69e183", "ref_doc_id": "b02ae0cb-1d17-4e67-8396-16cce47f2bc3"}, "2a06900b-cb8a-480c-9289-c685aadf0b91": {"doc_hash": "dcc027518b788061abed7f064b61f6d9e78ccb8b5041ee320c6e981c02860ef4", "ref_doc_id": "19e0440e-6590-4e4c-a881-f54d52d3d95f"}, "4501edae-3cb7-4a40-b726-d8374280fd4a": {"doc_hash": "b0fa552d0b16cf9471d80c5374b8706ccb1c84be4144adfbedcbdaa63dd484ac", "ref_doc_id": "e37d62e9-7140-4a47-9d15-e827cd73abb9"}, "4479dc76-d6f5-41b7-a2d8-1781558fb77a": {"doc_hash": "cf8516d1223a0968e5d57d5dcfdc811bcf13d2c6d531547524b6b03560dc67d1", "ref_doc_id": "1c0d2b08-e7ac-43fc-8232-fe0518c4e34d"}, "35d18d93-fc25-4395-ba69-e0ec558d5460": {"doc_hash": "ce83032faab7842adbf206fe8795372898c3f8e479d3c35bdc9b21ce73958fe2", "ref_doc_id": "d6430cdd-584b-4ea9-a2de-3deb22056d79"}, "45270851-ed56-41ea-ab57-f36e96aea63d": {"doc_hash": "fc689db99f4d145eb481ec728f28f085d12936f0cb9dab7df84ca9a3f4ec4199", "ref_doc_id": "65220c05-f98d-4b17-838c-1b7342f474b4"}, "ca638584-4006-4a26-ad65-875f0f65ec1f": {"doc_hash": "5956e8fc381fbad60aa17ac1b58bf9c078620b8451829cd5d02fa56498fcda52", "ref_doc_id": "8eb92ee0-c436-46f7-8a6b-bc8728be3e53"}, "d540fc0e-7184-49d2-b0bf-fc15bc71554c": {"doc_hash": "d5f59a24da7e2b116a8f4ecbc7028b21a8a6f6f9b86f8bff1a3672d4b17b7582", "ref_doc_id": "65906afb-d75a-499c-ba5c-ec09d2e65a72"}, "157aecde-15c2-4740-bf99-b1f29aea6089": {"doc_hash": "35b3878ffd4f037b7b95b1362ff478572cc33f7d9a9af09d67b3692483bc49e1", "ref_doc_id": "45735fb3-3121-4794-abb3-673383e13c03"}, "c67295a5-db2c-4731-93cc-457c2885deba": {"doc_hash": "fb273d874176eefe0bd63ea2e34b01b26a64ba686cefdc58108d6bb211c0cd01", "ref_doc_id": "4f3b55d7-2eb5-4215-8c89-40e654c582aa"}, "b51012fd-9d39-4aff-886e-224aa6e1d2dc": {"doc_hash": "d914197fd33f69c7cac0e0e346451154ebc48c9aa9a920c6e431235cd01701d2", "ref_doc_id": "d091946c-c776-422d-b40d-eecfcaff648c"}, "61499b69-ea93-4c7e-8bba-0dffdbcfbfe7": {"doc_hash": "db49134993a92e000da25d9f6bcca9c15f3d729fcc5cf8c24778293152188c0f", "ref_doc_id": "1d6489f5-e434-43db-82f8-3f2cf689cf6d"}, "e4b207da-b444-4b51-b197-b08d8193d327": {"doc_hash": "2110721f264d843438485419f7707b665a863fceba6d64f65ac8dea0f67d5e21", "ref_doc_id": "0951f814-958a-4be7-b87f-e4fbe955787a"}, "d10b3429-fcf7-4c5b-ba70-e7778ec51c92": {"doc_hash": "4205efffe34703d91aebefec1db2b77a639a9085c88666c2af796f6d1278a407", "ref_doc_id": "f43c4970-cc75-4cd0-9c6f-f0672c919aef"}, "ccc5483e-f062-4792-8cc6-d67d173c5cda": {"doc_hash": "e45bc8766bebc2c7c297b0f13889ff4999efeac95ea35c8a897b9cf24c042472", "ref_doc_id": "df21f770-5b6b-42b5-828f-054e758c832b"}, "897c3c7a-2840-41bd-8361-9387be4fa54f": {"doc_hash": "e04296a233db4caa12077110001cebf9ab6007662aae6b818c006e3f16c7f753", "ref_doc_id": "07bdb5de-a433-4795-b8eb-2087893410dc"}, "cf294721-a769-4636-a373-b36491bb6140": {"doc_hash": "f2e9b0706bc888c4f552527d104cc827c9c090e607e0cc331bf32bb13c83eddc", "ref_doc_id": "e2096f31-656d-45d2-8c95-e4e3602547d7"}, "ab156337-6667-4ec7-92d2-19f3b427476a": {"doc_hash": "f4914af594a32a93aa36371197a59409b076e523668aa71e8bddc7d020c46852", "ref_doc_id": "965f68a4-cdc5-45fc-83ba-0984a423722e"}, "1ad3e460-bde9-45b4-9cf5-c4f2210b73e7": {"doc_hash": "dcda0d9f504665314e8ed763039f52bb87d9495c6debe1f26fa06872ba9768b4", "ref_doc_id": "51f9383a-97e6-4341-a36c-6e6895826b7a"}, "2da20d0f-e8f1-439d-bb0d-cdfdbce59d80": {"doc_hash": "55a1a023cbedea62e632a585fb09a9e97e1f42e1c874465d972372523472d892", "ref_doc_id": "6db7ea9f-7680-4609-908b-6d6889649fd6"}, "5474527b-07a3-4e6b-acd2-c6ee79cf4f8e": {"doc_hash": "b0a45a81b3cdabf1398d2be8b99ffbd8830eda941776574a0bfc8d52ef34f0a3", "ref_doc_id": "4a02b499-71f0-4b65-90cd-bfc9e80b80a1"}, "bad92416-781d-4917-8f78-08570c71dd67": {"doc_hash": "ff19652d2e0aff8d5a4ba9ba6914713d4025128e241669bb789172551168ceb7", "ref_doc_id": "8d8ac7f7-1c2e-4d4a-be3f-a3e4bdfc018b"}, "c1a77f49-9d1b-4e9e-b0ce-eea1f2a702b5": {"doc_hash": "850f257aa9953510f249d0a6a98d09ff008208f8c40e34bed3f98740e3376306", "ref_doc_id": "57d222e6-7b59-4f93-b242-717dafff6b53"}, "e9e9e22e-0d11-4beb-9c61-780b34c91b8a": {"doc_hash": "40e14ef0042735b0047e07ecad37a892f167a89b119e8705ce691cc5a6b22ef7", "ref_doc_id": "c8cfc641-1b0a-4550-956e-446bab2a1df9"}, "eb4bdb82-374b-4f3f-b4f4-08f99957b665": {"doc_hash": "9cec5de2ae59f1d745544ca3835b4654db7fe7a76d1670e198803fb1983f833f", "ref_doc_id": "7f11c12e-0a68-4783-bad2-e308746521bc"}, "9f7ec619-bbc4-4fef-9b96-55a3ff07b7a6": {"doc_hash": "77aa9c893be9fd50fcce14fb4a508ad0599c2447ebad4fc811f91f02baf0b710", "ref_doc_id": "0e9e370b-9f26-47dd-90b4-0e9176c0f50c"}, "e343ef8d-c4c6-4ee0-8a00-f9361cecb98f": {"doc_hash": "c35e8aa402ae96d00e2bdc52d321fabf6609f303e4d2d5d6ff6dd1d169cc7c9f", "ref_doc_id": "7fee7542-c6c1-4aff-95b6-8c6cc2680502"}, "855ed736-eb8b-4c21-9231-4c7d99d59395": {"doc_hash": "1f52a372a50590cc80016aaec9e43088fca7eb965cd7c3ee7d8466f37fcc6813", "ref_doc_id": "2ae0500d-cee7-46cb-93aa-c15dec7af085"}, "89d19608-bfc0-4cfc-a139-6deceb07f92d": {"doc_hash": "4964066f6564dd7c6f039befbc5b259d6423069bc7f6e2df8f6a905deaaf1925", "ref_doc_id": "162cf4aa-07ee-4338-93e9-8855f2f1e0b6"}, "6259b141-ddff-42d4-af36-2775412afaed": {"doc_hash": "3aaf718d7d632a8df74e1b584ea86ec5cb16d9d8f7ff11efb972589d53722b17", "ref_doc_id": "30ddd3c8-50c8-461a-b416-7ec749d17efc"}, "be935835-83d5-4faa-a3f9-e15e5f934021": {"doc_hash": "312668a7fee7f1fc8defe0d8f3702baea25147cbaa00e288950fa46e48551c33", "ref_doc_id": "600f9404-f04f-48ac-ab4f-74f6676ed18b"}, "0372cffd-2839-4f01-942f-e1c61053d571": {"doc_hash": "2442c85605a6e9bc0658a6cd6189769d296fcf103a87db65dcf9e7972435b062", "ref_doc_id": "e07f7fe2-f7b7-4675-ad58-235814565d79"}, "2a28d584-adb8-4748-a87f-66406def848f": {"doc_hash": "128ab9def64494887949e8d914be867d247eaa2677203152a1ead2b3108954ee", "ref_doc_id": "59ab57d8-e008-466e-8ba3-38f018bf7a86"}, "a86de2cf-2df1-4c8d-9912-192c7427e67c": {"doc_hash": "daa38d9b74fa4743ec7a9e7d08fe65019c73d6b22892f6b625778354f2c15b2e", "ref_doc_id": "88268a5c-cf98-4502-83c2-980134b1c589"}, "4a45a066-af26-4f05-9592-486f245b7cf4": {"doc_hash": "362b4bb9c6985a8427badb0c43602fed369cf42c105730d61168c443524259d9", "ref_doc_id": "907f16ba-d3a5-4664-9dd8-849863c036e4"}, "f2f751e4-9b6f-4159-873f-99e7098d57eb": {"doc_hash": "5ff05993cfefd346a981d4190e92b169b0df97d74f827e34e4d77d86d47231b0", "ref_doc_id": "18306ca2-6220-4f49-9395-d7ef2ca1600f"}, "c1e046fe-2733-4584-b93d-68386d05ea14": {"doc_hash": "47b57ad42c887fc8a1a13a2f1dcdbd418fbe23226112235e85e2718a5b664472", "ref_doc_id": "e6702176-62da-4e10-9f0d-6bf59b12c512"}, "1d9d63fa-4a83-4847-8a81-5ae2d5b12174": {"doc_hash": "0ba701c7be6c6ea2f2e772ac01b98306a3b7154989fa44a045d5828ee3ef2d20", "ref_doc_id": "5a16b0e2-4422-40a8-8577-bfbd0af0de1f"}, "de36a2c5-3663-4151-a566-e58e3bd0586c": {"doc_hash": "ca70c294e9f1a8bc75b35f2c4943205b7361646e23351d094fc1e449c47c3188", "ref_doc_id": "0ce6d5db-219d-4d97-84dd-349fa00f832f"}, "863bb0d4-667e-4d7e-a547-2c3a3848054d": {"doc_hash": "42c66505087c0d0376ad8875ba60758047d685cb46200660ac24febf7e1fd431", "ref_doc_id": "7bfe8ae9-e211-44af-80de-7ab02ee7c0d2"}, "ec21d0f1-ca60-4b54-9848-ce97a3ace5cc": {"doc_hash": "19b0488398b37249cec6f2fb4f0465b691b0766d9e59c37254e4dda6d346ceb7", "ref_doc_id": "5cebd64b-4cc2-4071-bf47-65b0c645018c"}, "60120b3b-9ab7-4d28-a336-e9994e31616e": {"doc_hash": "37d6253cfa294195420367f4a8b273d9342113a7d6c80bdf2edda3867029c22e", "ref_doc_id": "1e3f3935-8365-4b57-9ccb-27992cff4aaf"}, "b88ff740-8e35-49c4-a6ab-7373edde692c": {"doc_hash": "274db80c677c7bda7c6603f4710ec594440cda6b6491bf9c612bba2f56dc3621", "ref_doc_id": "f9c68f7b-b6eb-4145-a77e-31ccc5bfa6b2"}, "ebb5361c-bcf9-4938-a6ec-f1f9c59ac638": {"doc_hash": "9162d34f5d45e7595692c3fba1537677e6bc86d6e10de7c499c3623e85c27803", "ref_doc_id": "ed657fae-aa89-4b42-975e-c2845ede16b9"}, "ce48a269-70e4-4de1-8bcb-1b5374a9a8fd": {"doc_hash": "0f388b4a324e77e8cc2b49d609f7a808aaeb6aeb45d6b71cc57407e217714834", "ref_doc_id": "c5a8c2a0-b1b7-4539-98cc-17bdaabd46bd"}, "0866d920-5529-47fa-87c8-473a930cc87e": {"doc_hash": "a7e1ac5b8caa14b1803b7f78aa41152bcbfe867254af58bcd7ca66079106bdc9", "ref_doc_id": "c776819b-9e49-4503-b554-113c77bd9ab4"}, "bb5e8362-7e30-4768-89a1-558e6820bb9c": {"doc_hash": "43f731761e6211cffe7c440083c220d1e0db7dd1352cf6db13e8a4ba4bacc4ef", "ref_doc_id": "27aa0fba-91c0-4df3-8644-e273073492be"}, "8837437e-c66f-42d7-ae21-c690ab936c78": {"doc_hash": "fc4daa6bddaf714b9fa197497984ef13a77bb07dee113b418c7f2003587ddac4", "ref_doc_id": "bffafe05-2d14-4755-8154-7f02a3aaf4d9"}, "d0238d57-cc00-4209-9ce3-71eb6f28692f": {"doc_hash": "4fb5bfd8d9c330e966aeeac9c7f989bc9cad30c9dafff68e9beba6b578c26c2c", "ref_doc_id": "34cc731f-712a-482c-8a29-352b74730b81"}, "aca1e2ba-2215-4f76-b87a-e1745fc38026": {"doc_hash": "e45b6b7707feddb63dfc3f81b76cdcc2fa36b06f2505d356e63aeab12a16e318", "ref_doc_id": "a0df7abf-4493-494e-a3ac-ab29bdf0ace6"}, "674c58dc-50e8-4950-a68f-649d96c3a2ba": {"doc_hash": "d30c9fb60d2d5f7c66f151b1a7bc580e05ed2ed0328b12ff66f596b28ff9b43a", "ref_doc_id": "f903d67c-55d1-4c0b-bf6d-10901f9e0447"}, "46e0ad61-400f-4bb9-8bd9-490a67c03eed": {"doc_hash": "cf7b386ea9907affc181b7bc50c558f39e1beed5ac3efb0012c3a99502db213c", "ref_doc_id": "ee9edae1-e5cc-43c5-9e7f-4c49225a5a44"}, "8ac5c6e4-4641-4abd-b310-0e4683019549": {"doc_hash": "e0af72496c7b27f92409b444b5817b600cbb45b9efca2881cb19f3a64df5dfef", "ref_doc_id": "03f2038e-7850-4f24-8f79-200d37e6a3ca"}, "0f240052-ef2a-4e9d-a108-09afacc661be": {"doc_hash": "92648b5e6dddc7308ed9b15132b4e119d2e7b485837ce844ab35ef1287f35e39", "ref_doc_id": "3d74aa4f-ce18-4c96-a00f-20c1df5834ef"}, "263b91b1-6c34-4682-b76a-0bda87688e3f": {"doc_hash": "be5a5eda23069d9855bec681f6ad596c8f2d3c013d0cd962f79098583101d239", "ref_doc_id": "e2c2e690-cdea-403b-b80d-3dafebb58677"}, "f08ed43e-6b11-4caf-9b83-ba34ca632ffc": {"doc_hash": "adf6aeadbbe790ab2cccd345a3e60b92816cfc0d0c2669e90cbd4c8bcedb4676", "ref_doc_id": "2ea97ccb-3943-4cd5-ae7e-610216037a99"}, "7d9481df-02bd-4983-85ae-4ba44b0f1b34": {"doc_hash": "cd859135d6690e925bee7a4b5dd99abd974ec40683d16ba29fd487e0e313d494", "ref_doc_id": "ffcc6ffa-51ba-43c5-a387-fbbd0ffb1fbe"}, "5a19b887-3e63-4923-b89c-7a81a7315e06": {"doc_hash": "a3763434e2ef847f7c5f002be48665fcb99773d5fe208ca19dc8c0a1c65a87fe", "ref_doc_id": "6351452c-d3c1-457f-b7f0-be1b616fa91d"}, "d43d2065-b5a9-4919-80d0-71d84c0cce87": {"doc_hash": "e6af81739cb449ac2eaa767b3ad7838eca44d91be3a181d9ef20bd732a46e7a2", "ref_doc_id": "eaa0fea2-4ba3-4d4a-aa51-e177e5cd4bc1"}, "3c4eac2a-ac7e-40a3-9d71-82ae88c80ce0": {"doc_hash": "183e217a8300a8c713c638fa6d25d988a1aab4f0c78187c5410a1ff5c00aaaa0", "ref_doc_id": "dd3d631e-8de1-424d-a789-2c1f0b19c52d"}, "6d210708-c8b1-4131-84f9-cede89ae3e81": {"doc_hash": "9951b8b490c6241181288b301bb2f1c32a3ad2d3859b45b2153290977827f489", "ref_doc_id": "5c7d819a-132d-4967-a392-beb22920a5b8"}, "89dba70e-bfdb-4160-85fd-42c38f9b0066": {"doc_hash": "1ff144fa2c31de507cca78fe8cee941c356ad048df38d28b0c31fbbf187e4648", "ref_doc_id": "3eacbb55-915a-41c0-83d7-e6e92dfa5af5"}, "094774b3-5e50-40c9-8296-43fdc4949a5a": {"doc_hash": "c6a5d990f1b12babe481aaf5d82801de2686158067b5ee953d2e4812346d822e", "ref_doc_id": "6fe18119-448c-4ad8-9d75-927231c2e1fa"}, "7a51c091-1556-4448-9eea-c04724d7f422": {"doc_hash": "ad9bd32df12e23808d89ae19bde6f703101531c71c75ea5d2afb6b3e85a21077", "ref_doc_id": "d7cdbccc-2a2c-40c2-bd82-6eb24bcddb96"}, "0f6ace27-d7b2-4294-8fd8-cd8d45841f79": {"doc_hash": "0846540d1fba759fe5bc460e4724386821ccb0f216b2d7f405a27d5cfa2384aa", "ref_doc_id": "0a46fa12-4cf5-47c5-bcd0-9ae40c48350e"}, "7c156cd0-bde9-493b-beae-65074eed703b": {"doc_hash": "7fec570d2d8945414da3adf13fc848f23d02cae2234e9feeb78b01d3f5a16c8d", "ref_doc_id": "bf4d0dac-4683-489a-8d07-8ae4f7f36d76"}, "33c971b6-34c2-4df3-95be-7d20fe0cf1e6": {"doc_hash": "dc546e0b28080f41c384c03f32397db5d4bad2d34ba89d792310b36f012d38f5", "ref_doc_id": "7cc10864-ebc9-48c4-bde6-9a4d5cdaf4fc"}, "b89f0893-3684-4ba0-bf4a-eba469ddf954": {"doc_hash": "98a14683e694e6ee1d3a49b11a54c3ec2711fbe719c898445ee82d65ba871632", "ref_doc_id": "45de2243-3212-4996-b224-e143d685c5fe"}, "869ab5b0-d076-40de-a9ba-b6de5d44014a": {"doc_hash": "9acba27e3584c414d2682d0bcda72216a6e684d540fe770a6ce67485b52472cf", "ref_doc_id": "40bad771-a053-4995-b0e7-b94c9578b219"}, "0a2db493-e8ad-485c-a5bc-5bd5ef67c23f": {"doc_hash": "61dc4a573292f6c2d42d86a9f35d2bb52142d05c3a37565c4edd433151e04980", "ref_doc_id": "4299ff68-f8ca-446e-90c1-e65c3bacb89e"}, "fda2d545-5f3a-446a-90fd-6666b1864ea2": {"doc_hash": "70905601415e3f5653cdd201f22bc7d5a1097a0e836a881e66b317c6b6c0af6e", "ref_doc_id": "4696a990-f116-4a81-a313-b251dcc6fc0a"}, "4fc71def-5c35-4e8e-b8a3-179d165eaca4": {"doc_hash": "e184928580f57b594377d25b6ca9363f1cde796e38c1724230c5c08131bca4e7", "ref_doc_id": "b9abb271-3ade-4003-9c88-406974f19d36"}, "9a6ad1c1-dac9-4691-9916-2e028c663128": {"doc_hash": "dcfaeccef9dfe080b71dbd114dac98f2b0a67df3dc73af230286fe585d1491df", "ref_doc_id": "f9dd70dc-5201-40c4-9c88-9570ee323611"}, "d3f22065-4b3f-4c86-a1b0-e7d84b6af736": {"doc_hash": "a50dae0ec5ccbe7e31c001ef5da4a4482f047697cb24329c2572a65ef222102a", "ref_doc_id": "6205e53a-d619-4229-9e6e-48deab07a1a1"}, "d1515418-2880-41a5-815c-19abae417d44": {"doc_hash": "47dc56a1faf82ff644a07970535cc112ed15d5b8a2c31254d86267b3af8bee37", "ref_doc_id": "9588a929-e332-4384-be44-202f0c450e12"}, "bd32794b-6dfd-4a00-936d-b0ec45751848": {"doc_hash": "4a3760098ac6bf97afeea8b7e0e42cdb7d6bdcf2f36cd281de7993ff8fb12632", "ref_doc_id": "8630e0b8-a2c0-48d9-aa0b-baafd59c78f5"}, "0a084b5c-2f6f-4e98-b25d-b6b4dfa4b2a5": {"doc_hash": "109b007b07737b6bd86ee30463138c224c0fafc02a0328962ced8b48b59c5a6b", "ref_doc_id": "5940cf8b-2c98-4504-96a5-91968308b526"}, "2b9b006b-f4f9-40ee-9828-3dd16de8e7d4": {"doc_hash": "d2d613eb229f4a083eba0aaea97ed026a5c67b4475d83e219adb467e812b7a97", "ref_doc_id": "d644ef8f-4871-43b8-a94b-882e34a4f410"}, "6b4064ed-e32c-4d2e-9508-86e0029c2ee6": {"doc_hash": "51fd14966413e298091313e118a93d55e9710bf0bf5f0fc55ff719f36e7a7c27", "ref_doc_id": "3bae923f-25d3-4f7d-b135-28783187467e"}, "e788a4af-90b0-49f8-9cae-8e43866b0e1b": {"doc_hash": "86cec1105cd029ba997f758bfb06dd37eb936b5434913e4c2ff46924d1b82996", "ref_doc_id": "001b33d7-9e20-4eed-ad4a-dc353380cd62"}, "5379edc6-1b08-46d0-8510-8d1f63c990a9": {"doc_hash": "7588cffd9996b29811a5f9b0d54ff06843c6659fc55d9eb7cae337fa20c17a90", "ref_doc_id": "8ed99b48-f05d-4577-a374-b6664329f7c5"}, "91b25d45-ba1f-4a85-8296-9190d5b51cc0": {"doc_hash": "5e0c1ffc73375d98ff110e74a097dc8cf1527e019d5e8e142bba7a47ff74461a", "ref_doc_id": "8f5aacbf-1d67-4bc9-9a70-eba124fd5f7e"}, "76a5b0c9-4cd3-4d66-8914-a9fc3262f913": {"doc_hash": "afc1a5cc2a75664a7e3d45b1dc68f28dc229cf82cd29c4849a277ac93942ed8b", "ref_doc_id": "614ff83f-a982-4f72-a386-9c9ead55af5e"}, "26efddfd-bd6b-4a55-9eb4-cc1c1280c887": {"doc_hash": "5c0a46348ed097691302f7744eb72b4ee4ec2bdc1eb6024c38d013f93376813e", "ref_doc_id": "799b2f64-9a55-404b-91c1-2e04af562191"}, "a3aceeb9-a865-42c8-8201-4e8b4dbabda3": {"doc_hash": "962cb2f6b21160286c1567a7a71214c8b9152a9ddc2d8a28000554534c7645c4", "ref_doc_id": "1eeebb7e-f279-4935-81c9-85f9bb9350f0"}, "7560f20a-3f15-4734-af15-a0f983078dda": {"doc_hash": "06e4cdf62437f00421e91dc05eec4d60a7153c5c1e00e003e0070ece4758ebc4", "ref_doc_id": "d1f146f4-d1e1-4fe6-8032-f26a927f5022"}, "11bc04a5-00cc-45d5-9719-8a386bd78ff0": {"doc_hash": "2ca0e9d79e3008b19eea5172ea06d583d9d984b1037da3e381915df5f2b245b6", "ref_doc_id": "782127d0-4db3-4a41-87a1-cfede8befb5c"}, "a4b9dd5d-199c-4e95-b27a-3e94ed310e6d": {"doc_hash": "419ceba90ee8589a1109605881a27ae353783ba065a03c41e3b0a4e0ab96c0e1", "ref_doc_id": "d85e239b-4eff-4603-b1bc-8eb518c6e1b8"}, "e2ef5419-b049-4e13-bae1-495cf655b145": {"doc_hash": "468f7eda32084e7f0a6d67a631ef0d29d7fc853c40a6fd20ecb60ea6bf245b1e", "ref_doc_id": "0731d3f1-c084-44aa-ad83-37f1e42accbb"}, "82fd6513-3f49-450a-91e7-86e3585f316f": {"doc_hash": "acbd2d0f6ae3bdad04bd1f055dca92283e719a9f560dcd359bf69ea2b835b1ef", "ref_doc_id": "3bf062df-3912-4ccc-99d4-558080e21c98"}, "a6c37924-4090-4a8e-bab5-f5634536ed0d": {"doc_hash": "a696fc356b21321a29646771b478fc597b49616a37710feee14b49d04c327b68", "ref_doc_id": "4ee03d3e-4a43-4f83-b6cc-2eedfaa44153"}, "9ebf8fc4-4848-4ce1-875c-394e05c3c0db": {"doc_hash": "640e2b20359c268baa4428dd0370a9b67feef7aee958e67fe2688791fbac382c", "ref_doc_id": "0c2451bf-3197-46fc-bc8d-20b9a3123da8"}, "4a3651dd-cd4d-4909-b19c-5b2078ba54f5": {"doc_hash": "61e31c7b93ed7a2f1254c919601ec3c3d62ae00d72959099af307ddbf309db3a", "ref_doc_id": "980feda3-84dd-4f09-8a91-ea033f104e82"}, "132a679e-2651-4bae-9e28-8e24919cc790": {"doc_hash": "30a6765f0a6bd50316028053a8bee410130e877d9a6b3da479bc343e0935935e", "ref_doc_id": "c02826b9-ec3a-47c1-84a9-06e320a9ab34"}, "4f6fc643-74da-49f9-b7da-d5fe56e106c2": {"doc_hash": "9d7d8ad0c0b3dba7bf4b2ff9df1fe8bcffa19a37d80416a910e8bf93542479f1", "ref_doc_id": "d1764569-670c-41eb-bdfd-2a422fb2c496"}, "0de2bed4-d4d3-4109-a36a-ad2e8d338701": {"doc_hash": "4bdcc9fe7c15b7b28756da0af4d1b7c2405dae39c3ebc1686e1462498170cefd", "ref_doc_id": "08acfa62-385f-4687-833c-59f9b917a566"}, "eecf0c7f-a3e0-4871-8ccb-bc21a256ced8": {"doc_hash": "dd1912d84ec7c381e3e8dbde7ea240884617777aa1d2f2156abd067c53949b28", "ref_doc_id": "5d88c600-ce1d-43c4-8224-93fbed4fece9"}, "3788996b-8634-4834-b50b-1b3268154386": {"doc_hash": "622956d218cdb9adeaa334c570fbdeac166e1c16ea87a19a4bce5e4b7a2f7a2b", "ref_doc_id": "a36879d2-8fa9-49b7-a282-e78b3ba85490"}, "785e72c1-c3f1-42fb-954e-6b73e279e70d": {"doc_hash": "f8c937d31dc06824a0b98aeaa1b30e64bffb18de09d4113636cf64e247ec4e01", "ref_doc_id": "c5d6db81-8c26-4998-8a05-ed2be1246cc4"}, "4e93978f-9c28-47a3-b9b6-b585a0bf5ffb": {"doc_hash": "2a6d08136c243c66cde79518ee758188df230df03b141140de7c42506850ae75", "ref_doc_id": "823a0b15-3bf6-4af4-aec2-6a627cdae056"}, "66e32006-eefa-42d8-9efd-02fe4fc24ee0": {"doc_hash": "8547c99cfbdd2b84056d3ca0a9a56102bb38823bd229cb9a20f21ab8615b944b", "ref_doc_id": "a4ad946e-c2cd-4523-b3c1-8c5ff607aa67"}, "20bc18b3-1eae-4099-a6b2-1ee6b09b5185": {"doc_hash": "43df0c499dc76a4927106d00e9dd803851571bf77884fd09e082c802cad269a3", "ref_doc_id": "998b8787-1ebd-4776-b51a-35dd6e68ff31"}, "24332e94-3571-493a-b007-501aed78484a": {"doc_hash": "0b5b63eb43221edaf331973e7c236827ac9f4f25d4ced8e8c8907e7fbfeec0fd", "ref_doc_id": "6a059fb5-a867-448d-a7a8-931e146c5675"}, "83f74b12-7699-412a-a7f2-76c7b01dbaf8": {"doc_hash": "495c29c128a359538c4b13c116c8f7efec89443cbba11af7ab67d86bb6b03a24", "ref_doc_id": "3899bb86-29b5-49ee-953d-b97777c8a8e0"}, "114c023e-6e8b-46c1-ac2b-305dd6df7852": {"doc_hash": "04bfd07080f5bd0d575a4b8db570eab4a1b79d5dede426c0c963611581c5e267", "ref_doc_id": "041d4060-a84e-41b5-b436-0fd721504868"}, "f48178a2-3ca4-47c5-ba43-b039ae34dfb7": {"doc_hash": "085f241707bd41c447b22a1f02d8c3be6d3c0c9f8970fde2a555f20e3f48d999", "ref_doc_id": "11e5b69a-3646-4ff8-a99b-25df3e18af19"}, "5124be0b-0939-4a05-be33-ed6d1ad3ef0e": {"doc_hash": "9c7c980946af4fa5d5575c57a71268ee2a4e842e7bd038f4b51ed53b854347de", "ref_doc_id": "60bfa989-4317-44e2-b34a-f502b5d62612"}, "b58f7c69-2bc8-46f4-bfcb-f49b8f1e0878": {"doc_hash": "acb21eaddf0c78dccfcb285edc12d072c22c1d6b50ef4979e8b434034b84f735", "ref_doc_id": "1d373c69-4a80-485f-a384-8757cacec6f2"}, "1f818504-45ee-415a-9968-037af3b44234": {"doc_hash": "14dbc68bd0ca33d2d2b6c5e08b15dec28427077c12d6757222ec1445bf9c0be3", "ref_doc_id": "c9d0cd15-de23-49b6-993d-a062986cea6a"}, "0ea93ae5-0fac-4268-a6d9-4f36da88894e": {"doc_hash": "b74f17b187a2ada14d58d73323ce4eec867efea97f61022d701122d2ce5d1074", "ref_doc_id": "b3f52050-43bd-41a3-bfa9-b171f12a680a"}, "6fd3a863-3ade-4d7d-a012-3cd56db73e0e": {"doc_hash": "aee4e8903fefb00f76c046c1f8ed8af759c0b0e32e488fc02c228e6af21dea8d", "ref_doc_id": "413d9d97-9c86-45e2-94bc-3a521aa134e3"}, "9e289a80-579c-497d-864f-9c86e2360510": {"doc_hash": "d3945fe22ba83beddba984c2fe98a853a062de35c734f1af8b247cd96e10a1e3", "ref_doc_id": "0f3a7786-9149-485e-8d53-d2ab5da307d3"}, "c71d55a1-3eb5-4c36-9d04-5a15f6b85d75": {"doc_hash": "7c07593024c35fce771f1264e181cb80dfca3243a81f10366c7da02afc3253e6", "ref_doc_id": "55d25b03-6e59-40ac-a592-b21e5b8ecd04"}, "a0a3708b-d3f9-4de7-b748-248814390045": {"doc_hash": "b98a2609054dc4475e5fb6a1d1e1b5fd0a1dbc11be7f9075fb249d77a39ab8f7", "ref_doc_id": "19774448-04fc-45b5-9d95-3737bc0680f5"}, "e8a0d206-bba6-4f85-9501-a47100ddc02d": {"doc_hash": "59a0140defd80ce292be71d56f346b9120399b08224bd41d6d05f62d8e7e71b3", "ref_doc_id": "55229f16-91c4-4bf7-be90-272f78c62f96"}, "c72858c1-a243-4397-b6a4-c638eaab2193": {"doc_hash": "6f7723238e7108c944fbe35b077147fe2b89621d9e1a19618e4aa10158834124", "ref_doc_id": "a6b6cf10-cf90-48ee-bfa8-0dd194fa2beb"}, "a8ec439b-3e4a-4b42-8b4a-a12df369f9f5": {"doc_hash": "6ae8fc43fbb9c3e74186b511ebd6afd68f9d766a0fe9e7b1400a3f78a7b83e39", "ref_doc_id": "4f04c5e7-e88b-4400-8332-27e1e522f8d4"}, "69497276-90ce-4304-8348-d949069c1a7f": {"doc_hash": "81c1d8e55a7ed535521245e68a51f36868cc0858527cf44427c7792c626d493d", "ref_doc_id": "141ee999-1125-4c65-a708-27d51e49900a"}, "89d6d5de-bbec-4f14-9e0e-fd24eb8b8e89": {"doc_hash": "fd1f847bd5d78c5fccda677a05f0d30706fbacc9dc99742719feaf4a00f678d9", "ref_doc_id": "ce0fb984-ab84-4816-a972-e8e08eac958b"}, "3181efed-db96-4277-9125-0d3fc9cd0f14": {"doc_hash": "8560b616c181db67b677109f9f90c2aacad30789c80c3bd6cd5b955420d04302", "ref_doc_id": "c99e1fab-dd00-479a-b311-ed5c7bed364a"}, "ad153ca5-70d4-41d4-82aa-f5a811dd3c48": {"doc_hash": "1d1e5cb404f8a972880e6422edda8fd07dbdb74c19a4b5b54a1536b1ee94c580", "ref_doc_id": "1e02f3a1-2a0b-419e-9a33-eb2624dc6cd8"}, "7a263edc-faf1-4472-aa82-5dcc3adff3b7": {"doc_hash": "70b8d414fba027b0642d1ddb4f503454b1d4c6e93f2b5fb3effd4a56bf88e46a", "ref_doc_id": "21826cca-9bec-4ff0-b346-6a05a696ea98"}, "88970c69-7b72-4834-bd21-b429818f4b7b": {"doc_hash": "9063a66e7f22e3f752b9c2ff533f12aed9b822e96a9909fa50247c775a268a4b", "ref_doc_id": "dcac341f-2e9f-4589-ae01-2d8a0c366e8e"}, "4a1f93ae-12ef-4f54-b1e7-81462ee3e6f3": {"doc_hash": "cb9db1b689df1ffef820e4038e549a4258a87f5f697c426180467a780d0fabee", "ref_doc_id": "c4328512-6ede-41f9-af02-28219ef8f0a6"}, "47a12f4a-c087-415b-a458-f4872d3c94ba": {"doc_hash": "a8191d48906a306ca6a9ab24e5e53d5cce08e41bf2af70cbd260b3f7f632fdd2", "ref_doc_id": "16cbe139-3d65-4e11-abe4-309c87ff3fe0"}, "ce7bdadc-f534-4bff-a0ac-34a3a780e20f": {"doc_hash": "89c01f65356365ae2602b64e8815d080402d8e440232876420887c9399a3568f", "ref_doc_id": "f51acbf6-d57b-4833-89ed-bfd26c23535b"}, "a3f04d30-a422-45e2-bdca-ebe69d037700": {"doc_hash": "cc45cab69eeea3ec856b8f52ecf474f9f26400bf65bcb1698f990761888138d5", "ref_doc_id": "84b39fbf-ffb1-4ef5-b224-0f9c6046ac2c"}, "37ad4827-5fba-4979-a723-81fe93ed72aa": {"doc_hash": "1a0a7adc87e2d3eca3d126f9b672e5d7173be41912af123e5ad58bf175483f42", "ref_doc_id": "e7163d3c-9ca6-4f3c-b3c5-fc170be37502"}, "db1b2035-fecf-4854-8552-cde431a5ca7f": {"doc_hash": "aa255dbad3081b0955397ae4759e3cd30040d27c86f5733ce313a7cc6d9b0383", "ref_doc_id": "45728774-bbb4-485a-9648-346fdf752c59"}, "2d1e95e6-c19f-4c3c-aaa2-825753164007": {"doc_hash": "d622872dc5f4ad3a81dbc36bc47fd77a0ab054bee5fb1fced2379d6a1c15a2c1", "ref_doc_id": "cd938875-60e5-4699-a93a-db866ce29ff8"}, "54fbe5d4-94c6-4dbc-86c4-5351675c2ec0": {"doc_hash": "e3012cf18391135e45f94ea20b7a2f098eed4c89bf8ce98f5ae65af51397b6bc", "ref_doc_id": "d75ed7dc-1e15-4d52-b8c3-aa4253205994"}, "f03f0dd5-da0a-420e-9a2e-0173f24aa3f0": {"doc_hash": "f9526a9f65263c16f34b6f80b16cebe47ef2c71c71459c5beac2159d2d4216dc", "ref_doc_id": "06d1a82a-4899-48eb-88b0-cdd6f5bb0736"}, "934730b3-4668-4560-a4f5-a867c8112e2c": {"doc_hash": "b51b1e86b7607be1f3ab9463efa186aa33377d7c5ed323975e5205803eb6e375", "ref_doc_id": "d8ef0b81-1d20-4362-b004-6fe0ba30c4fb"}, "52e349da-7cdb-417c-82dd-255634f2ad0c": {"doc_hash": "bf8e17febbb359f67b658d1797039e7f2a32cd0d77ceee50eeb32887abecdf87", "ref_doc_id": "fd9709d5-5f44-47ac-9029-843ff86a12f2"}, "d75462b4-29c2-45b3-bbe6-7c62fa04ac1a": {"doc_hash": "81ebf58f609ea3ce42f4913929ba094c1d032bee38db6959d5e3b6eb968ffa30", "ref_doc_id": "16b1632e-49af-40bb-8506-31808c47b56c"}, "7077c9d6-d58a-470d-b8d0-9ce5a248283d": {"doc_hash": "9de84ec65f28c1fe3975f2f0fcf00dce4f5d226d72e48981c301eb7313db5744", "ref_doc_id": "66fe3bfa-48e0-4808-abf4-dbda2c24efca"}, "50a16d67-00a9-4c58-8117-c3a9803655ec": {"doc_hash": "928c115be0c7f5865fe4c2bdceeb8cff70f1afb9da79ab065693f8edfb904712", "ref_doc_id": "406c6cdb-5657-4f83-b11a-79e014f1cad6"}, "f6cb2874-fbb3-44a7-9178-c682223b5a98": {"doc_hash": "c41097e5a9e90b33b179126bc2f72a97b1ebceaf97450132ae1f616d4d67e5f3", "ref_doc_id": "55bf25df-e88a-4f7e-b25a-0b324fe9091b"}, "d6090556-16a2-4f9e-827e-19a7261de1ff": {"doc_hash": "a425d07443476f4f0da1c6b686246fb07dd8214f71f7d897eb2d8a6ada28f4e4", "ref_doc_id": "2a7dbcf7-7a7d-445d-8f84-41e4658f9e2b"}, "9a9c5ba2-3d2a-46fd-947f-957eb27b25b1": {"doc_hash": "28f1e285459e411ff42ee3648bd121d9a0823b404c150a062a7178c57a755aec", "ref_doc_id": "ffc74536-f958-44d4-a934-1d5f93aaa6b7"}, "03ee442d-2644-4397-9080-58693bc53bb3": {"doc_hash": "924613d580e4408c6d3590e8e3ae818d4697052b9b6620af4da75b77798a8456", "ref_doc_id": "d221c685-94d4-4035-b833-ecff278f92ae"}, "9a6a6fae-bb8c-4777-aa39-1db6d12858af": {"doc_hash": "43afbaa49497a003c48528e50cf9bd3ab8d986a00d85b15b248e094a18a5ef82", "ref_doc_id": "4f4421b6-b7cb-461e-b60c-c820f8baf627"}, "06f0b7c7-6c82-4adb-bf3d-4ac83d90ee20": {"doc_hash": "d94d72e316a86198cf0074f50c5a5488ba8aec1dedd33bd875b488659ff35689", "ref_doc_id": "776da2b8-81ea-43fd-bb9e-fc4a5c7727bd"}, "e58b3e28-99ba-4f17-897a-071ace42d589": {"doc_hash": "e2159b136609bb3e44f00b26a6315ed665b84b8f44bfebbb3016aeb8bb4f6514", "ref_doc_id": "d5eb47cf-3001-47a7-bdbe-5f46fec9929e"}, "337a0202-9196-49e5-bade-50c9d36d4f2c": {"doc_hash": "828204e311c8e4a24adbea17a0d2e8c328c33aa29dd971d7174829cb837e7e63", "ref_doc_id": "a2ef1a9a-3783-4567-9000-5a9356a89fb3"}, "17afadcb-c53b-498b-bba5-42075596f5b2": {"doc_hash": "7c56e5d3b09774e13eb540e8c2fd76ca8cb0695cdb42616d81a46ba80cea6527", "ref_doc_id": "221383d5-9013-4a6e-8b30-d94770a8b324"}, "37ef492a-70d5-4c93-a57e-075ea43232b5": {"doc_hash": "2ee89361e150e4fe0118d8638d87e6435d5743ab0c8a377c6012fd9699df7715", "ref_doc_id": "883efc58-86b7-4a78-a8cb-d45395be1e96"}, "7e5c272c-7f1e-49b2-a200-638e31a12ad6": {"doc_hash": "76f0ac772ec41c66de7acca03ea127bcb9d8bf7ff8871dbbf1d044fe9f4c8731", "ref_doc_id": "4264a5bf-8a0d-4f20-8f2b-2bc4c7197ef7"}, "640e6e3a-edf9-4e79-8ce3-308eef9d5672": {"doc_hash": "1311dc943f9bed497bc5bbd1b61670029c990ab007e8654778e8c80a05333cc6", "ref_doc_id": "14e10ba4-ad7c-4720-a8c0-800754e13e9c"}, "4ab0ad77-404a-4ad6-a7d2-99036243ae8c": {"doc_hash": "db60b9e9e197b5ddd06c55c7ae69c3b81f7880e25399fee3cbf16eae1cd61365", "ref_doc_id": "e6456a82-4d84-4afe-8328-3cd17fbf6367"}, "1ccccba6-924c-47a0-8cfa-5da1eca00bea": {"doc_hash": "36423a1ec341ef3984fdb2e2ad4274b1fd9d4745f79645343ddadb4b50bba94f", "ref_doc_id": "0606545f-7a28-477d-af67-d257770ed5e3"}, "7cae8d57-3cc6-456f-91ab-88fc3578c9b6": {"doc_hash": "af667a7aa3e694393809e41929e657639f2b210697232295e30dfa7fb6ddae53", "ref_doc_id": "289f7679-e7d5-481a-b429-72389e2c707c"}, "e0ccc4dc-42a7-422d-b7c6-738c5e8924c2": {"doc_hash": "c74607e810a9cc2aad6925155012a466efc9c075681a87ef876cd3e8a0123c37", "ref_doc_id": "73a3cb42-1fc1-4821-98c2-50bb190db47a"}, "ec628ec3-4d2f-4763-b3aa-e2fd23ae1739": {"doc_hash": "0463b6071cdba796aaad05158844e3977bd32c1c7c94e207a7e69bbb9afd2fff", "ref_doc_id": "a9781e5c-a7cb-4022-991c-ef7559a420b9"}, "69395d8d-c7ab-469f-8e8c-b70c223c3818": {"doc_hash": "c48d943e84408367ba67890a026ad7059ed2ba9d947da9ab1f10ce5e28d02840", "ref_doc_id": "de335cd2-cdf7-4d23-9c32-4f345abb07d6"}, "74095650-1c4f-499f-9d70-630004b5912e": {"doc_hash": "9d4c92dc98741b6d5524d1e853d0fc0884f91df57ef2617a01bde1a77773f0bf", "ref_doc_id": "245a971e-72fa-432e-a55b-2cb77ab9531c"}, "2a36e9c2-8033-49d1-9b04-a6a88631e40a": {"doc_hash": "d7b30fb2b965a1ea83ae7003938d3d9023ca82296d5c4f33c18c5834aa0b1a10", "ref_doc_id": "e7887dbb-f3d9-43ae-a923-bcb364a8a6b6"}, "cc7dcffc-0cb8-4bff-a53d-72d2e042bbd5": {"doc_hash": "c3f084b407b3e8a6366ab7417ae08bcdf5f28466ad6e743d02ebbebf65422ea0", "ref_doc_id": "c0df6641-4909-45c6-8865-183103a64297"}, "eb5638dd-95c0-4961-8c72-2e8394f1788f": {"doc_hash": "cf77fdfe38f4dcb802d2b305536c2dc9b64e79503a6bceef754ee70948c248d1", "ref_doc_id": "ab61c23b-0ff2-4f6d-b1d8-dd761400608e"}, "3cdb1bcd-baf7-4cdd-bf9d-8b475f0248d9": {"doc_hash": "bc20e0d7aec76d80e2b5a521c300823add325e676307856538ae2e679ee91a07", "ref_doc_id": "c0e24a16-45b6-464b-af03-672028178965"}, "b3e8327a-fcbf-4394-a713-a126bdfdb9e6": {"doc_hash": "0ae381410204feddc6779db5a6a19da4c64bbb0330a1371b17c21db2ffcd909d", "ref_doc_id": "34a7b795-b0bb-46d3-932c-60697b9b47dd"}, "4b5cd42a-5a4a-43b7-9f28-7c9022760ffc": {"doc_hash": "ff984eb685b5f4c7f7841fbade4f1be6f4362b5cb54b362e2e410d54d62cf51c", "ref_doc_id": "44e1e962-fe04-4c94-b8e1-1595fc999d6b"}, "4094f98e-bf34-4017-bb7f-be81ee3b4439": {"doc_hash": "6650e702b0ad7abd88437896266c3a7e92e6d6ed477ca81f57144df5bea2c28e", "ref_doc_id": "4965d2c4-9f17-4409-914f-42fb96264ef4"}, "a216c9d7-a63b-43c4-ab9e-728f6902b387": {"doc_hash": "b8100a5f8d4dd298aca6ea31f6b4a74b00e1a82b3760222a6007a06d7418934f", "ref_doc_id": "f2c22313-a8cd-4ba5-9105-af0dee4a8ab5"}, "b3294c93-1479-4737-99a3-2d8d286aa3ef": {"doc_hash": "cdec9540269809f820b1011e8b63aaf176eb8b33af242322d385f3dddad43e1b", "ref_doc_id": "fdaf83e0-8e06-4d74-ae1c-cacb98a2820b"}, "e42bb6dc-2a94-4963-b9cf-bb2013e10c57": {"doc_hash": "d654e0b5e731d89bed4686876f0e1d65d70cd6438a0e839dc154bc2f826e979d", "ref_doc_id": "0d429a06-4ee1-46e4-8c92-661315a5414b"}, "ce3cdc3e-20d8-4dd8-8f1c-ece89795c8a3": {"doc_hash": "eb985879114cf04e2f2c849292aef9973d13a81b73f1225a4754b30db12a9563", "ref_doc_id": "e5949a58-30d5-455a-a8b2-ce13210ba7cd"}, "379a0b8d-fd3e-471e-900b-52ff6dc66395": {"doc_hash": "f0f1212e6c3a4c04689eb53d87d33528aa4a1efbcd2ee14bce0d43f884f7f17d", "ref_doc_id": "ebba8aa4-dbc8-476a-ac58-5c25f4a70ce7"}, "29e57b72-f770-4c1a-bf6e-2b0c7a8f6115": {"doc_hash": "626961dc104507924e70769ac7ae9df7b4ded77a320add7aed730431790d3073", "ref_doc_id": "c618f7c9-f7c9-4e54-a50b-29243ec37afc"}, "5d510786-e829-4103-b243-f87e0ddb0dff": {"doc_hash": "71821fb4ac2433cafa7a77695a78d2b14fd03e16fb9207f3a2db8a259782fe71", "ref_doc_id": "ea984ad7-fc4f-4158-b7d2-f01819b68ea2"}, "7d9af7d2-433d-4aaa-9759-01bacda6e812": {"doc_hash": "4d4dbd26c5c7b72228290bf8580126bf579fecc23a04656fc761a64654f98517", "ref_doc_id": "6f337a2a-a7d2-4d33-aa02-46cfb8d0f44f"}, "cbf86779-a985-47c4-9391-26f3ed566d0c": {"doc_hash": "1b0e786893983d2fbfbf1e1750eb4e3a470acb8c746ba52d418c5150233e54cc", "ref_doc_id": "4d153c66-4bb3-48ce-9549-798e288cb930"}, "f2f6a85d-f944-4405-b047-928ea6de9739": {"doc_hash": "8e50e3e2fa2695f807ea08f8d60d7087001d35b803f182dcc0b99face8d155e8", "ref_doc_id": "41c0703a-fd80-4297-aaef-e2f073d9f66e"}, "205e8e6c-4abd-4b1b-86d0-54497ce18440": {"doc_hash": "bd6e378546f278612522aa3f740f51427dd0cf95b44cf53a23ceffb65776286e", "ref_doc_id": "4afd7ff3-8575-433f-8068-ae41ffa531be"}, "d0d86229-a7ee-41ce-920d-764aa178952a": {"doc_hash": "0e096660adf9a6baf3bb0b46883d1fee77c60f56b1b80a7553792e82cb935929", "ref_doc_id": "5bd18c16-d90f-455c-b2b6-1100be8d67e9"}, "70d7454d-de7f-4070-bfb8-2dc2923c67c6": {"doc_hash": "996cc47d7a6c99fdd974a979477be6ac7e3da277c45428f9820a5929362d6a49", "ref_doc_id": "45507c2e-d73c-4285-9897-b91bda2de562"}, "b0055ea2-53ce-431c-a188-402ecffd3e45": {"doc_hash": "1e075a357b10dea048528ce2846e7008357ffa743c9495b361b3a5c040387f8b", "ref_doc_id": "84fde963-f8c6-46f0-9780-457227dfc42c"}, "f96a88c1-313b-4d6d-b0c7-4e52c6798d0e": {"doc_hash": "75adeb20bd14104544600bdb383b0246dca9cf30362dcd10ca13707e60cc4b3c", "ref_doc_id": "2085ea9e-3dc9-4291-90db-e2b48fbac488"}, "30f32655-06d2-457b-89c8-65cb624ca0a9": {"doc_hash": "5811d2b62edc95b830a10daf78236508f40502e0ab105726228172d15bcd3057", "ref_doc_id": "c2ab6a43-ea4e-4850-853c-c55ec8b462a1"}, "44d89d83-d4f5-4207-a1da-8093c70199fd": {"doc_hash": "f79c59db0064c7e015e64e29d961210d7e6f7798b6c29a9358b06758cb3583c5", "ref_doc_id": "478c5ff1-78dc-4a4f-a8d5-4562791bbd52"}, "f6bd6335-f4e7-45a4-8e4f-c2604090f002": {"doc_hash": "3b0816410d8af6ad79323ac18bb3b9ecbc3592108c7ce59d59fdd04801693bb7", "ref_doc_id": "1eafff6d-a911-4ad0-87c5-e3eb6b1edfdf"}, "2fd1a9cf-ac2f-4dc1-8dc2-a88f4c9b36d3": {"doc_hash": "89fd7fded78f6ba8c89986e8d6a9ccb00785b65f910563105437095d9c10dd4e", "ref_doc_id": "4b234fc8-05a8-4203-a6b8-ac03721d4cc0"}, "e13cab70-b017-4d85-9a41-e758fd32ac07": {"doc_hash": "f3d0f8535664a363fb8b6da61f805907933b84bc56c3c59337d49f644b1c313c", "ref_doc_id": "b3499306-1091-4802-9da0-bf7637a7ec21"}, "b7004f00-09b0-4347-ba0b-fb56fce05aae": {"doc_hash": "3e12ca6d6ba1d71a106621679b2f5f9d40cddcbbff37c826532957244faf7c33", "ref_doc_id": "cb335aa1-8c48-4133-a75a-95e256028064"}, "90364b52-1e97-404c-9b25-3004d2dbff1e": {"doc_hash": "6bacdbdf320b82c259282ab826d519a60c053198dcd1ab772390425baaa25b38", "ref_doc_id": "53dd30a4-3b16-4418-b6d1-d9913771a732"}, "d848ca4d-6da4-4068-9952-23f49563d816": {"doc_hash": "098ae7972106f32b4f2056ea011b47209a55c78ad55ec1c56cab0dbd46d91947", "ref_doc_id": "bccced0e-d233-476b-ae13-be305bee43b0"}, "ecdeabb2-7ae2-4907-baca-91c34483dd87": {"doc_hash": "1ea3b951b7754419af393b75a3cc8fa4be0e4ded6587d1db240168c6de160077", "ref_doc_id": "55916d8a-8083-457a-8ae3-0c9f43c81e10"}, "0090978a-cb27-4586-b011-ed018cf718f1": {"doc_hash": "eb79d4c20d775050937995b1f898dea5aef607a41adbe6bbceac2fc649f94b53", "ref_doc_id": "e05f3392-1cb0-4615-82cf-3c8bd3018d81"}, "7168469d-0a38-4506-8125-d873b136b1c2": {"doc_hash": "d2612c1dc083bc438c6645ce9d48fdd33bc0e1f9e2929c33c256a471af18c720", "ref_doc_id": "24007bcf-1528-49b8-a8d1-712f8a18f387"}, "6960241c-2a3e-4602-a3f1-a57066aef5f6": {"doc_hash": "0258551dd2b7f720ab5dd1bdbad3d1c5e07a5dcd3c682238855df5f644e0f7fb", "ref_doc_id": "3201d5f3-3963-4645-bcfd-b7cdc238418e"}, "79a3f1f8-eba1-4798-9518-ce015a976390": {"doc_hash": "35539a48a5e161a7c65c2b32cfefeba5de21fff2b0bf08c1b92d127a352a9356", "ref_doc_id": "6bcca076-b41a-42cd-b690-b24da056a1ef"}, "a2edda8d-c5bd-4442-817e-12fe77e361b6": {"doc_hash": "302f45552f2cd1b80bc1a3797ae5321b2a16ef8e2fdb0d988f680c81997e3af4", "ref_doc_id": "02803c86-e434-4c97-9e8d-fb8c051aa222"}, "e94f6fe9-c2ec-4027-9313-a980a2c42966": {"doc_hash": "628e9467fa119f59a1e72ee8c27a5141435be1edcc1cb061117262d3a3b2ac2b", "ref_doc_id": "e96ba817-aa44-4e31-ac55-f30ebabe5a1f"}, "27d91b71-43c7-4e02-b948-dc54e58c125b": {"doc_hash": "03142974771e3186ddca947f553c17e00acf207608af38e03443662ffceab565", "ref_doc_id": "66ac0ee0-d9a5-4d11-8e2c-85536772ba12"}, "3f0118a5-cdb1-4c2b-b7c3-30fb943979bf": {"doc_hash": "cc58edc1cda342fe50cc14070fef56aefddd529ff31bba2c07f863b818b06358", "ref_doc_id": "c2eaba87-a230-4da8-8c24-6cffb852c16f"}, "2d10bd74-e7a3-4d4c-90d2-27db6b46f845": {"doc_hash": "208c7e9aab65d3dfa2f6b818562a1479d17cefd21d8d5ba092bfb254ecbeedc4", "ref_doc_id": "6fe5dc0b-b4fe-4df1-8fde-f464b81e8720"}, "04dad0dd-298a-4f4d-b23b-65fe78b04d4c": {"doc_hash": "1935d1d917272fa21c4b071e034d6b2d2b8eb20612f595e4966329d4edda6ed6", "ref_doc_id": "1e02ffae-4c71-4422-8658-c79f666d2cb2"}, "d70984a3-f7e6-4fa1-9d46-fa8b3a4105c9": {"doc_hash": "c3840cd09e0b2b9d1bdd1905fdc92d139b2b8ffe433665f94252e535bd94cddc", "ref_doc_id": "ce2da1fb-65b5-4670-b0f0-7703a92d1e94"}, "db78575e-5cb9-4fcb-be77-1d3e69b0f14a": {"doc_hash": "705dfb9393ec6361d245b5fb57cdb2db3d879cee3f10d2c8f3aa9a9114c8bb32", "ref_doc_id": "f78e2cfe-c481-42da-b980-6f24ca6a940d"}, "9a66c001-1f04-4055-9d9f-9c7e220cac68": {"doc_hash": "d10174d527bcaf02d81ba9fa0bbdeb9e115f28923635a8b0b4d130fb7ab96862", "ref_doc_id": "6f25bc85-d357-4e43-9066-17f2531dd6ff"}, "925ee79c-fe3f-44e9-9a1d-1caa503fa5e8": {"doc_hash": "3c6d8190dabe7034abc60a3f0557a07a39bb88129e7ef51edb4fccf124314ab1", "ref_doc_id": "481a1677-d315-4773-99ec-7623e5c08337"}, "3840be18-cd46-4b8a-8868-a743592e4d4f": {"doc_hash": "ea55c0517fb9b59e64989a937f248d5a2c7da41cd7a388b9ef0deeda88c19317", "ref_doc_id": "378963a1-6086-4e3b-8882-061613d98104"}, "0dbda18d-aefa-4040-ab4a-e80033203ced": {"doc_hash": "9f13a5da865e7d57c28047805f6badf6c79aa23422cc8f2d9145823bc0ad4117", "ref_doc_id": "1fa7c3c8-a08f-497c-8baa-5151a8f98ee6"}, "82177585-caa6-4a30-9370-27f2f8e71fb1": {"doc_hash": "25e781f36ad995e441c2fe662f066017edfbc10b9ac46967a9e7763572c588b1", "ref_doc_id": "401274ab-6f05-44a3-8861-4225db8cd977"}, "908f86bf-c500-403a-9506-20699ac929fa": {"doc_hash": "6a9c8c54840428ef84129b3b874b2d0520d76bee56f0b3046806ea748da44c41", "ref_doc_id": "ea414d4d-040b-45c9-a310-f2d6ddb79bde"}, "00cc3bf8-5ed0-4d73-8cfc-1b5e6e097f08": {"doc_hash": "7538e0c294fcf012ad9843b543df5e227b1e5c1eefed5c3f92591e2f1da52293", "ref_doc_id": "9d30d7d0-3d07-4a3c-8542-996842025093"}, "39e5347a-6ed0-4700-8423-746b0a314e8b": {"doc_hash": "d833a36e4cd2ff2171896aac6837ecac296d99398734b92bbb4f6a154cecbfa5", "ref_doc_id": "b5347ef8-ce86-4f2b-a937-e9d8dc7e01a7"}, "dd57b6f2-293f-4b55-96ea-c9cba0c33b91": {"doc_hash": "d9641a60e9973a6a526bccc5117018edd026947b46832e0e0df6e5ffe0f9af06", "ref_doc_id": "8cac0e9b-358c-405a-8723-b647d143e5fa"}, "9b7546a4-7233-48b9-893d-21aafc033c79": {"doc_hash": "1315276ccc6a319a38b7226129ae8211ab89eb8cf9720383b6fa57286282d30a", "ref_doc_id": "29fa8b25-95a7-42da-aeac-878e296777ab"}, "510cd246-9688-4cf7-88b1-36acae61f406": {"doc_hash": "e4b67976b2143b688ad6c83b05c63b0748f7e91efbb17cb6dbdd0e297ddd3ce3", "ref_doc_id": "9435875f-9fd1-4244-8f08-b520514c0018"}, "8b97697a-a627-4402-bf1f-f5796f859320": {"doc_hash": "5c5cdf9b383759c74ad5aabec5364db11c5a8023c61a3ef403abace62c2bef51", "ref_doc_id": "7f13d732-2938-4233-8a9b-698601cbf148"}, "88b2dbdf-fa2f-4d41-92fc-97ab11fe3b95": {"doc_hash": "564744ff271ca1231191827bb47a0aa8aaa4ab06fc1c79ac0fcc393fe3293de5", "ref_doc_id": "e6f31b5c-3fab-4c0b-8113-f83ffb8b7658"}, "94d941a3-460e-44cd-a2ab-b46941670709": {"doc_hash": "2814726f1e5ef735dc1f7a8de6a7e2609bb7b73d5022aca7f85eecf7e51b12a6", "ref_doc_id": "49ba5ce4-a6ef-4ff5-b1d6-3dba032bc08b"}, "4a9cba74-1145-45b3-8867-c523e12bef1f": {"doc_hash": "6f6d85b61aad7e2c3f329d881007cf1f3d21f08ce92926f8ec1a2d86029bdeb0", "ref_doc_id": "35762924-ed8c-45d9-b69b-52a4bfcff22e"}, "d29f859d-5cce-480e-9c2f-0da141aa8414": {"doc_hash": "97abd875d81cf71b2604333224dd661d468afeb2aa7562f7ec779a6bdb0a1a44", "ref_doc_id": "f4fa3200-75c1-422f-8ccf-b677da1d0f3a"}, "c48f56c1-abab-400f-9184-85c6bacbd2fb": {"doc_hash": "28afc91733469acc5486d6b98ef068d2ffbd22c6a3e4ff85ab2145f42f387558", "ref_doc_id": "86b3a169-a44b-44f3-9390-4a3b6c5c60a4"}, "77833b70-6766-45d9-bf92-bafd7d395cf6": {"doc_hash": "268ecf787a6281a809a1e7e541209275a01cd153303a2bd4e2c83df43f9564b8", "ref_doc_id": "d884034b-b6a7-454f-be08-95f95d4d6a90"}, "0cf597e2-fb88-4de5-9299-17e4f169cd74": {"doc_hash": "aef36fb460797f93f0a91b2f39e1d944d091045ef2b99214fa10362c91fbe95c", "ref_doc_id": "3a3843eb-a6ad-4d8d-a579-7d267064a61d"}, "d9147d69-a468-47f7-b50e-7fc5ed0588fd": {"doc_hash": "5903107e304f14e85cef89b60fa6e258f1fd75471071585ef665b690496171ec", "ref_doc_id": "866b26a6-0b3e-460e-8113-400ead72ae68"}, "4addacd1-6522-4376-bcc3-0db3ce3afb10": {"doc_hash": "cf4ba52a6154e62d8da6f839fe3082f3ec6041d772df1006a67b1ed6776a58ca", "ref_doc_id": "270b62ed-debc-4dc5-b857-332b513e43f4"}, "d40443ae-5347-435b-b6e8-fd35068364e9": {"doc_hash": "7e1ce07b9a946a5d87f2904d2129e85f5c8b197ea9fcd992950b47decbff2735", "ref_doc_id": "1616fb55-9234-4cb2-a62a-b9d1e88dc468"}, "03db6947-f555-464a-a802-f879d3a5d098": {"doc_hash": "51b066f75d3b31d53d64f23d833f75ffc176b18eb32db727995e4fdb7633e331", "ref_doc_id": "5aa314f9-47ab-4b28-9aad-ef7628083d4c"}, "5fe40b60-7581-4f36-b8b4-db19e7b324b0": {"doc_hash": "4c0e56437853df46e0cd462ac34f1b3232cb7593abd693f1b4bed0c9af43c924", "ref_doc_id": "91344d28-3724-4bfc-ac36-16ad3ee65bcb"}, "b9d9e1ab-796a-4273-addf-224d5a0bfa7e": {"doc_hash": "9554347ab3e9fd9c8dbb2a6b7884c01d35f1db3e8c23ed77fe8c42def662814a", "ref_doc_id": "276506c8-2f98-4eb0-95c2-922253ff9e9f"}, "376c1e79-b5a4-43d1-8d70-301a10656fcb": {"doc_hash": "39ef7792ac5bdb0cd0050eed34b78352d40913efd1713d467655c176490552de", "ref_doc_id": "197945d0-edd0-45e7-86d3-9c0665664f62"}, "4cad8408-585b-4035-bc5a-56f41135c614": {"doc_hash": "b12a959e8c05e150b155e91bede310a25835f0e0e05f41ca2bbb51ca39a14fbe", "ref_doc_id": "cd65bde8-51f4-4b3c-86ee-c8e5ef7c132f"}, "a988c693-1444-4f3d-a5eb-72f4a83ad895": {"doc_hash": "9626937bc33560bcc0b66577084ccce801b7c36a012cd864af0f348cfa7d90b6", "ref_doc_id": "3bea2041-1507-4622-b496-e657a93bdb43"}, "048f02ce-f57a-4c72-b659-ca7a312bec9c": {"doc_hash": "7f312e1b413d784284e6fcb1ae986c95f1880d714ab9f3d75eb1068117fb6434", "ref_doc_id": "8ed05a20-9baa-45bb-b00f-163efb636f96"}, "b474ce02-ec25-42aa-8274-52e9ad5ce9e6": {"doc_hash": "1322a87e1be6b1669866c55f7ea5b8c67771a7748618b3293b5f25f22f3401c8", "ref_doc_id": "0b56043a-83c0-4120-89a7-a1fdafeb857a"}, "cc94a43d-2472-4bab-9b4a-333bc3521ed0": {"doc_hash": "99fd1c8cc8faf90860117094f277b5d05e0c087fde2a3e6c2621a75b195e496f", "ref_doc_id": "d1310810-58d7-46e3-be63-2901bb50b75f"}, "83b2d1ee-abba-4997-b4ea-9e893b3c18bb": {"doc_hash": "99324e5540d2d077cc3e0720078fb1e918e422ec2b2f32460403f0db445479a5", "ref_doc_id": "c2c58793-ea85-4121-930c-c9a266084a7a"}, "f41991fd-36db-42d2-aa1f-b7f686c0ed08": {"doc_hash": "b2e6401d89ea175ff33f97768bb82a453991347817bf4ee107a89b74813d7e31", "ref_doc_id": "12db3546-073c-4e64-a34c-8886d803bbff"}, "2e450b4d-717d-4550-b6d1-72345ab48343": {"doc_hash": "81d14ae35452c856dae8ea794dd28f81bad0cb8bf63f80d3e6ede27cfc674dbc", "ref_doc_id": "b44b9e93-d979-4f82-b02d-8430c5b1ccdb"}, "17c88e39-02f3-4b57-af71-a7157aa6be57": {"doc_hash": "efa011873d4845f2a30529513dbe86f86c20376dbdf526636b31a1b209de8cc0", "ref_doc_id": "b9324825-633c-4c27-9e23-781247991b8b"}, "861ee9f2-5578-43cf-a806-c7d27426c515": {"doc_hash": "a735e86c5de1cc1da8611a81505e62c8a7bb81f5def080ad57d215147f7ccf7d", "ref_doc_id": "c445e71e-24f0-442e-bc58-1290b154a2f2"}, "191b8f57-77de-4487-865a-b9d42c5ff7ac": {"doc_hash": "3b93b61c27eefbe31cac0a3f75cb224e0e6de3c177c336e30517423d68dca9f0", "ref_doc_id": "c136f413-ccfe-4233-abad-1755a2692758"}, "b18b82d3-5001-44e7-9f9f-9febfa5f7e15": {"doc_hash": "31de88020af8aac417cb710de2ddfe4d9444dcb91056fda8ea1cbff1139bf8b5", "ref_doc_id": "703a3a37-e273-4325-a518-b4654744e863"}, "e82cccbe-2b4d-458c-9e1d-cb31ad2061ff": {"doc_hash": "22bdad3e53da1d12914e8103a2d9881f53ae98de00a87b3a485246661c4407ac", "ref_doc_id": "40ff4c5a-fcaf-46ec-af27-c219e5262ac6"}, "5b861b2d-5d25-482a-9422-3c315812b116": {"doc_hash": "fe3cf5104b6e8afd32b5fe800912a51171a78ca4d09aa4ff4a24d3017440fde3", "ref_doc_id": "69f7330f-837d-4cfa-87ee-8b2237da04d2"}, "075291aa-fe02-43a8-a09e-139140fbd040": {"doc_hash": "68356bec4666c0a83e7d7997e7b35976b3c809ceec9462040305c357ac2dc39f", "ref_doc_id": "62deabfe-cdf4-4c56-9744-164421f87fa0"}, "f6316c96-d9dc-41e1-8f93-3cfde2eaadd5": {"doc_hash": "ad765b8dfef4dd33c8f5f24fcc7c02bdd2b41dd2a5aa3cc4984e828253a619ca", "ref_doc_id": "0a14cc0b-4e0d-4899-ab25-897f9d85dfdd"}, "8d94bce9-0de3-4ef1-bd37-081a51d9d872": {"doc_hash": "ecf1bb9262ebb96c63b2dd7e1d98d8ffc82a19fc987ce9e7262bbfccf61359e1", "ref_doc_id": "f0b68a28-e9e0-41b7-8ba0-bcfefa8e2d00"}, "5831fc0d-0730-48f6-a48a-a8f02b74f7ac": {"doc_hash": "c2cc706d61857bcdd0764a260b1c5f3014727279b23242918e0feda931f95be6", "ref_doc_id": "66dbf239-b85f-490c-ba87-a44df04e321c"}, "e017c295-84d4-492d-b48e-2567546323fe": {"doc_hash": "047b75a29cb30563647fe2d32b857d5f4def97fba51c933cf15ae2b27a9af737", "ref_doc_id": "f728099c-6791-44a3-a87c-8a6c3aafff97"}, "d49b13e2-49bf-41d3-b6ec-74d3f4822234": {"doc_hash": "5529f3a25e495148a9d1d47327c402bcf2bbb45ad0d88cf0bc4c459962485585", "ref_doc_id": "2c49c581-caa6-4391-9dc2-edce75451803"}, "1d80ed1f-0250-44ec-9012-aa0f965b6979": {"doc_hash": "19e0bd9235d5bc536bd7d0d337d64e93379d06ce890d978d91f9162de72e04a3", "ref_doc_id": "760c1161-2d01-4f0c-9d49-e19405a310b0"}, "5923f12d-8ebe-4235-98ec-4474505f86fc": {"doc_hash": "001054f25fde48ba4022d69334706a7add228348a68b4b0fb31744a01c30e98e", "ref_doc_id": "769cc34d-1fb2-4e38-9825-45f893d6d96c"}, "b70fb096-7b33-45ea-bad7-ae800f2f23c3": {"doc_hash": "eadab528e0543bc98b3b0d72720dcbbc26d27ada65ae24be8a6a72a972818dda", "ref_doc_id": "f0383d59-be21-4b91-8546-879eeb492feb"}, "85cd62dc-1c0e-4645-bb8a-4e1ac3af6185": {"doc_hash": "8083468fc5dc6e02c17649b66c92ed328d3a75d3fd101497ccdcc3e8ceefef76", "ref_doc_id": "9a9043a0-0701-4c07-9b8d-5f4c3daf8d26"}, "ab6a841c-63ae-40ec-852b-346e8931cd33": {"doc_hash": "7fc68fe3731f66d822aa2d0b17faa04acafca2370824a101a146c34be31fc19c", "ref_doc_id": "5138633f-ff54-4b70-8070-cb8f9b06ed5e"}, "e45c9212-ae33-4419-a49b-2aedd69002d2": {"doc_hash": "3c2fe5f6b904300dea86724467900f769206f1f220183e89462e5f23fda6f5ca", "ref_doc_id": "1e7ebabc-4efc-4e3a-a10f-f7be75c54a39"}, "1e51d4b0-d474-488a-876f-3f3df674883b": {"doc_hash": "85a55cda418511ee93a32220f6d552aaf52d45dc61ec9434ffe84b82707984e4", "ref_doc_id": "c9e937c0-1483-4cd3-a4d9-711199bf0803"}, "62b98b2d-1d02-4887-8572-f2a8a21c7aa1": {"doc_hash": "f752458731c9842232c269f7b1101beb102c7f565695d2c0cede8d57d4cc45c8", "ref_doc_id": "a5313cf3-f8e4-4c43-aad6-d8547e1ddd06"}, "b74c4004-c62f-4ffd-a6db-6abf7108ac15": {"doc_hash": "6c2932107890c99a0ef73e7757922fcd9b034c0f6d5f0617ac258a20e4409a6c", "ref_doc_id": "e333cd8e-9045-4480-a0a2-259f14a27359"}, "88a71a14-61ed-4599-8b35-021b5f79072a": {"doc_hash": "13c605b2fc111f5e4b71bca3351c549299126cab08842ec44cdc87ae16820c7b", "ref_doc_id": "c43777d8-ac4c-48b9-af70-d7c5f6721041"}, "30d70dce-2b90-42a7-b3ee-9ce107a3b60a": {"doc_hash": "7a0fe0eb95330f45e8ffe67c066b541ae9ba6400cf533187ccc93c3400ba5df8", "ref_doc_id": "289e05fb-5414-40af-b528-2d69d16fd16a"}, "682698c1-f4ac-4ca8-978d-93edf96d74ad": {"doc_hash": "79341c8def26ca14a6709d5c1268625edb505ed31c9fe65708467b3429cb2133", "ref_doc_id": "00c259de-9b40-49a1-80c8-ba39ad23f253"}, "8e3c4538-e8d3-4ca1-91e0-dec38fcf6424": {"doc_hash": "ebd288f32bf533659f78c266b3f3e5ed1690baac32cf2bfb8d600f71e91db56a", "ref_doc_id": "94d3c802-ac58-42bb-84dd-33d0da502ced"}, "2dad6f7f-3d66-491b-965b-8e2bd3e537eb": {"doc_hash": "1157a3b654589bf9c4026885c2131409123794c449a55c5d3106140e167c780f", "ref_doc_id": "e30ab401-e15e-4a9d-8a56-82296d0f1729"}, "83f319fc-d0f6-455e-adf6-a238f9c5bf03": {"doc_hash": "8559ab73eab86460570713a44680111805f091418cd13bc9ec5bd4ebef53ae34", "ref_doc_id": "530811c5-4885-445f-86de-f011449fc5f2"}, "6dcb8c6b-53ef-48bf-95cb-b048f0846095": {"doc_hash": "a81de9e90cb01a351b92f7c47cd1d3453cd3676ce7775306f2a5354fb31c7fdb", "ref_doc_id": "a41ae902-8570-46a3-9025-83d4169ddfa7"}, "7dde9c1e-41a9-4027-acc2-4ef76dc2c8fe": {"doc_hash": "b161e131df1e5d87104fa825e28253c013b7e0d6e98a010274b71860fc397b63", "ref_doc_id": "e3a75b65-cf89-4f2a-98fe-bffa91725b66"}, "8308ba50-daae-42b3-95d2-867b939e590d": {"doc_hash": "d9ea8371065dfd2885b79108d6270b1acdaede19dd5f67400a508aaca411f0f1", "ref_doc_id": "056873e6-a9e8-4737-9d4c-0ecb0ba7d3a2"}, "b3a9a803-51a5-43fa-98e3-a5bf229ea144": {"doc_hash": "7a01622519258c291b693dd998535ba35888c5995b8620cfd0ed26c2c1616b3b", "ref_doc_id": "da63397b-9c6a-4683-916f-7e7105a46b5f"}, "0a424a2d-388d-4d9a-a348-eba2a28a60fe": {"doc_hash": "c923376d25d222ffa8dad65d739818cb41b66d051ee616cba78ae43ac7f42d3c", "ref_doc_id": "71ec611a-85b5-438d-ae37-dd9372cb412a"}, "12298c41-815b-4e44-9169-1c6b27a68d9b": {"doc_hash": "11fa8793e20f6ac25e8ba2bc044346cb189614fc166e84d0082a5c2b0f950df0", "ref_doc_id": "448ba8a7-9a0c-4917-96b0-230c24af7d74"}, "94210e8f-b16b-4ab4-bbf0-3f33813cfa0f": {"doc_hash": "3de52894e510b4652214a26d9a8bd6e108e753d3afc48a94006b68a7f81a12c0", "ref_doc_id": "07cd42e0-b3e0-4320-8abf-9f27704b4aab"}, "688a2abf-0c93-4ede-9500-016e0515e36c": {"doc_hash": "d4003a66035d8ff626357c53bcf1ef9eb8ac9be8a409c91ea8732f416c787c81", "ref_doc_id": "c77e8498-dcb5-462f-b835-e8357a02666e"}, "5bb310e5-9ceb-4905-89a5-f2f53c153b53": {"doc_hash": "ee8078a1fd7c02e12b92d61d00a003463a41597f6d196bac3ab415a53e398d43", "ref_doc_id": "3112eaee-1991-4296-ba67-70383612d741"}, "0d6e063a-76fe-4040-b374-906ab12f5e7e": {"doc_hash": "264b9b1ceb125618a8385dbe6c1c421e6183259d897f001ed3b2c96f179bcbc8", "ref_doc_id": "9473ff4e-8879-4b2f-9670-136a0cb1cb32"}, "470f0b16-91c1-4c5a-8f05-0c8440472c96": {"doc_hash": "563960d096582e62b906ea5c1f6c9daaade8ea71ecda8e1c9b4e7b79b125cef2", "ref_doc_id": "6f6eea53-2283-4bc3-a14c-99242537fe26"}, "cd3b96e5-5647-4aea-b6a3-3ce0ccd8ae0c": {"doc_hash": "3766ed4299ab25f3e93208207d2cee8b9ea4c8583800a3008e74da82deea6ca9", "ref_doc_id": "a49b6f26-4756-4d55-bf3a-04e952d8256c"}, "8cdf9ef3-f664-43ce-bb5b-f865f49a7136": {"doc_hash": "47de67d75918bc056b689c7e27ebb707d167f0deaf2e19048e78171350b97a35", "ref_doc_id": "733bb046-b01e-47c1-9ee4-2d971a759ccd"}, "8140ac75-f6ca-4b5a-a49f-c65aef429436": {"doc_hash": "c715e4c0ee68094ff15f467773656af8cc2d9c5749a3dcf9ae32ad22c6214b37", "ref_doc_id": "cda818bb-2d46-44b1-a1ad-8f138fb911a0"}, "1fca97eb-4639-4d89-93b7-f7cb7073b44a": {"doc_hash": "e5139c1d3579189b465ce5d6734305a592ca3447691aa2e5a77de566fcb37e64", "ref_doc_id": "96a150f9-2433-429c-b2ef-4010af523d1f"}, "75cd5f53-888f-4914-93a0-f148237ce916": {"doc_hash": "431f073ef4ab8585fc6e79ad52fe3e067187ea734bc17573f85ed939b001c158", "ref_doc_id": "900585ce-9bfe-46c8-a4ff-d983a9c265df"}, "260021e9-0e1c-4af7-a8f1-99dca1802dd6": {"doc_hash": "066b54adadab5aad304942c6fec71b725a35216cbfb497e315c08e52f5a16272", "ref_doc_id": "b5d0592f-175e-4c56-86a4-8f8f4a60de19"}, "a8cf7c35-bcd6-4478-9320-5e4d578392d6": {"doc_hash": "599123cee360a8f0ae634ccc523a83c5e8c75f06b8c64afa6e67f7a819900012", "ref_doc_id": "5e77d932-6849-493e-a024-0dca677def30"}, "8e532bb9-4396-4129-a3b2-7531439fb258": {"doc_hash": "7cdd435d3777b923a2040759d30dbca07e9672c04dcdbebdf0d820c3f54eddd6", "ref_doc_id": "8cb4f4ea-5913-49cc-936a-f8e445fdeea4"}, "abbd7847-4df8-4d41-84f4-02963c88d426": {"doc_hash": "18755549534af726d83ed2fdc926682d926e10ed6b75b1d7ac9c28a1cd7cf6e7", "ref_doc_id": "af8f5283-941e-4778-ad50-4aa0d7a1575b"}, "9f24d551-de2c-4041-839e-327fdf91c998": {"doc_hash": "24534f44bd8956ead6fe1330513bbfa9cf3ca405901aa183f1fb1f3c1c318408", "ref_doc_id": "2797d01b-9b8a-4cbc-beec-ae4683b529f4"}, "e30d4ab7-020a-425c-8d7a-74588f445efc": {"doc_hash": "5e7e862a64fd41de8a83baff69dd99855b0a7e2af67a36b7647258d81949304a", "ref_doc_id": "01952fa2-ec09-49ed-9688-7583e31991c6"}, "47c84d0f-5801-4bdf-826e-e038ea45ecf8": {"doc_hash": "306d9582687658756972aad21cf3cde0dadc7d6bdbd46e8636ca2b69035a513c", "ref_doc_id": "c03434ce-2b61-4300-b8ab-95a2c6a4e4e4"}, "eb13f382-8649-410e-83fa-bda0d9502e9c": {"doc_hash": "1a09aa1aaf51ac770a5cb8f324678319278b9882cec52fa7ceb22a6d4a40cfb2", "ref_doc_id": "6000c060-f449-4632-bf5e-9709571d91e5"}, "0e424665-aafd-4d16-b641-4047306a0ba8": {"doc_hash": "ad77daa1a52498d46520c0fa696bc0e2642a9e474224a25152e918b1ed4978c0", "ref_doc_id": "e0f34c68-2bc4-4c95-9aa8-ad1ebd0478ce"}, "6d734aa2-679d-47d3-93e7-fb63a156b5ca": {"doc_hash": "babeedebf8c34f529c2376b82969f904ec5841968309a422420a782a7a22b956", "ref_doc_id": "f1d17858-ef80-4f33-b665-5cde1969353b"}, "25e5814e-90ce-4094-b9f3-9b16a07f29b5": {"doc_hash": "93f49a5eab5cd5d2a2aaf69634d44b8321a0704384c56ec607318101c908ecb3", "ref_doc_id": "4802f069-2c3e-4c4d-a51b-f9866bf6153b"}, "0a2d2e88-1e80-40dc-a66c-d59a7e7605df": {"doc_hash": "f5dd3a6e1d9ea29da972084b768b50f034d58cf5804ee7e0d071142ec8d7828b", "ref_doc_id": "72a0b795-1e99-44e2-af08-58f806b496a3"}, "9e805bcb-748f-448a-a244-31602d344733": {"doc_hash": "ed847a46c820f383d925bfc072ae8c8a51477082f84c9c600648582f929556e5", "ref_doc_id": "22f6eab6-d6e0-4310-bea0-65194528b7ea"}, "10a0f740-2b88-4030-b3d3-e9bb51848ead": {"doc_hash": "2f099917cdcb62355a93a46761732d9b4dc3e965629f7bbd72a39e52d865db1f", "ref_doc_id": "9065bad5-29a9-4329-b2e9-09937893068f"}, "f7aba2d9-74cc-4992-880c-76d9b29914c8": {"doc_hash": "819fe515533cfd8e5765c96dd013913968285d34fb4d937b03769fbb688bcac6", "ref_doc_id": "afa7a914-4925-4c03-8c66-2de6760e2af8"}, "546e50f1-f501-46f9-b04d-ccc37a4a5737": {"doc_hash": "7c3e988a82da8225dd85bd42a4a7d42202f5ca443737c7405d0287d86cefd6c3", "ref_doc_id": "22522b76-d98c-4773-a1eb-7a156425205d"}, "fe054fc1-811c-4985-a401-55341b429453": {"doc_hash": "b80f78a7a56eac3a6312cf31cae516e9829548b2fd2183f20cac751829d7c72c", "ref_doc_id": "9d2d3d38-d0aa-456d-977a-4beae4accc89"}, "68d66666-b425-456a-931b-f40cd455b533": {"doc_hash": "9a51c9572ffd69dd378b6a0cdef54c0f3c122a79472ef8a1715b7d410ee83fdd", "ref_doc_id": "e594ec53-46cd-4ff0-bb91-0a353f13a486"}, "59e04764-b497-4ad2-89e1-536dc238cf64": {"doc_hash": "b9796c6ff8c1bd83468936b879b9034207dceb5d899b65b96e280cc56fd2677e", "ref_doc_id": "25a333f8-7174-4558-bb27-058574218f55"}, "202c4cb6-36c3-4363-b2c3-7acf736089a5": {"doc_hash": "b3106b7fc69346288f936a39d48c301b10e791694e7311b23b7c8f1dbfe742f5", "ref_doc_id": "9d9f8552-66c4-4b39-80cd-291dcab917f9"}, "7b88d3da-2305-4893-98a9-d600e3292417": {"doc_hash": "a82d570d88888a90df92ab0b86efc71f0da7575ca4cce7a977b632e71d9cd2af", "ref_doc_id": "768c92cc-7fc5-4e46-b624-84a7ebadc488"}, "12d1b19d-2795-4093-92d0-fffdfb798fd3": {"doc_hash": "2a48e0fd58d7b57ce2f9b0d5eaea67b363a21ef89c6d5bc81a7d58039a617498", "ref_doc_id": "91a3b2a3-72d7-4d37-abb7-d673e4f51c7e"}, "763d4f26-dfe8-4b2e-9c1a-6404f74e28d8": {"doc_hash": "742970c851b31d5a3749ffb2815b4efcdfdf50aed1db40a1e32a4f18cdad07b5", "ref_doc_id": "8dea4496-94c2-4e32-b95e-3abc969490d8"}, "98e4e4a9-bcc0-4584-8b46-e52301729334": {"doc_hash": "6db81c2f9322496fed9bcb31058bd75fe6ad8146eadfa048460c64f9536820c2", "ref_doc_id": "39283707-3e95-452a-b70f-6b8368c9887b"}, "7e937eeb-3e5a-42ca-b361-81ea6a93d439": {"doc_hash": "aec186b9e62cb6e90df10e2e6905f71606d26973e6c264afa3eda628a9a5b280", "ref_doc_id": "84ab5dcc-55a0-4567-8856-4db3502c7934"}, "41065fba-680f-45bb-88a7-b59226e3dbf3": {"doc_hash": "7d005a329c7ea9b0afb461f4870becd34e225a05091c0025b99f6fe1e6db17da", "ref_doc_id": "713d2924-999e-42f5-af8b-a4f03f2d2262"}, "d0f80b2d-2d33-46e5-8e4f-017f7f7b5b33": {"doc_hash": "37e970d5bbf0e72906095baf93f633fd3d04fd222953350b7d4618f3e00657bb", "ref_doc_id": "92bdccb3-680b-461b-a1bb-abe428617e3b"}, "d86e03fc-3d91-4e91-8064-6e258540d902": {"doc_hash": "8c706e61db931b52abf4a94c621f15c6e2b3cb181489841979dd58f1607aa46b", "ref_doc_id": "f1f468b2-1587-4481-be65-889a76897f59"}, "422f3bf7-b76a-4f38-8ba8-ba7a3dd6a58f": {"doc_hash": "5ce8beb88bc3faddb292ea149ad123612f47086772c3c66561152621a1900698", "ref_doc_id": "ed14587e-e7ee-4888-bf9d-8b14f38ff1dc"}, "3c642af3-412c-4fa1-9968-3b2f8e3393fa": {"doc_hash": "0c984a4da8c2bfe4752d95c93ce3287cfbad56b0a22db6ece627e28167cdef97", "ref_doc_id": "b9d26179-24b7-4b67-9169-0d73b5ef1c67"}, "09df3911-34ee-4369-bcbf-8ad33206650b": {"doc_hash": "71ff4e719fbbc3ad7abd5c166b5aa066cf9c79999032949006a9943a4d3339de", "ref_doc_id": "c4174063-abe6-463d-baf8-937c6a6141da"}, "3d944723-3f1e-465a-bbfc-fc5e21299c7b": {"doc_hash": "dba188577c785bfcde20a5c7ce03494237c22790e330b23ff09aef1b76e6c090", "ref_doc_id": "9d246bc0-ade2-4b7b-ada9-abc71bdde9f2"}, "a2c6f778-f4bd-4909-8e4b-d07d9a7c7332": {"doc_hash": "067df04646ef45371acd8d87103cd11f873fa496a43de0eb5c85194b0ebfb213", "ref_doc_id": "c2308a07-edf7-497d-96b9-1c6fee198ac9"}, "a01539c0-ebd4-445a-ba31-ca55719fd547": {"doc_hash": "db1b66deede3f9cb636d066ea1b6e774c29b95bea2ef0b9746924343aca847d1", "ref_doc_id": "88c53b02-3b70-4acf-8b16-5795f4df971d"}, "33202e46-1f0c-4989-858e-840cd26c8ea8": {"doc_hash": "1889bcea81fe89c2fee2a2868c4ad20358fb0c7ba4fe800950a15bfdb41468db", "ref_doc_id": "f32918a4-17ed-438b-8c99-d3db6bafb4c9"}, "ba9a635a-327d-4f39-a087-0dd3cdcbac7c": {"doc_hash": "b770d00d3d666191360008def4cb45f84d4d107851f07d3798e9146c26a42097", "ref_doc_id": "faf4a0da-d878-48c5-9152-10614b788aa1"}, "8c2534fe-847d-4e08-9163-6596ca00455b": {"doc_hash": "575806c4baeadf629da0259aab5434d93c3e842a7a0706a554fb73d5c909ebad", "ref_doc_id": "c45ba4cb-a4b1-4030-ba76-af8803a2aa45"}, "1aaa806f-3efc-4f52-adee-bcbb94a1983f": {"doc_hash": "60087eace3b2448c5369850d271004680e2b401d03151aa5011b7c2588740fee", "ref_doc_id": "e0e8ed61-8fe2-413d-a658-84bbaaf5f2af"}, "9894d4d9-d013-4c8d-85ee-f9202e7f1342": {"doc_hash": "5d9c7e099bf92634a9cc2ab8b140c0ee182ededc58e9ff7cc845f4dacaa14a1f", "ref_doc_id": "36dbcee3-c221-4f1f-814f-8bb862fc882a"}, "4c81b557-d034-4871-a9ff-bc97d4db2eb5": {"doc_hash": "5b69e982bf77f404c8786762e58d8b369e100659fb3e08994d5bf08fe3605b7c", "ref_doc_id": "d5abf8ce-0ce4-4709-90ca-a2e684ef939e"}, "c03093d1-1b7e-4db1-bde2-75d673592f31": {"doc_hash": "31035db6d7b7ca4d57b073d1f747de96fc114a650b9834ebf8412e41dbde1769", "ref_doc_id": "15ecb09b-1333-4c51-8133-1f123edc09fd"}, "21e4ce11-ba74-442a-8fd8-a6698e0cf877": {"doc_hash": "dfcfb53907834c38d09159317bab829cf3765af22df706e2df9e85d480bd4992", "ref_doc_id": "a94ae319-bc6b-4dc4-897d-930530dad686"}, "805807a5-28bc-4567-b187-e080b061d8d2": {"doc_hash": "238e6ebe448da1b8eb0adad96dafcc6f95f267b5e503a863c2fa3d2250180601", "ref_doc_id": "1e7774e0-582e-405f-b86e-9981789a2c11"}, "e40e46a4-d4ea-407c-9bc3-03604d23bfa7": {"doc_hash": "e8273a06bc33bf383e08430ae49c4dcf1650f1e1cee92a01b27e9a3f698a254d", "ref_doc_id": "926de581-fde0-49c1-aa9f-b7b2767cb2e3"}, "c0cb2a19-5787-450a-8420-5e53b5cde6c2": {"doc_hash": "0c97b86e7dcb054d0366e44cbbad9bc7d425127c0af4c3d7885c8788a4ce4b0d", "ref_doc_id": "abbdd940-ab74-40f9-8c0b-d2b6abd5a0dd"}, "9e21d47f-4f14-4531-baa8-85f926975338": {"doc_hash": "349d3bee53a92f1cca5d6f74e192098a90b0b49e04346f03637c048c926d929d", "ref_doc_id": "33468806-538e-4a1c-aff3-bc0f1219c15c"}, "f8f91a2a-5897-496d-ae71-a5e48da520bb": {"doc_hash": "7818e692446b2091290522b08082e31a4222d4b615944462ec83b22a28efc74c", "ref_doc_id": "6085e6d9-6a45-4ec3-9e83-b3d8dc8d0bf3"}, "ec89af8c-9858-4540-a47e-f8fdfe605569": {"doc_hash": "22c56cc43cdda28ed5bef15ff45ab3ca626eff5c33b87829511460502b77a5dd", "ref_doc_id": "e19ac5aa-eaa0-477b-acd2-afade241a075"}, "cb45183e-784e-48d4-88e9-1869e98c78eb": {"doc_hash": "d05d4f1f740985b027f6d08e76c102077f0964c5a85ade3e48610fa9704f31ac", "ref_doc_id": "906ce262-f921-4ca6-9bf4-8eed3ad03609"}, "e842c546-8e6f-4692-a69d-0612add3817a": {"doc_hash": "71daa36457feadd02e5318132b7fd04573ced6e404388e586bc51ecc665748d0", "ref_doc_id": "a335ee2c-7c1b-45f3-bc72-8aff45335927"}, "7758fa99-8b85-421e-8746-f272c88a0c52": {"doc_hash": "57656f96758636418e4a26a833c9a184d238a6473cca6f6ca89f641a029a3e9c", "ref_doc_id": "437b10b5-84a1-406d-a288-9995e157f18c"}, "6738ea06-f2ed-4659-99a7-7ba2354231fb": {"doc_hash": "0be036d1fb99f1a9d5b9a08afa9d35d3d48bee51637518c0a6fbf9c1448d9c03", "ref_doc_id": "e77bbafa-2d4b-4023-87ee-dc3a2187ca4f"}, "4c59d0f8-012c-4d84-9766-bee669ab41cd": {"doc_hash": "8639d2fb1338ff46f74370d48f7ba79f158d5cbaae6ad819f1b13a6b3361ad64", "ref_doc_id": "f68eeb1b-307c-4d7a-883e-fa9f56e70e79"}, "d04012da-3ed7-46a7-b5da-1aa5419cd291": {"doc_hash": "2740285826b6bd6af5f87d5e2e7d28888d5731138c444e89e85fc900d718e381", "ref_doc_id": "ba4c8ae0-6fdd-44fa-a780-1b6c41453d3e"}, "863ecc99-1924-4bca-b121-c4ee41d83ac3": {"doc_hash": "5335b00aa2d218f7018cc0821532783f6c9e9d561415d9f12313562c4fa9da1b", "ref_doc_id": "0401f8c1-4ee0-4473-95ab-00f5ed4fe24d"}, "b55f3385-ad91-4506-82c4-78c7c89deeec": {"doc_hash": "f0497fad75f71287a066e99f00126dc3543db4f78768a19738430f48be535253", "ref_doc_id": "49caf084-88c1-4f97-9469-150af80b1b20"}, "932ce0c2-f9cf-463b-9578-f1ec5aa6e353": {"doc_hash": "6e4c03522256437a2a9869d52b21938f92d8c66cce02ec9431ae1579750e1c0d", "ref_doc_id": "8ed34c19-ca42-4875-945d-8da987396111"}, "ad7ad8e8-d455-4318-8d0a-eab249b09608": {"doc_hash": "4b5a8a143d0dcad834f3557eae205ad3e887774459d6f78d2e4a0a5a7ef6140e", "ref_doc_id": "dbb67749-2568-4831-a578-36cd163d3285"}, "0aa85417-9969-49ba-b670-58f307c692dc": {"doc_hash": "96751031fe95d66eb59b0b47f487593cc697c4cc1b9b17308ff4e98521b8272b", "ref_doc_id": "45f6d0ce-f5fb-49c2-8aae-d206a91d7e75"}, "29e35374-b261-458e-907d-4e083ca39dd5": {"doc_hash": "a932b785ae94ef817208f75f855de3f6bbdb9d409440afd2ddc0b49c1a59afdf", "ref_doc_id": "1b3f4b4a-5bf3-4dbc-a8a9-33664072d25c"}, "f8c78c3f-d5f3-4392-9009-0d127b8f5ead": {"doc_hash": "b57806bf70c64b914ebac727a38ead57ff3ef8f162bcb32861c0c91e590a9883", "ref_doc_id": "484e7f39-bcf4-4559-84fe-e91fa8522bfc"}, "2c990cf0-a24d-40e1-84aa-3c2b847f06aa": {"doc_hash": "79bc5c418c06a0bc656e46cc1a1ac0a5a8f08cc40bfef3195c44c930e3d0e689", "ref_doc_id": "74eb25db-32c0-4c96-8266-50e1bbde876c"}, "78211e94-0db4-4458-9c86-a0271e064b68": {"doc_hash": "ae1dd61a126d210df222a23b851920838b1121e7b9f57fffccdcf2f06adf9836", "ref_doc_id": "d1ceb7c0-0e94-411b-b9d6-17e97bf01948"}, "10dccc30-363d-4d14-ab66-0b70c1e526f5": {"doc_hash": "011d96e41f10172e1c028f4c37c67077c7634d28e749ba6ca57c24685040204e", "ref_doc_id": "d4a531ec-30e3-48ce-9941-742703002290"}, "48b0e85e-7e14-4838-ae8a-b9260b223073": {"doc_hash": "001612ed882489c0cbde0037cbf7875b8ab1571ebe425fd455fc1ea82a50dc7c", "ref_doc_id": "737d7789-acfa-4305-9be2-14fd66d75af4"}, "d73e1441-ffc6-4cc6-985e-617a90a98d23": {"doc_hash": "3f24e1cff37029cc4e7579d475b3a472c3f22841724da91ffe0ed49adf7b3ade", "ref_doc_id": "4d00e990-65b8-42c0-ad0e-6bf4374665ad"}, "2be2af5c-fa4f-4847-b9cb-cae2cbfc998c": {"doc_hash": "b10eebff60ff2f0c3f4a11aa5991676d67dec6c2cf738cd40b0bf82e786c3849", "ref_doc_id": "69556ae6-974d-45ee-bcb7-7e2b4e8909da"}, "a1fc3a2f-6363-49cc-8314-ac012690f7b1": {"doc_hash": "cb9d78964ea90d03c9b0feefbc2720155a65b419745d74365ffc14190e757a0d", "ref_doc_id": "36902781-d638-4455-ac7c-72824df897b5"}, "c0cdd922-62d4-4dd2-b5bb-f8782ee5821e": {"doc_hash": "21c9a6d9aa5c23d0927d980310037d778e28456264fb78108bde31776c03cab3", "ref_doc_id": "2573abb7-634c-4f32-819b-5c15d4e96b5a"}, "fcfa1f10-15ed-464b-b559-f4b645f4ac53": {"doc_hash": "2985b861b2c4eb6ab32b01679330a996a1bb4c417f8afc66178fadcc8f55e5be", "ref_doc_id": "6b25234e-d1d8-4f05-aa3e-fed65a2dc443"}, "4e79f4fd-d168-4596-b491-8505633925f6": {"doc_hash": "21f687bfecb9af27254cab0823a24efc996272311e642840456b259f320261f8", "ref_doc_id": "9546f2ce-292f-4b71-85e3-aee383a18a05"}, "cc816998-e1b1-47d5-8c43-bead2a28419e": {"doc_hash": "49baadbfc4e3169bc393a58a51b7ecedb184ede6f9733ac04c85165412f51fc6", "ref_doc_id": "eb59ceaf-e326-46d1-8be1-b70ce6a93cf0"}, "5afd1d10-6b30-4107-ba2e-8d52b63803b8": {"doc_hash": "88bb7d551cd780ba1c90da39ec684bb5bfdc6a853fde1bf50f678de7c70b8290", "ref_doc_id": "27d1f2e1-c9c4-48b0-9186-35024006a76f"}, "59771a2a-e6b6-4971-af8a-69baad2b22ce": {"doc_hash": "f4ff79c0a734307e23b9630b600b71c37e223ce6dc5b1a2b771e85a4ebde834b", "ref_doc_id": "cb827e9c-00b6-4922-8e19-6302f2f0cc79"}, "8f3900c3-d792-4997-9958-eaf571c6d17e": {"doc_hash": "d1776223a152c7f0cb83e148fb6cd003c95a061039eea1dacf8238823425d845", "ref_doc_id": "3dde8e6a-6b7b-46c3-95af-071e201796a8"}, "2a8f01c3-55e2-4a90-a7eb-3b6505df0f7a": {"doc_hash": "30ffff02631854f76d9aa64f01eb369a9961f7db9f03b8ff2e309fa2c93869fe", "ref_doc_id": "e3361c89-ceaf-4c38-b78a-792182625a63"}, "904f1bf5-4948-40b0-9fda-e998102604ba": {"doc_hash": "7f30caecf04fae80ccd3fdbed10292790e65845793f4a29797d2e75c6c5fd9f2", "ref_doc_id": "7ad925bc-876c-447b-9bab-8e33961507eb"}, "05456885-dbe2-442e-8408-68839855f91b": {"doc_hash": "edde2926d239ba96bb8f84ee82b6ce5838c3c2bcfa3ec28c51459b1726367946", "ref_doc_id": "8e1895f7-a6bf-4bae-8555-a4b4bb920675"}, "58ebff5e-afa0-4dc2-bd8f-a33fb0e5bf8e": {"doc_hash": "0457c0c50e36d09040d77693241eab93767aace5ae3eb11ef07e1ab8871ebd99", "ref_doc_id": "6b62f94f-45e2-4bcc-899b-95055f1f9622"}, "1eabf559-0b42-4565-90d3-3ca115d0cc0a": {"doc_hash": "36f333e645c9276ecd2ffc15d6fc7212e0863a89c5a61c14e91523c5af2a7cc2", "ref_doc_id": "b041c317-5f75-4620-baea-3c76c91e68f4"}, "c4eef32b-3d29-4115-a6e3-16341ac55dec": {"doc_hash": "47cfa74fcb81d242d03d732a4b66cbc7677a36544b1b9e7b897033c067303079", "ref_doc_id": "c50d83b6-9d58-44c7-94cc-fb5c5bb9e806"}, "353e1ad6-4b2e-4477-b298-5e53a2780dff": {"doc_hash": "fc53eab0db38d30c1a47f64c32962c2dfe827a2dae36b742486ab3510c0d3e53", "ref_doc_id": "7bda674c-b110-4f5d-a7ee-5f3531f25b09"}, "4265cc44-f041-4c86-a166-7c14b122dd74": {"doc_hash": "8452931b16b88acff9891af777dc2b2861a9e9c32cc4e4c29c48ccb6247fa972", "ref_doc_id": "e8042ad5-8fc9-4a57-b3ad-2f67adc83f9d"}, "c43d9496-3c1c-4e30-af86-5e11c5b41d0a": {"doc_hash": "8ec5dad0ee35d5ab245b88a0cb9dce6315ad71bedcc175a0377415f1f83e0b64", "ref_doc_id": "10d31d09-d2de-45bb-a2d8-5c21f3e31df9"}, "4c69a5dd-167b-40a4-9493-666792d23b29": {"doc_hash": "42c6789881d8b21439ba8065de288902bd8b4004f2efe87fc5b3ed3c289766ce", "ref_doc_id": "7a03df38-a3e5-4de8-9a4b-cc65f9b88c37"}, "027698e3-39b0-49a2-9ff7-c3acc1e83103": {"doc_hash": "2c51d9dc94acc38e1f1bea18a3d841d87531f1a0191591b1c42a17cabb76167f", "ref_doc_id": "dd7e076c-7674-482e-aab0-961a9cbc8a3c"}, "7c8fc79d-25e5-4d75-9974-d905d29a80a0": {"doc_hash": "1215e5300bf6d9fcdc200c62c5cf03ae50b246d03d8604975c4bded18deb332b", "ref_doc_id": "62ccd455-d585-4617-9d1f-5932e96e78c4"}, "bfec1f06-245c-4c33-be72-2893cbaea6c0": {"doc_hash": "9c02d1da1e0767e8062ba3479ef410507dff907c78b95fcddd875dbf73b687ec", "ref_doc_id": "e23c10cf-0f62-48cc-adbb-cdaad84128a7"}, "16ff98ab-90fa-458d-9bd4-0bba90766f6a": {"doc_hash": "b66c61303c1ac87d63ad36f4a375907791d4df93805e2ce73a1dc8fe83bb6f5d", "ref_doc_id": "bc255c09-7dd3-4c52-ba3b-2d2e2462cfa3"}, "ed406b47-42c8-4811-8d6a-f839d6ff8334": {"doc_hash": "0fe10ac3da52e0dabe25a7e9bc521668ac739b0558fe6d8df45700267b5d8dd7", "ref_doc_id": "3495b2ea-55db-45c9-b082-e47c06144128"}, "e77231c4-dbdf-40c5-a541-b331cee5cf66": {"doc_hash": "405be5c90a2324a69e8243b383058883f49c9f9c5fc06088e25c08becd525756", "ref_doc_id": "573cade4-8026-4df6-9de9-0554c8ac74a4"}, "305079f9-4a22-4517-823e-04239ed9cbc3": {"doc_hash": "8af26c4ed67d3be91c87dd7bbc3f702d94a9a6db4357b3fcba8dad79f554acdd", "ref_doc_id": "893f53f8-9a48-4e76-9d31-86bd9f5fdc45"}, "ec441796-2184-466b-b8e9-15dbf4364ee6": {"doc_hash": "79f34881c37998e6296c6067f03e1bccf7f944ba1be5d8b0be4c6e04fec06205", "ref_doc_id": "7ee4ee89-a573-4375-9607-97966a57f63d"}, "eee31948-5ab5-4f75-b055-3ae82a41dd40": {"doc_hash": "70cbcf6dfd94b52d903ddf7e45af487efbed47b5adb53cbace06091135e67177", "ref_doc_id": "6f553c45-bc60-4899-8894-2ca0e808e802"}, "fdedd3d4-fa89-488c-b135-41d0cf56a2ed": {"doc_hash": "50626de7f09699f5fa6dba68e267a6d8b119ca8e18765057eca09c5301a9470d", "ref_doc_id": "307b8c55-07e7-4a11-91e9-9cec4ceeea6e"}, "9294e819-ebe4-4262-9845-d75cdf62bbd2": {"doc_hash": "0c32eb94a3c5f60b69946adb0de5693c5700c47c06a79a928ba14c762ea00624", "ref_doc_id": "721d238d-5f8f-401e-9423-906a07897fc2"}, "d6e7cfee-f157-4a44-8ccc-d3020d4da940": {"doc_hash": "3a91922ec4b51b7ee1c502305b38b07da367d30a75aa66ac7a6470007cd82a2c", "ref_doc_id": "480ab0c4-9912-4893-a7fe-3cb94e3d76e8"}, "c8dc2f43-c7ce-49f2-8226-c426211be337": {"doc_hash": "59efe644023bf5796f2c38f58405fe5ecf677c9909f418b1365970b80741dbe8", "ref_doc_id": "884fbf18-abb8-40d7-9f61-d711bfc0ee7c"}, "fd159aae-4ee9-431b-97a6-5312463f8718": {"doc_hash": "da6c98b481aeb6eed3172864dba0d328989512f0942c972ef31f241af1642bc1", "ref_doc_id": "cc020827-60bd-4600-af6f-c3097b74b789"}, "a6ebd18a-32bd-4b90-947f-d50f62c77c41": {"doc_hash": "dce5bb4c17058c378164f735b450afc7472e788fae585a3b6bf83e3e60787c1b", "ref_doc_id": "7e8b70eb-ea46-456c-b565-c515c795115c"}, "6b71ac76-1d1e-4bc6-b08d-74a87104bd80": {"doc_hash": "50f1788fc34571dc1a3c447bd2386f80dc965eff18894fcdf9294b8f5c684537", "ref_doc_id": "e77bb752-3622-42b0-98cf-e8ec9b5bbff6"}, "34fe050e-1244-4275-8ef1-e019dec38195": {"doc_hash": "774e7670370501c65614bfa5fd843d1df30ac22f795fcbfa737e4994f31fe941", "ref_doc_id": "164745cf-e402-42fe-9c77-71f09999b1a6"}, "7b237626-8827-4796-8982-8e304b321ca5": {"doc_hash": "c9c930af3f6bc6835cf8e2b613704d2cf1592cca41a12b5c53c5df531a4953a5", "ref_doc_id": "0a50064b-e03b-4810-a064-6974bbe75a02"}, "e13ea6e8-12c0-4eaf-9828-70336f3b1fc5": {"doc_hash": "0c9eb459ea362656e66ee15f785e721851b221850d1e5bcb63e0bebe20a2d75c", "ref_doc_id": "596b4044-9052-4b3d-82b3-c1b4c9c7a25e"}, "23cc298e-b966-45bd-9863-85002cedc216": {"doc_hash": "8a31f450294522b7e970a40ec546a09aa6fba77f05a370c4c9ebe829eb76d256", "ref_doc_id": "41f272a2-559c-4c1c-af26-b2c39ba0d479"}, "eddb1f41-9af5-4cd3-944e-7a15311c8aaf": {"doc_hash": "8935d0697ab07e5f48669f03c605350d24c41d978993a54589a50726a106feb6", "ref_doc_id": "5f897967-51b1-4f8e-b001-2be179ff68e4"}, "2bdfc6db-65b0-4570-8607-bc9435b32a2f": {"doc_hash": "7577ba3714cb20ba0996a1696ce238ba697bb911b2a0c7e5d6ede8df2a6ee3a9", "ref_doc_id": "d12f1443-6ade-4678-8a20-b95cd75232db"}, "48231277-49f7-4592-ae2e-bbcec8823e97": {"doc_hash": "6ed17b4b9345bc3a5bf25f862d755a3fe5ad338edd8df7f5ef06a90cea7fee89", "ref_doc_id": "8544bbfe-dac1-413c-931b-7fa847e99956"}, "1499bd0d-38d6-485e-9a52-6dbcfb987833": {"doc_hash": "85e90b615bf597de8a92db6837ea9d4978b18db92ad21cfbb5e0264cd136b9d8", "ref_doc_id": "02a4694e-f437-4d77-8a2c-4883d248f35d"}, "391be54b-85f9-409d-a191-29d0b3299e6c": {"doc_hash": "e96e1a5f7c982ab67fa0258ee732a4980768b0d7a36a39f1b8aa56db7f0ea572", "ref_doc_id": "d1dbc7e3-6f2e-41f3-94a8-854ad40dbc0b"}, "7078bc04-4d7a-4a10-8e77-4e6414115997": {"doc_hash": "0f3649fabe593abfc2f3583d5f1f7b7afec63cdd1a2eebdda8fe4dad7dfcf3cd", "ref_doc_id": "dd3aca25-96bb-4905-b09c-d8c3ec82cbdc"}, "285cc418-daff-4a14-bcb8-5dca0a2e707e": {"doc_hash": "7ab4fbe060ac065335b44d4617f32ed5ccdaafea5e246692b330e3a14592d119", "ref_doc_id": "aa433598-b826-479b-af9b-ec23f4dacd0c"}, "0df7178f-1576-42ac-8232-e251c2bab3a1": {"doc_hash": "61928618d4eddab9f2811a0fac55a6b8130802954c526b5e01d5c8e604db39e7", "ref_doc_id": "03d86264-711d-485a-8009-e013e0db7949"}, "a82eaf99-40a5-4a08-8d6c-80179ea01d2e": {"doc_hash": "d482090799bff60ceec7675713c011408295d04d4e92531c9d11afdbef457b00", "ref_doc_id": "466cf383-947e-4d25-a811-4520f00b178e"}, "fa94bd64-4d32-4869-8b7f-4b172544f465": {"doc_hash": "c45550db7acb3609970e57ee42cdcbacb20451fd548231dbb0c082d377849dd3", "ref_doc_id": "aed087b8-f085-4800-8fed-106b905c9565"}, "ce4e63a7-080c-427c-9e29-60a0691ffdc6": {"doc_hash": "b179e089f3580eed719a78d80a698e09c24afb7f041a479c7f56b5ed2a10988c", "ref_doc_id": "573f9e19-c462-403c-9620-e2c114a24b55"}, "9966bb93-f78e-4bd6-a47e-00161a75c2d0": {"doc_hash": "0e3e61b95215c1e99ba6f4f44ff6a5bbe15037414a5b002f10093b6a51f98c85", "ref_doc_id": "dc5e5b63-5db8-4e55-8607-e4b48a73acf0"}, "93edc356-16c0-40fe-805c-b31d0d412e0d": {"doc_hash": "72f69069f2d973e8042f2d3c541668efe0a2f06b88c04e2a8e1f09aaa81e85bb", "ref_doc_id": "f697fcc2-2c2c-4cf7-838b-bc3564ec30ee"}, "a6a49484-6ba8-428d-91a3-09933d037077": {"doc_hash": "e4172c940e7eaec6a9db6cbf3e9c04ae8134e46733de2e438657ec609504c61f", "ref_doc_id": "432a33af-0f47-4f8f-8a57-0d831e867abf"}, "7e8e9cdf-13a4-4ef5-bdc8-a2d080a5e1d4": {"doc_hash": "9a20c47a8fbd7090989a67610c6dc9540eaa19f8ceed8fb892231754cbfd742a", "ref_doc_id": "0702bcce-8a0a-4652-911f-c244f4bcfdcf"}, "6439a816-fd3a-49e9-a31e-ce55a29e45e0": {"doc_hash": "4044cfb28daedbb694a51bd3b3f8746c483389493197967adf5c48e63e1bf0e0", "ref_doc_id": "26b70a52-86a5-44fb-a608-3f777d377357"}, "9c1fb8d3-5911-4032-91f0-64f39c5c1f22": {"doc_hash": "d761fa8b4203f90f8ef9565696d31a6b974395eb2816f7876c3eb4a101fca4d0", "ref_doc_id": "24fda5db-e8e4-46f7-b0fc-aceab1d7d18d"}, "0418710b-b187-487a-80d6-c4b20d6b37da": {"doc_hash": "e71a75d758b0e231f1972644ef3019e72e8569bde21973ec7c72f1b66e3055c5", "ref_doc_id": "780bc9ad-a39a-4ea5-bc8d-50fe6deadb25"}, "9738cb1b-882f-4ca6-9ecf-4927419f89cc": {"doc_hash": "63cc5d91eda71e38d01971d8cb257146c7048404026ebaf4622a1de95d4925d9", "ref_doc_id": "2aa9f9f4-9ea2-411a-869f-052373965fab"}, "1fccc193-15dc-413c-9620-cd72b4fa141a": {"doc_hash": "1af81828f82ebe2ee0d690a0068b73dc39e539c0a25144d9fcbcbc370e4b9028", "ref_doc_id": "f7a0da90-66f5-4a25-b8a9-38fdfa18852d"}, "21d48d8a-81b2-4654-b857-71106cea72e3": {"doc_hash": "b6da4ee4bdbc5cfdcb8153f021eee53ecea1aae8c68eaae9641ccdbe1af9643d", "ref_doc_id": "33a0932c-1719-4bb2-87cb-9673866a4557"}, "b9dc9f0b-355c-4d7f-af02-925954b1f070": {"doc_hash": "35a8aed5493f2191f722735fac61fa82e3e185be097153f4f5dcb83181572e86", "ref_doc_id": "dc122a68-03e0-4df8-988c-b9f735a80a7c"}, "eac2d760-c614-4653-bcbf-fca614515d0e": {"doc_hash": "8daa3185d29c3d6a9b69d6f6b77e203f625bea1f708edf977f9f485c8e5dff4c", "ref_doc_id": "2df0bc09-c863-49e8-bba1-472062e27e1a"}, "f3e841de-f912-4e6e-8959-516caf5846c3": {"doc_hash": "9b6ba8c004cba0c38cd5b17a7a0bcaa22b66d2ff91b8f58f770dbd0194db3581", "ref_doc_id": "83eb8fb8-0635-4613-82c5-684c2192999f"}, "e26abf10-ebbf-4960-9a65-5a0a63f85a89": {"doc_hash": "1baa830b361f45add7c0c71c6b2cb30b5deea9bc07005e48317e125d16c49d96", "ref_doc_id": "9e04e43f-37a0-4929-95b7-005c494b730c"}, "08bc169d-727c-47aa-be6a-63cbca5d3041": {"doc_hash": "f1a1ff1d3c2f1f0a87917718d528a0b3f8f7365dc360386068dd4f051187238e", "ref_doc_id": "39f79a40-dd3c-4118-ae14-7509e52a819a"}, "ae3e6ebd-8741-4de2-9936-0551d8762214": {"doc_hash": "bc3cd1741137960e3408e3d2c640428b51713ed082d1116d1dd379c88de0d6f6", "ref_doc_id": "8892a1b0-c6be-437e-9fe4-5cbae300a8f7"}, "63896d1e-3fae-4087-ada8-c6a5e3fc9003": {"doc_hash": "9a357b793611d7548ace3dd7ee3b96492a741985c87d683dd33d3d2673547c56", "ref_doc_id": "fe07ea4a-d731-4d51-8fed-7cc2bb4c6a9f"}, "c168605c-e366-4289-a463-6e25acad82f7": {"doc_hash": "5cf065c19ada6cb339546173a24c780dbcd49f83741e262f4d71eb1da2acc213", "ref_doc_id": "769d4a44-4559-4c7c-b367-c8ebc7157b9f"}, "0d4cb3c5-7114-441a-baa5-825c4d5ee4b3": {"doc_hash": "08881eb54a19b5163cc304451a4141e657b8064e1b01c91a3801257ea15d108e", "ref_doc_id": "4529fcca-8cb6-46fa-aa56-00e1ec784c60"}, "7ad2a918-ef77-42b7-ba7b-f72f6f15bf69": {"doc_hash": "c1addda42932fec64e00dcc669a60ce4d92793ef20c14151e96bc88a34d570eb", "ref_doc_id": "338310ba-50d0-4abb-b4ed-09616deb99c9"}, "6297c6b3-d96f-44e2-b865-005d3cd3c3ed": {"doc_hash": "260fe0e78b4a272c29cf52f5c23c6f984a3de469013f6812b7f90804c8a1a5bc", "ref_doc_id": "e55778e9-f7c2-48f1-8180-23681afbf192"}, "c8c92ffe-e20b-4a65-af2e-739bb8a18b9f": {"doc_hash": "ddec0807e3cdbfcf2c46dc9b84e28a55005fc9023df863ff32c94183a7568dd2", "ref_doc_id": "fc242479-8283-4a04-8046-74b8a888b362"}, "2bb7bf3a-190c-46f3-8b44-1abc7f4de6d8": {"doc_hash": "8548d42fe1fd38575feba7116bbb1741abae66ce3bda7617b439be638a36f399", "ref_doc_id": "62da7f67-0e51-4d8b-aa1f-e4cec4e04a3f"}, "70268cc4-aab1-49fa-882b-aa2703f2954e": {"doc_hash": "7103d3305bf65276979c066137ebfeb5941b127a57a273be0386683bc2f93bf8", "ref_doc_id": "79c038ee-54d1-441f-8611-70edf59a6111"}, "9f26b619-a964-4f37-9602-168c94b08d00": {"doc_hash": "a49de4be431e849fd619a1f8ca7ae38f2a32ed0aab320ed0a9f078ad520f0a89", "ref_doc_id": "05520f5c-c468-4899-920f-3e83a15e7e9b"}, "8bea27a9-163e-4719-9df6-a538613c41ba": {"doc_hash": "322cc76e4adb9fea79e6557c2c1778b6a2259f8d8e7dbb6877022a61787b5f46", "ref_doc_id": "2fad7370-a7f2-406e-9d3a-e7c3caded3a0"}, "3c285fce-c453-4c7e-b2e9-3a77a8a60a84": {"doc_hash": "79018590069203121803f7ec559876e8cbfe8d39bac7cdf70977f541f29ad5ca", "ref_doc_id": "40e025c6-2456-4007-93f3-666b62247722"}, "6091a53b-0e88-44be-a481-236e1de75441": {"doc_hash": "fa3224a029128beb0f3f92f42c8c344a591e25d3f73a10d1bde0a2e8e95e7faf", "ref_doc_id": "4700beef-9efc-42d3-98d6-f733208145f3"}, "40642346-01dc-46a3-8c7e-b2e533177c01": {"doc_hash": "98d7a761364f11e17db793e8fbd88b75330952b60332f8c9b4ab626de7e8745a", "ref_doc_id": "70fbe1ce-ad6e-4449-b186-252d8df835c3"}, "6e9e2c25-48e4-41d5-9c3e-d30c8fbb99ae": {"doc_hash": "f4b9a3256f661e22a9ffbbc2b103b12d483b8f4e66fbb27ab4cb500a91a3be24", "ref_doc_id": "74c50bfd-b324-4520-afc0-1497f9a7e167"}, "aee169ac-3dc0-413d-b8fa-5710d911054e": {"doc_hash": "5125459878a1afdb5a9663b52d0e76ab091cad25fac33d539b101306151b8a80", "ref_doc_id": "34a2d468-393d-4a43-83e3-25ba639d70fe"}, "494e551a-5af5-4a0c-a461-5ee21d19593d": {"doc_hash": "f08cb7914cb9bcc28544cebd6ec5584384e5b8b7669a2bbd369cd7f42a2f9103", "ref_doc_id": "4d11b148-c874-4cab-9bed-c644e1cadb64"}, "6b59179a-6816-4fab-bef2-9770e8a20328": {"doc_hash": "70b515057ce47b775f10c7fc66c4294bcd2d3d6d8266b9fe3acb763ddbcc801a", "ref_doc_id": "0b6c3afc-73ca-4f94-86f4-019de41e1ced"}, "bb73c9e1-9046-479d-bc9d-e30ec3498584": {"doc_hash": "66cc9f1df4a977d6991e8923b6da97d7f9d7a9ae66fd31eb613bed3f03ecea45", "ref_doc_id": "97fdbf78-d83e-4de0-a280-7c524d8c609b"}, "723af712-2eb6-4f0e-8012-ea2d78255135": {"doc_hash": "e03a15ac8e817d67074672072c1d0cd0ae21955ba67049526a57a3085fbdb40b", "ref_doc_id": "d62f46d7-c5b1-4fce-bdbd-7b7fb1d8e6d1"}, "ea03ff7b-d4ca-493e-be95-d4888288d60c": {"doc_hash": "b4df15565525235c383ecde3732ec53cbe7bbefc3cdd80a177d40a604adccf1c", "ref_doc_id": "05f6e441-bd3d-4801-84d8-13dc11adfb66"}, "c5039aba-cb59-49f9-a204-a2be65c77fe2": {"doc_hash": "73247559c784462f856474683b3a52dced03b8de6cfb292fa0057fe5fb589a75", "ref_doc_id": "72aa7e45-01e1-4ddb-a181-29e7d6acb8b8"}, "7267e323-1d5c-47e7-8487-bc9f69f5106f": {"doc_hash": "ac678177fa6baa612b4bcc65e58f2edd6f3c32919b7c3c210080b60344e1a46a", "ref_doc_id": "1627f176-bb30-4960-8429-5d409e7df029"}, "c17e9d63-aafd-49f3-ac9d-6356be20d3dc": {"doc_hash": "b3079c39833a83f7b62bb9b311188eec21948d7d36598b56f0e1b273e9df24b3", "ref_doc_id": "80620d38-b872-4add-9acb-fcb7f0852158"}, "3bd1c862-76f8-41ef-896a-3ac189ced172": {"doc_hash": "b5d6976b3da6b29ebe569f646c1d654234782b2a4c2af9269ef2c834d2ad1332", "ref_doc_id": "21d516ea-3a3b-44e5-b77d-c003df8c00fd"}, "38ba7a5a-1a26-4c58-9aa8-60b5e92f676a": {"doc_hash": "6a00cbbff25dcdbc765888bcca95652df8c0d72d30293fc7eed4f441e4d9a28a", "ref_doc_id": "09532927-fc22-425a-88cf-46ca43697496"}, "c06f31e4-ed28-43e0-b01c-7ca3d5b8ecfd": {"doc_hash": "9389f3b6d72d33b5fde15755a0734f9c1cf45048034319577eed0f8ec4c35942", "ref_doc_id": "43996ed6-8156-4cdf-b127-340e5a87d5f7"}, "2e37372d-4188-4542-bd5e-8a1436d1b6c5": {"doc_hash": "1d55e5878c75899d78d66c06bb861ada75de8b03b6480b1fb8448bb3826e5614", "ref_doc_id": "dcedff7e-4774-44d2-8939-51586c8aad9a"}, "cc83a270-5440-46ec-af18-b671482e5b5c": {"doc_hash": "6db13522fdd7af363a171e924ec94c11a9aab3f00ae91fa86e0cc71413ee562a", "ref_doc_id": "5979300b-539c-4014-88f3-289c684cf327"}, "13a20aff-d12c-485b-bed7-17618052ee5c": {"doc_hash": "7f0fd1ca581167ddac75f716b31e61e4a15f4b40dc3785dc23dc89ae0095c868", "ref_doc_id": "bff0ee32-2835-4a36-8467-1780639d94c7"}, "20024d21-57b9-43f9-a4ec-02f12c13f32f": {"doc_hash": "c61ec0fd5c659a76ba2bf6cb3cd15d90a935cae9716578dc01bfebb87a137a44", "ref_doc_id": "a0a8d3a1-0c55-443f-aea2-cdcc605009c6"}, "5b89d49c-c15a-4f74-9f60-5a65110372b7": {"doc_hash": "7751c73e7e6dd38e911ab29c650c9dcf93efd5235db90c7d1aea0f953bf25c16", "ref_doc_id": "7b2e6252-4b2c-4871-bb0b-6f96a05f0bf3"}, "cc192a7f-19da-4a42-b9e6-4e7cb0b3af2b": {"doc_hash": "3da0baa441f3d4057a85c98102edd8df150fd4a7ba4ae838cf6a7f44ec8c2c7c", "ref_doc_id": "8b0e37ea-e1a0-47a6-9cf6-cbfaad2390e3"}, "8a49cf2e-dcf0-426c-aa64-201acd8b9cb5": {"doc_hash": "519013246bd7960b945061f965973a21faac333c11fd895130cb2a67e13be2ff", "ref_doc_id": "a432431e-4425-4075-8a62-e302b9a3567b"}, "1c3759aa-7392-46f9-a5d4-5f9acebab2e0": {"doc_hash": "1afb5e26a2f3358e25b00a56dc66c015b4fdbded866b881215f43ff10f035fde", "ref_doc_id": "5f319406-78c7-4a91-8c7d-6dc57694bb7c"}, "39cf76cf-5c52-4200-a002-c7caa4bf14b5": {"doc_hash": "ee204b43af5ca9dad609b1f075c695e6b6b563a26b0c541a8656961d84f028e0", "ref_doc_id": "de84f7ca-483c-4a4f-b7c2-c883c4df932b"}, "f7d4658a-d17b-4ea9-9428-7991d4f7fdeb": {"doc_hash": "737e4fa0e17a3b7d39371c8b09b5b6b7f3a3b04742394c264cf02a5bd5c377f3", "ref_doc_id": "3efcb26c-4ce3-411e-849e-1834ff3aef28"}, "9a3b0f8d-839d-48b7-9a4a-76baff53bc8e": {"doc_hash": "02c09ce62ba97b9df02d360727e5fc006132874b6c4cb01a93c7b29dfc498faf", "ref_doc_id": "56cfc2ac-612c-4b28-a8f9-8129025c63ae"}, "5bc08d47-f8bc-49dd-a8ad-d3995e4cc556": {"doc_hash": "06861dc526e02de46e9c87b0ecc92112afe0b0fff1bda72de48736547869f374", "ref_doc_id": "ccc87367-2af9-4e7f-bda8-d2ed30b73743"}, "d018af0d-07b2-4962-a512-847abe25a4c9": {"doc_hash": "a1bd13540b900d31680e345d4b84e1e21b441b00f55ee2fc31f8377f9bbc8e1b", "ref_doc_id": "b484ab70-4d47-4ea1-90a3-dda462a3767f"}, "3f4925ae-4979-43d7-92d8-0a2b1baf4f56": {"doc_hash": "49fe0230228eb912d12a81daff7061f68e7a75081fb387593caa6ebabcb13f5e", "ref_doc_id": "9eefbf0e-7967-4b1f-a492-78ec07daf397"}, "f00b7fa8-1ecd-4f57-a59a-7b3bd18b034b": {"doc_hash": "2ef2e9fe308a23db0b47fbd0cc3ef4c5d0a6c5663db928dd86e05e13732a4f05", "ref_doc_id": "23eca1c1-d38c-4abe-ba86-67c37e7d32f3"}, "33a9113b-5e85-4966-8d60-a988258a8e95": {"doc_hash": "b79aa3909e87e87fe6df9435efd4958c795ee3f17cfa9edc939f90df83cfa6e7", "ref_doc_id": "705a2fc2-3b45-4581-aee6-e4a12e02cc7c"}, "c6439caa-1c77-4f4e-800d-dd6b7665086f": {"doc_hash": "925822c37d6218b50174da8881a1947504303fbc7e0221f2784fb927dc54f1c7", "ref_doc_id": "5e768bcf-c21a-4bbf-abb5-1fd9e20f9fa8"}, "331cea45-fa3d-4b54-9f49-0eada1c6faba": {"doc_hash": "70d9a5140b0ecfd6fccaeed46994866dcccb162e8dfe26103c193347006d27c4", "ref_doc_id": "b43fcb01-d2b0-476f-abed-60390ebdcab7"}, "ef07b443-4ece-4294-9eef-1a73ca4c2c06": {"doc_hash": "22ca95b8332c274dd1672d9e8c913eb51297cfe773c3965f79e5d424038b37b2", "ref_doc_id": "b30b97f5-c97c-44db-bcca-9e2af863dea6"}, "68c1b5ec-ae74-435d-ac70-431db95081f4": {"doc_hash": "9c9faab7e30187290e23da03ed32ea915b69bd340afdcc0e4c6f52e18ef66185", "ref_doc_id": "7024fbd1-af7c-43c8-ab40-8ef317f0979a"}, "e3d9e722-2013-4e6c-9f12-194ac0ec64b5": {"doc_hash": "e59976d605ee8c524675d1fbdd464f5a863d37273ef4a93f5ca4fb9e5bf7fa2b", "ref_doc_id": "87c75c5d-0c12-4b15-8b9f-68eb1b303437"}, "f470fdbd-1e2b-4c51-a488-c787f53b2b2d": {"doc_hash": "4d96038f8faded95349910565b551890ad0e05ca0b01e1d5968b27d0d5c4c312", "ref_doc_id": "dbef25da-9823-40b0-9949-cea30cd5ec9e"}, "6d469bb7-9140-4e28-aa72-875293af7586": {"doc_hash": "892af99ddeaf4a6584a0ce121ac4d0abf427025f6ecf678b655f49c913e4adfa", "ref_doc_id": "2644630f-76f0-4542-aad5-93256e4c9f9f"}, "e75fb5e3-9ca2-4b37-b615-ed9daeff854b": {"doc_hash": "3854ccf39251758ae7647bd4f5ea5667cbafd7718f50eb3165ee2eb633a7d749", "ref_doc_id": "7b75e568-8c25-4279-a875-a037fd8eb455"}, "8135b7a9-c0de-45ba-b79a-debe4bd27154": {"doc_hash": "63d7e8807f0bc43bd6eb9cd0283f4a496efe448c77159f07073e3f28b77d92c3", "ref_doc_id": "e735267f-54a1-4ad8-b203-9b28efb9fca7"}, "12435baa-e252-4cef-a95b-c3ecee925c78": {"doc_hash": "72f527a30173395a3efdf6634e29bf3ce35f59ffce5f44869ce5d43d4943b05c", "ref_doc_id": "274603d3-9379-465d-947b-0b30857a6c50"}, "2cf65182-ca0c-4c5c-a573-d467f7e6e919": {"doc_hash": "bcf93a22312199807fd232e66b993fefcd5d8700dd77183b0c537e86ae395af0", "ref_doc_id": "71a5a93e-10a2-4ba0-9d75-80b303a1fc50"}, "9dc6fea3-1e33-4829-9cdb-99d86955fb6f": {"doc_hash": "c352472f5a20f017b63a9ba6050be13baf29df2c80a09869eeb96ec875c42c3d", "ref_doc_id": "905c41b9-560a-4472-b5f1-699fd1bbf758"}, "35e26b4d-6785-4d07-a619-04f4378bfa8e": {"doc_hash": "a2980e6385559589bd64146552a8edf2ba189c70aa657a805bfa1beb09d35b11", "ref_doc_id": "e8c93f99-cc25-4769-8c53-e549069fdb2a"}, "f4c7d95a-0686-424f-b1b0-30e83f7c9e1f": {"doc_hash": "8108ecd5edb6293d316d3b3175966a0007565d2188183980aa54d4d1260f24cb", "ref_doc_id": "84d99005-5433-4d8e-9b52-91aacd50c218"}, "50214f4d-f60e-4b98-9089-6a382962b6bd": {"doc_hash": "a85afa1079c77859662f1b7def95f5312bdfb2e9bcdf23a0a35f6d29a8a71107", "ref_doc_id": "1f7935e7-d9e9-4e4e-b0f7-d6f44c15f671"}, "20521fb2-081f-4337-8f47-188e6a0920b3": {"doc_hash": "06987bda079e5dab5f26854b8e5e54274c3cbd1dea46831aa1782a0fbb4d0d3d", "ref_doc_id": "07db983d-9ba7-4a4d-93fd-c1b36e1beb58"}, "c64f9637-169a-4c9c-a0ae-131a767ee193": {"doc_hash": "aa6b19f89a92aee1a7f5e07dc7ac21d1a085d17b23769dc363dba85ca2647f6c", "ref_doc_id": "3f328f6b-e1b9-41ba-a9cb-5952c2c89dc7"}, "f217d1f2-a318-4486-998c-a07e91f4f3dd": {"doc_hash": "b784b4fc24d4077a0e09c789bacf01becf9e0de3d2af3f107e1058a0bfc95424", "ref_doc_id": "70f959d4-a132-4827-a868-2f7944055757"}, "587b71e5-96fd-450f-bfc7-c698bd55192d": {"doc_hash": "cf7c1785673f690f00989917508c24f750bd5d05d6d9b3b0eab49ad9fc6a4ccb", "ref_doc_id": "b5b74fcf-3bf6-470f-8f04-eb9ef872c259"}, "883febc2-346a-4321-a476-f322f9d7e372": {"doc_hash": "9834d0c52711d56fe46a44f09c8bf81e4b4eac6b471c6c7119269639346dc9a5", "ref_doc_id": "8ed53990-a6ad-45a9-9a4d-531496ef6526"}, "5b750473-375a-4af2-9486-d5def7525672": {"doc_hash": "b9f0866f624df89936b33006e2a4f1a617f4fb0a9b6205455382f83da58b4c09", "ref_doc_id": "48b12ab7-5d2a-42a8-8066-44f766ea5625"}, "9e10f561-8540-4d01-9e4a-9edd4d550161": {"doc_hash": "07c30b336ae5a67a8b69bdf66c60e7df399b62d3bf9ed367418af62b6679c322", "ref_doc_id": "f08520f6-d668-4d76-a83f-3e795b23e25a"}, "e6204d1c-300e-40af-ab44-e93f91516ea1": {"doc_hash": "6ccbd76b6864b4bf2c253fc39af552009644fc5446df8d1dfcd6dfd57b6b7801", "ref_doc_id": "3f9062a8-085e-4b9f-af2e-ce413de57760"}, "77724a0d-9b50-43c8-9685-0050b604e6ab": {"doc_hash": "bd55433c265f07306b7501210fdb734fdacd4b8e53252c9ee971d0b7c22b8327", "ref_doc_id": "ac19c0e6-7e72-4bbb-9e82-4df555084ae5"}, "044ebcf5-631a-424b-9994-f2a31f792b83": {"doc_hash": "9dd8a457c93490670634b3a949a6eee6046264f4a639cc7fde6541ca1249832f", "ref_doc_id": "033cc0b8-6084-4ed5-870c-e2597d2fbf04"}, "2ee305cb-b436-4bc8-baef-899cc1238c05": {"doc_hash": "205c636c1935a968d9b7c1e88e0191cb39a8c936245ebdf6a1727f6ecc4cb933", "ref_doc_id": "a971c2aa-1e8f-4be5-bbda-114bd65a5744"}, "1de65c89-b852-4180-a45d-e8f537acd876": {"doc_hash": "199586932dc89e59afb1fb0a83c861191fe74450be92772f9f59c3869999fbed", "ref_doc_id": "1d484326-0fdd-4ca5-8dd0-27b0ddd719ad"}, "ace53c07-56b5-4881-bd38-220678f904aa": {"doc_hash": "aa1ac4b8ad5e61c3b9e7bfc64f4bb183c34b5cdc5e79fef0d89f16b3c966f075", "ref_doc_id": "b151e099-1e3c-4f4e-825c-754422f1e1bc"}, "bc3e3730-9a73-4b8b-afb3-38fbed42e131": {"doc_hash": "8222f07248404d3f55b32e83d051d4d3941bca040a8a1088be6232d792ce1b99", "ref_doc_id": "8fd686c3-7fba-4674-b4fb-4c1689d6ea42"}, "001b7086-8454-48ad-8ecd-95190582250c": {"doc_hash": "7d0588d9d2cdd28db9e615c0e2928e21afa0e989ae5da764167d2515e9a3c8f3", "ref_doc_id": "981ca82f-c210-46a1-b5d3-4d680d4e6e6e"}, "d5ba4156-25ca-4b14-a444-4f73d9c55477": {"doc_hash": "943d378dc8ed96f659d72c2c45c6827a9c4711953c59eeae4f4d6be2dfe4f7cb", "ref_doc_id": "317f8931-0d30-4892-b85f-691a5a5f5065"}, "884f8baf-c0bb-4795-bc64-47d56e3d5679": {"doc_hash": "31d9a92a3de6827c4dc21bf8a098dc49fc3bc47dbb95334ef439af79e12dc1a9", "ref_doc_id": "3c94a936-58c3-40c2-8460-42acc6973be0"}, "929ab39b-cece-4146-a72f-de31cf1d565a": {"doc_hash": "a570f0c0be6552e8292e844140d04b876b227799473799ce8c7a6dd830ba0ab7", "ref_doc_id": "40f360e5-34d9-4e1b-99a1-44b64948c1d7"}, "fc54b98c-ac64-4114-ad33-05eb7f4873ce": {"doc_hash": "99b412fdea9786e4c24367e264a646b43132a4442a94cfa1b81bb25e6c1c0a4e", "ref_doc_id": "4a7a6217-56f0-4c3c-82ea-8c0656599820"}, "2721f66a-15aa-40a7-92fc-8dab2112be14": {"doc_hash": "e1e48927452d5c62eb8e6a014c9a7c952414b4f73e0bb7a9c9530b9adef5f2a5", "ref_doc_id": "b93fa343-5e48-4adb-a6b5-aa9dd34ae514"}, "08d52fd4-b884-4242-a2f2-71f7d3e8c757": {"doc_hash": "ca367515f53ca626c2cec414434bb012aa361848f63a0cdcc5d9a18d431c9594", "ref_doc_id": "24ded022-d957-4fdf-9043-460f5443226c"}, "bc9e063c-3ce8-48c1-b945-456bd8541258": {"doc_hash": "75cd94c5886c0533a3b72a1859f3db6d0cba58b13550ad16bead85a070b79404", "ref_doc_id": "aca38c90-3db3-4111-b1c5-0e8b47c1d236"}, "8b68a5f3-e16b-457d-90d3-a58f6874d2db": {"doc_hash": "981cea6737fe845b72dbb166df6614355644717698d0a5ebe98680849b2a9859", "ref_doc_id": "91e9fa1f-816a-4b79-8db8-f9f1ab70c971"}, "0c0b5494-595f-4dbe-8af5-dcc7a075eda9": {"doc_hash": "0863eeae5fd5511a0277ce1bfc9ee964d04826012459debf30a8fe56262cbfc0", "ref_doc_id": "d727beed-dd36-40b2-a8e0-d20219072339"}, "b58b3ea3-7653-4e1e-aff0-8392e261572c": {"doc_hash": "43a18941bb3f8a2caf9996763200cdb2d8e9e411d1c2d053dd8b670fd979cdce", "ref_doc_id": "cac3bb6b-3f54-430d-9c14-447735f336bb"}, "7303bbfd-065f-49f9-a7f5-98665bf7635f": {"doc_hash": "27647171844ab2fa822074ea29a2c9a431b4aca5f2fefc2bb5b1f9049b833a4a", "ref_doc_id": "41edc7a7-970a-4eac-998e-5b961a7a1c01"}, "dfb6ab9f-9888-4d61-a650-ae96b9e0b3f7": {"doc_hash": "3a1a96987ae2ab829492ffb086ee22b1f03098738c69b863fb3a9cedfc778255", "ref_doc_id": "341e38ac-5522-49af-88c0-a02281c89225"}, "40a9d26e-175f-447e-ac54-1e5bad90063b": {"doc_hash": "c155bdbdb183a98a336e92e5ba2bd7269d2e4cf2776c1bede41e90e21da4d282", "ref_doc_id": "10daf129-f1df-4eaf-828f-a77800a51b86"}, "56dad17e-7272-4e94-99a2-541a34315396": {"doc_hash": "8d5471bc311554c6190bde5861c6b5a1cacb92a125ac8d33bd6d8230d05938ed", "ref_doc_id": "fcb340d1-8c6f-4ae4-8d92-34be43ba18c8"}, "f61333af-7eb4-4a3e-a5a5-932581e8176d": {"doc_hash": "0ed617601410592ca3b705391f8e51ea4dbc4fb21c2b34423b0ccda4fb3db8c7", "ref_doc_id": "0182d6e4-c15a-450a-99c1-1aea53977b8b"}, "66697d37-8174-474f-ac19-d1b656f0a55a": {"doc_hash": "9d6c30fa1dd6dc0f2aa40f8413209ad5cffdcfd5a91e12551ca9ef520e6a78a7", "ref_doc_id": "cf28c8c8-b18e-4cc2-842f-c06ee5068d58"}, "87cff90f-ccbb-415f-abcd-bad192f14de9": {"doc_hash": "720c85d9285deb0d9235829e9e49045d3a91deeccf9aa3545f98ef1d0ab16260", "ref_doc_id": "5be6fdb8-bf79-45c9-82fb-3f3e8ec6902c"}, "e82cf9d8-d985-468c-91e7-2b20d43a02d2": {"doc_hash": "3bd127d6a6788bccb6fba28ad24bdd58e87037301d0ff1d9544e8e1ba56695e6", "ref_doc_id": "a0b2a2d7-c7e5-4ce1-bd75-79533537a54b"}, "172c5c1a-5f7d-456a-b5ae-e4facbf33b1a": {"doc_hash": "10b6ae0a2426763acc18776cde007e6b3f9ffd6409c31be9792566ef96f0f248", "ref_doc_id": "52f0d364-ee15-47a5-aa0c-347917bbaf46"}, "8b093455-06a7-44d4-95ac-bf1ec50226dd": {"doc_hash": "0cc7cbbd0de8893d58a0fe03874dc3e26e929b18fe4c7a90791c76cc22759ad3", "ref_doc_id": "24f8c79d-d933-4cee-a10d-d8aaf43cc80c"}, "d3341544-2032-4e00-a048-903fdcbbf730": {"doc_hash": "859d4e62b2a9c3baed1245c55135e0cc8cb688593da10d8abb2007daf2797733", "ref_doc_id": "32b9c3d1-d6ae-47d3-ad67-d98bb87e0b34"}, "9c0d6bfa-942a-4d55-b80b-edc63d53c25d": {"doc_hash": "d038a12956b8617ad4dbf3bb010de46418cbbc51144c1d4a2b7bd6931a446f9a", "ref_doc_id": "a4762f99-45fc-4aee-b32c-4260fd302e13"}, "87ae257e-c679-48cd-a1e0-4270dd5d8ea6": {"doc_hash": "de823c1ebd117bbac722a549ed3fa794255d33e7b68aa0da6b08dbf48b4d7ec0", "ref_doc_id": "309eaff3-8911-405b-b63d-89da66100af3"}, "2ceb873b-9d39-4079-9556-f28d6542aa81": {"doc_hash": "0b07887a9cfc869e92a4ce85e2262df6eb15b27e0651fbf63220bcedfb177841", "ref_doc_id": "65583a0e-f55d-43e1-b717-bcaf67864e25"}, "514a49ec-7fed-4d76-a1df-0f347dbf2297": {"doc_hash": "e8a44f3fc6f9cde3e44fa93506f8cdf8095f8f049d42aa70d9ad837014c8f420", "ref_doc_id": "789210fb-d24b-4ce6-b369-be52a77ab42a"}, "b42c2e44-d43b-43cb-89b1-546eb4a227dd": {"doc_hash": "cf7238d371c174e01efb302e73da10bbc34ae1059ff4e55dce4fe0112c5fb8bf", "ref_doc_id": "7bae26b9-1623-4301-aebc-dd089226a9d7"}, "d99ae7bb-ff61-4685-a24c-6c5d674ed10b": {"doc_hash": "34dad3445bda7bcb1a11177bf8c5731ab39c4ca4858373f0017b6135b8a09a71", "ref_doc_id": "fde0b1ce-17c5-45bc-a4d6-de3f1e594e36"}, "82a898b5-69ff-4fac-b7cf-f7f722da7c45": {"doc_hash": "8d7846dc053bda8c11abf55289c2c401fdbc6c0bad091e4d334e854f7a06147a", "ref_doc_id": "afb84c36-218e-490c-a13c-f329445e0162"}, "4efefda9-4f16-4e7d-9a18-147538052db2": {"doc_hash": "c7d1f9a5e138eb124469e32f9b09c5d182dbbb9f6fd6057e935702f7fff31100", "ref_doc_id": "722227c1-83e9-430e-b5ff-23286433b8b9"}, "b40ab00d-3435-43b4-b803-925d1ec83b5e": {"doc_hash": "98c84593f27806d8be60b8758c41e6c8908f24bde3be2c4ef58d7b925fd13a71", "ref_doc_id": "583e20ce-eab0-4efa-aaf2-7b46c2760910"}, "90f7168f-f6e6-4ed4-a8c1-f7d6b725cbe7": {"doc_hash": "f2a05966c8a502dd6671f175971e07de7e6ea4ce58fa4db93881dd326704ba9c", "ref_doc_id": "033dabb3-deef-4e7c-8795-f4d08daef68a"}, "c6e2dd07-df40-4439-9e40-52ef0c5b08b3": {"doc_hash": "af33a8111e43abf6b8e47954871c428253b840e6b61b9d0845c40c957411002b", "ref_doc_id": "3fa37804-6869-4195-afa4-d9f6c7ee778f"}, "e0943d02-5b5b-4fe0-852c-e12f9a1bddfc": {"doc_hash": "465eb11e196fb9b0cdd919c5d5538c7eee5fbf50248cbb108cf93885ef02f80e", "ref_doc_id": "470d9f69-87f3-4b34-89c7-a685e6e9aed6"}, "6a779fce-013f-4936-b2ab-8fab0f61976e": {"doc_hash": "a0c618164b03d8aef574dad48287e1441380ede05b73f3af03c312dbebc9cd09", "ref_doc_id": "8a01045a-156c-4edf-a9e3-a2462a477075"}, "5004cd2a-f69d-44c5-b1e9-1436203a8643": {"doc_hash": "a525f495646a2c086cc401ce860e74ddfc3b73636e9c596cccadbd675fa39237", "ref_doc_id": "79c0eda0-303a-41a7-929d-2d0d997055f8"}, "d5fb5ff6-0fff-462e-a589-a13187850866": {"doc_hash": "38ae5283f73734aca0ac178500fc978a9abdca010be6808032d7acd234067eeb", "ref_doc_id": "bb686fee-77e8-44a6-93ec-fb4ebb7a2ff5"}, "feb2f707-2e36-450a-a799-77e10d148709": {"doc_hash": "8bc07e1bdff4bc6eba72ca3c51dd61e99f9e4003bd63114b91ac7e15cc4992df", "ref_doc_id": "20e3f47c-e459-4fe3-a7a7-038449764638"}, "596b5aad-9c4a-4cc4-aefc-d6174598ae86": {"doc_hash": "5736ab3d9d1d80d6528eae66eb3bec9139eb98a89b6b3d98127982bc33da07d1", "ref_doc_id": "2e15f622-ef7a-4cb3-8893-2ba3327826b5"}, "41e2cd52-7dd7-47ca-8ba3-f7b1ce56b41f": {"doc_hash": "db992c2e04a00d9c95f70295c53c7eaba3cb38dfd6c9d409d084d7218f833abf", "ref_doc_id": "5439bc74-bf9f-4716-b9cb-66aff6bcbab2"}, "d78bb477-5566-43f3-ac70-5269eeaec4d5": {"doc_hash": "87b475bacc51ccba2b1304e4e48e29c665bfcc767141000c73a253f7553fff03", "ref_doc_id": "86d315d7-a833-4f61-9356-dcde786f1104"}, "9f33d179-8a06-45d5-8e9d-0c0b8093d2ae": {"doc_hash": "da93252be673c615605d03b9d6475af7d35d8b191211fdb0a1d234bbb54638d9", "ref_doc_id": "4c84af25-3633-45c6-a272-757de885aced"}, "900f6628-f8ac-4ef5-ac25-a0a6f5d0351e": {"doc_hash": "8fed0257bfa79c96b7fc23961c6a1ca3f95c1a2d7c62fc394629b2b84c4259e5", "ref_doc_id": "3143a739-7639-494e-9d1e-5d2d7ed338ae"}, "ffc89437-c27d-4852-97bc-34314504efff": {"doc_hash": "fee4c70d70ce1b5a260768c960dc039b185dc0ad9cb8035aa92cc39472521642", "ref_doc_id": "94f46206-a1a5-4eb5-ab9f-989f5b563b71"}, "d69f2bc7-9cf7-4ce9-98c4-4a3b38efcedc": {"doc_hash": "7bfe82dbfeaa0f1c5f68477256652594b10d276aed3a1463a7aaadf1dfdaae08", "ref_doc_id": "752a62ee-a8ca-4351-a103-7219cb108173"}, "b12eedd2-fd0f-47e2-a3ce-81fdbf33fe14": {"doc_hash": "c366f3b5064edfaa801d917767ab3cc3d7ed5a1efd2f30e9aeb4fc0f5e2629bb", "ref_doc_id": "c17d566e-fed1-460e-8d96-2016e075ac47"}, "461763e6-b22f-4868-8be9-f55a3e723454": {"doc_hash": "f882b977292f7127eb8c435c77c6a628f4fcdcff778fedd39f8fd41843117d58", "ref_doc_id": "cdae5ea0-a428-4b78-9735-24292beeb2cd"}, "ab544a3a-4e20-4f0a-94ba-282249c9438b": {"doc_hash": "35e922eb36481fe7c226e4a4506ddc16d9adf2b122d2596268626f75638ebe4c", "ref_doc_id": "14aadaf0-1e8c-4e64-994e-81f06b0759e8"}, "1207783f-1c24-404d-86fe-b18706c49d71": {"doc_hash": "6ca0fd0aa26ddb0ad8e991259cc40765a8064eb80d27478e69291e74a7486694", "ref_doc_id": "e1d09705-a0e0-4a1d-9606-f9b591a69964"}, "a93d8a22-8a05-4fbd-a4bd-d04b0740a5b3": {"doc_hash": "0cc5461bbc5b4fbb45c7fd4a479ae259949b2b6a6389adf9dabf32494bc7728c", "ref_doc_id": "3f7dbea7-6acc-4284-814b-14fd74459fe7"}, "ade2023f-3260-4c2d-b6c2-b6a3687ce596": {"doc_hash": "f499784d1918089c6fbb781d27d3498d1c1610431a74b28b9c986033bd9e9566", "ref_doc_id": "ae0608f2-68ef-4b21-941f-c9a78090ea2d"}, "22c69836-3570-457f-803a-ceb1cb0812d9": {"doc_hash": "e09b1cf148ae0dc1c5fa7d14aece312f6704e1997f8d9441562adaf8b515697a", "ref_doc_id": "a8151c38-78db-4ebf-8691-9b7da958c079"}, "a7140219-0066-4c49-b68d-9e670845c715": {"doc_hash": "9fc71f4d1bef5b90b67714a1282de7f25f095d316f3e899729b2954ca617b615", "ref_doc_id": "4ff4e9e6-2909-4d58-866e-8fa0f5785c5a"}, "13e8b13d-1143-4946-a82d-a992a62ec0d9": {"doc_hash": "55ecdb8d0f82a89f98545d560e8fb15a8481ce2b539065fe5f037c4e2ff48292", "ref_doc_id": "5e548cb1-95e5-4486-ade3-a6f5a9c8c0c1"}, "79a716ea-f0e7-4251-a984-ecc12c23bfbd": {"doc_hash": "4e4bb5d40d710f4d1d6fb49d196e3a70c19483c0caf585966be8d1aa49cd1f1b", "ref_doc_id": "ca14b984-030f-415e-ad5c-caeda067a58e"}, "d4193e20-ab0d-4e01-835a-437e082bc02f": {"doc_hash": "d8f84e23e2c672963979d7d48f1f7a299e47057b4acc4bbb00e8519cf99b8a8b", "ref_doc_id": "e9ddc8d6-5471-4153-b532-f7867060f505"}, "6d4c7115-c2b1-40f3-a2de-28accbf34f12": {"doc_hash": "be9164d8375f0ad4e9b7ec61ef6ebf3e65c3c42e156fdeb70569dfed3308bb90", "ref_doc_id": "33b656a1-ac56-4319-9fe6-5ecafc70cf9e"}, "eaab75af-5e82-4086-ad0a-b8db60f8b1d8": {"doc_hash": "5fab41db7816e60ce6506bd5753176243447f3d1a87a0b757c3da1495fbf24aa", "ref_doc_id": "b2d233b2-7c96-4f30-8649-dba5a501b960"}, "413327a0-c54c-4c0a-95a2-658fd7563d78": {"doc_hash": "30b46c5c3e55ff5825469eb028aece7d126298730928d9490fa84e7ea321f055", "ref_doc_id": "c275ab6e-81b2-4815-9de5-283385195b98"}, "2b8269a3-53ba-4385-8976-58c370096cf3": {"doc_hash": "05e66b751c3a7a07abd65712d9d8b441566df1151bd5ab73f64d5479efe8e800", "ref_doc_id": "12461ff1-3f30-4a53-992a-efe69b4f07e5"}, "24c9f9c5-b1fb-4718-9860-5ec500c84b26": {"doc_hash": "93239638b432f2842ed9d0e6cb9714b2d3d3becd59fb65bffe12fac8616d73c0", "ref_doc_id": "f45a812e-1df4-4591-b2c3-d36840180c49"}, "5df26ca5-168d-4e82-999c-a2a1f6a799b1": {"doc_hash": "8130f49c989648f0bce189d6831d88192e7521d117d1d3fc2b5b335ecdd4d8d3", "ref_doc_id": "e690811d-dfdd-436a-af86-18fec5d718b1"}, "ccb02c03-1089-42b1-8c8b-fe7e817c5b21": {"doc_hash": "cb93580f7a258460de84362d3495e3bc53181576d1c397eee5c2abad2e3e255e", "ref_doc_id": "26cff75a-b2eb-42db-a018-635822a44bcb"}, "88d39e82-2ef4-4b40-b17d-00d7ecd16899": {"doc_hash": "b4f2f15d8b55ecfe4d2812e390dcdeb3a4287f20fe3aa3b2eb2f21f6f113d869", "ref_doc_id": "8552e168-efbe-42af-af32-dab8fe2352c1"}, "b7cb5a07-5cb4-4d3b-be94-d3a603c459d4": {"doc_hash": "f06c45a08240a55ef47c52d2f3fc012ae3c50fd8d1765c6ee5f26b411df86ff9", "ref_doc_id": "a1199be4-6b0a-49cf-a7ff-db1822910ce6"}, "faf4855b-8534-4f0f-8b5e-573bd58a7ca4": {"doc_hash": "b1032c683a7f6311d5337d1398c462cb430c78007fc70e5348848e40cc12205c", "ref_doc_id": "a9eb69a1-b10d-4f35-82d5-4f1b6510851a"}, "ea785456-beda-48f5-b1b4-f6313b7120a8": {"doc_hash": "92008b89b9bdf7c18183a52260a977619ea601cae07d3150f8adeb5fe1927c8a", "ref_doc_id": "e13f4b5b-0e55-4469-bd67-bde6c9fc6427"}, "f1cbfc8d-665e-43b8-a273-e58dfbd927af": {"doc_hash": "a78b78aeaa54023cdbabec4006754e931505672920073ee4f808f1c94a36d7b3", "ref_doc_id": "57f84b43-1a33-4bd5-b907-2bd85dab9839"}, "00a259fe-d9ec-4725-8684-ae8f2dd31c18": {"doc_hash": "908525869091490013ff137082dbaa0266826f56425cf964abc2fedbf97f1ffc", "ref_doc_id": "0cbe28e3-236d-4e7a-9c67-d58b04d4e417"}, "239695b6-e60c-41cf-b7e2-caa22529a000": {"doc_hash": "b3702f716975b3ef63f242813a34b40ac6f6530c12264127312673075cd13ebf", "ref_doc_id": "8e0b3912-51a4-4621-9e7c-3ef039c34e79"}, "1ad9c4dd-98ba-4966-a9f2-40c295cf591e": {"doc_hash": "d60d1b61885f14dcd8c5d4dd77f9fb8a9729bd99a6e259e9e09342cc9bb2bf68", "ref_doc_id": "16180e5a-a13b-4cce-b2d5-8a467b22d486"}, "d5ad9091-0e5d-46b1-8139-6df82f92f887": {"doc_hash": "241d699be6e55493af7c748376a9042a95e20b9220e9faa2535999fde7ebc873", "ref_doc_id": "2614ecf5-29c2-4487-bceb-4c03ada17fe5"}, "af41eb59-7767-412c-b1ab-138ea4ff5048": {"doc_hash": "7a4596645ee5d63108c5c75f144bbaedc3d52df150de7a4d4b7f5686a3122c5b", "ref_doc_id": "1b223545-fc85-4a91-bba8-f49024b2d6f1"}, "f53412f9-e46a-42bc-a897-52ea224b4b44": {"doc_hash": "23b0045036b03579aa4331b4630f382894290ef7c003b71a42527e4972c59cea", "ref_doc_id": "2c3cbb4c-01b5-4bd3-8340-d3dafe02ffba"}, "7aac379f-de04-4616-b199-3a0b6eb5c2b5": {"doc_hash": "a926d9ebe1d21f8dc6640621bf4a0e8375728cd9ddc2af2e936f84fe02c1b253", "ref_doc_id": "a6620730-e6fe-449f-9cf6-686c0cbb5375"}, "3173ad07-b470-4850-bb42-2944890c1a05": {"doc_hash": "2a15d0faa34c647242b6b20944e944d5bd240e662b7dde898c8d085c12b09ced", "ref_doc_id": "f4592879-856e-46f0-8506-56f46096565a"}, "46924f07-5447-417f-9996-9d06a8043d7e": {"doc_hash": "42ef33ce6af1fe0802239b3584bc180a3260bfbb5af39c96a33b641ac96391b3", "ref_doc_id": "cbf2e642-ce65-4e51-917a-d84568ee048c"}, "1b9be001-3a96-4c46-8910-b4c2007e74a7": {"doc_hash": "33b7741d2166fdf1cb1dcc7aa82813b5fa4b5c5df8044cd8b387091388514ad3", "ref_doc_id": "0a4c8419-463e-4a56-8295-81f6351b3ebe"}, "fa067714-48dc-4993-935c-744b7f427350": {"doc_hash": "c410e32c29bebfe8483c67681eb862a186b4747be1c84b666d2144a135f25961", "ref_doc_id": "39c1e8a2-ad50-47b4-9706-87e41b58b272"}, "c4d5e448-9137-47aa-bd7c-ef3aef65ed6f": {"doc_hash": "a13a5f4baa5a0e12bbcc2bb7c78f42e5a3a6ca728c92beb28600e41d60d1b4ee", "ref_doc_id": "635f83cd-5030-47fd-956e-6ef7574f3831"}, "3ed2b1d9-a886-4ce1-8b92-8a3d071b034a": {"doc_hash": "ec416d92ff93c4af835ce760c6878fd454701c46df3e846dca3a1c18e4c5cc18", "ref_doc_id": "57a67684-80ae-44c9-9d8e-29d819f22cc5"}, "92b3a135-9bfc-4d3c-b8c6-752c829e6416": {"doc_hash": "25db43b570cde0cad6aa8d67dcc2f43a77eb13f3d1a90bea8e538a6723c079c6", "ref_doc_id": "145f320d-ff3c-4f61-bd65-b5d04db13194"}, "f938c6f8-253e-48ed-ade3-516b4e502818": {"doc_hash": "64e93da3a340a80312437f168725f2c5b1488bc1649c93c232a17c4ecda6a703", "ref_doc_id": "f7dc9539-3996-4b02-aeee-ae754e048b84"}, "a9b26a7b-08f5-4a97-8791-66519f66f30c": {"doc_hash": "c48dd3727113059614d83ee715d2c9b53d0d0ba1bf83f90af754dc1e74886f33", "ref_doc_id": "1a69e2af-aa92-4b90-88dc-bb241f00bc1f"}, "f383f148-82b1-417e-86da-b2dfcad2cf99": {"doc_hash": "53124f40890cf5a3f0e840ffcc0834ac9b0c3f8092bf1b4489878603bcb16b2a", "ref_doc_id": "30e5df8e-634a-4357-a903-6128f2c56b59"}, "d752693e-fff2-44cc-90c0-f9c432ec1bb3": {"doc_hash": "cb26bf7859e067ce7417c323b1ad98cddd430eb98cdc166d6d1a5ad59adf4538", "ref_doc_id": "fb8faad8-bace-481e-894b-09156065a324"}, "2304b788-b22f-4262-a3e4-6d840af2992d": {"doc_hash": "cf428e8d48817f81436c4e3d64244d9f84f15f92e9b379166bc9c76c343132c0", "ref_doc_id": "0e65901d-b382-4f0d-9e15-89d144d6c37a"}, "de6b38bf-3495-499c-961c-c7460cf2b17b": {"doc_hash": "9594f02d3581d3e27e219c87ec4f734bdcbce73b94932d5fe69c24af8c06dc24", "ref_doc_id": "f584e456-bdad-4b19-94ba-2f2088135c4f"}, "b99411c1-e8e3-4982-8b8e-7acef20fe9c8": {"doc_hash": "a7fecb715e791668d6bf9a7a60d0aa773f8c71bd1f5f6c74e51328ed3d1e9d15", "ref_doc_id": "f7b5b129-c9da-4cd0-8bb5-e095f1dac4e5"}, "9d569a34-8a20-457d-aa5f-0b6d20e19eb2": {"doc_hash": "b71d13b8fb30770b7d6891e127a7c5cb4cd8c6e4b50a9ea2f618c1e073f4d13b", "ref_doc_id": "aa10cdd7-3b72-47b9-8317-a4b54207899a"}, "ac782498-11bb-4f96-a8b0-6043c9512a08": {"doc_hash": "7f87693816bb18ec6f7becd14d392d9341f79658acc32fffd8af86fc96413c66", "ref_doc_id": "17d8db86-534d-4bf6-9dfb-a0dd87b68f50"}, "500a2bbb-6e5d-4675-a0e2-b20f432e25bc": {"doc_hash": "608b592f9d7703d8b3cd4a469f968ec74822bd6fb2ab5b3d285a92432126424b", "ref_doc_id": "f08552bd-b089-4ccd-80af-eec3fc515bb9"}}, "docstore/ref_doc_info": {"6a5622ae-d74e-48c5-b24d-359d7215cd49": {"node_ids": ["1f19a001-b0bf-4c58-b468-4e31613b578f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "d61a62b4-bad0-4748-9c74-ef92b95a0209": {"node_ids": ["d43c7cab-31eb-424a-b8b7-0e9bfdf7e208"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "9d678ff7-9f56-4b3c-82ce-8ea0214dcf7c": {"node_ids": ["27656e70-8614-479d-a352-6fb637c2fd2c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "cbfafba3-0b20-4cdc-8735-a5196ab97487": {"node_ids": ["2a008288-abff-44d8-8743-b142216dc42a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "97856ac2-2f9e-4d17-b18b-2972237a2f9a": {"node_ids": ["fb97a55d-2b1a-4ddd-8020-18d20a19e3e6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "2d078324-b8d2-425e-b7f3-6f54e3cd7d32": {"node_ids": ["ee5ac627-8300-44c3-ba2e-320479b4a1ed"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "f7b3652d-6439-4975-aed7-cd1ff4c84d5e": {"node_ids": ["24d10af0-ba59-4c94-8fe9-a81c5b5c07f8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "a9c716e8-7fec-4f37-9471-78bb6d3eb92a": {"node_ids": ["cc668a24-3b36-4da8-9c95-2aedd5008baa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "2b33c5ad-f697-4354-9f53-6327308a4450": {"node_ids": ["930f84b6-8784-40c4-9181-7e7be14d74f7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "4cce7e55-e66e-4f2e-9727-8bd0aaa3e77b": {"node_ids": ["c9076ffe-d75d-49a0-bd9c-f24fd2e8cbeb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "70b47774-c06e-4417-8e63-8873c4f2ed6a": {"node_ids": ["dd943000-763f-4271-b157-8c391851b75e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "ef404959-890e-483b-a61d-c81b9f8dd3e1": {"node_ids": ["5435a3d2-edbc-4515-8f19-7cfc08494e4b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "f86c5557-7bdb-448e-9b31-47e1746ee5b6": {"node_ids": ["8b58fff8-2406-4319-a44b-5d4b9d2b9429"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "ac126a00-842a-4ad2-9de9-d9b6a04f3cac": {"node_ids": ["7594d104-12c8-4977-a939-eae1bdbd3d75"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "68f2b5b6-b495-4e8f-9fd8-deee9e8a94c7": {"node_ids": ["45ea8e03-e7db-46ef-bd7e-0dfe3528012b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "2b81e6fa-7d3d-43b3-9176-a94f6f475bef": {"node_ids": ["04837022-9673-4939-8901-49aea933e587"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "3eac8147-1ac4-4529-9c98-cfa82881889a": {"node_ids": ["142e538e-59ff-4d5f-a246-3b81ba9699df"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/BO - programmes NSI.md", "file_name": "BO - programmes NSI.md", "file_size": 23420, "creation_date": "2024-07-13", "last_modified_date": "2024-06-30"}}, "be7e88f0-2533-4382-b81e-d248fcbd8914": {"node_ids": ["34d21135-2844-486b-959c-3b892c9a5c0e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a5f3600f-9482-4d92-b18d-aad7668e9274": {"node_ids": ["5e6199d8-ac48-4c91-9790-cd656050d7c4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ed1f616d-0b41-4ab7-8ef5-42ef2e8e6ff0": {"node_ids": ["ce73a2f4-cf73-4003-b2a1-85368d0ebf48"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10a.md", "file_name": "c10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "00e8f73e-01e4-4ad6-8bb3-3e4407669216": {"node_ids": ["b58e2e66-88c3-4245-95ca-29cc8dc4aa6e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "2edde1d7-5529-4451-a756-eec80e70daba": {"node_ids": ["e3964af5-10ee-4f53-bb3a-73344089aacf"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "5a8cba85-ab57-40a2-ab16-c1fbc2150162": {"node_ids": ["6f2a152f-c93a-4d7a-94f0-78e179db2439"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "12bff89c-2281-4191-aceb-77463fe4b7d6": {"node_ids": ["60b6c3c7-36f6-4ed4-bdf0-4f8e673ad135"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10c.md", "file_name": "c10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "df26e656-4261-4921-9b03-b4b35da59e14": {"node_ids": ["9becb5d8-8544-47c6-abbd-d857c3430f8c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10r.md", "file_name": "c10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ed6b02f7-ad77-420a-85f5-e35e1fc61203": {"node_ids": ["85675e5f-b0dd-4677-8f4b-4e3c9c7cbebd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c10r.md", "file_name": "c10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "449bfc83-f982-4acf-8fe4-5964f0eb5046": {"node_ids": ["7091e703-e40c-456e-80a7-fc8cd2397a4b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "0c194e55-9711-4870-9545-0397557bd199": {"node_ids": ["b78032bb-7b2e-47f8-9311-5a4cfd76c17f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "73a9f20a-3768-4769-a930-17b52a9e38d6": {"node_ids": ["e482583e-661f-424c-b21a-cebcdaf62c30"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "54c4f3f3-602f-432f-8d62-dea3aa18a7fb": {"node_ids": ["9d945014-66cb-45d7-9ded-e4580cad61f7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "6033e73d-537d-4304-8a36-23b0674c7f08": {"node_ids": ["4b3f4012-203e-477a-9670-6a866189ab0f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "ef3de27b-074e-4cb9-9898-7566a8661bde": {"node_ids": ["98429152-e29f-4bf4-914c-29591028b4ba"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11a.md", "file_name": "c11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "27735650-443d-4fcc-84c4-aeb894b5daf8": {"node_ids": ["da08b58c-0d9d-42e6-b337-97bbd12285bb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "34e0ecdd-edb4-473b-97b5-374cca03aec0": {"node_ids": ["17ac0a5e-34c6-4680-bcdf-7a05b396251a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "93e70f45-9eb4-4cc7-9793-53156e023e9d": {"node_ids": ["4d0e0b99-91c6-4c29-897d-6cc33714e528"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "6f76151d-938f-4a81-88f4-828ad4d00466": {"node_ids": ["c1a53512-5102-4b65-b913-e367e364a430"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a4120c1b-c63e-4467-9bce-eb785a5e3f6e": {"node_ids": ["b4807a75-26e6-4b65-8117-7433c1c0858c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4365248c-a130-4cca-8dee-b9ddef79c556": {"node_ids": ["d670f387-68cb-442a-b66e-b427740cc81f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1fa48e40-2fa0-47b4-8e38-7f3de70b59bc": {"node_ids": ["f1d1ca66-5633-4b20-abc8-cc3ffd3bf52f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11c.md", "file_name": "c11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e6af1309-d5c7-415e-a82c-063d7da9f9c0": {"node_ids": ["fdeeadab-65b2-4944-93aa-7f98405e39de"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11r.md", "file_name": "c11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "602b1e84-7183-4eb7-b9e5-43e713cca174": {"node_ids": ["96f4bd72-4a15-4b1c-a44a-36926e7bd7f6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c11r.md", "file_name": "c11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "dac53864-f4a5-4de3-9f95-dcf4c32036da": {"node_ids": ["997266f6-d0ec-4ccc-a96c-ccaa936b672c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12a.md", "file_name": "c12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "843e1693-4bfa-4bc2-baa2-a6110a29b189": {"node_ids": ["e52da04b-4a88-4c16-8a36-4b52207d233f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12a.md", "file_name": "c12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "27c31d9e-8d21-46ae-b4c1-6f40477ef254": {"node_ids": ["46d0be56-d3d0-41b0-88e7-44abfb43876e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12c.md", "file_name": "c12c.md", "file_size": 6535, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "88040aa2-75c5-4ed6-943f-feaaaf651e1e": {"node_ids": ["57de25e1-67a3-40d7-9881-0d290011cdeb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12r.md", "file_name": "c12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e45bfe72-dcae-434e-b406-cc5b441ea83b": {"node_ids": ["ac86cf98-e925-464d-8c7f-6d96320689ed"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c12r.md", "file_name": "c12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f3a217cf-8cfd-4fb3-b979-daa824b231c1": {"node_ids": ["f062fac9-05ca-446b-8bd8-c6c86b01a334"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "09804031-41e9-4f0b-a324-490bcfc1a932": {"node_ids": ["b0ab32c8-83c0-41b2-933e-4552fc3a0cb8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a2769d44-f75d-474f-988b-771f690a213f": {"node_ids": ["21cd0318-038d-4a70-926b-db01f0449823"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0e72f884-16f9-441b-b44a-c6572616a7f6": {"node_ids": ["f3119e9c-0779-458f-8c7f-0df58c329cb6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13a.md", "file_name": "c13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a364d327-8765-4bac-bac5-bb3e222684c7": {"node_ids": ["5ff37844-5f9f-4b96-9cef-5f0b5e390252"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3dcc4e6b-e623-4531-b659-9552694a5a11": {"node_ids": ["025f8427-3452-4371-9f2d-5d6be906b823"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9957b0b9-07c9-4050-bad2-52f6dbefa29a": {"node_ids": ["81862c10-39bb-4274-b45b-b1a17843d92e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5b56fa3c-e975-4237-90f8-562aadfe0f13": {"node_ids": ["45cefba3-913f-404b-9863-c2a3c37b23a4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "47451d2e-9896-414a-b66d-75b38b4ae2ed": {"node_ids": ["749d61ca-e768-42c6-a34c-9f04957adc16"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "109ea251-d24c-42c2-9c25-f6d2d3adb554": {"node_ids": ["51e2a1cd-2471-4919-b664-7e7e33b4baa7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "47d7ae3c-fef4-4ec9-bae3-09d27d9cbcef": {"node_ids": ["23b61737-9139-443e-967d-8a35e8b169bd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13c.md", "file_name": "c13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d4e4a12c-0dd6-4c8a-a40c-190deefddc76": {"node_ids": ["21595bc9-f53d-4d86-89fa-83b499eb771c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c13r.md", "file_name": "c13r.md", "file_size": 1262, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0cf88da9-14ab-487e-851a-77afba0aa572": {"node_ids": ["894b65a9-7ac0-4f80-b31a-fc90677d300b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1097952d-7a0c-4547-8df5-f731245107cf": {"node_ids": ["aabf8be2-b833-4acc-833a-64d6b8c1a569"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "617485c7-aec4-4809-b48e-234d98d84cec": {"node_ids": ["7325adce-1139-4ace-95fb-74336a29c151"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14a.md", "file_name": "c14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "bec16df9-4d2c-437e-9c0e-86e13c7b6e37": {"node_ids": ["355048b7-8936-4d15-8b05-dcaa11d597ea"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f036e09a-a890-442f-9d05-a0606d0e9152": {"node_ids": ["7eb443b7-e02b-4770-8f2f-d7bedc8094f8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "d1c020fa-8286-49e4-8327-e9381b6e1429": {"node_ids": ["c65bfbe8-9297-4f60-beae-1408d12b9a7d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4c47c26c-8b54-4b4b-8b77-5148ed8a3783": {"node_ids": ["3f25401a-aaae-41f9-ab9a-59c2694e2086"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1bb73b1a-cda6-455a-ad8a-2f578010801a": {"node_ids": ["449c5e4b-cd2c-451d-b6e8-2917cbc1e50f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "2d0c2095-e15b-4d8d-b67e-9896c5cb9aa0": {"node_ids": ["4926296a-f866-4f19-b62f-9fb369f82554"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1750c214-104e-4e49-a173-004a91b8bb51": {"node_ids": ["0828bb43-d615-4bd4-8eeb-ab7522179810"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "97756da4-76db-4204-9cc5-71c902c89778": {"node_ids": ["4b75b2d1-201b-4b79-9425-837c876a9195"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "ee9365ba-696d-4275-a6d8-0ce50dcf6b0d": {"node_ids": ["3fbec9f1-6d8e-4999-8ec3-d104faabf16d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "553050df-d315-4936-b791-e4c41ade6f70": {"node_ids": ["b5a14889-1737-4ce6-949f-f12d24177ddc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "b4492473-0b26-4ed6-b032-3b5817a6675b": {"node_ids": ["624e68eb-7573-430c-ac06-5962416f5ac6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "291530e8-6dc9-4a99-8f7a-bf24ee4ebaeb": {"node_ids": ["0294889e-4d0c-4f4f-abfc-d8227ac113df"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "7205e833-bd83-4fe0-892b-a4787a7fc470": {"node_ids": ["9549c964-88be-4cc1-8145-0bc33620a7d8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c53eb518-f5eb-4b81-8552-ab282292d856": {"node_ids": ["a38390f7-e6f8-4866-b771-344787180c5f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "bcbeb604-6071-433e-8295-c20906b8dfc0": {"node_ids": ["97972804-eb13-44ce-8982-68e1f7de1064"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "87c85179-8032-41af-a1c6-4b8f57c92e9a": {"node_ids": ["a125b47d-60fa-45f5-9eda-55ea8cb6e80e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14c.md", "file_name": "c14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "93c54499-62a1-44b1-84ce-75c604d72dac": {"node_ids": ["155cf083-d77a-4e40-adea-f08398966d30"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14r.md", "file_name": "c14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ca4e96ba-c36e-4b62-97a2-b719958d84e7": {"node_ids": ["d9b47b93-1202-48d8-9c55-df2fa79fbdad"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c14r.md", "file_name": "c14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9644c6ff-8fd1-4e1a-bcb1-de9def566b54": {"node_ids": ["cf711582-d4df-43a7-a896-a620b2ec1f43"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "56e1dbf3-6855-47b3-9cba-4d3d76a0192e": {"node_ids": ["095a2dc6-8e97-4c39-aa81-3e9a6de07f9f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "bd194c5a-5a2d-4c69-8715-458de16bc5ae": {"node_ids": ["511432c2-f64e-4e24-a36f-685fe05ecf63"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c8c955ea-ef68-4674-abe4-cd2be86f3fbf": {"node_ids": ["93a5a1e2-a970-4ead-b3e5-35cbb0bd3d02"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15a.md", "file_name": "c15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "57d78170-c1c4-490d-977c-97c2a2931e9f": {"node_ids": ["d4b29faf-0701-4e52-a764-412397533a70"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8a83d90d-f264-43a5-9453-b22359d49cc4": {"node_ids": ["e1bc8f3d-e902-41be-bca8-10d1d61b0756"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7388c529-e104-464d-bab4-cbbb41a71081": {"node_ids": ["ad296553-f91f-4278-b5ce-801f637dcafa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e38e8e51-64e9-4299-9ce5-cd1caf7e1640": {"node_ids": ["5df1b0b9-99c8-49c7-ae62-6b790accf847"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "81be80d5-998f-41d9-ab6a-ee3fab82376d": {"node_ids": ["727c6b32-f33a-4d08-8bb1-f41cb2d548f0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "abdef5d3-428e-4fea-9fd7-4cdc545d6279": {"node_ids": ["f70d7963-5dec-44a6-a4e6-6e00bf780324"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "37aed677-e086-4271-904b-a606a0dcb7aa": {"node_ids": ["34811b98-a69b-4cbb-beb5-186349c293fc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15c.md", "file_name": "c15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e1c94b78-69d1-40ad-96e0-6ec94387783c": {"node_ids": ["a094a8a5-4672-494e-bf7d-efd7ab21efb1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15r.md", "file_name": "c15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "77e07e37-b2cd-4732-a886-fc772570a67d": {"node_ids": ["f66ce18f-1d99-467e-9fee-afd218a1e3f2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c15r.md", "file_name": "c15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7ed3fe8a-c38f-4813-be80-e9d2cba5806b": {"node_ids": ["a18ee8b5-0db4-4f13-9bef-57088f4885f6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "0add5296-1b8d-4130-bc12-d133ba5cd9b1": {"node_ids": ["dba651ce-a492-45bb-9ea2-f05663fd69e6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "95b6364a-d7a5-4909-aea2-c2ab0a38cfa4": {"node_ids": ["125f1fea-ecd2-4160-b42c-562ee80aef29"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "1ffdbc0f-60d6-4471-81b9-778583edce0a": {"node_ids": ["31ce3b09-ba42-43f8-9580-afa01eb096ec"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "cd11aa56-6894-4ac8-850c-cd4e07f5e7f4": {"node_ids": ["a0b7fd74-f42a-48d4-b82b-657c6077a807"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16a.md", "file_name": "c16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "f3869f7f-773b-4ed1-af20-745541a65cf3": {"node_ids": ["56e6523d-95d6-4875-9c8b-3ce27c41ae11"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "b1cd9866-45f9-4c4e-a0fd-407335233087": {"node_ids": ["7ef741f4-336c-477f-83bb-b294d5626b4b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "50bfe027-7fde-4256-8a8f-6530b79d1c23": {"node_ids": ["1d3429a0-48ce-4c80-8216-75cd6b35cc49"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "ac243e8d-15fc-4511-a866-40afac1af97b": {"node_ids": ["98f55fcc-1bfa-496a-a9b9-b7dedc23b745"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "e6c646c1-2ef4-494d-a3f6-6b8d727e871c": {"node_ids": ["dcdd889b-0de0-4bc8-97da-10b3289e1ae7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "63316569-3b76-4665-8494-4551c6f1922a": {"node_ids": ["dd969051-2c68-423e-b3b8-fc29bdf85d7b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "5f29901d-aa5d-450a-a182-f72f538052c1": {"node_ids": ["44e9e93b-1b7d-404d-9c7f-dbc24b7e4768"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "db181862-db39-4ed7-99ac-d7466f434869": {"node_ids": ["641a5d59-b9e1-455c-8b6c-fe60d43eba5a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "b5ff7607-df24-4852-8852-d3afc86a8a3b": {"node_ids": ["3f25189e-2fb3-44ff-b846-0e5686b1f026"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "60cd5f08-107d-4329-81cf-d51342a07f69": {"node_ids": ["69399ecb-c271-4888-ad54-ce34d9e2430f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16c.md", "file_name": "c16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "64bea22d-3e50-420d-86d8-9dcf653eb23d": {"node_ids": ["e2061dee-dfb3-4eb9-b52a-9854acf1014e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16r.md", "file_name": "c16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "73d9f7fd-a86d-481c-858e-d4dc08cbeb3a": {"node_ids": ["fd13b1aa-1977-4d23-b5c2-5c68ddab716a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c16r.md", "file_name": "c16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "e49c6c0b-77cd-4be3-a717-4ec881a0db35": {"node_ids": ["ee8dc55e-e6d0-4e98-a3d6-1514bb0e67bd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17a.md", "file_name": "c17a.md", "file_size": 321, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e37905a3-bbe4-4503-b523-9ac5ba2d9792": {"node_ids": ["39d0399f-da88-490f-bb9d-cf411d5a5ad4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "7297be4a-900b-49d1-aa95-bfe5665d9488": {"node_ids": ["a7ed48c4-3d8e-43d2-a566-878d1d82bb85"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "03c7634f-b13a-4dfe-9584-19d7bc330c95": {"node_ids": ["d2a4d039-35ac-460b-a02f-e2c52a7e8311"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "974e4510-bfb4-4ea9-93c6-8a614669e5ea": {"node_ids": ["24d93c13-5bee-4c8e-b08f-77f0af1f741e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "9c21095d-98a2-43b4-92dd-aad65e99a689": {"node_ids": ["ef55a823-859c-4c70-9fd9-0c8feae2c323"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "212e1ac9-db25-433d-b0cf-301048c40f46": {"node_ids": ["340ab151-0b8b-499d-b782-fd62e3b84816"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17c.md", "file_name": "c17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4dcd1141-e605-4ee1-a460-94978babb1a1": {"node_ids": ["67530245-52f5-4bdc-b6ef-43e0119e4809"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c17r.md", "file_name": "c17r.md", "file_size": 1859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4ed38a1f-62e6-4ec0-8539-3c51552713cf": {"node_ids": ["0a849ea8-f07f-496c-bbb7-f019d4d65747"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18a.md", "file_name": "c18a.md", "file_size": 193, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "ceaa4f17-8948-4dd3-ae1d-a276e481a07a": {"node_ids": ["a25d138c-76cd-44c2-b948-344bb3161f19"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "fe637f62-1799-40a6-a0d0-a433cc652869": {"node_ids": ["f025f8b9-23aa-46c1-9265-53c4a593e462"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "b5533b6a-8a4b-44ca-9805-ace99f29d4f7": {"node_ids": ["dd587f43-e4f6-44e5-8b39-d17f5e047167"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f8cfb095-26e5-456f-bac8-70c3ec1eeedf": {"node_ids": ["309badbd-b786-435b-a554-ea35a0445f1f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18c.md", "file_name": "c18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "983ab04b-67e8-4a36-946d-4ea77a69a0f1": {"node_ids": ["010c88cd-61da-4343-ab9b-98fd4253ded4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c18r.md", "file_name": "c18r.md", "file_size": 784, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "b4d7d2b8-9b98-4034-a73f-c170823c42c7": {"node_ids": ["9aad4da4-9bfa-46c3-bdfc-91c4f0bf3ad0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "08f96ec4-fb60-481d-a092-ad7f2c318769": {"node_ids": ["72307c78-e8bd-48a2-a763-8cf63f5f8a69"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "43e3f5ee-b6d1-4815-85e6-dfea6d8d3fb6": {"node_ids": ["a57fe735-1341-4b71-87fe-8a3ccda462c4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c19a.md", "file_name": "c19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d88ac874-a14c-49ab-8ad1-4ae556169cb2": {"node_ids": ["3cb578be-fcfd-47a4-8d14-566b168c936d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "27dae3a0-8bd1-4ed4-afe7-89ccc2ee3bd8": {"node_ids": ["9ff8b60e-9d79-4fd3-873a-a0f9f42040d8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "ecaff489-ed15-4e3c-a4ee-c62df85b0115": {"node_ids": ["eefd07a9-e331-41ed-873d-dab50ab38e84"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "99d0dad8-8b01-43bb-a5ac-16a95ba5e308": {"node_ids": ["4c90276f-3741-4195-bf91-7a0009dbec0c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "1d7150cd-1ef1-4770-a987-ff33577db69b": {"node_ids": ["a17a7264-e379-4658-9498-5087a9eacfc0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "2cc697d2-4711-402d-957a-10d5d790034f": {"node_ids": ["9a59f9eb-4b78-4a1c-9f8f-408a1ad8b731"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "de3cc56c-4e5a-481e-908f-1cf5db7ca40f": {"node_ids": ["6c1ae7ba-16e6-418e-b327-c561ff572241"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "61e899e9-fcb7-4eb5-a5e8-8b488c3b48aa": {"node_ids": ["1d2d8400-5795-4ee9-a4d5-a43b42c44466"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "dc42eeec-07f0-4260-9648-92022f23b934": {"node_ids": ["e475a362-0834-42e7-853b-35a859bf42aa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "2d6f6dc4-9239-49ee-a327-4620e107c5a4": {"node_ids": ["7887028a-0b94-4255-8d82-398865b03cbb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "7ef4263d-1325-4048-a905-62a64a3d7ab9": {"node_ids": ["441169cd-79a8-4747-a8f1-d3ccbe7c3983"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "1f54a417-197d-4080-8e1e-f4172db9d94e": {"node_ids": ["da145994-5479-4a14-97f8-9e967dc3cdb2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "2744d87a-830b-4a99-92be-da71acacb27f": {"node_ids": ["98a7f29b-5f96-41f1-872f-2d9488b5badc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "de584ebc-9a47-432d-8088-0891090c9326": {"node_ids": ["a154d8e1-63f1-4c65-b257-ca5369581e6a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "bb0fb027-0140-46aa-b131-9bdda9900a4c": {"node_ids": ["c0a54561-1c4e-4598-a9cc-6c2b50ea7793"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "e6aab538-4312-48cd-87f0-4ecd9a6ead88": {"node_ids": ["3b480466-f5c9-4c6b-83e1-e3e76b10a1f5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "488aa055-3487-4e1d-a7e7-0869b5781714": {"node_ids": ["1fe03dd9-261d-46f1-a74c-bcc245eb9e69"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "5d10a689-3e5c-4979-829a-1683965e4874": {"node_ids": ["69f0241a-6d54-4135-a345-fc495d89235e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "f47cb18d-6619-42bf-a272-fbf30b7fae2e": {"node_ids": ["50dcf67c-e110-4de1-b0f8-0e266fc077a1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "a7a6e0fa-4f38-4872-bee5-7ea7dc5bfad5": {"node_ids": ["0c6a8010-2b5c-4504-a504-4e8035030e30"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "8a689760-a3e3-4751-a089-b60c342b53d8": {"node_ids": ["dbb39311-9340-4697-bf79-0bbfc54c819d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1a.md", "file_name": "c1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "b9954fb5-57e1-4429-abbf-926d5b0a1581": {"node_ids": ["b904ab90-84bf-4a97-8d40-e6017b8a269c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "9ab673d5-4f0d-4d95-8f00-ec2f69e6b4f1": {"node_ids": ["4937198d-9ed4-4cc0-97ad-077eedacefab"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "fdd76871-255c-4da2-8be6-fd9ad384ac08": {"node_ids": ["d5fae3ae-8786-41c7-a120-01466abdddd9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "0a70e06f-f672-4459-b54f-7cbb1f07e74d": {"node_ids": ["f8b68945-e0f7-4b64-805a-093d57434b6a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "668ce929-808a-4a41-9018-40cbda109732": {"node_ids": ["ab3bcd9d-fbdc-4e9c-9cc6-d9ef60b19ce5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "acd00401-7781-4ade-8aab-b522831a8b56": {"node_ids": ["324f2baa-f815-4501-a020-2e1e49afa0ea"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "d0054dde-962d-4504-928b-7302bbbc16bf": {"node_ids": ["62f0bb1d-a719-407c-973d-76de9b69c920"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "7e486aab-be09-4ba0-b73f-ee840e454b37": {"node_ids": ["1d69ba55-5cb9-48ee-bc23-f441e4a88ce2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "4343fd10-09cc-462f-b2a9-a73b15546b41": {"node_ids": ["974f9fd3-f1bf-4174-9ecc-54ffa2d73809"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "6620ff71-ec7a-4163-a83a-952c9ece79e8": {"node_ids": ["e898ebd9-7ecc-4fa7-9f87-c5c1a85e1d52"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "47b1c884-3400-4a75-a5af-eb0cf3a3ac52": {"node_ids": ["038b493a-e2e9-462d-b4ba-b006d99ad790"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "f44ebe39-9cd9-47b7-9ef6-983f891afad6": {"node_ids": ["b288d748-8130-44aa-bd83-eeb1165ac8f7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "bb8c1c8d-f3d2-4e4f-8a5d-f203220203d6": {"node_ids": ["2463ee44-cb6e-4cce-8e13-a47f718aa5a0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "2195ee9e-83f6-4e5c-be4c-04088a756822": {"node_ids": ["3039769b-7aaa-4027-a08d-9813bc1d6a0d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "116783a5-5cb5-4bd9-96d2-cff32f4fe96d": {"node_ids": ["eb50b032-681b-4346-b511-b5b143b55ff6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "a707d493-9ad4-47f8-8c8b-9b324506b59b": {"node_ids": ["29bb055a-f051-4fb3-bffc-3f195273c064"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "7cf7f319-12bd-4989-b6a3-ecb0949e2940": {"node_ids": ["4bd5cf00-6a46-45a5-ad4a-45baf71bdb0c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "a6edcd2c-d264-4153-942a-d639631a44b6": {"node_ids": ["db2799af-c9d2-498a-8d46-48532e811bdc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "5571003f-d1d2-40c6-be76-a41e15e9124f": {"node_ids": ["c5445de9-325d-4d10-a64a-9bcda9d0cd2d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "19bc2006-e9eb-490c-a456-8da3a233b442": {"node_ids": ["65588dbe-99e6-4d7e-a2f3-91a6b8005bf9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "926671f6-ac12-47d7-be0c-f47fda757874": {"node_ids": ["7f1dd914-0404-4c82-b8ed-4749428830b8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "361cf11e-c878-4cf6-97b9-2745a0718f08": {"node_ids": ["f30a5b7b-3c79-4539-8dc8-652400b0714b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1c.md", "file_name": "c1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "5042df36-0bb6-40e1-af37-68f5d7f30cf3": {"node_ids": ["acee3dc3-fe15-47b3-96d0-a6f9727f2e25"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "83e5e892-eacd-4a6e-8e03-ff1ddc99fb6c": {"node_ids": ["562ad8c7-e484-48bb-9f59-aa18008db7a0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3b445937-e17a-4b82-9292-7ad1e406b0b0": {"node_ids": ["c8c6eb3d-a272-47f1-b771-a9e5bed93987"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "580229bf-4f29-43bb-a674-bd69576d59cb": {"node_ids": ["90b1e3c6-6d27-4225-8f4e-508549a6e70d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1fb69de7-54f6-462d-b89e-fb70ed6c8d8e": {"node_ids": ["a3135961-0b61-44c4-bd34-0804f4be101a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "acf05f67-61dd-49b4-8450-f0eca4c1058a": {"node_ids": ["79c6d2ec-b1ac-4b7e-822d-93ba7153636c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "130a9c53-9619-4c38-9433-2a90d0de7708": {"node_ids": ["5bbf2e89-204b-44a6-b66d-0c8f040c0225"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "69dda942-7d64-4239-9131-b8187003f4c4": {"node_ids": ["ae897e90-017d-4c3b-8515-95fc1b5197d2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c1r.md", "file_name": "c1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d3c9e89d-6945-4b1c-b46a-01f7fb781d4f": {"node_ids": ["168ae92a-43e0-41a1-8339-39b8dcd1a23a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20a.md", "file_name": "c20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "645d4922-107f-4308-8b52-55e2254f39bb": {"node_ids": ["fdb7bc39-76f9-4435-bfee-24998b4f411d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20a.md", "file_name": "c20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3c5b6292-e20e-4f62-adf5-7bc0ab94faaa": {"node_ids": ["d460ca9a-51ce-4474-b484-dbe00f24df8e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "37157804-fc56-43ae-ae1d-bfbb289348a1": {"node_ids": ["e0d07d73-29ff-4dd9-80b2-fd5aaf1f73d1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "0ab62c8d-49ca-424d-b814-bbc3378dc575": {"node_ids": ["68164e8e-015a-4f11-8a5a-b68a4da0091b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f2fdfe57-4637-4278-b059-6e5e4f56aa8e": {"node_ids": ["c7b973e2-d0a2-4755-bda0-2e14be17ec3a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "38e25a15-a7db-4153-91f6-755b97544155": {"node_ids": ["2821c120-03c2-4865-8e13-299eae9b27c4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20c.md", "file_name": "c20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "60e90f29-7843-4147-a63e-92565f38a1ca": {"node_ids": ["8cffb380-8fe1-4dfb-a8c9-1b70d0406c8e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c20r.md", "file_name": "c20r.md", "file_size": 296, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2a4ccc4f-351f-4add-941b-ffd21416f045": {"node_ids": ["2d44158d-1b53-467f-b0ca-ab427aea5ed7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "35b5b5b1-d9d3-42dd-85fb-03c1405813d1": {"node_ids": ["9aa2f123-10e4-49ce-8a24-629a49712e1c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "26f7f149-ebe2-4b9e-8b37-6456bc241098": {"node_ids": ["353fdbff-74f6-4912-bceb-50680b172845"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21a.md", "file_name": "c21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "180662cd-586f-4433-8f8b-701597a03986": {"node_ids": ["5a469d83-2abb-417e-922f-83865b1e841d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "53d101ec-8d06-4471-b4a8-bf3518b5e408": {"node_ids": ["14277149-1f6e-44d8-a191-9e487ad3b5e8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5e55ed64-a12e-41f4-a877-24a72f408e40": {"node_ids": ["d3acb30d-1620-4b60-969e-a0344d20461e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21c.md", "file_name": "c21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6da38436-e4c5-49b9-8281-b1b54d280f63": {"node_ids": ["478f1dfc-676f-45ff-880f-bd8ece0b5749"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c21r.md", "file_name": "c21r.md", "file_size": 645, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e320b2ea-20a0-465c-8f04-76ce3fb7d661": {"node_ids": ["b34842b8-bd59-4ce8-bdb2-821ad1eb3187"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22a.md", "file_name": "c22a.md", "file_size": 271, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c2a1bc35-c564-44dd-b54a-60158f710ff5": {"node_ids": ["457229bc-778e-4ccf-95e4-3b21c1c893d3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4d3f691e-1e21-4f01-a909-e77bdb2b6240": {"node_ids": ["c04472d7-dca9-466a-aece-32962858a20c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "3b3936c0-fe8c-4fb5-8fa4-84849a146193": {"node_ids": ["b8d29b57-0d6f-4cee-a0cd-41428c3402e5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22c.md", "file_name": "c22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4d81fecb-1fd5-4c2b-a297-fc561c2598c2": {"node_ids": ["18ed91c5-0619-4dcd-8661-f83914839797"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22r.md", "file_name": "c22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "47d9209f-8c95-4be4-bb06-3376616f67ac": {"node_ids": ["dd19f305-fd3d-4238-ab69-c872b59515b0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c22r.md", "file_name": "c22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c4abbcaa-74c9-42eb-a458-0f7690fae938": {"node_ids": ["810980ec-5aa7-40fc-bd7a-426be96b8b52"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23a.md", "file_name": "c23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8b88db01-dfff-4858-9256-58238854a602": {"node_ids": ["5fa54e83-16cb-4423-a18a-e9e0a0b83b53"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23a.md", "file_name": "c23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "dd91ebae-1b65-4a78-a68d-7e8dfadea34c": {"node_ids": ["c7934a28-ff59-4db1-a18b-a035e8a5610d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "ab027658-9bc7-4f4d-837b-7c928790ad0e": {"node_ids": ["cee0b913-e028-479f-addc-28c579ce5856"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "14c9f2c4-59c5-44d4-98be-aa55c9751292": {"node_ids": ["7b8a75d2-0f2a-4ea6-ac3c-6b7065051eb7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "73bb6197-9c8d-47f1-a31a-8cdf7c2bdf0c": {"node_ids": ["61df2aa3-2a27-482f-90dc-57ebbe25fb2b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "3278cdb6-b55f-4e74-ba79-0b5bac83641d": {"node_ids": ["c77d2aa1-a80a-44e9-9f2b-61a007e7bc23"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "e59462b4-48eb-49e2-9e9c-1769969eb222": {"node_ids": ["639f1c2b-46cb-4d2d-87c8-46cd38b98e49"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "656b5ac6-b0bb-4abf-acd6-6b23b159527f": {"node_ids": ["9ba96875-ce38-4602-a922-ef81399efecf"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "fc924c44-3a7d-4de2-a939-d9399cd8201f": {"node_ids": ["108a1d20-0022-43e6-bfb9-3836ac1dd01c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "408738cf-5961-4a35-8b16-dcaa0fd7573e": {"node_ids": ["1316b434-65e6-43f4-858c-03f79088ac36"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "1bf88250-ed8e-4388-a07c-ebb14a2c63f8": {"node_ids": ["255b5480-4863-416a-8d39-c71bea4d53f9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23c.md", "file_name": "c23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "5e715fe5-7fd0-4004-913e-f446ba52739e": {"node_ids": ["551ac993-fa69-4460-8691-4c3091e80dcb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23r.md", "file_name": "c23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "822a0e41-4f50-4dce-8227-ec9bd66bc24c": {"node_ids": ["2bcb0018-d454-40ed-9fe8-1408f5f929a0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c23r.md", "file_name": "c23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "04b967fd-6171-48b3-8e9e-0b1226225845": {"node_ids": ["4df665cb-40e6-40fd-a96b-220a4b033f66"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1409a894-acb4-4e3d-b3f6-426a121e084b": {"node_ids": ["b3008d5d-0066-4c9d-b97c-323e6e172242"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e721be0a-8938-41d7-863f-c2ce53055df1": {"node_ids": ["501d0c63-8678-423d-8c3b-c65a0221422c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24a.md", "file_name": "c24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "59992cb1-3f92-455a-a9bb-9359151e1df5": {"node_ids": ["eef024e4-ccd9-4d08-9caf-95c6cb151fee"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f7d02df3-ad74-4b78-a60a-3104888be595": {"node_ids": ["f5130cb7-5a2c-4d8f-9447-c03ebf572b07"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "aa539f69-a0c1-4d87-8bd8-60ff27d97fa4": {"node_ids": ["c1d038b0-6e47-4bd3-951e-e433bce2658e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "101d21d0-aef4-4830-8eff-d57dc6adbc48": {"node_ids": ["b0653539-b9ee-4ee9-be87-63ecf10b25d8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f16f4403-f6a1-43db-85f3-0baef188f588": {"node_ids": ["8a9ee3fa-52c7-4940-80b0-a76f28ce5e08"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ad296c6a-4c20-463a-b9d3-1a562157c072": {"node_ids": ["a837da05-ab05-4766-966e-01a56dbf94be"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1aaf8a50-879c-438c-802c-85afc1ffc962": {"node_ids": ["ca7c8f71-d54f-4233-afb1-4a26b48b4f2b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24c.md", "file_name": "c24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f52ac9f2-41af-4046-baaf-f867e5c275ee": {"node_ids": ["b06a923c-e90b-403e-9089-38f373915c5c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c24r.md", "file_name": "c24r.md", "file_size": 681, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c5ee0cc6-fd62-4f11-8173-bddf58ef3426": {"node_ids": ["03bc10d7-aaaa-4103-8683-1973f5b46697"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25a.md", "file_name": "c25a.md", "file_size": 96, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "54ac9695-4089-40cf-a354-425e6d4fd7cb": {"node_ids": ["6d05b220-2621-4d0a-b0e1-d4ed97308e16"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25c.md", "file_name": "c25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5337e53a-d956-4122-ab8a-6f67de22ca59": {"node_ids": ["1be09337-f9c5-49d0-9d41-a281bc7c85e0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25c.md", "file_name": "c25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a3344a29-c951-4329-99c3-099c0ed63cc2": {"node_ids": ["06849f6e-dd61-4234-817a-eddb289befe9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c25r.md", "file_name": "c25r.md", "file_size": 995, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c8df7639-5bfc-4172-bf64-4153bb873e36": {"node_ids": ["6e5e6ce2-5323-4608-8fac-f943abb39dfd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26a.md", "file_name": "c26a.md", "file_size": 103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7f33e2a3-21ff-4385-afbf-97941c9fdd0a": {"node_ids": ["ae2a6e13-e236-4962-bb5a-8dee45f42e2e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "f52a816c-53ba-4abf-94d6-f2c72448a156": {"node_ids": ["17a7cea4-5d4f-476c-b4bb-97227fb04f32"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "782ee217-a635-4cff-8072-a8534fde9c38": {"node_ids": ["708d0bb6-58d6-4411-8b94-ee0c6afe37f7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "8b4cef0e-9945-4c4e-96c7-316936eb93f8": {"node_ids": ["6236bb44-b265-4655-87e9-a883a3953602"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "b4deda91-bd75-45a5-b72e-4d08724a43cc": {"node_ids": ["add011c4-722e-4b76-b275-f8f9569e8c27"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "95f3fe0d-62f5-431a-868d-bfda70ce05bc": {"node_ids": ["b343514e-e98b-4432-8fba-160eb5efeed9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26c.md", "file_name": "c26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "ac238a27-1fd5-4222-81f0-4b38b6c08a99": {"node_ids": ["58ce8596-e250-4467-bfc2-cfa82e1189a5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2be0c1b0-fd96-4a5d-a3bc-a4523242870c": {"node_ids": ["8dbac3ef-00f4-4795-8ef0-36af836593f4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e55aa66c-2992-46e6-adb0-d0ea580b3f43": {"node_ids": ["9592eb56-f0b9-456f-84f9-5e34fbe9d2f1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "71e34556-ad07-4cfa-9fa4-0ac410ff206a": {"node_ids": ["9ceb2e93-6a8b-4231-8a93-0d61c3c64ad9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c26r.md", "file_name": "c26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e43b5b72-23ea-46d2-90b9-ba3f95b6c3ee": {"node_ids": ["fbb76287-4411-4549-9f39-852777411527"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c27a.md", "file_name": "c27a.md", "file_size": 1775, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b2345e20-3747-417f-bff5-df5eb0274580": {"node_ids": ["e8aeefa1-cd9f-449b-b76d-ac95bc42972c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "35bbd956-890c-4847-9686-e5aa5da6f6a7": {"node_ids": ["c49fd740-52b3-4b0d-9bfb-041c747ff9ea"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c39bf27f-f3b2-47ab-8b85-ca1dc4b83770": {"node_ids": ["27ade77b-1eb2-440c-9b79-6e8417b0ce0b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9ad97850-9710-4b28-8c1d-fc92a2cf5c66": {"node_ids": ["58aa44d3-0c7f-437f-ae9c-d582c1b30bd5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5144c61f-b32a-4b47-bb51-8dbf3fb57728": {"node_ids": ["59794a89-7c77-4cee-b678-833454c1fdf4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "68c88959-f408-42bb-b6b1-18a1a7b8a19e": {"node_ids": ["80afb447-33ce-4799-bd7e-86d7c2bf812e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "96372a4d-4946-457b-a279-82a3a952b44f": {"node_ids": ["2c3d5a9c-f8ac-4eff-80b4-ee82297369b6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c4aa79ce-ba6c-4c81-b2ac-afb0a1f0a2e0": {"node_ids": ["af5b269d-8d5f-4fa7-86a6-c2ba13170077"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e76a0f23-5de0-451d-a5b3-ddc62f08cadf": {"node_ids": ["54ec4195-3bd2-478f-912b-ce59cbb4e8db"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0a88948b-e236-4b7c-b407-7a21335754ef": {"node_ids": ["69f654fc-2572-42ee-97e5-36f581b2d9c7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "837cdf55-a178-44a7-8901-7367d1ff6b89": {"node_ids": ["90966541-1f47-4a63-ae3c-86b8501ded98"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "360f90b9-76e8-4736-80be-81e7ac45c138": {"node_ids": ["de3ed5fe-e569-4d6a-bf5c-ac961b7eb76f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b580db8f-0ccf-43af-ae53-040b6d44a476": {"node_ids": ["d37b4f44-f15f-44f4-bb85-9a1118c9bae8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "25f289f4-ffe1-42ca-b64c-6d7c719c57b3": {"node_ids": ["95c23524-1808-4c95-9a49-9318c2cbf9f1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c28a.md", "file_name": "c28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2bb7cb0f-104c-4bd1-af9d-570c619bd47f": {"node_ids": ["f89be756-713b-4f4d-840b-779c672d72fa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0efcf9d5-8193-452e-806d-e023ffa8dea9": {"node_ids": ["fb01600e-c11e-466f-8c32-9af0f451852d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d6dc4655-26ea-426b-95f5-633dfc3e627f": {"node_ids": ["4fa47120-a57a-4589-9795-7bc87cf3e4a6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "875b5a3e-7561-47aa-a9e0-6f8a530a13f8": {"node_ids": ["d652e246-5b2d-4576-a9d6-5c1a9d5086f0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a1b19ff8-ad6e-46eb-a9d2-bdac77b9f998": {"node_ids": ["dbab9b9d-2336-4ccc-9e0d-27b1a4d3284c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "78a86a96-7bad-4aca-9636-477a311954a8": {"node_ids": ["6683efb0-98a2-4b9c-9895-e02b14d725cb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "32a9f017-2ac7-49a8-af2a-033e0d7032f1": {"node_ids": ["ccb1001d-755c-40c5-8233-7b16f0122861"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d78f35f5-25ef-4fad-a0d4-7105c352bd70": {"node_ids": ["34ce7564-6228-4343-9b99-36d5bc8ea5fd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "bf150a4d-483e-4c04-a02b-90b127d6e49e": {"node_ids": ["08259f5d-4993-4e3c-813f-41f34c8332a5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3e71fc8d-cb25-4371-90df-647eb5719182": {"node_ids": ["0228fb1d-2c5a-42ef-a76e-6687b71b5c4f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "80eab1f6-4f44-4d32-9430-260637c9eaf8": {"node_ids": ["c10dfee1-8c9f-4eba-9d5d-d679694f60b8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "16ffe8eb-f018-4c19-910a-33c3a3a9d1f1": {"node_ids": ["eae0ac1a-dd40-47de-bef7-d3aee7953785"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4b0172ab-5468-4964-90e1-f1d12293e276": {"node_ids": ["7a280eec-18b5-46aa-bea9-4f8e3e5aa8fb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4f04e318-c1f7-4f15-a28a-77854ab85aa9": {"node_ids": ["87ca4493-a863-4569-a327-358fc2ee93e0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b66fb5f3-0507-4a43-94cc-c745751f9bbe": {"node_ids": ["397a4a1f-675f-43c6-8c06-57971a1b638a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ec3f2c67-2f22-41be-87c5-2a6063c8ec0c": {"node_ids": ["e4ee6bb9-be76-4818-b484-444fbfc51783"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0c51a751-8651-4564-b9cb-93eaa8cdc21e": {"node_ids": ["596684b7-29af-4a2f-9005-0b93c7cd71dc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "52113a87-964c-40e9-a779-6a203982c81d": {"node_ids": ["5112ca33-75e8-463f-8e82-3806803292d1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fddc6040-a0cf-4bda-a8e6-2270dc7307c4": {"node_ids": ["d2a53a3e-97a9-4d19-9a00-e26d6d92ecd3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8b0e665e-8b43-4c2b-8183-8c20be24be4d": {"node_ids": ["9c2fcda0-0530-4995-869c-6ce68c87ed80"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "37bfa5f9-9772-4dec-b169-c4df9573330d": {"node_ids": ["5a5fcb52-9446-43bc-b175-10eea1358d29"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6ae9894b-e706-4f6f-92af-db62b1c458bc": {"node_ids": ["2591dda3-cf53-44d1-83f8-1258e7f42415"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29a.md", "file_name": "c29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ed95d086-40d4-4285-a85f-673fd80d8483": {"node_ids": ["adeb2794-6e5d-4208-8c02-6a9a8218d9c9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "f6d1e96f-4fca-4a73-a5b3-3f4f64b3c423": {"node_ids": ["ba92772b-b180-4b6f-8c96-85059a531088"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "b22dd71f-997f-4b63-aff4-1c0445cb8fe7": {"node_ids": ["1b9eb3cd-82a9-41df-8153-6ad68b4efe9b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "003753d3-2978-485b-b84d-b67245b98cb5": {"node_ids": ["71e17f29-132e-4895-a657-223f42def1b6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "c22fbed1-1525-4dca-bb53-9e0ae033b792": {"node_ids": ["0011577b-a14c-4006-949b-7131dbed93f4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "b833fec4-4245-4269-8c06-728629e68bc9": {"node_ids": ["0f74968e-2cfc-4f4d-a1b5-81b102817f6e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29c.md", "file_name": "c29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "e89bdd7e-1c92-4e61-bc30-fc2e9570e563": {"node_ids": ["60c3fe63-a691-4938-bc68-4b1d2bb5d8cd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29r.md", "file_name": "c29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9ab62a31-1f6d-476a-8d0c-088b65100d38": {"node_ids": ["7efe51dc-1319-447a-bda3-f75c0efabf24"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c29r.md", "file_name": "c29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "246423f6-6697-4c0f-92d4-58acafcde898": {"node_ids": ["d4e919b6-2c6a-48a9-9ebe-a69a55f62934"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "88682c63-c023-434d-9b98-bc4d4ea8da21": {"node_ids": ["fb9ce593-07c6-4ed1-9ba9-0820502dd784"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e582b632-df7e-4523-a0d9-0fc6fe2300ff": {"node_ids": ["915af28b-f239-4b02-8b26-3c1d167e25c9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7d9197f4-a0cc-4754-b3c6-bc831ae325d2": {"node_ids": ["a4188542-5ed0-47f9-8822-520abdf4dd1b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "87f580f8-605a-4428-a9c6-e20d8dc53ea8": {"node_ids": ["c1882781-013d-4336-81ec-d2f793a179e0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a7cddefa-3979-4177-b205-9b9dfea5d523": {"node_ids": ["c5fae006-a116-4d28-8b7e-00355eca7ed8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5f35a402-dff8-470f-8d37-8a9e4d5ca82a": {"node_ids": ["a28f8e61-73cd-4bdc-a809-10b1e5dcc06c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5f7e51a5-cf91-4f39-afd3-75e71396a20b": {"node_ids": ["583dd425-afdf-450b-b46b-f7d90ef051d1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8e7e8586-6fd3-4a35-b2bb-1044236ef116": {"node_ids": ["c4ea5705-9a78-4de1-8359-4a6488870a94"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "448da2ee-73bd-4617-b31b-10a43da6176e": {"node_ids": ["8a1987cb-6bb2-40b0-996c-4bb20c2291d0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1aa9fdf1-94b3-422b-8255-0f0275a9c93e": {"node_ids": ["242b10a1-d638-4ad8-a152-0c9b7fc489e7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e85c0f25-3cfc-449a-b61b-80e044a05568": {"node_ids": ["5c0c9d0a-80cb-4124-8026-fb09d0ca584b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f0288b78-3d39-49cd-b66e-17d40ab9d454": {"node_ids": ["51dc72a8-0590-45c3-b3d0-05e26995fd3d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3a4ebeb2-85d1-4f3c-a5f2-1a3a045858d2": {"node_ids": ["0c037299-f1d0-446c-9ea3-74bf37527244"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fecfbbab-a647-4585-98a0-974e66dcf2dc": {"node_ids": ["1cfc9ac1-eab2-4877-9cee-dd2246c9e35d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2a.md", "file_name": "c2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "eab3f2f7-7474-45a6-bea0-9722588a4acc": {"node_ids": ["c5baffde-65c6-4fdf-8c1c-18297b11120f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "e7226d25-6b5c-4d46-93d7-240de8d83be2": {"node_ids": ["485b4894-9719-4fa5-8659-13d340d7f4b9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "470849e7-f4a3-41f4-947a-a0ca341e0d89": {"node_ids": ["af74f855-9e5b-4917-a0b1-cf63275469bd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "09b37ed1-5055-41ad-a72c-49ac95ded20e": {"node_ids": ["cddfaf43-0017-40ed-a82f-0dfe09f28228"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "9eddf6b5-d6a6-45f1-8308-fca7f42325b2": {"node_ids": ["e13cf9ac-d0c3-42a0-8494-74a0225b294a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "b4ff59ed-2a6f-43e5-883a-0440ec01099c": {"node_ids": ["0233847e-1f44-473e-8269-7b93dad752c5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2c.md", "file_name": "c2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "f3846111-a316-41f4-b275-3a61d91b4825": {"node_ids": ["fffd3fd4-88c3-400f-8ba5-3418640fd82d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4d4d68ab-7c59-464e-b558-324d6579b651": {"node_ids": ["ec7aaf40-6f29-4692-8412-385eb9126948"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8e86a2e2-4b36-4ef4-84af-0a0cf1d57048": {"node_ids": ["f9f2c770-ac34-45e8-8728-472027a57236"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "20c9115d-c070-4247-bed9-ea2c457aff45": {"node_ids": ["104828e4-1490-4e78-bbf1-9e59de94f1d7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a029d4cc-40d6-4bba-87db-d2eb1ae8c544": {"node_ids": ["98aa7164-3913-476e-b947-c9d890a1dac0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6e17917f-d22f-4b89-b573-76f45b8e4da9": {"node_ids": ["2c13cb6f-ae63-475f-be91-4d433b8c4146"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c2r.md", "file_name": "c2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b02ae0cb-1d17-4e67-8396-16cce47f2bc3": {"node_ids": ["109c539d-f414-4df8-946a-128e57654911"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "19e0440e-6590-4e4c-a881-f54d52d3d95f": {"node_ids": ["2a06900b-cb8a-480c-9289-c685aadf0b91"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e37d62e9-7140-4a47-9d15-e827cd73abb9": {"node_ids": ["4501edae-3cb7-4a40-b726-d8374280fd4a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1c0d2b08-e7ac-43fc-8232-fe0518c4e34d": {"node_ids": ["4479dc76-d6f5-41b7-a2d8-1781558fb77a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30a.md", "file_name": "c30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d6430cdd-584b-4ea9-a2de-3deb22056d79": {"node_ids": ["35d18d93-fc25-4395-ba69-e0ec558d5460"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "65220c05-f98d-4b17-838c-1b7342f474b4": {"node_ids": ["45270851-ed56-41ea-ab57-f36e96aea63d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "8eb92ee0-c436-46f7-8a6b-bc8728be3e53": {"node_ids": ["ca638584-4006-4a26-ad65-875f0f65ec1f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "65906afb-d75a-499c-ba5c-ec09d2e65a72": {"node_ids": ["d540fc0e-7184-49d2-b0bf-fc15bc71554c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "45735fb3-3121-4794-abb3-673383e13c03": {"node_ids": ["157aecde-15c2-4740-bf99-b1f29aea6089"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30c.md", "file_name": "c30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "4f3b55d7-2eb5-4215-8c89-40e654c582aa": {"node_ids": ["c67295a5-db2c-4731-93cc-457c2885deba"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30r.md", "file_name": "c30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d091946c-c776-422d-b40d-eecfcaff648c": {"node_ids": ["b51012fd-9d39-4aff-886e-224aa6e1d2dc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c30r.md", "file_name": "c30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1d6489f5-e434-43db-82f8-3f2cf689cf6d": {"node_ids": ["61499b69-ea93-4c7e-8bba-0dffdbcfbfe7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0951f814-958a-4be7-b87f-e4fbe955787a": {"node_ids": ["e4b207da-b444-4b51-b197-b08d8193d327"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f43c4970-cc75-4cd0-9c6f-f0672c919aef": {"node_ids": ["d10b3429-fcf7-4c5b-ba70-e7778ec51c92"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "df21f770-5b6b-42b5-828f-054e758c832b": {"node_ids": ["ccc5483e-f062-4792-8cc6-d67d173c5cda"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31a.md", "file_name": "c31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "07bdb5de-a433-4795-b8eb-2087893410dc": {"node_ids": ["897c3c7a-2840-41bd-8361-9387be4fa54f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e2096f31-656d-45d2-8c95-e4e3602547d7": {"node_ids": ["cf294721-a769-4636-a373-b36491bb6140"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "965f68a4-cdc5-45fc-83ba-0984a423722e": {"node_ids": ["ab156337-6667-4ec7-92d2-19f3b427476a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "51f9383a-97e6-4341-a36c-6e6895826b7a": {"node_ids": ["1ad3e460-bde9-45b4-9cf5-c4f2210b73e7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31c.md", "file_name": "c31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6db7ea9f-7680-4609-908b-6d6889649fd6": {"node_ids": ["2da20d0f-e8f1-439d-bb0d-cdfdbce59d80"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31r.md", "file_name": "c31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4a02b499-71f0-4b65-90cd-bfc9e80b80a1": {"node_ids": ["5474527b-07a3-4e6b-acd2-c6ee79cf4f8e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c31r.md", "file_name": "c31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8d8ac7f7-1c2e-4d4a-be3f-a3e4bdfc018b": {"node_ids": ["bad92416-781d-4917-8f78-08570c71dd67"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "57d222e6-7b59-4f93-b242-717dafff6b53": {"node_ids": ["c1a77f49-9d1b-4e9e-b0ce-eea1f2a702b5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "c8cfc641-1b0a-4550-956e-446bab2a1df9": {"node_ids": ["e9e9e22e-0d11-4beb-9c61-780b34c91b8a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32a.md", "file_name": "c32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "7f11c12e-0a68-4783-bad2-e308746521bc": {"node_ids": ["eb4bdb82-374b-4f3f-b4f4-08f99957b665"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0e9e370b-9f26-47dd-90b4-0e9176c0f50c": {"node_ids": ["9f7ec619-bbc4-4fef-9b96-55a3ff07b7a6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7fee7542-c6c1-4aff-95b6-8c6cc2680502": {"node_ids": ["e343ef8d-c4c6-4ee0-8a00-f9361cecb98f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32c.md", "file_name": "c32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2ae0500d-cee7-46cb-93aa-c15dec7af085": {"node_ids": ["855ed736-eb8b-4c21-9231-4c7d99d59395"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32r.md", "file_name": "c32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "162cf4aa-07ee-4338-93e9-8855f2f1e0b6": {"node_ids": ["89d19608-bfc0-4cfc-a139-6deceb07f92d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c32r.md", "file_name": "c32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "30ddd3c8-50c8-461a-b416-7ec749d17efc": {"node_ids": ["6259b141-ddff-42d4-af36-2775412afaed"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c33c.md", "file_name": "c33c.md", "file_size": 2143, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "600f9404-f04f-48ac-ab4f-74f6676ed18b": {"node_ids": ["be935835-83d5-4faa-a3f9-e15e5f934021"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e07f7fe2-f7b7-4675-ad58-235814565d79": {"node_ids": ["0372cffd-2839-4f01-942f-e1c61053d571"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "59ab57d8-e008-466e-8ba3-38f018bf7a86": {"node_ids": ["2a28d584-adb8-4748-a87f-66406def848f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "88268a5c-cf98-4502-83c2-980134b1c589": {"node_ids": ["a86de2cf-2df1-4c8d-9912-192c7427e67c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "907f16ba-d3a5-4664-9dd8-849863c036e4": {"node_ids": ["4a45a066-af26-4f05-9592-486f245b7cf4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "18306ca2-6220-4f49-9395-d7ef2ca1600f": {"node_ids": ["f2f751e4-9b6f-4159-873f-99e7098d57eb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e6702176-62da-4e10-9f0d-6bf59b12c512": {"node_ids": ["c1e046fe-2733-4584-b93d-68386d05ea14"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5a16b0e2-4422-40a8-8577-bfbd0af0de1f": {"node_ids": ["1d9d63fa-4a83-4847-8a81-5ae2d5b12174"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3a.md", "file_name": "c3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0ce6d5db-219d-4d97-84dd-349fa00f832f": {"node_ids": ["de36a2c5-3663-4151-a566-e58e3bd0586c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7bfe8ae9-e211-44af-80de-7ab02ee7c0d2": {"node_ids": ["863bb0d4-667e-4d7e-a547-2c3a3848054d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5cebd64b-4cc2-4071-bf47-65b0c645018c": {"node_ids": ["ec21d0f1-ca60-4b54-9848-ce97a3ace5cc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1e3f3935-8365-4b57-9ccb-27992cff4aaf": {"node_ids": ["60120b3b-9ab7-4d28-a336-e9994e31616e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f9c68f7b-b6eb-4145-a77e-31ccc5bfa6b2": {"node_ids": ["b88ff740-8e35-49c4-a6ab-7373edde692c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3c.md", "file_name": "c3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ed657fae-aa89-4b42-975e-c2845ede16b9": {"node_ids": ["ebb5361c-bcf9-4938-a6ec-f1f9c59ac638"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3r.md", "file_name": "c3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c5a8c2a0-b1b7-4539-98cc-17bdaabd46bd": {"node_ids": ["ce48a269-70e4-4de1-8bcb-1b5374a9a8fd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c3r.md", "file_name": "c3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c776819b-9e49-4503-b554-113c77bd9ab4": {"node_ids": ["0866d920-5529-47fa-87c8-473a930cc87e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "27aa0fba-91c0-4df3-8644-e273073492be": {"node_ids": ["bb5e8362-7e30-4768-89a1-558e6820bb9c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "bffafe05-2d14-4755-8154-7f02a3aaf4d9": {"node_ids": ["8837437e-c66f-42d7-ae21-c690ab936c78"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "34cc731f-712a-482c-8a29-352b74730b81": {"node_ids": ["d0238d57-cc00-4209-9ce3-71eb6f28692f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a0df7abf-4493-494e-a3ac-ab29bdf0ace6": {"node_ids": ["aca1e2ba-2215-4f76-b87a-e1745fc38026"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f903d67c-55d1-4c0b-bf6d-10901f9e0447": {"node_ids": ["674c58dc-50e8-4950-a68f-649d96c3a2ba"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ee9edae1-e5cc-43c5-9e7f-4c49225a5a44": {"node_ids": ["46e0ad61-400f-4bb9-8bd9-490a67c03eed"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4a.md", "file_name": "c4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "03f2038e-7850-4f24-8f79-200d37e6a3ca": {"node_ids": ["8ac5c6e4-4641-4abd-b310-0e4683019549"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3d74aa4f-ce18-4c96-a00f-20c1df5834ef": {"node_ids": ["0f240052-ef2a-4e9d-a108-09afacc661be"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e2c2e690-cdea-403b-b80d-3dafebb58677": {"node_ids": ["263b91b1-6c34-4682-b76a-0bda87688e3f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2ea97ccb-3943-4cd5-ae7e-610216037a99": {"node_ids": ["f08ed43e-6b11-4caf-9b83-ba34ca632ffc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ffcc6ffa-51ba-43c5-a387-fbbd0ffb1fbe": {"node_ids": ["7d9481df-02bd-4983-85ae-4ba44b0f1b34"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6351452c-d3c1-457f-b7f0-be1b616fa91d": {"node_ids": ["5a19b887-3e63-4923-b89c-7a81a7315e06"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "eaa0fea2-4ba3-4d4a-aa51-e177e5cd4bc1": {"node_ids": ["d43d2065-b5a9-4919-80d0-71d84c0cce87"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "dd3d631e-8de1-424d-a789-2c1f0b19c52d": {"node_ids": ["3c4eac2a-ac7e-40a3-9d71-82ae88c80ce0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5c7d819a-132d-4967-a392-beb22920a5b8": {"node_ids": ["6d210708-c8b1-4131-84f9-cede89ae3e81"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3eacbb55-915a-41c0-83d7-e6e92dfa5af5": {"node_ids": ["89dba70e-bfdb-4160-85fd-42c38f9b0066"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4c.md", "file_name": "c4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6fe18119-448c-4ad8-9d75-927231c2e1fa": {"node_ids": ["094774b3-5e50-40c9-8296-43fdc4949a5a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4r.md", "file_name": "c4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d7cdbccc-2a2c-40c2-bd82-6eb24bcddb96": {"node_ids": ["7a51c091-1556-4448-9eea-c04724d7f422"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c4r.md", "file_name": "c4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0a46fa12-4cf5-47c5-bcd0-9ae40c48350e": {"node_ids": ["0f6ace27-d7b2-4294-8fd8-cd8d45841f79"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5a.md", "file_name": "c5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "bf4d0dac-4683-489a-8d07-8ae4f7f36d76": {"node_ids": ["7c156cd0-bde9-493b-beae-65074eed703b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5a.md", "file_name": "c5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7cc10864-ebc9-48c4-bde6-9a4d5cdaf4fc": {"node_ids": ["33c971b6-34c2-4df3-95be-7d20fe0cf1e6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "45de2243-3212-4996-b224-e143d685c5fe": {"node_ids": ["b89f0893-3684-4ba0-bf4a-eba469ddf954"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "40bad771-a053-4995-b0e7-b94c9578b219": {"node_ids": ["869ab5b0-d076-40de-a9ba-b6de5d44014a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4299ff68-f8ca-446e-90c1-e65c3bacb89e": {"node_ids": ["0a2db493-e8ad-485c-a5bc-5bd5ef67c23f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5c.md", "file_name": "c5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4696a990-f116-4a81-a313-b251dcc6fc0a": {"node_ids": ["fda2d545-5f3a-446a-90fd-6666b1864ea2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b9abb271-3ade-4003-9c88-406974f19d36": {"node_ids": ["4fc71def-5c35-4e8e-b8a3-179d165eaca4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f9dd70dc-5201-40c4-9c88-9570ee323611": {"node_ids": ["9a6ad1c1-dac9-4691-9916-2e028c663128"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6205e53a-d619-4229-9e6e-48deab07a1a1": {"node_ids": ["d3f22065-4b3f-4c86-a1b0-e7d84b6af736"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9588a929-e332-4384-be44-202f0c450e12": {"node_ids": ["d1515418-2880-41a5-815c-19abae417d44"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c5r.md", "file_name": "c5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8630e0b8-a2c0-48d9-aa0b-baafd59c78f5": {"node_ids": ["bd32794b-6dfd-4a00-936d-b0ec45751848"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5940cf8b-2c98-4504-96a5-91968308b526": {"node_ids": ["0a084b5c-2f6f-4e98-b25d-b6b4dfa4b2a5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d644ef8f-4871-43b8-a94b-882e34a4f410": {"node_ids": ["2b9b006b-f4f9-40ee-9828-3dd16de8e7d4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3bae923f-25d3-4f7d-b135-28783187467e": {"node_ids": ["6b4064ed-e32c-4d2e-9508-86e0029c2ee6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6a.md", "file_name": "c6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "001b33d7-9e20-4eed-ad4a-dc353380cd62": {"node_ids": ["e788a4af-90b0-49f8-9cae-8e43866b0e1b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6c.md", "file_name": "c6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "8ed99b48-f05d-4577-a374-b6664329f7c5": {"node_ids": ["5379edc6-1b08-46d0-8510-8d1f63c990a9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6c.md", "file_name": "c6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "8f5aacbf-1d67-4bc9-9a70-eba124fd5f7e": {"node_ids": ["91b25d45-ba1f-4a85-8296-9190d5b51cc0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6r.md", "file_name": "c6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "614ff83f-a982-4f72-a386-9c9ead55af5e": {"node_ids": ["76a5b0c9-4cd3-4d66-8914-a9fc3262f913"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c6r.md", "file_name": "c6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "799b2f64-9a55-404b-91c1-2e04af562191": {"node_ids": ["26efddfd-bd6b-4a55-9eb4-cc1c1280c887"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1eeebb7e-f279-4935-81c9-85f9bb9350f0": {"node_ids": ["a3aceeb9-a865-42c8-8201-4e8b4dbabda3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d1f146f4-d1e1-4fe6-8032-f26a927f5022": {"node_ids": ["7560f20a-3f15-4734-af15-a0f983078dda"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "782127d0-4db3-4a41-87a1-cfede8befb5c": {"node_ids": ["11bc04a5-00cc-45d5-9719-8a386bd78ff0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d85e239b-4eff-4603-b1bc-8eb518c6e1b8": {"node_ids": ["a4b9dd5d-199c-4e95-b27a-3e94ed310e6d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0731d3f1-c084-44aa-ad83-37f1e42accbb": {"node_ids": ["e2ef5419-b049-4e13-bae1-495cf655b145"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3bf062df-3912-4ccc-99d4-558080e21c98": {"node_ids": ["82fd6513-3f49-450a-91e7-86e3585f316f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7a.md", "file_name": "c7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4ee03d3e-4a43-4f83-b6cc-2eedfaa44153": {"node_ids": ["a6c37924-4090-4a8e-bab5-f5634536ed0d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "0c2451bf-3197-46fc-bc8d-20b9a3123da8": {"node_ids": ["9ebf8fc4-4848-4ce1-875c-394e05c3c0db"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "980feda3-84dd-4f09-8a91-ea033f104e82": {"node_ids": ["4a3651dd-cd4d-4909-b19c-5b2078ba54f5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c02826b9-ec3a-47c1-84a9-06e320a9ab34": {"node_ids": ["132a679e-2651-4bae-9e28-8e24919cc790"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "d1764569-670c-41eb-bdfd-2a422fb2c496": {"node_ids": ["4f6fc643-74da-49f9-b7da-d5fe56e106c2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "08acfa62-385f-4687-833c-59f9b917a566": {"node_ids": ["0de2bed4-d4d3-4109-a36a-ad2e8d338701"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "5d88c600-ce1d-43c4-8224-93fbed4fece9": {"node_ids": ["eecf0c7f-a3e0-4871-8ccb-bc21a256ced8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a36879d2-8fa9-49b7-a282-e78b3ba85490": {"node_ids": ["3788996b-8634-4834-b50b-1b3268154386"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c5d6db81-8c26-4998-8a05-ed2be1246cc4": {"node_ids": ["785e72c1-c3f1-42fb-954e-6b73e279e70d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7c.md", "file_name": "c7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "823a0b15-3bf6-4af4-aec2-6a627cdae056": {"node_ids": ["4e93978f-9c28-47a3-b9b6-b585a0bf5ffb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7r.md", "file_name": "c7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a4ad946e-c2cd-4523-b3c1-8c5ff607aa67": {"node_ids": ["66e32006-eefa-42d8-9efd-02fe4fc24ee0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c7r.md", "file_name": "c7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "998b8787-1ebd-4776-b51a-35dd6e68ff31": {"node_ids": ["20bc18b3-1eae-4099-a6b2-1ee6b09b5185"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "6a059fb5-a867-448d-a7a8-931e146c5675": {"node_ids": ["24332e94-3571-493a-b007-501aed78484a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "3899bb86-29b5-49ee-953d-b97777c8a8e0": {"node_ids": ["83f74b12-7699-412a-a7f2-76c7b01dbaf8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "041d4060-a84e-41b5-b436-0fd721504868": {"node_ids": ["114c023e-6e8b-46c1-ac2b-305dd6df7852"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "11e5b69a-3646-4ff8-a99b-25df3e18af19": {"node_ids": ["f48178a2-3ca4-47c5-ba43-b039ae34dfb7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "60bfa989-4317-44e2-b34a-f502b5d62612": {"node_ids": ["5124be0b-0939-4a05-be33-ed6d1ad3ef0e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8a.md", "file_name": "c8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1d373c69-4a80-485f-a384-8757cacec6f2": {"node_ids": ["b58f7c69-2bc8-46f4-bfcb-f49b8f1e0878"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c9d0cd15-de23-49b6-993d-a062986cea6a": {"node_ids": ["1f818504-45ee-415a-9968-037af3b44234"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "b3f52050-43bd-41a3-bfa9-b171f12a680a": {"node_ids": ["0ea93ae5-0fac-4268-a6d9-4f36da88894e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "413d9d97-9c86-45e2-94bc-3a521aa134e3": {"node_ids": ["6fd3a863-3ade-4d7d-a012-3cd56db73e0e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "0f3a7786-9149-485e-8d53-d2ab5da307d3": {"node_ids": ["9e289a80-579c-497d-864f-9c86e2360510"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "55d25b03-6e59-40ac-a592-b21e5b8ecd04": {"node_ids": ["c71d55a1-3eb5-4c36-9d04-5a15f6b85d75"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "19774448-04fc-45b5-9d95-3737bc0680f5": {"node_ids": ["a0a3708b-d3f9-4de7-b748-248814390045"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "55229f16-91c4-4bf7-be90-272f78c62f96": {"node_ids": ["e8a0d206-bba6-4f85-9501-a47100ddc02d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a6b6cf10-cf90-48ee-bfa8-0dd194fa2beb": {"node_ids": ["c72858c1-a243-4397-b6a4-c638eaab2193"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4f04c5e7-e88b-4400-8332-27e1e522f8d4": {"node_ids": ["a8ec439b-3e4a-4b42-8b4a-a12df369f9f5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "141ee999-1125-4c65-a708-27d51e49900a": {"node_ids": ["69497276-90ce-4304-8348-d949069c1a7f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "ce0fb984-ab84-4816-a972-e8e08eac958b": {"node_ids": ["89d6d5de-bbec-4f14-9e0e-fd24eb8b8e89"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c99e1fab-dd00-479a-b311-ed5c7bed364a": {"node_ids": ["3181efed-db96-4277-9125-0d3fc9cd0f14"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1e02f3a1-2a0b-419e-9a33-eb2624dc6cd8": {"node_ids": ["ad153ca5-70d4-41d4-82aa-f5a811dd3c48"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "21826cca-9bec-4ff0-b346-6a05a696ea98": {"node_ids": ["7a263edc-faf1-4472-aa82-5dcc3adff3b7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "dcac341f-2e9f-4589-ae01-2d8a0c366e8e": {"node_ids": ["88970c69-7b72-4834-bd21-b429818f4b7b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c4328512-6ede-41f9-af02-28219ef8f0a6": {"node_ids": ["4a1f93ae-12ef-4f54-b1e7-81462ee3e6f3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8c.md", "file_name": "c8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "16cbe139-3d65-4e11-abe4-309c87ff3fe0": {"node_ids": ["47a12f4a-c087-415b-a458-f4872d3c94ba"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f51acbf6-d57b-4833-89ed-bfd26c23535b": {"node_ids": ["ce7bdadc-f534-4bff-a0ac-34a3a780e20f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "84b39fbf-ffb1-4ef5-b224-0f9c6046ac2c": {"node_ids": ["a3f04d30-a422-45e2-bdca-ebe69d037700"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e7163d3c-9ca6-4f3c-b3c5-fc170be37502": {"node_ids": ["37ad4827-5fba-4979-a723-81fe93ed72aa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "45728774-bbb4-485a-9648-346fdf752c59": {"node_ids": ["db1b2035-fecf-4854-8552-cde431a5ca7f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c8r.md", "file_name": "c8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "cd938875-60e5-4699-a93a-db866ce29ff8": {"node_ids": ["2d1e95e6-c19f-4c3c-aaa2-825753164007"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d75ed7dc-1e15-4d52-b8c3-aa4253205994": {"node_ids": ["54fbe5d4-94c6-4dbc-86c4-5351675c2ec0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "06d1a82a-4899-48eb-88b0-cdd6f5bb0736": {"node_ids": ["f03f0dd5-da0a-420e-9a2e-0173f24aa3f0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d8ef0b81-1d20-4362-b004-6fe0ba30c4fb": {"node_ids": ["934730b3-4668-4560-a4f5-a867c8112e2c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fd9709d5-5f44-47ac-9029-843ff86a12f2": {"node_ids": ["52e349da-7cdb-417c-82dd-255634f2ad0c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "16b1632e-49af-40bb-8506-31808c47b56c": {"node_ids": ["d75462b4-29c2-45b3-bbe6-7c62fa04ac1a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "66fe3bfa-48e0-4808-abf4-dbda2c24efca": {"node_ids": ["7077c9d6-d58a-470d-b8d0-9ce5a248283d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "406c6cdb-5657-4f83-b11a-79e014f1cad6": {"node_ids": ["50a16d67-00a9-4c58-8117-c3a9803655ec"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "55bf25df-e88a-4f7e-b25a-0b324fe9091b": {"node_ids": ["f6cb2874-fbb3-44a7-9178-c682223b5a98"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2a7dbcf7-7a7d-445d-8f84-41e4658f9e2b": {"node_ids": ["d6090556-16a2-4f9e-827e-19a7261de1ff"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/c9a.md", "file_name": "c9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ffc74536-f958-44d4-a934-1d5f93aaa6b7": {"node_ids": ["9a9c5ba2-3d2a-46fd-947f-957eb27b25b1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d221c685-94d4-4035-b833-ecff278f92ae": {"node_ids": ["03ee442d-2644-4397-9080-58693bc53bb3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4f4421b6-b7cb-461e-b60c-c820f8baf627": {"node_ids": ["9a6a6fae-bb8c-4777-aa39-1db6d12858af"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10a.md", "file_name": "termc10a.md", "file_size": 1024, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "776da2b8-81ea-43fd-bb9e-fc4a5c7727bd": {"node_ids": ["06f0b7c7-6c82-4adb-bf3d-4ac83d90ee20"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "d5eb47cf-3001-47a7-bdbe-5f46fec9929e": {"node_ids": ["e58b3e28-99ba-4f17-897a-071ace42d589"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a2ef1a9a-3783-4567-9000-5a9356a89fb3": {"node_ids": ["337a0202-9196-49e5-bade-50c9d36d4f2c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "221383d5-9013-4a6e-8b30-d94770a8b324": {"node_ids": ["17afadcb-c53b-498b-bba5-42075596f5b2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10c.md", "file_name": "termc10c.md", "file_size": 10815, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "883efc58-86b7-4a78-a8cb-d45395be1e96": {"node_ids": ["37ef492a-70d5-4c93-a57e-075ea43232b5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10r.md", "file_name": "termc10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4264a5bf-8a0d-4f20-8f2b-2bc4c7197ef7": {"node_ids": ["7e5c272c-7f1e-49b2-a200-638e31a12ad6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc10r.md", "file_name": "termc10r.md", "file_size": 1407, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "14e10ba4-ad7c-4720-a8c0-800754e13e9c": {"node_ids": ["640e6e3a-edf9-4e79-8ce3-308eef9d5672"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e6456a82-4d84-4afe-8328-3cd17fbf6367": {"node_ids": ["4ab0ad77-404a-4ad6-a7d2-99036243ae8c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "0606545f-7a28-477d-af67-d257770ed5e3": {"node_ids": ["1ccccba6-924c-47a0-8cfa-5da1eca00bea"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "289f7679-e7d5-481a-b429-72389e2c707c": {"node_ids": ["7cae8d57-3cc6-456f-91ab-88fc3578c9b6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "73a3cb42-1fc1-4821-98c2-50bb190db47a": {"node_ids": ["e0ccc4dc-42a7-422d-b7c6-738c5e8924c2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a9781e5c-a7cb-4022-991c-ef7559a420b9": {"node_ids": ["ec628ec3-4d2f-4763-b3aa-e2fd23ae1739"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11a.md", "file_name": "termc11a.md", "file_size": 1796, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "de335cd2-cdf7-4d23-9c32-4f345abb07d6": {"node_ids": ["69395d8d-c7ab-469f-8e8c-b70c223c3818"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "245a971e-72fa-432e-a55b-2cb77ab9531c": {"node_ids": ["74095650-1c4f-499f-9d70-630004b5912e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e7887dbb-f3d9-43ae-a923-bcb364a8a6b6": {"node_ids": ["2a36e9c2-8033-49d1-9b04-a6a88631e40a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c0df6641-4909-45c6-8865-183103a64297": {"node_ids": ["cc7dcffc-0cb8-4bff-a53d-72d2e042bbd5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "ab61c23b-0ff2-4f6d-b1d8-dd761400608e": {"node_ids": ["eb5638dd-95c0-4961-8c72-2e8394f1788f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c0e24a16-45b6-464b-af03-672028178965": {"node_ids": ["3cdb1bcd-baf7-4cdd-bf9d-8b475f0248d9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "34a7b795-b0bb-46d3-932c-60697b9b47dd": {"node_ids": ["b3e8327a-fcbf-4394-a713-a126bdfdb9e6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11c.md", "file_name": "termc11c.md", "file_size": 7337, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "44e1e962-fe04-4c94-b8e1-1595fc999d6b": {"node_ids": ["4b5cd42a-5a4a-43b7-9f28-7c9022760ffc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11r.md", "file_name": "termc11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4965d2c4-9f17-4409-914f-42fb96264ef4": {"node_ids": ["4094f98e-bf34-4017-bb7f-be81ee3b4439"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc11r.md", "file_name": "termc11r.md", "file_size": 623, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f2c22313-a8cd-4ba5-9105-af0dee4a8ab5": {"node_ids": ["a216c9d7-a63b-43c4-ab9e-728f6902b387"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12a.md", "file_name": "termc12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fdaf83e0-8e06-4d74-ae1c-cacb98a2820b": {"node_ids": ["b3294c93-1479-4737-99a3-2d8d286aa3ef"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12a.md", "file_name": "termc12a.md", "file_size": 1067, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0d429a06-4ee1-46e4-8c92-661315a5414b": {"node_ids": ["e42bb6dc-2a94-4963-b9cf-bb2013e10c57"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12c.md", "file_name": "termc12c.md", "file_size": 6535, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e5949a58-30d5-455a-a8b2-ce13210ba7cd": {"node_ids": ["ce3cdc3e-20d8-4dd8-8f1c-ece89795c8a3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12r.md", "file_name": "termc12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ebba8aa4-dbc8-476a-ac58-5c25f4a70ce7": {"node_ids": ["379a0b8d-fd3e-471e-900b-52ff6dc66395"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc12r.md", "file_name": "termc12r.md", "file_size": 1110, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c618f7c9-f7c9-4e54-a50b-29243ec37afc": {"node_ids": ["29e57b72-f770-4c1a-bf6e-2b0c7a8f6115"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ea984ad7-fc4f-4158-b7d2-f01819b68ea2": {"node_ids": ["5d510786-e829-4103-b243-f87e0ddb0dff"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6f337a2a-a7d2-4d33-aa02-46cfb8d0f44f": {"node_ids": ["7d9af7d2-433d-4aaa-9759-01bacda6e812"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4d153c66-4bb3-48ce-9549-798e288cb930": {"node_ids": ["cbf86779-a985-47c4-9391-26f3ed566d0c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13a.md", "file_name": "termc13a.md", "file_size": 970, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "41c0703a-fd80-4297-aaef-e2f073d9f66e": {"node_ids": ["f2f6a85d-f944-4405-b047-928ea6de9739"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4afd7ff3-8575-433f-8068-ae41ffa531be": {"node_ids": ["205e8e6c-4abd-4b1b-86d0-54497ce18440"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5bd18c16-d90f-455c-b2b6-1100be8d67e9": {"node_ids": ["d0d86229-a7ee-41ce-920d-764aa178952a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "45507c2e-d73c-4285-9897-b91bda2de562": {"node_ids": ["70d7454d-de7f-4070-bfb8-2dc2923c67c6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "84fde963-f8c6-46f0-9780-457227dfc42c": {"node_ids": ["b0055ea2-53ce-431c-a188-402ecffd3e45"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2085ea9e-3dc9-4291-90db-e2b48fbac488": {"node_ids": ["f96a88c1-313b-4d6d-b0c7-4e52c6798d0e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c2ab6a43-ea4e-4850-853c-c55ec8b462a1": {"node_ids": ["30f32655-06d2-457b-89c8-65cb624ca0a9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13c.md", "file_name": "termc13c.md", "file_size": 4092, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "478c5ff1-78dc-4a4f-a8d5-4562791bbd52": {"node_ids": ["44d89d83-d4f5-4207-a1da-8093c70199fd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc13r.md", "file_name": "termc13r.md", "file_size": 1262, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1eafff6d-a911-4ad0-87c5-e3eb6b1edfdf": {"node_ids": ["f6bd6335-f4e7-45a4-8e4f-c2604090f002"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4b234fc8-05a8-4203-a6b8-ac03721d4cc0": {"node_ids": ["2fd1a9cf-ac2f-4dc1-8dc2-a88f4c9b36d3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "b3499306-1091-4802-9da0-bf7637a7ec21": {"node_ids": ["e13cab70-b017-4d85-9a41-e758fd32ac07"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14a.md", "file_name": "termc14a.md", "file_size": 1828, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "cb335aa1-8c48-4133-a75a-95e256028064": {"node_ids": ["b7004f00-09b0-4347-ba0b-fb56fce05aae"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "53dd30a4-3b16-4418-b6d1-d9913771a732": {"node_ids": ["90364b52-1e97-404c-9b25-3004d2dbff1e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "bccced0e-d233-476b-ae13-be305bee43b0": {"node_ids": ["d848ca4d-6da4-4068-9952-23f49563d816"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "55916d8a-8083-457a-8ae3-0c9f43c81e10": {"node_ids": ["ecdeabb2-7ae2-4907-baca-91c34483dd87"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e05f3392-1cb0-4615-82cf-3c8bd3018d81": {"node_ids": ["0090978a-cb27-4586-b011-ed018cf718f1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "24007bcf-1528-49b8-a8d1-712f8a18f387": {"node_ids": ["7168469d-0a38-4506-8125-d873b136b1c2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "3201d5f3-3963-4645-bcfd-b7cdc238418e": {"node_ids": ["6960241c-2a3e-4602-a3f1-a57066aef5f6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "6bcca076-b41a-42cd-b690-b24da056a1ef": {"node_ids": ["79a3f1f8-eba1-4798-9518-ce015a976390"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "02803c86-e434-4c97-9e8d-fb8c051aa222": {"node_ids": ["a2edda8d-c5bd-4442-817e-12fe77e361b6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e96ba817-aa44-4e31-ac55-f30ebabe5a1f": {"node_ids": ["e94f6fe9-c2ec-4027-9313-a980a2c42966"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "66ac0ee0-d9a5-4d11-8e2c-85536772ba12": {"node_ids": ["27d91b71-43c7-4e02-b948-dc54e58c125b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c2eaba87-a230-4da8-8c24-6cffb852c16f": {"node_ids": ["3f0118a5-cdb1-4c2b-b7c3-30fb943979bf"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "6fe5dc0b-b4fe-4df1-8fde-f464b81e8720": {"node_ids": ["2d10bd74-e7a3-4d4c-90d2-27db6b46f845"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1e02ffae-4c71-4422-8658-c79f666d2cb2": {"node_ids": ["04dad0dd-298a-4f4d-b23b-65fe78b04d4c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "ce2da1fb-65b5-4670-b0f0-7703a92d1e94": {"node_ids": ["d70984a3-f7e6-4fa1-9d46-fa8b3a4105c9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f78e2cfe-c481-42da-b980-6f24ca6a940d": {"node_ids": ["db78575e-5cb9-4fcb-be77-1d3e69b0f14a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14c.md", "file_name": "termc14c.md", "file_size": 15224, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "6f25bc85-d357-4e43-9066-17f2531dd6ff": {"node_ids": ["9a66c001-1f04-4055-9d9f-9c7e220cac68"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14r.md", "file_name": "termc14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "481a1677-d315-4773-99ec-7623e5c08337": {"node_ids": ["925ee79c-fe3f-44e9-9a1d-1caa503fa5e8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc14r.md", "file_name": "termc14r.md", "file_size": 3111, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "378963a1-6086-4e3b-8882-061613d98104": {"node_ids": ["3840be18-cd46-4b8a-8868-a743592e4d4f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1fa7c3c8-a08f-497c-8baa-5151a8f98ee6": {"node_ids": ["0dbda18d-aefa-4040-ab4a-e80033203ced"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "401274ab-6f05-44a3-8861-4225db8cd977": {"node_ids": ["82177585-caa6-4a30-9370-27f2f8e71fb1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ea414d4d-040b-45c9-a310-f2d6ddb79bde": {"node_ids": ["908f86bf-c500-403a-9506-20699ac929fa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15a.md", "file_name": "termc15a.md", "file_size": 1588, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9d30d7d0-3d07-4a3c-8542-996842025093": {"node_ids": ["00cc3bf8-5ed0-4d73-8cfc-1b5e6e097f08"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b5347ef8-ce86-4f2b-a937-e9d8dc7e01a7": {"node_ids": ["39e5347a-6ed0-4700-8423-746b0a314e8b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8cac0e9b-358c-405a-8723-b647d143e5fa": {"node_ids": ["dd57b6f2-293f-4b55-96ea-c9cba0c33b91"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "29fa8b25-95a7-42da-aeac-878e296777ab": {"node_ids": ["9b7546a4-7233-48b9-893d-21aafc033c79"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9435875f-9fd1-4244-8f08-b520514c0018": {"node_ids": ["510cd246-9688-4cf7-88b1-36acae61f406"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7f13d732-2938-4233-8a9b-698601cbf148": {"node_ids": ["8b97697a-a627-4402-bf1f-f5796f859320"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e6f31b5c-3fab-4c0b-8113-f83ffb8b7658": {"node_ids": ["88b2dbdf-fa2f-4d41-92fc-97ab11fe3b95"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15c.md", "file_name": "termc15c.md", "file_size": 17960, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "49ba5ce4-a6ef-4ff5-b1d6-3dba032bc08b": {"node_ids": ["94d941a3-460e-44cd-a2ab-b46941670709"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15r.md", "file_name": "termc15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "35762924-ed8c-45d9-b69b-52a4bfcff22e": {"node_ids": ["4a9cba74-1145-45b3-8867-c523e12bef1f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc15r.md", "file_name": "termc15r.md", "file_size": 1103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f4fa3200-75c1-422f-8ccf-b677da1d0f3a": {"node_ids": ["d29f859d-5cce-480e-9c2f-0da141aa8414"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "86b3a169-a44b-44f3-9390-4a3b6c5c60a4": {"node_ids": ["c48f56c1-abab-400f-9184-85c6bacbd2fb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "d884034b-b6a7-454f-be08-95f95d4d6a90": {"node_ids": ["77833b70-6766-45d9-bf92-bafd7d395cf6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "3a3843eb-a6ad-4d8d-a579-7d267064a61d": {"node_ids": ["0cf597e2-fb88-4de5-9299-17e4f169cd74"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "866b26a6-0b3e-460e-8113-400ead72ae68": {"node_ids": ["d9147d69-a468-47f7-b50e-7fc5ed0588fd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16a.md", "file_name": "termc16a.md", "file_size": 1101, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "270b62ed-debc-4dc5-b857-332b513e43f4": {"node_ids": ["4addacd1-6522-4376-bcc3-0db3ce3afb10"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "1616fb55-9234-4cb2-a62a-b9d1e88dc468": {"node_ids": ["d40443ae-5347-435b-b6e8-fd35068364e9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "5aa314f9-47ab-4b28-9aad-ef7628083d4c": {"node_ids": ["03db6947-f555-464a-a802-f879d3a5d098"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "91344d28-3724-4bfc-ac36-16ad3ee65bcb": {"node_ids": ["5fe40b60-7581-4f36-b8b4-db19e7b324b0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "276506c8-2f98-4eb0-95c2-922253ff9e9f": {"node_ids": ["b9d9e1ab-796a-4273-addf-224d5a0bfa7e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "197945d0-edd0-45e7-86d3-9c0665664f62": {"node_ids": ["376c1e79-b5a4-43d1-8d70-301a10656fcb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "cd65bde8-51f4-4b3c-86ee-c8e5ef7c132f": {"node_ids": ["4cad8408-585b-4035-bc5a-56f41135c614"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "3bea2041-1507-4622-b496-e657a93bdb43": {"node_ids": ["a988c693-1444-4f3d-a5eb-72f4a83ad895"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "8ed05a20-9baa-45bb-b00f-163efb636f96": {"node_ids": ["048f02ce-f57a-4c72-b659-ca7a312bec9c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "0b56043a-83c0-4120-89a7-a1fdafeb857a": {"node_ids": ["b474ce02-ec25-42aa-8274-52e9ad5ce9e6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16c.md", "file_name": "termc16c.md", "file_size": 16074, "creation_date": "2024-07-13", "last_modified_date": "2023-03-07"}}, "d1310810-58d7-46e3-be63-2901bb50b75f": {"node_ids": ["cc94a43d-2472-4bab-9b4a-333bc3521ed0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16r.md", "file_name": "termc16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "c2c58793-ea85-4121-930c-c9a266084a7a": {"node_ids": ["83b2d1ee-abba-4997-b4ea-9e893b3c18bb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc16r.md", "file_name": "termc16r.md", "file_size": 3760, "creation_date": "2024-07-13", "last_modified_date": "2022-12-01"}}, "12db3546-073c-4e64-a34c-8886d803bbff": {"node_ids": ["f41991fd-36db-42d2-aa1f-b7f686c0ed08"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17a.md", "file_name": "termc17a.md", "file_size": 321, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b44b9e93-d979-4f82-b02d-8430c5b1ccdb": {"node_ids": ["2e450b4d-717d-4550-b6d1-72345ab48343"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "b9324825-633c-4c27-9e23-781247991b8b": {"node_ids": ["17c88e39-02f3-4b57-af71-a7157aa6be57"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c445e71e-24f0-442e-bc58-1290b154a2f2": {"node_ids": ["861ee9f2-5578-43cf-a806-c7d27426c515"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c136f413-ccfe-4233-abad-1755a2692758": {"node_ids": ["191b8f57-77de-4487-865a-b9d42c5ff7ac"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "703a3a37-e273-4325-a518-b4654744e863": {"node_ids": ["b18b82d3-5001-44e7-9f9f-9febfa5f7e15"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "40ff4c5a-fcaf-46ec-af27-c219e5262ac6": {"node_ids": ["e82cccbe-2b4d-458c-9e1d-cb31ad2061ff"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17c.md", "file_name": "termc17c.md", "file_size": 6377, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "69f7330f-837d-4cfa-87ee-8b2237da04d2": {"node_ids": ["5b861b2d-5d25-482a-9422-3c315812b116"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc17r.md", "file_name": "termc17r.md", "file_size": 1859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "62deabfe-cdf4-4c56-9744-164421f87fa0": {"node_ids": ["075291aa-fe02-43a8-a09e-139140fbd040"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18a.md", "file_name": "termc18a.md", "file_size": 193, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "0a14cc0b-4e0d-4899-ab25-897f9d85dfdd": {"node_ids": ["f6316c96-d9dc-41e1-8f93-3cfde2eaadd5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f0b68a28-e9e0-41b7-8ba0-bcfefa8e2d00": {"node_ids": ["8d94bce9-0de3-4ef1-bd37-081a51d9d872"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "66dbf239-b85f-490c-ba87-a44df04e321c": {"node_ids": ["5831fc0d-0730-48f6-a48a-a8f02b74f7ac"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f728099c-6791-44a3-a87c-8a6c3aafff97": {"node_ids": ["e017c295-84d4-492d-b48e-2567546323fe"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18c.md", "file_name": "termc18c.md", "file_size": 5450, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "2c49c581-caa6-4391-9dc2-edce75451803": {"node_ids": ["d49b13e2-49bf-41d3-b6ec-74d3f4822234"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc18r.md", "file_name": "termc18r.md", "file_size": 784, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "760c1161-2d01-4f0c-9d49-e19405a310b0": {"node_ids": ["1d80ed1f-0250-44ec-9012-aa0f965b6979"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "769cc34d-1fb2-4e38-9825-45f893d6d96c": {"node_ids": ["5923f12d-8ebe-4235-98ec-4474505f86fc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f0383d59-be21-4b91-8546-879eeb492feb": {"node_ids": ["b70fb096-7b33-45ea-bad7-ae800f2f23c3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc19a.md", "file_name": "termc19a.md", "file_size": 2104, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9a9043a0-0701-4c07-9b8d-5f4c3daf8d26": {"node_ids": ["85cd62dc-1c0e-4645-bb8a-4e1ac3af6185"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "5138633f-ff54-4b70-8070-cb8f9b06ed5e": {"node_ids": ["ab6a841c-63ae-40ec-852b-346e8931cd33"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "1e7ebabc-4efc-4e3a-a10f-f7be75c54a39": {"node_ids": ["e45c9212-ae33-4419-a49b-2aedd69002d2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "c9e937c0-1483-4cd3-a4d9-711199bf0803": {"node_ids": ["1e51d4b0-d474-488a-876f-3f3df674883b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "a5313cf3-f8e4-4c43-aad6-d8547e1ddd06": {"node_ids": ["62b98b2d-1d02-4887-8572-f2a8a21c7aa1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "e333cd8e-9045-4480-a0a2-259f14a27359": {"node_ids": ["b74c4004-c62f-4ffd-a6db-6abf7108ac15"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "c43777d8-ac4c-48b9-af70-d7c5f6721041": {"node_ids": ["88a71a14-61ed-4599-8b35-021b5f79072a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "289e05fb-5414-40af-b528-2d69d16fd16a": {"node_ids": ["30d70dce-2b90-42a7-b3ee-9ce107a3b60a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "00c259de-9b40-49a1-80c8-ba39ad23f253": {"node_ids": ["682698c1-f4ac-4ca8-978d-93edf96d74ad"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "94d3c802-ac58-42bb-84dd-33d0da502ced": {"node_ids": ["8e3c4538-e8d3-4ca1-91e0-dec38fcf6424"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "e30ab401-e15e-4a9d-8a56-82296d0f1729": {"node_ids": ["2dad6f7f-3d66-491b-965b-8e2bd3e537eb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "530811c5-4885-445f-86de-f011449fc5f2": {"node_ids": ["83f319fc-d0f6-455e-adf6-a238f9c5bf03"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "a41ae902-8570-46a3-9025-83d4169ddfa7": {"node_ids": ["6dcb8c6b-53ef-48bf-95cb-b048f0846095"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "e3a75b65-cf89-4f2a-98fe-bffa91725b66": {"node_ids": ["7dde9c1e-41a9-4027-acc2-4ef76dc2c8fe"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "056873e6-a9e8-4737-9d4c-0ecb0ba7d3a2": {"node_ids": ["8308ba50-daae-42b3-95d2-867b939e590d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "da63397b-9c6a-4683-916f-7e7105a46b5f": {"node_ids": ["b3a9a803-51a5-43fa-98e3-a5bf229ea144"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "71ec611a-85b5-438d-ae37-dd9372cb412a": {"node_ids": ["0a424a2d-388d-4d9a-a348-eba2a28a60fe"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "448ba8a7-9a0c-4917-96b0-230c24af7d74": {"node_ids": ["12298c41-815b-4e44-9169-1c6b27a68d9b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "07cd42e0-b3e0-4320-8abf-9f27704b4aab": {"node_ids": ["94210e8f-b16b-4ab4-bbf0-3f33813cfa0f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "c77e8498-dcb5-462f-b835-e8357a02666e": {"node_ids": ["688a2abf-0c93-4ede-9500-016e0515e36c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "3112eaee-1991-4296-ba67-70383612d741": {"node_ids": ["5bb310e5-9ceb-4905-89a5-f2f53c153b53"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1a.md", "file_name": "termc1a.md", "file_size": 8519, "creation_date": "2024-07-13", "last_modified_date": "2023-04-26"}}, "9473ff4e-8879-4b2f-9670-136a0cb1cb32": {"node_ids": ["0d6e063a-76fe-4040-b374-906ab12f5e7e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "6f6eea53-2283-4bc3-a14c-99242537fe26": {"node_ids": ["470f0b16-91c1-4c5a-8f05-0c8440472c96"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "a49b6f26-4756-4d55-bf3a-04e952d8256c": {"node_ids": ["cd3b96e5-5647-4aea-b6a3-3ce0ccd8ae0c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "733bb046-b01e-47c1-9ee4-2d971a759ccd": {"node_ids": ["8cdf9ef3-f664-43ce-bb5b-f865f49a7136"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "cda818bb-2d46-44b1-a1ad-8f138fb911a0": {"node_ids": ["8140ac75-f6ca-4b5a-a49f-c65aef429436"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "96a150f9-2433-429c-b2ef-4010af523d1f": {"node_ids": ["1fca97eb-4639-4d89-93b7-f7cb7073b44a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "900585ce-9bfe-46c8-a4ff-d983a9c265df": {"node_ids": ["75cd5f53-888f-4914-93a0-f148237ce916"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "b5d0592f-175e-4c56-86a4-8f8f4a60de19": {"node_ids": ["260021e9-0e1c-4af7-a8f1-99dca1802dd6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "5e77d932-6849-493e-a024-0dca677def30": {"node_ids": ["a8cf7c35-bcd6-4478-9320-5e4d578392d6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "8cb4f4ea-5913-49cc-936a-f8e445fdeea4": {"node_ids": ["8e532bb9-4396-4129-a3b2-7531439fb258"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "af8f5283-941e-4778-ad50-4aa0d7a1575b": {"node_ids": ["abbd7847-4df8-4d41-84f4-02963c88d426"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "2797d01b-9b8a-4cbc-beec-ae4683b529f4": {"node_ids": ["9f24d551-de2c-4041-839e-327fdf91c998"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "01952fa2-ec09-49ed-9688-7583e31991c6": {"node_ids": ["e30d4ab7-020a-425c-8d7a-74588f445efc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "c03434ce-2b61-4300-b8ab-95a2c6a4e4e4": {"node_ids": ["47c84d0f-5801-4bdf-826e-e038ea45ecf8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "6000c060-f449-4632-bf5e-9709571d91e5": {"node_ids": ["eb13f382-8649-410e-83fa-bda0d9502e9c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "e0f34c68-2bc4-4c95-9aa8-ad1ebd0478ce": {"node_ids": ["0e424665-aafd-4d16-b641-4047306a0ba8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "f1d17858-ef80-4f33-b665-5cde1969353b": {"node_ids": ["6d734aa2-679d-47d3-93e7-fb63a156b5ca"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "4802f069-2c3e-4c4d-a51b-f9866bf6153b": {"node_ids": ["25e5814e-90ce-4094-b9f3-9b16a07f29b5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "72a0b795-1e99-44e2-af08-58f806b496a3": {"node_ids": ["0a2d2e88-1e80-40dc-a66c-d59a7e7605df"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "22f6eab6-d6e0-4310-bea0-65194528b7ea": {"node_ids": ["9e805bcb-748f-448a-a244-31602d344733"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "9065bad5-29a9-4329-b2e9-09937893068f": {"node_ids": ["10a0f740-2b88-4030-b3d3-e9bb51848ead"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "afa7a914-4925-4c03-8c66-2de6760e2af8": {"node_ids": ["f7aba2d9-74cc-4992-880c-76d9b29914c8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1c.md", "file_name": "termc1c.md", "file_size": 29064, "creation_date": "2024-07-13", "last_modified_date": "2023-09-05"}}, "22522b76-d98c-4773-a1eb-7a156425205d": {"node_ids": ["546e50f1-f501-46f9-b04d-ccc37a4a5737"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9d2d3d38-d0aa-456d-977a-4beae4accc89": {"node_ids": ["fe054fc1-811c-4985-a401-55341b429453"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e594ec53-46cd-4ff0-bb91-0a353f13a486": {"node_ids": ["68d66666-b425-456a-931b-f40cd455b533"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "25a333f8-7174-4558-bb27-058574218f55": {"node_ids": ["59e04764-b497-4ad2-89e1-536dc238cf64"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9d9f8552-66c4-4b39-80cd-291dcab917f9": {"node_ids": ["202c4cb6-36c3-4363-b2c3-7acf736089a5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "768c92cc-7fc5-4e46-b624-84a7ebadc488": {"node_ids": ["7b88d3da-2305-4893-98a9-d600e3292417"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "91a3b2a3-72d7-4d37-abb7-d673e4f51c7e": {"node_ids": ["12d1b19d-2795-4093-92d0-fffdfb798fd3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8dea4496-94c2-4e32-b95e-3abc969490d8": {"node_ids": ["763d4f26-dfe8-4b2e-9c1a-6404f74e28d8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc1r.md", "file_name": "termc1r.md", "file_size": 2139, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "39283707-3e95-452a-b70f-6b8368c9887b": {"node_ids": ["98e4e4a9-bcc0-4584-8b46-e52301729334"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20a.md", "file_name": "termc20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "84ab5dcc-55a0-4567-8856-4db3502c7934": {"node_ids": ["7e937eeb-3e5a-42ca-b361-81ea6a93d439"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20a.md", "file_name": "termc20a.md", "file_size": 199, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "713d2924-999e-42f5-af8b-a4f03f2d2262": {"node_ids": ["41065fba-680f-45bb-88a7-b59226e3dbf3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "92bdccb3-680b-461b-a1bb-abe428617e3b": {"node_ids": ["d0f80b2d-2d33-46e5-8e4f-017f7f7b5b33"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f1f468b2-1587-4481-be65-889a76897f59": {"node_ids": ["d86e03fc-3d91-4e91-8064-6e258540d902"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "ed14587e-e7ee-4888-bf9d-8b14f38ff1dc": {"node_ids": ["422f3bf7-b76a-4f38-8ba8-ba7a3dd6a58f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "b9d26179-24b7-4b67-9169-0d73b5ef1c67": {"node_ids": ["3c642af3-412c-4fa1-9968-3b2f8e3393fa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20c.md", "file_name": "termc20c.md", "file_size": 3150, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c4174063-abe6-463d-baf8-937c6a6141da": {"node_ids": ["09df3911-34ee-4369-bcbf-8ad33206650b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc20r.md", "file_name": "termc20r.md", "file_size": 296, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9d246bc0-ade2-4b7b-ada9-abc71bdde9f2": {"node_ids": ["3d944723-3f1e-465a-bbfc-fc5e21299c7b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c2308a07-edf7-497d-96b9-1c6fee198ac9": {"node_ids": ["a2c6f778-f4bd-4909-8e4b-d07d9a7c7332"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "88c53b02-3b70-4acf-8b16-5795f4df971d": {"node_ids": ["a01539c0-ebd4-445a-ba31-ca55719fd547"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21a.md", "file_name": "termc21a.md", "file_size": 335, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f32918a4-17ed-438b-8c99-d3db6bafb4c9": {"node_ids": ["33202e46-1f0c-4989-858e-840cd26c8ea8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "faf4a0da-d878-48c5-9152-10614b788aa1": {"node_ids": ["ba9a635a-327d-4f39-a087-0dd3cdcbac7c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "c45ba4cb-a4b1-4030-ba76-af8803a2aa45": {"node_ids": ["8c2534fe-847d-4e08-9163-6596ca00455b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21c.md", "file_name": "termc21c.md", "file_size": 2198, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e0e8ed61-8fe2-413d-a658-84bbaaf5f2af": {"node_ids": ["1aaa806f-3efc-4f52-adee-bcbb94a1983f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc21r.md", "file_name": "termc21r.md", "file_size": 645, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "36dbcee3-c221-4f1f-814f-8bb862fc882a": {"node_ids": ["9894d4d9-d013-4c8d-85ee-f9202e7f1342"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22a.md", "file_name": "termc22a.md", "file_size": 271, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "d5abf8ce-0ce4-4709-90ca-a2e684ef939e": {"node_ids": ["4c81b557-d034-4871-a9ff-bc97d4db2eb5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "15ecb09b-1333-4c51-8133-1f123edc09fd": {"node_ids": ["c03093d1-1b7e-4db1-bde2-75d673592f31"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a94ae319-bc6b-4dc4-897d-930530dad686": {"node_ids": ["21e4ce11-ba74-442a-8fd8-a6698e0cf877"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22c.md", "file_name": "termc22c.md", "file_size": 2769, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1e7774e0-582e-405f-b86e-9981789a2c11": {"node_ids": ["805807a5-28bc-4567-b187-e080b061d8d2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22r.md", "file_name": "termc22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "926de581-fde0-49c1-aa9f-b7b2767cb2e3": {"node_ids": ["e40e46a4-d4ea-407c-9bc3-03604d23bfa7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc22r.md", "file_name": "termc22r.md", "file_size": 472, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "abbdd940-ab74-40f9-8c0b-d2b6abd5a0dd": {"node_ids": ["c0cb2a19-5787-450a-8420-5e53b5cde6c2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23a.md", "file_name": "termc23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "33468806-538e-4a1c-aff3-bc0f1219c15c": {"node_ids": ["9e21d47f-4f14-4531-baa8-85f926975338"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23a.md", "file_name": "termc23a.md", "file_size": 3299, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6085e6d9-6a45-4ec3-9e83-b3d8dc8d0bf3": {"node_ids": ["f8f91a2a-5897-496d-ae71-a5e48da520bb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "e19ac5aa-eaa0-477b-acd2-afade241a075": {"node_ids": ["ec89af8c-9858-4540-a47e-f8fdfe605569"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "906ce262-f921-4ca6-9bf4-8eed3ad03609": {"node_ids": ["cb45183e-784e-48d4-88e9-1869e98c78eb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "a335ee2c-7c1b-45f3-bc72-8aff45335927": {"node_ids": ["e842c546-8e6f-4692-a69d-0612add3817a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "437b10b5-84a1-406d-a288-9995e157f18c": {"node_ids": ["7758fa99-8b85-421e-8746-f272c88a0c52"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "e77bbafa-2d4b-4023-87ee-dc3a2187ca4f": {"node_ids": ["6738ea06-f2ed-4659-99a7-7ba2354231fb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "f68eeb1b-307c-4d7a-883e-fa9f56e70e79": {"node_ids": ["4c59d0f8-012c-4d84-9766-bee669ab41cd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "ba4c8ae0-6fdd-44fa-a780-1b6c41453d3e": {"node_ids": ["d04012da-3ed7-46a7-b5da-1aa5419cd291"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "0401f8c1-4ee0-4473-95ab-00f5ed4fe24d": {"node_ids": ["863ecc99-1924-4bca-b121-c4ee41d83ac3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "49caf084-88c1-4f97-9469-150af80b1b20": {"node_ids": ["b55f3385-ad91-4506-82c4-78c7c89deeec"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23c.md", "file_name": "termc23c.md", "file_size": 11695, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "8ed34c19-ca42-4875-945d-8da987396111": {"node_ids": ["932ce0c2-f9cf-463b-9578-f1ec5aa6e353"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23r.md", "file_name": "termc23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "dbb67749-2568-4831-a578-36cd163d3285": {"node_ids": ["ad7ad8e8-d455-4318-8d0a-eab249b09608"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc23r.md", "file_name": "termc23r.md", "file_size": 1493, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "45f6d0ce-f5fb-49c2-8aae-d206a91d7e75": {"node_ids": ["0aa85417-9969-49ba-b670-58f307c692dc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1b3f4b4a-5bf3-4dbc-a8a9-33664072d25c": {"node_ids": ["29e35374-b261-458e-907d-4e083ca39dd5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "484e7f39-bcf4-4559-84fe-e91fa8522bfc": {"node_ids": ["f8c78c3f-d5f3-4392-9009-0d127b8f5ead"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24a.md", "file_name": "termc24a.md", "file_size": 2256, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "74eb25db-32c0-4c96-8266-50e1bbde876c": {"node_ids": ["2c990cf0-a24d-40e1-84aa-3c2b847f06aa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d1ceb7c0-0e94-411b-b9d6-17e97bf01948": {"node_ids": ["78211e94-0db4-4458-9c86-a0271e064b68"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d4a531ec-30e3-48ce-9941-742703002290": {"node_ids": ["10dccc30-363d-4d14-ab66-0b70c1e526f5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "737d7789-acfa-4305-9be2-14fd66d75af4": {"node_ids": ["48b0e85e-7e14-4838-ae8a-b9260b223073"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4d00e990-65b8-42c0-ad0e-6bf4374665ad": {"node_ids": ["d73e1441-ffc6-4cc6-985e-617a90a98d23"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "69556ae6-974d-45ee-bcb7-7e2b4e8909da": {"node_ids": ["2be2af5c-fa4f-4847-b9cb-cae2cbfc998c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "36902781-d638-4455-ac7c-72824df897b5": {"node_ids": ["a1fc3a2f-6363-49cc-8314-ac012690f7b1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24c.md", "file_name": "termc24c.md", "file_size": 7058, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2573abb7-634c-4f32-819b-5c15d4e96b5a": {"node_ids": ["c0cdd922-62d4-4dd2-b5bb-f8782ee5821e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc24r.md", "file_name": "termc24r.md", "file_size": 681, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "6b25234e-d1d8-4f05-aa3e-fed65a2dc443": {"node_ids": ["fcfa1f10-15ed-464b-b559-f4b645f4ac53"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25a.md", "file_name": "termc25a.md", "file_size": 96, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9546f2ce-292f-4b71-85e3-aee383a18a05": {"node_ids": ["4e79f4fd-d168-4596-b491-8505633925f6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25c.md", "file_name": "termc25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "eb59ceaf-e326-46d1-8be1-b70ce6a93cf0": {"node_ids": ["cc816998-e1b1-47d5-8c43-bead2a28419e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25c.md", "file_name": "termc25c.md", "file_size": 4881, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "27d1f2e1-c9c4-48b0-9186-35024006a76f": {"node_ids": ["5afd1d10-6b30-4107-ba2e-8d52b63803b8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc25r.md", "file_name": "termc25r.md", "file_size": 995, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "cb827e9c-00b6-4922-8e19-6302f2f0cc79": {"node_ids": ["59771a2a-e6b6-4971-af8a-69baad2b22ce"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26a.md", "file_name": "termc26a.md", "file_size": 103, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3dde8e6a-6b7b-46c3-95af-071e201796a8": {"node_ids": ["8f3900c3-d792-4997-9958-eaf571c6d17e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "e3361c89-ceaf-4c38-b78a-792182625a63": {"node_ids": ["2a8f01c3-55e2-4a90-a7eb-3b6505df0f7a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "7ad925bc-876c-447b-9bab-8e33961507eb": {"node_ids": ["904f1bf5-4948-40b0-9fda-e998102604ba"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "8e1895f7-a6bf-4bae-8555-a4b4bb920675": {"node_ids": ["05456885-dbe2-442e-8408-68839855f91b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "6b62f94f-45e2-4bcc-899b-95055f1f9622": {"node_ids": ["58ebff5e-afa0-4dc2-bd8f-a33fb0e5bf8e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "b041c317-5f75-4620-baea-3c76c91e68f4": {"node_ids": ["1eabf559-0b42-4565-90d3-3ca115d0cc0a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26c.md", "file_name": "termc26c.md", "file_size": 6418, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "c50d83b6-9d58-44c7-94cc-fb5c5bb9e806": {"node_ids": ["c4eef32b-3d29-4115-a6e3-16341ac55dec"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7bda674c-b110-4f5d-a7ee-5f3531f25b09": {"node_ids": ["353e1ad6-4b2e-4477-b298-5e53a2780dff"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e8042ad5-8fc9-4a57-b3ad-2f67adc83f9d": {"node_ids": ["4265cc44-f041-4c86-a166-7c14b122dd74"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "10d31d09-d2de-45bb-a2d8-5c21f3e31df9": {"node_ids": ["c43d9496-3c1c-4e30-af86-5e11c5b41d0a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc26r.md", "file_name": "termc26r.md", "file_size": 1819, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7a03df38-a3e5-4de8-9a4b-cc65f9b88c37": {"node_ids": ["4c69a5dd-167b-40a4-9493-666792d23b29"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc27a.md", "file_name": "termc27a.md", "file_size": 1775, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "dd7e076c-7674-482e-aab0-961a9cbc8a3c": {"node_ids": ["027698e3-39b0-49a2-9ff7-c3acc1e83103"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "62ccd455-d585-4617-9d1f-5932e96e78c4": {"node_ids": ["7c8fc79d-25e5-4d75-9974-d905d29a80a0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e23c10cf-0f62-48cc-adbb-cdaad84128a7": {"node_ids": ["bfec1f06-245c-4c33-be72-2893cbaea6c0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "bc255c09-7dd3-4c52-ba3b-2d2e2462cfa3": {"node_ids": ["16ff98ab-90fa-458d-9bd4-0bba90766f6a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3495b2ea-55db-45c9-b082-e47c06144128": {"node_ids": ["ed406b47-42c8-4811-8d6a-f839d6ff8334"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "573cade4-8026-4df6-9de9-0554c8ac74a4": {"node_ids": ["e77231c4-dbdf-40c5-a541-b331cee5cf66"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "893f53f8-9a48-4e76-9d31-86bd9f5fdc45": {"node_ids": ["305079f9-4a22-4517-823e-04239ed9cbc3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7ee4ee89-a573-4375-9607-97966a57f63d": {"node_ids": ["ec441796-2184-466b-b8e9-15dbf4364ee6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "6f553c45-bc60-4899-8894-2ca0e808e802": {"node_ids": ["eee31948-5ab5-4f75-b055-3ae82a41dd40"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "307b8c55-07e7-4a11-91e9-9cec4ceeea6e": {"node_ids": ["fdedd3d4-fa89-488c-b135-41d0cf56a2ed"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "721d238d-5f8f-401e-9423-906a07897fc2": {"node_ids": ["9294e819-ebe4-4262-9845-d75cdf62bbd2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "480ab0c4-9912-4893-a7fe-3cb94e3d76e8": {"node_ids": ["d6e7cfee-f157-4a44-8ccc-d3020d4da940"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "884fbf18-abb8-40d7-9f61-d711bfc0ee7c": {"node_ids": ["c8dc2f43-c7ce-49f2-8226-c426211be337"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "cc020827-60bd-4600-af6f-c3097b74b789": {"node_ids": ["fd159aae-4ee9-431b-97a6-5312463f8718"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc28a.md", "file_name": "termc28a.md", "file_size": 17827, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7e8b70eb-ea46-456c-b565-c515c795115c": {"node_ids": ["a6ebd18a-32bd-4b90-947f-d50f62c77c41"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e77bb752-3622-42b0-98cf-e8ec9b5bbff6": {"node_ids": ["6b71ac76-1d1e-4bc6-b08d-74a87104bd80"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "164745cf-e402-42fe-9c77-71f09999b1a6": {"node_ids": ["34fe050e-1244-4275-8ef1-e019dec38195"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0a50064b-e03b-4810-a064-6974bbe75a02": {"node_ids": ["7b237626-8827-4796-8982-8e304b321ca5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "596b4044-9052-4b3d-82b3-c1b4c9c7a25e": {"node_ids": ["e13ea6e8-12c0-4eaf-9828-70336f3b1fc5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "41f272a2-559c-4c1c-af26-b2c39ba0d479": {"node_ids": ["23cc298e-b966-45bd-9863-85002cedc216"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5f897967-51b1-4f8e-b001-2be179ff68e4": {"node_ids": ["eddb1f41-9af5-4cd3-944e-7a15311c8aaf"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d12f1443-6ade-4678-8a20-b95cd75232db": {"node_ids": ["2bdfc6db-65b0-4570-8607-bc9435b32a2f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8544bbfe-dac1-413c-931b-7fa847e99956": {"node_ids": ["48231277-49f7-4592-ae2e-bbcec8823e97"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "02a4694e-f437-4d77-8a2c-4883d248f35d": {"node_ids": ["1499bd0d-38d6-485e-9a52-6dbcfb987833"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d1dbc7e3-6f2e-41f3-94a8-854ad40dbc0b": {"node_ids": ["391be54b-85f9-409d-a191-29d0b3299e6c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "dd3aca25-96bb-4905-b09c-d8c3ec82cbdc": {"node_ids": ["7078bc04-4d7a-4a10-8e77-4e6414115997"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "aa433598-b826-479b-af9b-ec23f4dacd0c": {"node_ids": ["285cc418-daff-4a14-bcb8-5dca0a2e707e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "03d86264-711d-485a-8009-e013e0db7949": {"node_ids": ["0df7178f-1576-42ac-8232-e251c2bab3a1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "466cf383-947e-4d25-a811-4520f00b178e": {"node_ids": ["a82eaf99-40a5-4a08-8d6c-80179ea01d2e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "aed087b8-f085-4800-8fed-106b905c9565": {"node_ids": ["fa94bd64-4d32-4869-8b7f-4b172544f465"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "573f9e19-c462-403c-9620-e2c114a24b55": {"node_ids": ["ce4e63a7-080c-427c-9e29-60a0691ffdc6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "dc5e5b63-5db8-4e55-8607-e4b48a73acf0": {"node_ids": ["9966bb93-f78e-4bd6-a47e-00161a75c2d0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f697fcc2-2c2c-4cf7-838b-bc3564ec30ee": {"node_ids": ["93edc356-16c0-40fe-805c-b31d0d412e0d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "432a33af-0f47-4f8f-8a57-0d831e867abf": {"node_ids": ["a6a49484-6ba8-428d-91a3-09933d037077"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0702bcce-8a0a-4652-911f-c244f4bcfdcf": {"node_ids": ["7e8e9cdf-13a4-4ef5-bdc8-a2d080a5e1d4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "26b70a52-86a5-44fb-a608-3f777d377357": {"node_ids": ["6439a816-fd3a-49e9-a31e-ce55a29e45e0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29a.md", "file_name": "termc29a.md", "file_size": 12462, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "24fda5db-e8e4-46f7-b0fc-aceab1d7d18d": {"node_ids": ["9c1fb8d3-5911-4032-91f0-64f39c5c1f22"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "780bc9ad-a39a-4ea5-bc8d-50fe6deadb25": {"node_ids": ["0418710b-b187-487a-80d6-c4b20d6b37da"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "2aa9f9f4-9ea2-411a-869f-052373965fab": {"node_ids": ["9738cb1b-882f-4ca6-9ecf-4927419f89cc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "f7a0da90-66f5-4a25-b8a9-38fdfa18852d": {"node_ids": ["1fccc193-15dc-413c-9620-cd72b4fa141a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "33a0932c-1719-4bb2-87cb-9673866a4557": {"node_ids": ["21d48d8a-81b2-4654-b857-71106cea72e3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "dc122a68-03e0-4df8-988c-b9f735a80a7c": {"node_ids": ["b9dc9f0b-355c-4d7f-af02-925954b1f070"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29c.md", "file_name": "termc29c.md", "file_size": 2660, "creation_date": "2024-07-13", "last_modified_date": "2022-04-16"}}, "2df0bc09-c863-49e8-bba1-472062e27e1a": {"node_ids": ["eac2d760-c614-4653-bcbf-fca614515d0e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29r.md", "file_name": "termc29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "83eb8fb8-0635-4613-82c5-684c2192999f": {"node_ids": ["f3e841de-f912-4e6e-8959-516caf5846c3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc29r.md", "file_name": "termc29r.md", "file_size": 668, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9e04e43f-37a0-4929-95b7-005c494b730c": {"node_ids": ["e26abf10-ebbf-4960-9a65-5a0a63f85a89"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "39f79a40-dd3c-4118-ae14-7509e52a819a": {"node_ids": ["08bc169d-727c-47aa-be6a-63cbca5d3041"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8892a1b0-c6be-437e-9fe4-5cbae300a8f7": {"node_ids": ["ae3e6ebd-8741-4de2-9936-0551d8762214"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fe07ea4a-d731-4d51-8fed-7cc2bb4c6a9f": {"node_ids": ["63896d1e-3fae-4087-ada8-c6a5e3fc9003"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "769d4a44-4559-4c7c-b367-c8ebc7157b9f": {"node_ids": ["c168605c-e366-4289-a463-6e25acad82f7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4529fcca-8cb6-46fa-aa56-00e1ec784c60": {"node_ids": ["0d4cb3c5-7114-441a-baa5-825c4d5ee4b3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "338310ba-50d0-4abb-b4ed-09616deb99c9": {"node_ids": ["7ad2a918-ef77-42b7-ba7b-f72f6f15bf69"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e55778e9-f7c2-48f1-8180-23681afbf192": {"node_ids": ["6297c6b3-d96f-44e2-b865-005d3cd3c3ed"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fc242479-8283-4a04-8046-74b8a888b362": {"node_ids": ["c8c92ffe-e20b-4a65-af2e-739bb8a18b9f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "62da7f67-0e51-4d8b-aa1f-e4cec4e04a3f": {"node_ids": ["2bb7bf3a-190c-46f3-8b44-1abc7f4de6d8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "79c038ee-54d1-441f-8611-70edf59a6111": {"node_ids": ["70268cc4-aab1-49fa-882b-aa2703f2954e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "05520f5c-c468-4899-920f-3e83a15e7e9b": {"node_ids": ["9f26b619-a964-4f37-9602-168c94b08d00"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2fad7370-a7f2-406e-9d3a-e7c3caded3a0": {"node_ids": ["8bea27a9-163e-4719-9df6-a538613c41ba"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "40e025c6-2456-4007-93f3-666b62247722": {"node_ids": ["3c285fce-c453-4c7e-b2e9-3a77a8a60a84"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4700beef-9efc-42d3-98d6-f733208145f3": {"node_ids": ["6091a53b-0e88-44be-a481-236e1de75441"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2a.md", "file_name": "termc2a.md", "file_size": 3899, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "70fbe1ce-ad6e-4449-b186-252d8df835c3": {"node_ids": ["40642346-01dc-46a3-8c7e-b2e533177c01"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "74c50bfd-b324-4520-afc0-1497f9a7e167": {"node_ids": ["6e9e2c25-48e4-41d5-9c3e-d30c8fbb99ae"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "34a2d468-393d-4a43-83e3-25ba639d70fe": {"node_ids": ["aee169ac-3dc0-413d-b8fa-5710d911054e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "4d11b148-c874-4cab-9bed-c644e1cadb64": {"node_ids": ["494e551a-5af5-4a0c-a461-5ee21d19593d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "0b6c3afc-73ca-4f94-86f4-019de41e1ced": {"node_ids": ["6b59179a-6816-4fab-bef2-9770e8a20328"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "97fdbf78-d83e-4de0-a280-7c524d8c609b": {"node_ids": ["bb73c9e1-9046-479d-bc9d-e30ec3498584"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2c.md", "file_name": "termc2c.md", "file_size": 11948, "creation_date": "2024-07-13", "last_modified_date": "2022-09-12"}}, "d62f46d7-c5b1-4fce-bdbd-7b7fb1d8e6d1": {"node_ids": ["723af712-2eb6-4f0e-8012-ea2d78255135"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "05f6e441-bd3d-4801-84d8-13dc11adfb66": {"node_ids": ["ea03ff7b-d4ca-493e-be95-d4888288d60c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "72aa7e45-01e1-4ddb-a181-29e7d6acb8b8": {"node_ids": ["c5039aba-cb59-49f9-a204-a2be65c77fe2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1627f176-bb30-4960-8429-5d409e7df029": {"node_ids": ["7267e323-1d5c-47e7-8487-bc9f69f5106f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "80620d38-b872-4add-9acb-fcb7f0852158": {"node_ids": ["c17e9d63-aafd-49f3-ac9d-6356be20d3dc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "21d516ea-3a3b-44e5-b77d-c003df8c00fd": {"node_ids": ["3bd1c862-76f8-41ef-896a-3ac189ced172"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc2r.md", "file_name": "termc2r.md", "file_size": 1548, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "09532927-fc22-425a-88cf-46ca43697496": {"node_ids": ["38ba7a5a-1a26-4c58-9aa8-60b5e92f676a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "43996ed6-8156-4cdf-b127-340e5a87d5f7": {"node_ids": ["c06f31e4-ed28-43e0-b01c-7ca3d5b8ecfd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "dcedff7e-4774-44d2-8939-51586c8aad9a": {"node_ids": ["2e37372d-4188-4542-bd5e-8a1436d1b6c5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5979300b-539c-4014-88f3-289c684cf327": {"node_ids": ["cc83a270-5440-46ec-af18-b671482e5b5c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30a.md", "file_name": "termc30a.md", "file_size": 1311, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "bff0ee32-2835-4a36-8467-1780639d94c7": {"node_ids": ["13a20aff-d12c-485b-bed7-17618052ee5c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "a0a8d3a1-0c55-443f-aea2-cdcc605009c6": {"node_ids": ["20024d21-57b9-43f9-a4ec-02f12c13f32f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "7b2e6252-4b2c-4871-bb0b-6f96a05f0bf3": {"node_ids": ["5b89d49c-c15a-4f74-9f60-5a65110372b7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "8b0e37ea-e1a0-47a6-9cf6-cbfaad2390e3": {"node_ids": ["cc192a7f-19da-4a42-b9e6-4e7cb0b3af2b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "a432431e-4425-4075-8a62-e302b9a3567b": {"node_ids": ["8a49cf2e-dcf0-426c-aa64-201acd8b9cb5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30c.md", "file_name": "termc30c.md", "file_size": 6725, "creation_date": "2024-07-13", "last_modified_date": "2023-05-16"}}, "5f319406-78c7-4a91-8c7d-6dc57694bb7c": {"node_ids": ["1c3759aa-7392-46f9-a5d4-5f9acebab2e0"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30r.md", "file_name": "termc30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "de84f7ca-483c-4a4f-b7c2-c883c4df932b": {"node_ids": ["39cf76cf-5c52-4200-a002-c7caa4bf14b5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc30r.md", "file_name": "termc30r.md", "file_size": 504, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3efcb26c-4ce3-411e-849e-1834ff3aef28": {"node_ids": ["f7d4658a-d17b-4ea9-9428-7991d4f7fdeb"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "56cfc2ac-612c-4b28-a8f9-8129025c63ae": {"node_ids": ["9a3b0f8d-839d-48b7-9a4a-76baff53bc8e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ccc87367-2af9-4e7f-bda8-d2ed30b73743": {"node_ids": ["5bc08d47-f8bc-49dd-a8ad-d3995e4cc556"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b484ab70-4d47-4ea1-90a3-dda462a3767f": {"node_ids": ["d018af0d-07b2-4962-a512-847abe25a4c9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31a.md", "file_name": "termc31a.md", "file_size": 1454, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "9eefbf0e-7967-4b1f-a492-78ec07daf397": {"node_ids": ["3f4925ae-4979-43d7-92d8-0a2b1baf4f56"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "23eca1c1-d38c-4abe-ba86-67c37e7d32f3": {"node_ids": ["f00b7fa8-1ecd-4f57-a59a-7b3bd18b034b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "705a2fc2-3b45-4581-aee6-e4a12e02cc7c": {"node_ids": ["33a9113b-5e85-4966-8d60-a988258a8e95"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5e768bcf-c21a-4bbf-abb5-1fd9e20f9fa8": {"node_ids": ["c6439caa-1c77-4f4e-800d-dd6b7665086f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31c.md", "file_name": "termc31c.md", "file_size": 5722, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b43fcb01-d2b0-476f-abed-60390ebdcab7": {"node_ids": ["331cea45-fa3d-4b54-9f49-0eada1c6faba"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31r.md", "file_name": "termc31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b30b97f5-c97c-44db-bcca-9e2af863dea6": {"node_ids": ["ef07b443-4ece-4294-9eef-1a73ca4c2c06"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc31r.md", "file_name": "termc31r.md", "file_size": 661, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7024fbd1-af7c-43c8-ab40-8ef317f0979a": {"node_ids": ["68c1b5ec-ae74-435d-ac70-431db95081f4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "87c75c5d-0c12-4b15-8b9f-68eb1b303437": {"node_ids": ["e3d9e722-2013-4e6c-9f12-194ac0ec64b5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "dbef25da-9823-40b0-9949-cea30cd5ec9e": {"node_ids": ["f470fdbd-1e2b-4c51-a488-c787f53b2b2d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32a.md", "file_name": "termc32a.md", "file_size": 5692, "creation_date": "2024-07-13", "last_modified_date": "2023-04-25"}}, "2644630f-76f0-4542-aad5-93256e4c9f9f": {"node_ids": ["6d469bb7-9140-4e28-aa72-875293af7586"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7b75e568-8c25-4279-a875-a037fd8eb455": {"node_ids": ["e75fb5e3-9ca2-4b37-b615-ed9daeff854b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e735267f-54a1-4ad8-b203-9b28efb9fca7": {"node_ids": ["8135b7a9-c0de-45ba-b79a-debe4bd27154"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32c.md", "file_name": "termc32c.md", "file_size": 4399, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "274603d3-9379-465d-947b-0b30857a6c50": {"node_ids": ["12435baa-e252-4cef-a95b-c3ecee925c78"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32r.md", "file_name": "termc32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "71a5a93e-10a2-4ba0-9d75-80b303a1fc50": {"node_ids": ["2cf65182-ca0c-4c5c-a573-d467f7e6e919"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc32r.md", "file_name": "termc32r.md", "file_size": 437, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "905c41b9-560a-4472-b5f1-699fd1bbf758": {"node_ids": ["9dc6fea3-1e33-4829-9cdb-99d86955fb6f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc33c.md", "file_name": "termc33c.md", "file_size": 2143, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "e8c93f99-cc25-4769-8c53-e549069fdb2a": {"node_ids": ["35e26b4d-6785-4d07-a619-04f4378bfa8e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "84d99005-5433-4d8e-9b52-91aacd50c218": {"node_ids": ["f4c7d95a-0686-424f-b1b0-30e83f7c9e1f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1f7935e7-d9e9-4e4e-b0f7-d6f44c15f671": {"node_ids": ["50214f4d-f60e-4b98-9089-6a382962b6bd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "07db983d-9ba7-4a4d-93fd-c1b36e1beb58": {"node_ids": ["20521fb2-081f-4337-8f47-188e6a0920b3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3f328f6b-e1b9-41ba-a9cb-5952c2c89dc7": {"node_ids": ["c64f9637-169a-4c9c-a0ae-131a767ee193"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "70f959d4-a132-4827-a868-2f7944055757": {"node_ids": ["f217d1f2-a318-4486-998c-a07e91f4f3dd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b5b74fcf-3bf6-470f-8f04-eb9ef872c259": {"node_ids": ["587b71e5-96fd-450f-bfc7-c698bd55192d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8ed53990-a6ad-45a9-9a4d-531496ef6526": {"node_ids": ["883febc2-346a-4321-a476-f322f9d7e372"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3a.md", "file_name": "termc3a.md", "file_size": 3243, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "48b12ab7-5d2a-42a8-8066-44f766ea5625": {"node_ids": ["5b750473-375a-4af2-9486-d5def7525672"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f08520f6-d668-4d76-a83f-3e795b23e25a": {"node_ids": ["9e10f561-8540-4d01-9e4a-9edd4d550161"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3f9062a8-085e-4b9f-af2e-ce413de57760": {"node_ids": ["e6204d1c-300e-40af-ab44-e93f91516ea1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ac19c0e6-7e72-4bbb-9e82-4df555084ae5": {"node_ids": ["77724a0d-9b50-43c8-9685-0050b604e6ab"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "033cc0b8-6084-4ed5-870c-e2597d2fbf04": {"node_ids": ["044ebcf5-631a-424b-9994-f2a31f792b83"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3c.md", "file_name": "termc3c.md", "file_size": 4330, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a971c2aa-1e8f-4be5-bbda-114bd65a5744": {"node_ids": ["2ee305cb-b436-4bc8-baef-899cc1238c05"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3r.md", "file_name": "termc3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1d484326-0fdd-4ca5-8dd0-27b0ddd719ad": {"node_ids": ["1de65c89-b852-4180-a45d-e8f537acd876"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc3r.md", "file_name": "termc3r.md", "file_size": 1106, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b151e099-1e3c-4f4e-825c-754422f1e1bc": {"node_ids": ["ace53c07-56b5-4881-bd38-220678f904aa"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "8fd686c3-7fba-4674-b4fb-4c1689d6ea42": {"node_ids": ["bc3e3730-9a73-4b8b-afb3-38fbed42e131"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "981ca82f-c210-46a1-b5d3-4d680d4e6e6e": {"node_ids": ["001b7086-8454-48ad-8ecd-95190582250c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "317f8931-0d30-4892-b85f-691a5a5f5065": {"node_ids": ["d5ba4156-25ca-4b14-a444-4f73d9c55477"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3c94a936-58c3-40c2-8460-42acc6973be0": {"node_ids": ["884f8baf-c0bb-4795-bc64-47d56e3d5679"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "40f360e5-34d9-4e1b-99a1-44b64948c1d7": {"node_ids": ["929ab39b-cece-4146-a72f-de31cf1d565a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4a7a6217-56f0-4c3c-82ea-8c0656599820": {"node_ids": ["fc54b98c-ac64-4114-ad33-05eb7f4873ce"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4a.md", "file_name": "termc4a.md", "file_size": 418, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "b93fa343-5e48-4adb-a6b5-aa9dd34ae514": {"node_ids": ["2721f66a-15aa-40a7-92fc-8dab2112be14"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "24ded022-d957-4fdf-9043-460f5443226c": {"node_ids": ["08d52fd4-b884-4242-a2f2-71f7d3e8c757"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "aca38c90-3db3-4111-b1c5-0e8b47c1d236": {"node_ids": ["bc9e063c-3ce8-48c1-b945-456bd8541258"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "91e9fa1f-816a-4b79-8db8-f9f1ab70c971": {"node_ids": ["8b68a5f3-e16b-457d-90d3-a58f6874d2db"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "d727beed-dd36-40b2-a8e0-d20219072339": {"node_ids": ["0c0b5494-595f-4dbe-8af5-dcc7a075eda9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "cac3bb6b-3f54-430d-9c14-447735f336bb": {"node_ids": ["b58b3ea3-7653-4e1e-aff0-8392e261572c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "41edc7a7-970a-4eac-998e-5b961a7a1c01": {"node_ids": ["7303bbfd-065f-49f9-a7f5-98665bf7635f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "341e38ac-5522-49af-88c0-a02281c89225": {"node_ids": ["dfb6ab9f-9888-4d61-a650-ae96b9e0b3f7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "10daf129-f1df-4eaf-828f-a77800a51b86": {"node_ids": ["40a9d26e-175f-447e-ac54-1e5bad90063b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fcb340d1-8c6f-4ae4-8d92-34be43ba18c8": {"node_ids": ["56dad17e-7272-4e94-99a2-541a34315396"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4c.md", "file_name": "termc4c.md", "file_size": 9859, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0182d6e4-c15a-450a-99c1-1aea53977b8b": {"node_ids": ["f61333af-7eb4-4a3e-a5a5-932581e8176d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4r.md", "file_name": "termc4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "cf28c8c8-b18e-4cc2-842f-c06ee5068d58": {"node_ids": ["66697d37-8174-474f-ac19-d1b656f0a55a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc4r.md", "file_name": "termc4r.md", "file_size": 1102, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5be6fdb8-bf79-45c9-82fb-3f3e8ec6902c": {"node_ids": ["87cff90f-ccbb-415f-abcd-bad192f14de9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5a.md", "file_name": "termc5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "a0b2a2d7-c7e5-4ce1-bd75-79533537a54b": {"node_ids": ["e82cf9d8-d985-468c-91e7-2b20d43a02d2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5a.md", "file_name": "termc5a.md", "file_size": 159, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "52f0d364-ee15-47a5-aa0c-347917bbaf46": {"node_ids": ["172c5c1a-5f7d-456a-b5ae-e4facbf33b1a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "24f8c79d-d933-4cee-a10d-d8aaf43cc80c": {"node_ids": ["8b093455-06a7-44d4-95ac-bf1ec50226dd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "32b9c3d1-d6ae-47d3-ad67-d98bb87e0b34": {"node_ids": ["d3341544-2032-4e00-a048-903fdcbbf730"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a4762f99-45fc-4aee-b32c-4260fd302e13": {"node_ids": ["9c0d6bfa-942a-4d55-b80b-edc63d53c25d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5c.md", "file_name": "termc5c.md", "file_size": 3922, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "309eaff3-8911-405b-b63d-89da66100af3": {"node_ids": ["87ae257e-c679-48cd-a1e0-4270dd5d8ea6"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "65583a0e-f55d-43e1-b717-bcaf67864e25": {"node_ids": ["2ceb873b-9d39-4079-9556-f28d6542aa81"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "789210fb-d24b-4ce6-b369-be52a77ab42a": {"node_ids": ["514a49ec-7fed-4d76-a1df-0f347dbf2297"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "7bae26b9-1623-4301-aebc-dd089226a9d7": {"node_ids": ["b42c2e44-d43b-43cb-89b1-546eb4a227dd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fde0b1ce-17c5-45bc-a4d6-de3f1e594e36": {"node_ids": ["d99ae7bb-ff61-4685-a24c-6c5d674ed10b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc5r.md", "file_name": "termc5r.md", "file_size": 1935, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "afb84c36-218e-490c-a13c-f329445e0162": {"node_ids": ["82a898b5-69ff-4fac-b7cf-f7f722da7c45"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "722227c1-83e9-430e-b5ff-23286433b8b9": {"node_ids": ["4efefda9-4f16-4e7d-9a18-147538052db2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "583e20ce-eab0-4efa-aaf2-7b46c2760910": {"node_ids": ["b40ab00d-3435-43b4-b803-925d1ec83b5e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "033dabb3-deef-4e7c-8795-f4d08daef68a": {"node_ids": ["90f7168f-f6e6-4ed4-a8c1-f7d6b725cbe7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6a.md", "file_name": "termc6a.md", "file_size": 599, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3fa37804-6869-4195-afa4-d9f6c7ee778f": {"node_ids": ["c6e2dd07-df40-4439-9e40-52ef0c5b08b3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6c.md", "file_name": "termc6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "470d9f69-87f3-4b34-89c7-a685e6e9aed6": {"node_ids": ["e0943d02-5b5b-4fe0-852c-e12f9a1bddfc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6c.md", "file_name": "termc6c.md", "file_size": 2698, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "8a01045a-156c-4edf-a9e3-a2462a477075": {"node_ids": ["6a779fce-013f-4936-b2ab-8fab0f61976e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6r.md", "file_name": "termc6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "79c0eda0-303a-41a7-929d-2d0d997055f8": {"node_ids": ["5004cd2a-f69d-44c5-b1e9-1436203a8643"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc6r.md", "file_name": "termc6r.md", "file_size": 484, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "bb686fee-77e8-44a6-93ec-fb4ebb7a2ff5": {"node_ids": ["d5fb5ff6-0fff-462e-a589-a13187850866"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "20e3f47c-e459-4fe3-a7a7-038449764638": {"node_ids": ["feb2f707-2e36-450a-a799-77e10d148709"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "2e15f622-ef7a-4cb3-8893-2ba3327826b5": {"node_ids": ["596b5aad-9c4a-4cc4-aefc-d6174598ae86"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5439bc74-bf9f-4716-b9cb-66aff6bcbab2": {"node_ids": ["41e2cd52-7dd7-47ca-8ba3-f7b1ce56b41f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "86d315d7-a833-4f61-9356-dcde786f1104": {"node_ids": ["d78bb477-5566-43f3-ac70-5269eeaec4d5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "4c84af25-3633-45c6-a272-757de885aced": {"node_ids": ["9f33d179-8a06-45d5-8e9d-0c0b8093d2ae"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "3143a739-7639-494e-9d1e-5d2d7ed338ae": {"node_ids": ["900f6628-f8ac-4ef5-ac25-a0a6f5d0351e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7a.md", "file_name": "termc7a.md", "file_size": 566, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "94f46206-a1a5-4eb5-ab9f-989f5b563b71": {"node_ids": ["ffc89437-c27d-4852-97bc-34314504efff"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "752a62ee-a8ca-4351-a103-7219cb108173": {"node_ids": ["d69f2bc7-9cf7-4ce9-98c4-4a3b38efcedc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c17d566e-fed1-460e-8d96-2016e075ac47": {"node_ids": ["b12eedd2-fd0f-47e2-a3ce-81fdbf33fe14"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "cdae5ea0-a428-4b78-9735-24292beeb2cd": {"node_ids": ["461763e6-b22f-4868-8be9-f55a3e723454"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "14aadaf0-1e8c-4e64-994e-81f06b0759e8": {"node_ids": ["ab544a3a-4e20-4f0a-94ba-282249c9438b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e1d09705-a0e0-4a1d-9606-f9b591a69964": {"node_ids": ["1207783f-1c24-404d-86fe-b18706c49d71"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "3f7dbea7-6acc-4284-814b-14fd74459fe7": {"node_ids": ["a93d8a22-8a05-4fbd-a4bd-d04b0740a5b3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "ae0608f2-68ef-4b21-941f-c9a78090ea2d": {"node_ids": ["ade2023f-3260-4c2d-b6c2-b6a3687ce596"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a8151c38-78db-4ebf-8691-9b7da958c079": {"node_ids": ["22c69836-3570-457f-803a-ceb1cb0812d9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7c.md", "file_name": "termc7c.md", "file_size": 9985, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "4ff4e9e6-2909-4d58-866e-8fa0f5785c5a": {"node_ids": ["a7140219-0066-4c49-b68d-9e670845c715"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7r.md", "file_name": "termc7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "5e548cb1-95e5-4486-ade3-a6f5a9c8c0c1": {"node_ids": ["13e8b13d-1143-4946-a82d-a992a62ec0d9"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc7r.md", "file_name": "termc7r.md", "file_size": 1521, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "ca14b984-030f-415e-ad5c-caeda067a58e": {"node_ids": ["79a716ea-f0e7-4251-a984-ecc12c23bfbd"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e9ddc8d6-5471-4153-b532-f7867060f505": {"node_ids": ["d4193e20-ab0d-4e01-835a-437e082bc02f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "33b656a1-ac56-4319-9fe6-5ecafc70cf9e": {"node_ids": ["6d4c7115-c2b1-40f3-a2de-28accbf34f12"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "b2d233b2-7c96-4f30-8649-dba5a501b960": {"node_ids": ["eaab75af-5e82-4086-ad0a-b8db60f8b1d8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "c275ab6e-81b2-4815-9de5-283385195b98": {"node_ids": ["413327a0-c54c-4c0a-95a2-658fd7563d78"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "12461ff1-3f30-4a53-992a-efe69b4f07e5": {"node_ids": ["2b8269a3-53ba-4385-8976-58c370096cf3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8a.md", "file_name": "termc8a.md", "file_size": 998, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f45a812e-1df4-4591-b2c3-d36840180c49": {"node_ids": ["24c9f9c5-b1fb-4718-9860-5ec500c84b26"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e690811d-dfdd-436a-af86-18fec5d718b1": {"node_ids": ["5df26ca5-168d-4e82-999c-a2a1f6a799b1"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "26cff75a-b2eb-42db-a018-635822a44bcb": {"node_ids": ["ccb02c03-1089-42b1-8c8b-fe7e817c5b21"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "8552e168-efbe-42af-af32-dab8fe2352c1": {"node_ids": ["88d39e82-2ef4-4b40-b17d-00d7ecd16899"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a1199be4-6b0a-49cf-a7ff-db1822910ce6": {"node_ids": ["b7cb5a07-5cb4-4d3b-be94-d3a603c459d4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a9eb69a1-b10d-4f35-82d5-4f1b6510851a": {"node_ids": ["faf4855b-8534-4f0f-8b5e-573bd58a7ca4"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "e13f4b5b-0e55-4469-bd67-bde6c9fc6427": {"node_ids": ["ea785456-beda-48f5-b1b4-f6313b7120a8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "57f84b43-1a33-4bd5-b907-2bd85dab9839": {"node_ids": ["f1cbfc8d-665e-43b8-a273-e58dfbd927af"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "0cbe28e3-236d-4e7a-9c67-d58b04d4e417": {"node_ids": ["00a259fe-d9ec-4725-8684-ae8f2dd31c18"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "8e0b3912-51a4-4621-9e7c-3ef039c34e79": {"node_ids": ["239695b6-e60c-41cf-b7e2-caa22529a000"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "16180e5a-a13b-4cce-b2d5-8a467b22d486": {"node_ids": ["1ad9c4dd-98ba-4966-a9f2-40c295cf591e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "2614ecf5-29c2-4487-bceb-4c03ada17fe5": {"node_ids": ["d5ad9091-0e5d-46b1-8139-6df82f92f887"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "1b223545-fc85-4a91-bba8-f49024b2d6f1": {"node_ids": ["af41eb59-7767-412c-b1ab-138ea4ff5048"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "2c3cbb4c-01b5-4bd3-8340-d3dafe02ffba": {"node_ids": ["f53412f9-e46a-42bc-a897-52ea224b4b44"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "a6620730-e6fe-449f-9cf6-686c0cbb5375": {"node_ids": ["7aac379f-de04-4616-b199-3a0b6eb5c2b5"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f4592879-856e-46f0-8506-56f46096565a": {"node_ids": ["3173ad07-b470-4850-bb42-2944890c1a05"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "cbf2e642-ce65-4e51-917a-d84568ee048c": {"node_ids": ["46924f07-5447-417f-9996-9d06a8043d7e"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8c.md", "file_name": "termc8c.md", "file_size": 27686, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "0a4c8419-463e-4a56-8295-81f6351b3ebe": {"node_ids": ["1b9be001-3a96-4c46-8910-b4c2007e74a7"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "39c1e8a2-ad50-47b4-9706-87e41b58b272": {"node_ids": ["fa067714-48dc-4993-935c-744b7f427350"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "635f83cd-5030-47fd-956e-6ef7574f3831": {"node_ids": ["c4d5e448-9137-47aa-bd7c-ef3aef65ed6f"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "57a67684-80ae-44c9-9d8e-29d819f22cc5": {"node_ids": ["3ed2b1d9-a886-4ce1-8b92-8a3d071b034a"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "145f320d-ff3c-4f61-bd65-b5d04db13194": {"node_ids": ["92b3a135-9bfc-4d3c-b8c6-752c829e6416"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc8r.md", "file_name": "termc8r.md", "file_size": 4759, "creation_date": "2024-07-13", "last_modified_date": "2023-04-27"}}, "f7dc9539-3996-4b02-aeee-ae754e048b84": {"node_ids": ["f938c6f8-253e-48ed-ade3-516b4e502818"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "1a69e2af-aa92-4b90-88dc-bb241f00bc1f": {"node_ids": ["a9b26a7b-08f5-4a97-8791-66519f66f30c"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "30e5df8e-634a-4357-a903-6128f2c56b59": {"node_ids": ["f383f148-82b1-417e-86da-b2dfcad2cf99"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "fb8faad8-bace-481e-894b-09156065a324": {"node_ids": ["d752693e-fff2-44cc-90c0-f9c432ec1bb3"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "0e65901d-b382-4f0d-9e15-89d144d6c37a": {"node_ids": ["2304b788-b22f-4262-a3e4-6d840af2992d"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f584e456-bdad-4b19-94ba-2f2088135c4f": {"node_ids": ["de6b38bf-3495-499c-961c-c7460cf2b17b"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f7b5b129-c9da-4cd0-8bb5-e095f1dac4e5": {"node_ids": ["b99411c1-e8e3-4982-8b8e-7acef20fe9c8"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "aa10cdd7-3b72-47b9-8317-a4b54207899a": {"node_ids": ["9d569a34-8a20-457d-aa5f-0b6d20e19eb2"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "17d8db86-534d-4bf6-9dfb-a0dd87b68f50": {"node_ids": ["ac782498-11bb-4f96-a8b0-6043c9512a08"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}, "f08552bd-b089-4ccd-80af-eec3fc515bb9": {"node_ids": ["500a2bbb-6e5d-4675-a0e2-b20f432e25bc"], "metadata": {"file_path": "/Users/roche/prog/python/llamaindex/nsi_v0.1/index_builder/documents/termc9a.md", "file_name": "termc9a.md", "file_size": 6186, "creation_date": "2024-07-13", "last_modified_date": "2022-03-29"}}}}